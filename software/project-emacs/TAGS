
include/lv_cubic_gui.h,43
#define LV_CUBIC_GUI_HLV_CUBIC_GUI_H2,23

include/images.h,227
#define IMAGES_HIMAGES_H2,17
#define LV_ATTRIBUTE_MEM_ALIGNLV_ATTRIBUTE_MEM_ALIGN7,85
const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST  uint8_t logo_map[] = {logo_map10,124
const lv_img_dsc_t logo = {logo258,87279

include/sd_card.h,85
#define SD_CARD_HSD_CARD_H2,18
class SdCardSdCard8,88
	char buf[128];buf11,112

include/display.h,244
#define DISPLAY_HDISPLAY_H2,18
#define LCD_BL_PIN LCD_BL_PIN6,56
#define LCD_BL_PWM_CHANNEL LCD_BL_PWM_CHANNEL7,77
#define MY_DISP_HOR_RES MY_DISP_HOR_RES8,106
#define MY_DISP_VER_RES MY_DISP_VER_RES9,134
class DisplayDisplay12,163

lib/lvgl/lv_conf.h,10600
#define LV_CONF_HLV_CONF_H18,332
#define LV_COLOR_DEPTH LV_COLOR_DEPTH27,517
#define LV_COLOR_16_SWAP LV_COLOR_16_SWAP30,638
#define LV_COLOR_SCREEN_TRANSP LV_COLOR_SCREEN_TRANSP35,927
#define LV_COLOR_MIX_ROUND_OFS LV_COLOR_MIX_ROUND_OFS39,1165
#define LV_COLOR_CHROMA_KEY LV_COLOR_CHROMA_KEY42,1307
#define LV_MEM_CUSTOM LV_MEM_CUSTOM49,1548
#  define LV_MEM_SIZE LV_MEM_SIZE52,1667
#  define LV_MEM_ADR LV_MEM_ADR55,1837
#  define LV_MEM_CUSTOM_INCLUDE LV_MEM_CUSTOM_INCLUDE63,2244
#  define LV_MEM_CUSTOM_ALLOC LV_MEM_CUSTOM_ALLOC64,2332
#  define LV_MEM_CUSTOM_FREE LV_MEM_CUSTOM_FREE65,2371
#  define LV_MEM_CUSTOM_REALLOC LV_MEM_CUSTOM_REALLOC66,2408
#define LV_MEM_BUF_MAX_NUM LV_MEM_BUF_MAX_NUM71,2656
#define LV_MEMCPY_MEMSET_STD LV_MEMCPY_MEMSET_STD74,2795
#define LV_DISP_DEF_REFR_PERIOD LV_DISP_DEF_REFR_PERIOD81,2980
#define LV_INDEV_DEF_READ_PERIOD LV_INDEV_DEF_READ_PERIOD84,3075
#define LV_TICK_CUSTOM LV_TICK_CUSTOM88,3271
#define LV_TICK_CUSTOM_INCLUDE LV_TICK_CUSTOM_INCLUDE90,3315
#define LV_TICK_CUSTOM_SYS_TIME_EXPR LV_TICK_CUSTOM_SYS_TIME_EXPR91,3406
#define LV_DPI_DEF LV_DPI_DEF96,3714
#define LV_DRAW_COMPLEX LV_DRAW_COMPLEX108,4027
#define LV_SHADOW_CACHE_SIZE LV_SHADOW_CACHE_SIZE114,4273
#define LV_CIRCLE_CACHE_SIZE LV_CIRCLE_CACHE_SIZE120,4524
#define LV_IMG_CACHE_DEF_SIZE LV_IMG_CACHE_DEF_SIZE129,4963
#define LV_DISP_ROT_MAX_BUF LV_DISP_ROT_MAX_BUF132,5111
#define LV_USE_GPU_STM32_DMA2D LV_USE_GPU_STM32_DMA2D139,5232
#define LV_GPU_DMA2D_CMSIS_INCLUDELV_GPU_DMA2D_CMSIS_INCLUDE143,5404
#define LV_USE_GPU_NXP_PXP LV_USE_GPU_NXP_PXP147,5489
#define LV_USE_GPU_NXP_PXP_AUTO_INIT LV_USE_GPU_NXP_PXP_AUTO_INIT154,5919
#define LV_USE_GPU_NXP_VG_LITE LV_USE_GPU_NXP_VG_LITE158,6012
#define LV_USE_EXTERNAL_RENDERER LV_USE_EXTERNAL_RENDERER161,6073
#define LV_USE_GPU_SDL LV_USE_GPU_SDL164,6169
#  define LV_GPU_SDL_INCLUDE_PATH LV_GPU_SDL_INCLUDE_PATH166,6213
#define LV_USE_LOG LV_USE_LOG174,6338
#  define LV_LOG_LEVEL LV_LOG_LEVEL184,6796
#  define LV_LOG_PRINTF LV_LOG_PRINTF188,6946
#  define LV_LOG_TRACE_MEM LV_LOG_TRACE_MEM191,7052
#  define LV_LOG_TRACE_TIMER LV_LOG_TRACE_TIMER192,7088
#  define LV_LOG_TRACE_INDEV LV_LOG_TRACE_INDEV193,7124
#  define LV_LOG_TRACE_DISP_REFR LV_LOG_TRACE_DISP_REFR194,7160
#  define LV_LOG_TRACE_EVENT LV_LOG_TRACE_EVENT195,7196
#  define LV_LOG_TRACE_OBJ_CREATE LV_LOG_TRACE_OBJ_CREATE196,7232
#  define LV_LOG_TRACE_LAYOUT LV_LOG_TRACE_LAYOUT197,7268
#  define LV_LOG_TRACE_ANIM LV_LOG_TRACE_ANIM198,7304
#define LV_USE_ASSERT_NULL LV_USE_ASSERT_NULL208,7554
#define LV_USE_ASSERT_MALLOC LV_USE_ASSERT_MALLOC209,7655
#define LV_USE_ASSERT_STYLE LV_USE_ASSERT_STYLE210,7778
#define LV_USE_ASSERT_MEM_INTEGRITY LV_USE_ASSERT_MEM_INTEGRITY211,7893
#define LV_USE_ASSERT_OBJ LV_USE_ASSERT_OBJ212,8003
#define LV_ASSERT_HANDLER_INCLUDE LV_ASSERT_HANDLER_INCLUDE215,8182
#define LV_ASSERT_HANDLER LV_ASSERT_HANDLER216,8227
#define LV_USE_PERF_MONITOR LV_USE_PERF_MONITOR223,8392
#define LV_USE_PERF_MONITOR_POS LV_USE_PERF_MONITOR_POS225,8446
#define LV_USE_MEM_MONITOR LV_USE_MEM_MONITOR230,8621
#define LV_USE_MEM_MONITOR_POS LV_USE_MEM_MONITOR_POS232,8674
#define LV_USE_REFR_DEBUG LV_USE_REFR_DEBUG236,8795
#define LV_SPRINTF_CUSTOM LV_SPRINTF_CUSTOM239,8870
#  define LV_SPRINTF_INCLUDE LV_SPRINTF_INCLUDE241,8920
#  define lv_snprintf lv_snprintf242,8959
#  define lv_vsnprintf lv_vsnprintf243,8991
#  define LV_SPRINTF_USE_FLOAT LV_SPRINTF_USE_FLOAT245,9054
#define LV_USE_USER_DATA LV_USE_USER_DATA248,9118
#define LV_ENABLE_GC LV_ENABLE_GC252,9269
#  define LV_GC_INCLUDE LV_GC_INCLUDE254,9314
#define LV_BIG_ENDIAN_SYSTEM LV_BIG_ENDIAN_SYSTEM262,9549
#define LV_ATTRIBUTE_TICK_INCLV_ATTRIBUTE_TICK_INC265,9637
#define LV_ATTRIBUTE_TIMER_HANDLERLV_ATTRIBUTE_TIMER_HANDLER268,9729
#define LV_ATTRIBUTE_FLUSH_READYLV_ATTRIBUTE_FLUSH_READY271,9829
#define LV_ATTRIBUTE_MEM_ALIGN_SIZE LV_ATTRIBUTE_MEM_ALIGN_SIZE274,9903
#define LV_ATTRIBUTE_MEM_ALIGNLV_ATTRIBUTE_MEM_ALIGN278,10092
#define LV_ATTRIBUTE_LARGE_CONSTLV_ATTRIBUTE_LARGE_CONST281,10195
#define LV_ATTRIBUTE_LARGE_RAM_ARRAYLV_ATTRIBUTE_LARGE_RAM_ARRAY284,10284
#define LV_ATTRIBUTE_FAST_MEMLV_ATTRIBUTE_FAST_MEM287,10394
#define LV_ATTRIBUTE_DMALV_ATTRIBUTE_DMA290,10561
#define LV_EXPORT_CONST_INT(LV_EXPORT_CONST_INT294,10754
#define LV_USE_LARGE_COORD LV_USE_LARGE_COORD297,10983
#define LV_FONT_MONTSERRAT_8 LV_FONT_MONTSERRAT_8305,11191
#define LV_FONT_MONTSERRAT_10 LV_FONT_MONTSERRAT_10306,11223
#define LV_FONT_MONTSERRAT_12 LV_FONT_MONTSERRAT_12307,11255
#define LV_FONT_MONTSERRAT_14 LV_FONT_MONTSERRAT_14308,11287
#define LV_FONT_MONTSERRAT_16 LV_FONT_MONTSERRAT_16309,11319
#define LV_FONT_MONTSERRAT_18 LV_FONT_MONTSERRAT_18310,11351
#define LV_FONT_MONTSERRAT_20 LV_FONT_MONTSERRAT_20311,11383
#define LV_FONT_MONTSERRAT_22 LV_FONT_MONTSERRAT_22312,11415
#define LV_FONT_MONTSERRAT_24 LV_FONT_MONTSERRAT_24313,11447
#define LV_FONT_MONTSERRAT_26 LV_FONT_MONTSERRAT_26314,11479
#define LV_FONT_MONTSERRAT_28 LV_FONT_MONTSERRAT_28315,11511
#define LV_FONT_MONTSERRAT_30 LV_FONT_MONTSERRAT_30316,11543
#define LV_FONT_MONTSERRAT_32 LV_FONT_MONTSERRAT_32317,11575
#define LV_FONT_MONTSERRAT_34 LV_FONT_MONTSERRAT_34318,11607
#define LV_FONT_MONTSERRAT_36 LV_FONT_MONTSERRAT_36319,11639
#define LV_FONT_MONTSERRAT_38 LV_FONT_MONTSERRAT_38320,11671
#define LV_FONT_MONTSERRAT_40 LV_FONT_MONTSERRAT_40321,11703
#define LV_FONT_MONTSERRAT_42 LV_FONT_MONTSERRAT_42322,11735
#define LV_FONT_MONTSERRAT_44 LV_FONT_MONTSERRAT_44323,11767
#define LV_FONT_MONTSERRAT_46 LV_FONT_MONTSERRAT_46324,11799
#define LV_FONT_MONTSERRAT_48 LV_FONT_MONTSERRAT_48325,11831
#define LV_FONT_MONTSERRAT_12_SUBPX LV_FONT_MONTSERRAT_12_SUBPX328,11897
#define LV_FONT_MONTSERRAT_28_COMPRESSED LV_FONT_MONTSERRAT_28_COMPRESSED329,11940
#define LV_FONT_DEJAVU_16_PERSIAN_HEBREW LV_FONT_DEJAVU_16_PERSIAN_HEBREW330,11996
#define LV_FONT_SIMSUN_16_CJK LV_FONT_SIMSUN_16_CJK331,12096
#define LV_FONT_UNSCII_8 LV_FONT_UNSCII_8334,12209
#define LV_FONT_UNSCII_16 LV_FONT_UNSCII_16335,12237
#define LV_FONT_CUSTOM_DECLARELV_FONT_CUSTOM_DECLARE340,12485
#define LV_FONT_DEFAULT LV_FONT_DEFAULT343,12547
#define LV_FONT_FMT_TXT_LARGE LV_FONT_FMT_TXT_LARGE348,12777
#define LV_USE_FONT_COMPRESSED LV_USE_FONT_COMPRESSED351,12861
#define LV_USE_FONT_SUBPX LV_USE_FONT_SUBPX354,12925
#define LV_FONT_SUBPX_BGR LV_FONT_SUBPX_BGR357,13083
#define LV_TXT_ENC LV_TXT_ENC370,13362
#define LV_TXT_BREAK_CHARS LV_TXT_BREAK_CHARS373,13441
#define LV_TXT_LINE_BREAK_LONG_LEN LV_TXT_LINE_BREAK_LONG_LEN377,13582
#define LV_TXT_LINE_BREAK_LONG_PRE_MIN_LEN LV_TXT_LINE_BREAK_LONG_PRE_MIN_LEN381,13742
#define LV_TXT_LINE_BREAK_LONG_POST_MIN_LEN LV_TXT_LINE_BREAK_LONG_POST_MIN_LEN385,13909
#define LV_TXT_COLOR_CMD LV_TXT_COLOR_CMD388,14021
#define LV_USE_BIDI LV_USE_BIDI393,14295
#define LV_BIDI_BASE_DIR_DEF LV_BIDI_BASE_DIR_DEF399,14499
#define LV_USE_ARABIC_PERSIAN_CHARS LV_USE_ARABIC_PERSIAN_CHARS404,14696
#define LV_USE_ARC LV_USE_ARC412,14885
#define LV_USE_ANIMIMG LV_USE_ANIMIMG414,14914
#define LV_USE_BAR LV_USE_BAR416,14943
#define LV_USE_BTN LV_USE_BTN418,14972
#define LV_USE_BTNMATRIX LV_USE_BTNMATRIX420,15001
#define LV_USE_CANVAS LV_USE_CANVAS422,15030
#define LV_USE_CHECKBOX LV_USE_CHECKBOX424,15059
#define LV_USE_DROPDOWN LV_USE_DROPDOWN426,15088
#define LV_USE_IMG LV_USE_IMG428,15142
#define LV_USE_LABEL LV_USE_LABEL430,15196
#  define LV_LABEL_TEXT_SELECTION LV_LABEL_TEXT_SELECTION432,15241
#  define LV_LABEL_LONG_TXT_HINT LV_LABEL_LONG_TXT_HINT433,15316
#define LV_USE_LINE LV_USE_LINE436,15435
#define LV_USE_ROLLER LV_USE_ROLLER438,15464
#  define LV_ROLLER_INF_PAGES LV_ROLLER_INF_PAGES440,15535
#define LV_USE_SLIDER LV_USE_SLIDER443,15631
#define LV_USE_SWITCH LV_USE_SWITCH445,15683
#define LV_USE_TEXTAREA LV_USE_TEXTAREA447,15712
#  define LV_TEXTAREA_DEF_PWD_SHOW_TIME LV_TEXTAREA_DEF_PWD_SHOW_TIME449,15790
#define LV_USE_TABLE LV_USE_TABLE452,15853
#define LV_USE_CALENDAR LV_USE_CALENDAR461,15987
# define LV_CALENDAR_WEEK_STARTS_MONDAY LV_CALENDAR_WEEK_STARTS_MONDAY463,16035
#  define LV_CALENDAR_DEFAULT_DAY_NAMES LV_CALENDAR_DEFAULT_DAY_NAMES465,16113
#  define LV_CALENDAR_DEFAULT_DAY_NAMES LV_CALENDAR_DEFAULT_DAY_NAMES467,16203
# define LV_CALENDAR_DEFAULT_MONTH_NAMES LV_CALENDAR_DEFAULT_MONTH_NAMES470,16295
# define LV_USE_CALENDAR_HEADER_ARROW LV_USE_CALENDAR_HEADER_ARROW471,16461
# define LV_USE_CALENDAR_HEADER_DROPDOWN LV_USE_CALENDAR_HEADER_DROPDOWN472,16501
#define LV_USE_CHART LV_USE_CHART475,16573
#define LV_USE_COLORWHEEL LV_USE_COLORWHEEL477,16602
#define LV_USE_IMGBTN LV_USE_IMGBTN479,16631
#define LV_USE_KEYBOARD LV_USE_KEYBOARD481,16660
#define LV_USE_LED LV_USE_LED483,16689
#define LV_USE_LIST LV_USE_LIST485,16718
#define LV_USE_METER LV_USE_METER487,16747
#define LV_USE_MSGBOX LV_USE_MSGBOX489,16776
#define LV_USE_SPINBOX LV_USE_SPINBOX491,16805
#define LV_USE_SPINNER LV_USE_SPINNER493,16834
#define LV_USE_TABVIEW LV_USE_TABVIEW495,16863
#define LV_USE_TILEVIEW LV_USE_TILEVIEW497,16892
#define LV_USE_WIN LV_USE_WIN499,16921
#define LV_USE_SPAN LV_USE_SPAN501,16950
#  define LV_SPAN_SNIPPET_STACK_SIZE LV_SPAN_SNIPPET_STACK_SIZE504,17054
#define LV_USE_THEME_DEFAULT LV_USE_THEME_DEFAULT512,17191
# define LV_THEME_DEFAULT_DARK LV_THEME_DEFAULT_DARK516,17280
# define LV_THEME_DEFAULT_GROW LV_THEME_DEFAULT_GROW519,17342
# define LV_THEME_DEFAULT_TRANSITION_TIME LV_THEME_DEFAULT_TRANSITION_TIME522,17412
 #define LV_USE_THEME_BASIC LV_USE_THEME_BASIC526,17563
#define LV_USE_THEME_MONO LV_USE_THEME_MONO529,17639
#define LV_USE_FLEX LV_USE_FLEX536,17749
#define LV_USE_GRID LV_USE_GRID539,17809
#define LV_USE_FS_STDIO LV_USE_FS_STDIO547,17993
#define LV_USE_FS_POSIX LV_USE_FS_POSIX550,18162
#define LV_USE_FS_WIN32 LV_USE_FS_WIN32553,18329
#define LV_USE_FS_FATFS LV_USE_FS_FATFS556,18513
#define LV_USE_PNG LV_USE_PNG559,18603
#define LV_USE_BMP LV_USE_BMP562,18649
#define LV_USE_SJPG LV_USE_SJPG566,18774
#define LV_USE_GIF LV_USE_GIF569,18821
#define LV_USE_QRCODE LV_USE_QRCODE572,18863
#define LV_USE_FREETYPE LV_USE_FREETYPE575,18909
# define LV_FREETYPE_CACHE_SIZE LV_FREETYPE_CACHE_SIZE578,19028
#define LV_USE_RLOTTIE LV_USE_RLOTTIE582,19100
#define LV_USE_SNAPSHOT LV_USE_SNAPSHOT589,19212
#define LV_BUILD_EXAMPLES LV_BUILD_EXAMPLES597,19348

lib/lvgl/docs/_templates/layout.html,57
  function gtag(){dataLayer.push(arguments);}gtag9,263

lib/lvgl/docs/_templates/page.html,157
function add_version_selector()add_version_selector22,518
function ver_sel()ver_sel41,1437
    function onIntersection(entries) {onIntersection55,1904

lib/lvgl/docs/conf.py,1669
extensions = ['sphinx.ext.autodoc',extensions39,1250
templates_path = ['_templates']templates_path50,1523
highlight_language = 'c'highlight_language56,1731
source_suffix = ['.rst', '.md']source_suffix61,1852
master_doc = 'index'master_doc65,1917
project = 'LVGL'project68,1980
copyright = '2021, LVGL Kft'copyright69,1997
author = 'LVGL community'author70,2026
version = subprocess.run(["../scripts/find_version.sh"], capture_output=True).stdout.decode("utf-8").strip()version79,2306
language = Nonelanguage86,2670
exclude_patterns = ['_build', 'doxygen_html', 'Thumbs.db', '.DS_Store', exclude_patterns91,2881
pygments_style = 'sphinx'pygments_style95,3079
todo_include_todos = Truetodo_include_todos98,3182
html_theme = 'sphinx_rtd_theme'html_theme106,3393
html_theme_options = {html_theme_options112,3591
html_baseurl = 'https://docs.lvgl.io/' + version + "/"html_baseurl117,3700
sitemap_url_scheme = "{link}"sitemap_url_scheme118,3755
html_static_path = ['_static']html_static_path123,4016
html_sidebars = {html_sidebars130,4265
html_favicon = 'favicon.png'html_favicon137,4410
html_logo = 'logo_lvgl.png'html_logo138,4439
htmlhelp_basename = 'LVGLdoc'htmlhelp_basename143,4592
html_last_updated_fmt = ''html_last_updated_fmt145,4623
latex_engine = 'xelatex'latex_engine149,4728
latex_use_xindy = Falselatex_use_xindy150,4753
latex_elements = {latex_elements151,4777
latex_documents = [latex_documents186,5632
man_pages = [man_pages196,5940
texinfo_documents = [texinfo_documents207,6267
breathe_projects = {breathe_projects214,6447
smartquotes = Falsesmartquotes225,6633
def setup(app):setup232,6807

lib/lvgl/docs/example_list.py,203
def process_index_rst(path):process_index_rst5,35
h1= {h125,475
widgets = {widgets35,653
layouts = {layouts69,1269
def print_item(path, lvl, d, fout):print_item75,1315
def exec():exec85,1587

lib/lvgl/docs/build.py,417
langs = ['en']langs9,100
abspath = os.path.abspath(__file__)abspath12,161
dname = os.path.dirname(abspath)dname13,197
def cmd(s):cmd16,247
br = re.sub('\* ', '', br)br28,583
urlpath = re.sub('release/', '', br)urlpath33,654
f = open("header.rst", "w")f36,746
clean = 0clean44,1034
trans = 0trans45,1044
skip_latex = Falseskip_latex46,1054
args = sys.argv[1:]args47,1073
lang = "en"lang52,1192

lib/lvgl/docs/_ext/lv_example.py,574
def excluded_list(argument):excluded_list9,202
class LvExample(Directive):LvExample15,266
    required_arguments = 1required_arguments16,294
    option_spec = {option_spec17,321
    def get_example_code_path(self, example_path, language):get_example_code_path22,478
    def human_language_name(self, language):human_language_name24,618
    def github_path(self, example_path, language):github_path31,820
    def embed_code(self, example_file, example_path, language, buttons={}):embed_code34,1035
    def run(self):run51,2026
def setup(app):setup90,3976

lib/lvgl/lvgl.mk,0

lib/lvgl/lvgl.h,567
#define LVGL_HLVGL_H7,76
#define LVGL_VERSION_MAJOR LVGL_VERSION_MAJOR16,218
#define LVGL_VERSION_MINOR LVGL_VERSION_MINOR17,247
#define LVGL_VERSION_PATCH LVGL_VERSION_PATCH18,276
#define LVGL_VERSION_INFO LVGL_VERSION_INFO19,305
#define LV_VERSION_CHECK(LV_VERSION_CHECK113,2444
static inline int lv_version_major(void)lv_version_major119,2636
static inline int lv_version_minor(void)lv_version_minor124,2713
static inline int lv_version_patch(void)lv_version_patch129,2790
static inline const char *lv_version_info(void)lv_version_info134,2867

lib/lvgl/examples/header.py,0

lib/lvgl/examples/styles/lv_example_style_5.c,54
void lv_example_style_5(void)lv_example_style_57,96

lib/lvgl/examples/styles/lv_example_style_6.py,223
decoder = lv.img.decoder_create()decoder3,75
        png_data = f.read()png_data10,269
img_cogwheel_argb = lv.img_dsc_t({img_cogwheel_argb15,375
style = lv.style_t()style23,503
obj = lv.img(lv.scr_act())obj38,936

lib/lvgl/examples/styles/lv_example_style_13.py,137
style_indic = lv.style_t()style_indic5,38
style_indic_pr = lv.style_t()style_indic_pr11,257
obj = lv.slider(lv.scr_act())obj18,488

lib/lvgl/examples/styles/lv_example_style_14.py,367
class NewTheme(lv.theme_t):NewTheme5,91
    def __init__(self):__init__6,119
class ExampleStyle_14():ExampleStyle_1420,684
    def __init__(self):__init__22,714
    def new_theme_apply_cb(self,th, obj):new_theme_apply_cb41,1170
    def new_theme_init_and_set(self):new_theme_init_and_set46,1339
exampleStyle_14 = ExampleStyle_14()exampleStyle_1453,1636

lib/lvgl/examples/styles/lv_example_style_1.c,55
void lv_example_style_1(void)lv_example_style_17,130

lib/lvgl/examples/styles/lv_example_style_12.py,70
style = lv.style_t()style5,20
obj = lv.obj(lv.scr_act())obj11,199

lib/lvgl/examples/styles/lv_example_style_7.c,55
void lv_example_style_7(void)lv_example_style_77,107

lib/lvgl/examples/styles/lv_example_style_8.c,55
void lv_example_style_8(void)lv_example_style_87,110

lib/lvgl/examples/styles/lv_example_style_11.c,56
void lv_example_style_11(void)lv_example_style_117,98

lib/lvgl/examples/styles/lv_example_style_9.py,106
style = lv.style_t()style5,39
obj = lv.line(lv.scr_act())obj13,221
p =  [ {"x":10, "y":30}, p15,273

lib/lvgl/examples/styles/lv_example_style_8.py,72
style = lv.style_t()style5,39
obj = lv.label(lv.scr_act())obj21,491

lib/lvgl/examples/styles/lv_example_style.h,51
#define LV_EXAMPLE_STYLE_HLV_EXAMPLE_STYLE_H7,67

lib/lvgl/examples/styles/lv_example_style_10.c,56
void lv_example_style_10(void)lv_example_style_107,98

lib/lvgl/examples/styles/lv_example_style_12.c,56
void lv_example_style_12(void)lv_example_style_127,89

lib/lvgl/examples/styles/lv_example_style_11.py,280
style_base =  lv.style_t()style_base6,44
style_warning = lv.style_t()style_warning20,545
obj_base = lv.obj(lv.scr_act())obj_base27,845
label = lv.label(obj_base)label31,953
obj_warning = lv.obj(lv.scr_act())obj_warning36,1087
label = lv.label(obj_warning)label41,1246

lib/lvgl/examples/styles/lv_example_style_7.py,70
style = lv.style_t()style4,37
obj = lv.arc(lv.scr_act())obj11,187

lib/lvgl/examples/styles/lv_example_style_13.c,57
void lv_example_style_13(void)lv_example_style_137,107

lib/lvgl/examples/styles/lv_example_style_2.c,55
void lv_example_style_2(void)lv_example_style_27,100

lib/lvgl/examples/styles/lv_example_style_14.c,263
static lv_style_t style_btn;style_btn5,66
static void new_theme_apply_cb(lv_theme_t * th, lv_obj_t * obj)new_theme_apply_cb9,187
static void new_theme_init_and_set(void)new_theme_init_and_set18,376
void lv_example_style_14(void)lv_example_style_1444,1155

lib/lvgl/examples/styles/lv_example_style_4.c,54
void lv_example_style_4(void)lv_example_style_47,97

lib/lvgl/examples/styles/lv_example_style_9.c,55
void lv_example_style_9(void)lv_example_style_97,109

lib/lvgl/examples/styles/lv_example_style_6.c,55
void lv_example_style_6(void)lv_example_style_67,109

lib/lvgl/examples/styles/lv_example_style_5.py,70
style = lv.style_t()style5,41
obj = lv.obj(lv.scr_act())obj20,416

lib/lvgl/examples/styles/lv_example_style_3.py,70
style = lv.style_t()style4,40
obj = lv.obj(lv.scr_act())obj19,481

lib/lvgl/examples/styles/lv_example_style_3.c,54
void lv_example_style_3(void)lv_example_style_37,96

lib/lvgl/examples/styles/lv_example_style_10.py,321
props = [lv.STYLE.BG_COLOR, lv.STYLE.BORDER_COLOR, lv.STYLE.BORDER_WIDTH, 0]props5,29
trans_def =  lv.style_transition_dsc_t()trans_def10,189
trans_pr = lv.style_transition_dsc_t()trans_pr16,393
style_def = lv.style_t()style_def19,491
style_pr = lv.style_t()style_pr23,570
obj = lv.obj(lv.scr_act())obj31,834

lib/lvgl/examples/styles/lv_example_style_1.py,105
style = lv.style_t()style4,60
obj = lv.obj(lv.scr_act())obj19,313
label = lv.label(obj)label22,365

lib/lvgl/examples/styles/lv_example_style_4.py,70
style = lv.style_t()style5,42
obj = lv.obj(lv.scr_act())obj19,389

lib/lvgl/examples/styles/lv_example_style_2.py,70
style = lv.style_t()style4,44
obj = lv.obj(lv.scr_act())obj19,435

lib/lvgl/examples/lv_examples.h,41
#define LV_EXAMPLES_HLV_EXAMPLES_H7,57

lib/lvgl/examples/porting/lv_port_disp_template.h,0

lib/lvgl/examples/porting/lv_port_fs_template.h,0

lib/lvgl/examples/porting/lv_port_disp_template.c,278
void lv_port_disp_init(void)lv_port_disp_init44,947
static void disp_init(void)disp_init129,4563
static void disp_flush(lv_disp_drv_t * disp_drv, const lv_area_t * area, lv_color_t * color_p)disp_flush137,4844
typedef int keep_pedantic_happy;keep_pedantic_happy178,6212

lib/lvgl/examples/porting/lv_port_fs_template.c,1058
void lv_port_fs_init(void)lv_port_fs_init56,1603
static void fs_init(void)fs_init92,2603
static void * fs_open(lv_fs_drv_t * drv, const char * path, lv_fs_mode_t mode)fs_open106,3049
static lv_fs_res_t fs_close(lv_fs_drv_t * drv, void * file_p)fs_close137,3872
static lv_fs_res_t fs_read(lv_fs_drv_t * drv, void * file_p, void * buf, uint32_t btr, uint32_t * br)fs_read155,4445
static lv_fs_res_t fs_write(lv_fs_drv_t * drv, void * file_p, const void * buf, uint32_t btw, uint32_t * bw)fs_write173,5049
static lv_fs_res_t fs_seek(lv_fs_drv_t * drv, void * file_p, uint32_t pos, lv_fs_whence_t whence)fs_seek190,5689
static lv_fs_res_t fs_tell(lv_fs_drv_t * drv, void * file_p, uint32_t * pos_p)fs_tell205,6181
static void * fs_dir_open(lv_fs_drv_t * drv, const char *path)fs_dir_open220,6606
static lv_fs_res_t fs_dir_read(lv_fs_drv_t * drv, void * rddir_p, char *fn)fs_dir_read236,7169
static lv_fs_res_t fs_dir_close(lv_fs_drv_t * drv, void * rddir_p)fs_dir_close251,7592
typedef int keep_pedantic_happy;keep_pedantic_happy263,7849

lib/lvgl/examples/porting/lv_port_indev_template.c,1777
lv_indev_t * indev_touchpad;indev_touchpad53,1435
lv_indev_t * indev_mouse;indev_mouse54,1464
lv_indev_t * indev_keypad;indev_keypad55,1490
lv_indev_t * indev_encoder;indev_encoder56,1517
lv_indev_t * indev_button;indev_button57,1545
static int32_t encoder_diff;encoder_diff59,1573
static lv_indev_state_t encoder_state;encoder_state60,1602
void lv_port_indev_init(void)lv_port_indev_init70,1779
static void touchpad_init(void)touchpad_init183,5220
static void touchpad_read(lv_indev_drv_t * indev_drv, lv_indev_data_t * data)touchpad_read189,5341
static bool touchpad_is_pressed(void)touchpad_is_pressed208,5862
static void touchpad_get_xy(lv_coord_t * x, lv_coord_t * y)touchpad_get_xy216,6012
static void mouse_init(void)mouse_init229,6215
static void mouse_read(lv_indev_drv_t * indev_drv, lv_indev_data_t * data)mouse_read235,6330
static bool mouse_is_pressed(void)mouse_is_pressed249,6743
static void mouse_get_xy(lv_coord_t * x, lv_coord_t * y)mouse_get_xy257,6887
static void keypad_init(void)keypad_init270,7089
static void keypad_read(lv_indev_drv_t * indev_drv, lv_indev_data_t * data)keypad_read276,7205
static uint32_t keypad_get_key(void)keypad_get_key316,8250
static void encoder_init(void)encoder_init328,8419
static void encoder_read(lv_indev_drv_t * indev_drv, lv_indev_data_t * data)encoder_read334,8538
static void encoder_handler(void)encoder_handler342,8768
static void button_init(void)button_init355,8983
static void button_read(lv_indev_drv_t * indev_drv, lv_indev_data_t * data)button_read361,9100
static int8_t button_get_pressed_id(void)button_get_pressed_id381,9571
static bool button_is_pressed(uint8_t id)button_is_pressed398,9944
typedef int keep_pedantic_happy;keep_pedantic_happy409,10139

lib/lvgl/examples/porting/lv_port_indev_template.h,0

lib/lvgl/examples/event/lv_example_event_2.c,107
static void event_cb(lv_event_t * e)event_cb4,68
void lv_example_event_2(void)lv_example_event_230,811

lib/lvgl/examples/event/lv_example_event_3.py,143
def event_cb(e):event_cb1,0
cont = lv.obj(lv.scr_act())cont18,382
    btn = lv.btn(cont)btn24,511
    label = lv.label(btn)label28,603

lib/lvgl/examples/event/lv_example_event_2.py,171
def event_cb(e,label):event_cb1,0
btn = lv.btn(lv.scr_act())btn11,496
btn_label = lv.label(btn)btn_label15,559
info_label = lv.label(lv.scr_act())info_label19,637

lib/lvgl/examples/event/lv_example_event_1.c,107
static void event_cb(lv_event_t * e)event_cb4,68
void lv_example_event_1(void)lv_example_event_118,361

lib/lvgl/examples/event/lv_example_event.h,51
#define LV_EXAMPLE_EVENT_HLV_EXAMPLE_EVENT_H7,67

lib/lvgl/examples/event/lv_example_event_3.c,107
static void event_cb(lv_event_t * e)event_cb4,66
void lv_example_event_3(void)lv_example_event_322,595

lib/lvgl/examples/event/lv_example_event_1.py,138
class Event_1():Event_11,0
    def __init__(self):__init__2,17
    def event_cb(self,e):event_cb17,371
evt1 = Event_1()evt125,559

lib/lvgl/examples/libs/rlottie/lv_example_rlottie_2.c,119
void lv_example_rlottie_2(void)lv_example_rlottie_27,118
void lv_example_rlottie_2(void)lv_example_rlottie_216,426

lib/lvgl/examples/libs/rlottie/lv_example_rlottie.h,55
#define LV_EXAMPLE_RLOTTIE_HLV_EXAMPLE_RLOTTIE_H7,71

lib/lvgl/examples/libs/rlottie/lv_example_rlottie_approve.c,81
const uint8_t lv_example_rlottie_approve[] = {lv_example_rlottie_approve18,473

lib/lvgl/examples/libs/rlottie/lv_example_rlottie_1.c,119
void lv_example_rlottie_1(void)lv_example_rlottie_17,119
void lv_example_rlottie_1(void)lv_example_rlottie_115,362

lib/lvgl/examples/libs/bmp/lv_example_bmp_1.c,51
void lv_example_bmp_1(void)lv_example_bmp_17,107

lib/lvgl/examples/libs/bmp/lv_example_bmp.h,47
#define LV_EXAMPLE_BMP_HLV_EXAMPLE_BMP_H7,63

lib/lvgl/examples/libs/gif/lv_example_gif_1.c,51
void lv_example_gif_1(void)lv_example_gif_17,123

lib/lvgl/examples/libs/gif/img_bulb_gif.c,328
#define LV_ATTRIBUTE_MEM_ALIGNLV_ATTRIBUTE_MEM_ALIGN5,60
#define LV_ATTRIBUTE_IMG_BULB_GIFLV_ATTRIBUTE_IMG_BULB_GIF9,133
static const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_BULB_GIF uint8_t img_blub_gif_map[] = {img_blub_gif_map12,175
const lv_img_dsc_t img_bulb_gif = {img_bulb_gif1121,108667

lib/lvgl/examples/libs/gif/lv_example_gif.h,47
#define LV_EXAMPLE_GIF_HLV_EXAMPLE_GIF_H7,63

lib/lvgl/examples/libs/freetype/lv_example_freetype_1.c,123
void lv_example_freetype_1(void)lv_example_freetype_17,110
void lv_example_freetype_1(void)lv_example_freetype_131,877

lib/lvgl/examples/libs/freetype/lv_example_freetype.h,57
#define LV_EXAMPLE_FREETYPE_HLV_EXAMPLE_FREETYPE_H7,73

lib/lvgl/examples/libs/qrcode/lv_example_qrcode.h,53
#define LV_EXAMPLE_QRCODE_HLV_EXAMPLE_QRCODE_H7,69

lib/lvgl/examples/libs/qrcode/lv_example_qrcode_1.c,56
void lv_example_qrcode_1(void)lv_example_qrcode_17,99

lib/lvgl/examples/libs/sjpg/lv_example_sjpg_1.c,52
void lv_example_sjpg_1(void)lv_example_sjpg_17,99

lib/lvgl/examples/libs/sjpg/lv_example_sjpg.h,49
#define LV_EXAMPLE_SJPG_HLV_EXAMPLE_SJPG_H7,65

lib/lvgl/examples/libs/png/lv_example_png.h,47
#define LV_EXAMPLE_PNG_HLV_EXAMPLE_PNG_H7,63

lib/lvgl/examples/libs/png/lv_example_png_1.c,51
void lv_example_png_1(void)lv_example_png_17,123

lib/lvgl/examples/libs/png/img_wing_png.c,344
#define LV_ATTRIBUTE_MEM_ALIGNLV_ATTRIBUTE_MEM_ALIGN6,96
#define LV_ATTRIBUTE_IMG_PNG_DECODER_TESTLV_ATTRIBUTE_IMG_PNG_DECODER_TEST10,177
const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_PNG_DECODER_TEST uint8_t img_wink_png_map[] = {img_wink_png_map13,227
const lv_img_dsc_t img_wink_png = {img_wink_png339,31944

lib/lvgl/examples/libs/lv_example_libs.h,49
#define LV_EXAMPLE_LIBS_HLV_EXAMPLE_LIBS_H7,65

lib/lvgl/examples/layouts/lv_example_layout.h,53
#define LV_EXAMPLE_LAYOUT_HLV_EXAMPLE_LAYOUT_H7,69

lib/lvgl/examples/layouts/flex/lv_example_flex_6.py,112
cont = lv.obj(lv.scr_act())cont6,114
    obj = lv.obj(cont)obj13,286
    label = lv.label(obj)label16,352

lib/lvgl/examples/layouts/flex/lv_example_flex_1.py,248
cont_row = lv.obj(lv.scr_act())cont_row6,98
cont_col = lv.obj(lv.scr_act())cont_col12,286
    obj = lv.btn(cont_row)obj19,497
    label = lv.label(obj)label22,560
    obj = lv.btn(cont_col)obj27,679
    label = lv.label(obj)label30,754

lib/lvgl/examples/layouts/flex/lv_example_flex_2.py,145
style = lv.style_t()style4,89
cont = lv.obj(lv.scr_act())cont10,260
    obj = lv.obj(cont)obj16,371
    label = lv.label(obj)label19,433

lib/lvgl/examples/layouts/flex/lv_example_flex_2.c,53
void lv_example_flex_2(void)lv_example_flex_27,163

lib/lvgl/examples/layouts/flex/lv_example_flex_5.c,193
static void row_gap_anim(void * obj, int32_t v)row_gap_anim4,69
static void column_gap_anim(void * obj, int32_t v)column_gap_anim9,163
void lv_example_flex_5(void)lv_example_flex_517,336

lib/lvgl/examples/layouts/flex/lv_example_flex_3.py,158
cont = lv.obj(lv.scr_act())cont5,30
obj = lv.obj(cont)obj10,134
obj = lv.obj(cont)obj13,196
obj = lv.obj(cont)obj17,298
obj = lv.obj(cont)obj21,400

lib/lvgl/examples/layouts/flex/lv_example_flex_4.py,111
cont = lv.obj(lv.scr_act())cont4,38
    obj = lv.obj(cont)obj10,173
    label = lv.label(obj)label13,223

lib/lvgl/examples/layouts/flex/lv_example_flex.h,49
#define LV_EXAMPLE_FLEX_HLV_EXAMPLE_FLEX_H7,65

lib/lvgl/examples/layouts/flex/lv_example_flex_6.c,53
void lv_example_flex_6(void)lv_example_flex_68,188

lib/lvgl/examples/layouts/flex/lv_example_flex_1.c,53
void lv_example_flex_1(void)lv_example_flex_17,126

lib/lvgl/examples/layouts/flex/lv_example_flex_5.py,199
def row_gap_anim(obj, v):row_gap_anim1,0
def column_gap_anim(obj, v):column_gap_anim5,60
cont = lv.obj(lv.scr_act())cont12,194
a_row = lv.anim_t()a_row25,457
a_col = lv.anim_t()a_col36,719

lib/lvgl/examples/layouts/flex/lv_example_flex_4.c,53
void lv_example_flex_4(void)lv_example_flex_47,112

lib/lvgl/examples/layouts/flex/lv_example_flex_3.c,53
void lv_example_flex_3(void)lv_example_flex_37,103

lib/lvgl/examples/layouts/grid/lv_example_grid_6.py,285
col_dsc = [60, 60, 60, lv.GRID_TEMPLATE.LAST]col_dsc4,40
row_dsc = [40, 40, 40, lv.GRID_TEMPLATE.LAST]row_dsc5,86
cont = lv.obj(lv.scr_act())cont8,164
    col = i % 3col15,335
    row = i // 3row16,351
    obj = lv.obj(cont)obj18,369
    label = lv.label(obj)label24,615

lib/lvgl/examples/layouts/grid/lv_example_grid_5.py,255
def row_gap_anim(obj, v):row_gap_anim1,0
def column_gap_anim(obj, v):column_gap_anim4,59
col_dsc = [60, 60, 60, lv.GRID_TEMPLATE.LAST]col_dsc12,176
row_dsc = [40, 40, 40, lv.GRID_TEMPLATE.LAST]row_dsc13,222
cont = lv.obj(lv.scr_act())cont16,300

lib/lvgl/examples/layouts/grid/lv_example_grid_6.c,53
void lv_example_grid_6(void)lv_example_grid_67,114

lib/lvgl/examples/layouts/grid/lv_example_grid_4.c,53
void lv_example_grid_4(void)lv_example_grid_47,108

lib/lvgl/examples/layouts/grid/lv_example_grid_3.py,322
col_dsc = [60, lv.grid_fr(1), lv.grid_fr(2), lv.GRID_TEMPLATE.LAST]col_dsc9,165
row_dsc = [40, lv.grid_fr(1), 40, lv.GRID_TEMPLATE.LAST]row_dsc15,331
cont = lv.obj(lv.scr_act())cont18,420
    col = i % 3col24,548
    row = i // 3row25,564
    obj = lv.obj(cont)obj27,582
    label = lv.label(obj)label33,823

lib/lvgl/examples/layouts/grid/lv_example_grid_4.py,286
col_dsc = [60, 60, 60, lv.GRID_TEMPLATE.LAST]col_dsc5,35
row_dsc = [40, 40, 40, lv.GRID_TEMPLATE.LAST]row_dsc6,81
cont = lv.obj(lv.scr_act())cont12,231
    col = i % 3col20,428
    row = i // 3row21,444
    obj = lv.obj(cont)obj23,462
    label = lv.label(obj)label29,703

lib/lvgl/examples/layouts/grid/lv_example_grid_5.c,193
static void row_gap_anim(void * obj, int32_t v)row_gap_anim4,69
static void column_gap_anim(void * obj, int32_t v)column_gap_anim9,163
void lv_example_grid_5(void)lv_example_grid_517,305

lib/lvgl/examples/layouts/grid/lv_example_grid_1.c,52
void lv_example_grid_1(void)lv_example_grid_17,94

lib/lvgl/examples/layouts/grid/lv_example_grid_2.py,488
col_dsc = [70, 70, 70, lv.GRID_TEMPLATE.LAST]col_dsc5,43
row_dsc = [50, 50, 50, lv.GRID_TEMPLATE.LAST]row_dsc6,89
cont = lv.obj(lv.scr_act())cont9,167
obj = lv.obj(cont)obj15,359
label = lv.label(obj);label19,515
obj = lv.obj(cont)obj23,650
label = lv.label(obj)label27,807
obj = lv.obj(cont)obj31,947
label = lv.label(obj)label35,1101
obj = lv.obj(cont)obj39,1228
label = lv.label(obj)label43,1388
obj = lv.obj(cont)obj47,1514
label = lv.label(obj)label51,1674

lib/lvgl/examples/layouts/grid/lv_example_grid_3.c,53
void lv_example_grid_3(void)lv_example_grid_37,111

lib/lvgl/examples/layouts/grid/lv_example_grid_1.py,285
col_dsc = [70, 70, 70, lv.GRID_TEMPLATE.LAST]col_dsc5,21
row_dsc = [50, 50, 50, lv.GRID_TEMPLATE.LAST]row_dsc6,67
cont = lv.obj(lv.scr_act())cont9,145
    col = i % 3col17,364
    row = i // 3row18,380
    obj = lv.btn(cont)obj20,398
    label = lv.label(obj)label26,639

lib/lvgl/examples/layouts/grid/lv_example_grid.h,49
#define LV_EXAMPLE_GRID_HLV_EXAMPLE_GRID_H7,65

lib/lvgl/examples/layouts/grid/lv_example_grid_2.c,53
void lv_example_grid_2(void)lv_example_grid_28,117

lib/lvgl/examples/anim/lv_example_anim_2.py,173
def anim_x_cb(obj, v):anim_x_cb1,0
def anim_size_cb(obj, v):anim_size_cb4,41
obj = lv.obj(lv.scr_act())obj11,126
a1 = lv.anim_t()a117,292
a2 = lv.anim_t()a230,622

lib/lvgl/examples/anim/lv_example_anim_1.c,173
static void anim_x_cb(void * var, int32_t v)anim_x_cb4,68
static void sw_event_cb(lv_event_t * e)sw_event_cb9,144
void lv_example_anim_1(void)lv_example_anim_139,1019

lib/lvgl/examples/anim/lv_example_anim_3.c,969
#define CHART_POINTS_NUM CHART_POINTS_NUM11,369
    lv_obj_t * anim_obj;anim_obj14,408
    lv_obj_t * chart;chart15,433
    lv_chart_series_t * ser1;ser116,455
    lv_obj_t * p1_slider;p1_slider17,485
    lv_obj_t * p1_label;p1_label18,511
    lv_obj_t * p2_slider;p2_slider19,536
    lv_obj_t * p2_label;p2_label20,562
    lv_obj_t * run_btn;run_btn21,587
    uint16_t p1;p122,611
    uint16_t p2;p223,628
    lv_anim_t a;a24,645
} ginfo;ginfo25,662
void lv_example_anim_3(void)lv_example_anim_337,990
static int32_t anim_path_bezier3_cb(const lv_anim_t * a)anim_path_bezier3_cb65,2020
static void refer_chart_cubic_bezier(void)refer_chart_cubic_bezier76,2371
static void anim_x_cb(void * var, int32_t v)anim_x_cb86,2706
static void run_btn_event_handler(lv_event_t * e)run_btn_event_handler91,2812
static void slider_event_cb(lv_event_t * e)slider_event_cb99,2990
static void page_obj_init(lv_obj_t * par)page_obj_init120,3531

lib/lvgl/examples/anim/lv_example_anim.h,49
#define LV_EXAMPLE_ANIM_HLV_EXAMPLE_ANIM_H7,65

lib/lvgl/examples/anim/lv_example_anim_timeline_1.c,913
static lv_anim_timeline_t * anim_timeline = NULL;anim_timeline4,51
static lv_obj_t * obj1 = NULL;obj16,102
static lv_obj_t * obj2 = NULL;obj27,133
static lv_obj_t * obj3 = NULL;obj38,164
static const lv_coord_t obj_width = 90;obj_width10,196
static const lv_coord_t obj_height = 70;obj_height11,236
static void set_width(void * var, int32_t v)set_width13,278
static void set_height(void * var, int32_t v)set_height18,370
static void anim_timeline_create(void)anim_timeline_create23,464
static void btn_start_event_handler(lv_event_t * e)btn_start_event_handler92,2766
static void btn_del_event_handler(lv_event_t * e)btn_del_event_handler105,3095
static void btn_stop_event_handler(lv_event_t * e)btn_stop_event_handler114,3274
static void slider_prg_event_handler(lv_event_t * e)slider_prg_event_handler122,3425
void lv_example_anim_timeline_1(void)lv_example_anim_timeline_1137,3749

lib/lvgl/examples/anim/lv_example_anim_timeline_1.py,582
class LV_ExampleAnimTimeline_1(object):LV_ExampleAnimTimeline_11,0
    def __init__(self):__init__3,41
    def set_width(self,obj, v):set_width50,1838
    def set_height(self,obj, v):set_height53,1896
    def anim_timeline_create(self):anim_timeline_create56,1956
    def slider_prg_event_handler(self,e):slider_prg_event_handler118,4390
    def btn_run_event_handler(self,e):btn_run_event_handler128,4650
    def btn_del_event_handler(self,e):btn_del_event_handler137,4969
lv_example_anim_timeline_1 = LV_ExampleAnimTimeline_1()lv_example_anim_timeline_1143,5129

lib/lvgl/examples/anim/lv_example_anim_1.py,165
def anim_x_cb(label, v):anim_x_cb1,0
def sw_event_cb(e,label):sw_event_cb4,45
label = lv.label(lv.scr_act())label30,737
sw = lv.switch(lv.scr_act())sw35,829

lib/lvgl/examples/anim/lv_example_anim_2.c,182
static void anim_x_cb(void * var, int32_t v)anim_x_cb5,69
static void anim_size_cb(void * var, int32_t v)anim_size_cb10,145
void lv_example_anim_2(void)lv_example_anim_218,269

lib/lvgl/examples/anim/lv_example_anim_3.py,581
CHART_POINTS_NUM = const(256)CHART_POINTS_NUM9,292
class LvExampleAnim_3():LvExampleAnim_311,323
    def __init__(self):__init__15,386
    def page_obj_init(self,par):page_obj_init41,1442
    def refer_chart_cubic_bezier(self):refer_chart_cubic_bezier84,3749
    def slider_event_cb(self,e):slider_event_cb91,4037
    def run_btn_event_handler(self,e):run_btn_event_handler106,4474
    def anim_x_cb(self, var, v):anim_x_cb112,4620
    def anim_path_bezier3_cb(self,a):anim_path_bezier3_cb115,4705
lv_example_anim_3 = LvExampleAnim_3()lv_example_anim_3123,5004

lib/lvgl/examples/scroll/lv_example_scroll_4.c,57
void lv_example_scroll_4(void)lv_example_scroll_48,101

lib/lvgl/examples/scroll/lv_example_scroll_2.c,115
static void sw_event_cb(lv_event_t * e)sw_event_cb4,66
void lv_example_scroll_2(void)lv_example_scroll_220,508

lib/lvgl/examples/scroll/lv_example_scroll_3.py,212
class ScrollExample_3():ScrollExample_31,0
    def __init__(self):__init__2,25
    def float_btn_event_cb(self,e,list):float_btn_event_cb24,851
scroll_example_3 = ScrollExample_3()scroll_example_336,1214

lib/lvgl/examples/scroll/lv_example_scroll_4.py,267
obj = lv.obj(lv.scr_act())obj4,29
label = lv.label(obj)label8,93
props = [lv.STYLE.BG_OPA, lv.STYLE.WIDTH, 0]props32,1133
trans = lv.style_transition_dsc_t()trans33,1178
style = lv.style_t()style37,1306
style_scrolled =  lv.style_t()style_scrolled55,1930

lib/lvgl/examples/scroll/lv_example_scroll_6.py,160
def scroll_event_cb(e):scroll_event_cb1,0
cont = lv.obj(lv.scr_act())cont45,1272
    btn = lv.btn(cont)btn57,1661
    label = lv.label(btn)label60,1720

lib/lvgl/examples/scroll/lv_example_scroll_5.c,57
void lv_example_scroll_5(void)lv_example_scroll_58,143

lib/lvgl/examples/scroll/lv_example_scroll_6.c,124
static void scroll_event_cb(lv_event_t * e)scroll_event_cb4,51
void lv_example_scroll_6(void)lv_example_scroll_650,1591

lib/lvgl/examples/scroll/lv_example_scroll_5.py,70
obj = lv.obj(lv.scr_act())obj4,50
label = lv.label(obj)label9,157

lib/lvgl/examples/scroll/lv_example_scroll_3.c,171
static uint32_t btn_cnt = 1;btn_cnt4,66
static void float_btn_event_cb(lv_event_t * e)float_btn_event_cb6,96
void lv_example_scroll_3(void)lv_example_scroll_327,672

lib/lvgl/examples/scroll/lv_example_scroll_2.py,242
def sw_event_cb(e,panel):sw_event_cb1,0
panel = lv.obj(lv.scr_act())panel18,317
    btn = lv.btn(panel)btn25,493
    label = lv.label(btn)label28,545
sw = lv.switch(lv.scr_act());sw40,852
label = lv.label(lv.scr_act())label43,993

lib/lvgl/examples/scroll/lv_example_scroll.h,53
#define LV_EXAMPLE_SCROLL_HLV_EXAMPLE_SCROLL_H7,69

lib/lvgl/examples/scroll/lv_example_scroll_1.c,57
void lv_example_scroll_1(void)lv_example_scroll_17,110

lib/lvgl/examples/scroll/lv_example_scroll_1.py,399
panel = lv.obj(lv.scr_act())panel5,92
child = lv.obj(panel)child9,162
label = lv.label(child)label11,204
child = lv.obj(panel)child15,267
label = lv.label(child)label17,313
child = lv.obj(panel)child21,376
label = lv.label(child)label23,421
child = lv.obj(panel)child27,483
label = lv.label(child)label29,528
child = lv.obj(panel)child33,592
label = lv.label(child)label35,637

lib/lvgl/examples/test_ex.sh,0

lib/lvgl/examples/others/lv_example_others.h,53
#define LV_EXAMPLE_OTHERS_HLV_EXAMPLE_OTHERS_H7,69

lib/lvgl/examples/others/snapshot/lv_example_snapshot_1.c,112
static void event_cb(lv_event_t* e)event_cb4,73
void lv_example_snapshot_1(void)lv_example_snapshot_123,640

lib/lvgl/examples/others/snapshot/lv_example_snapshot.h,47
#define LV_EX_SNAPSHOT_HLV_EX_SNAPSHOT_H7,68

lib/lvgl/examples/others/snapshot/lv_example_snapshot_1.py,431
decoder = lv.img.decoder_create()decoder6,104
mem_free = gc.mem_free()mem_free13,245
label = lv.label(lv.scr_act())label15,271
        png_data = f.read()png_data22,496
img_star = lv.img_dsc_t({img_star27,585
def event_cb(e, snapshot_obj):event_cb32,664
root = lv.scr_act()root46,1113
snapshot_obj = lv.img(root)snapshot_obj50,1243
container = lv.obj(root)container56,1457
    img = lv.img(container)img64,1748

lib/lvgl/examples/get_started/lv_example_get_started_3.py,138
def slider_event_cb(evt):slider_event_cb1,0
slider = lv.slider(lv.scr_act())slider12,239
label = lv.label(lv.scr_act());label18,596

lib/lvgl/examples/get_started/lv_example_get_started_1.c,127
static void btn_event_cb(lv_event_t * e)btn_event_cb4,65
void lv_example_get_started_1(void)lv_example_get_started_121,555

lib/lvgl/examples/get_started/lv_example_get_started_2.c,378
static lv_style_t style_btn;style_btn4,65
static lv_style_t style_btn_pressed;style_btn_pressed5,94
static lv_style_t style_btn_red;style_btn_red6,131
static lv_color_t darken(const lv_color_filter_dsc_t * dsc, lv_color_t color, lv_opa_t opa)darken8,165
static void style_init(void)style_init14,322
void lv_example_get_started_2(void)lv_example_get_started_247,1644

lib/lvgl/examples/get_started/lv_example_get_started.h,53
#define LV_EX_GET_STARTED_HLV_EX_GET_STARTED_H7,74

lib/lvgl/examples/get_started/lv_example_get_started_3.c,169
static lv_obj_t * label;label4,68
static void slider_event_cb(lv_event_t * e)slider_event_cb6,94
void lv_example_get_started_3(void)lv_example_get_started_318,447

lib/lvgl/examples/get_started/lv_example_get_started_1.py,170
class CounterBtn():CounterBtn1,0
    def __init__(self):__init__2,20
    def btn_event_cb(self,evt):btn_event_cb17,756
counterBtn = CounterBtn()counterBtn28,1082

lib/lvgl/examples/get_started/lv_example_get_started_2.py,449
style_btn =  lv.style_t()style_btn4,46
style_btn_red = lv.style_t()style_btn_red5,72
style_btn_pressed = lv.style_t()style_btn_pressed6,101
btn = lv.btn(lv.scr_act())                  # Add a button the current screenbtn35,1051
label = lv.label(btn)                       # Add a label to the buttonlabel45,1596
btn2 = lv.btn(lv.scr_act())btn250,1801
label = lv.label(btn2)                      # Add a label to the buttonlabel59,2216

lib/lvgl/examples/examples.mk,0

lib/lvgl/examples/assets/img_skew_strip.c,347
#define LV_ATTRIBUTE_MEM_ALIGNLV_ATTRIBUTE_MEM_ALIGN6,79
#define LV_ATTRIBUTE_IMG_IMG_SKEW_STRIPLV_ATTRIBUTE_IMG_IMG_SKEW_STRIP10,158
const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_IMG_SKEW_STRIP uint8_t img_skew_strip_map[] = {img_skew_strip_map13,206
const lv_img_dsc_t img_skew_strip = {img_skew_strip108,116212

lib/lvgl/examples/assets/img_cogwheel_rgb.c,336
#define LV_ATTRIBUTE_MEM_ALIGNLV_ATTRIBUTE_MEM_ALIGN6,79
#define LV_ATTRIBUTE_IMG_IMG_COGWHEEL_RGBLV_ATTRIBUTE_IMG_IMG_COGWHEEL_RGB10,160
const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_IMG_IMG_COGWHEEL_RGB uint8_t img_cogwheel_rgb_map[] = {img_cogwheel_rgb_map13,210
const lv_img_dsc_t img_cogwheel_rgb = {img_cogwheel_rgb428,541589

lib/lvgl/examples/assets/animimg002.c,320
#define LV_ATTRIBUTE_MEM_ALIGNLV_ATTRIBUTE_MEM_ALIGN6,97
#define LV_ATTRIBUTE_IMG_ANIMIMG002LV_ATTRIBUTE_IMG_ANIMIMG00210,172
const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_ANIMIMG002 uint8_t animimg002_map[] = {animimg002_map13,216
const lv_img_dsc_t animimg002 = {animimg002708,1593414

lib/lvgl/examples/assets/img_star.c,304
#define LV_ATTRIBUTE_MEM_ALIGNLV_ATTRIBUTE_MEM_ALIGN6,79
#define LV_ATTRIBUTE_IMG_IMG_STARLV_ATTRIBUTE_IMG_IMG_STAR10,152
const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_IMG_STAR uint8_t img_star_map[] = {img_star_map13,194
const lv_img_dsc_t img_star = {img_star144,63700

lib/lvgl/examples/assets/imgbtn_left.c,325
#define LV_ATTRIBUTE_MEM_ALIGNLV_ATTRIBUTE_MEM_ALIGN6,79
#define LV_ATTRIBUTE_IMG_IMGBTN_LEFTLV_ATTRIBUTE_IMG_IMGBTN_LEFT10,155
const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_IMGBTN_LEFT uint8_t imgbtn_left_map[] = {imgbtn_left_map13,200
const lv_img_dsc_t imgbtn_left = {imgbtn_left251,30063

lib/lvgl/examples/assets/img_caret_down.c,344
#define LV_ATTRIBUTE_MEM_ALIGNLV_ATTRIBUTE_MEM_ALIGN6,79
#define LV_ATTRIBUTE_IMG_IMG_CARET_DOWNLV_ATTRIBUTE_IMG_IMG_CARET_DOWN10,158
const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_IMG_CARET_DOWN uint8_t img_caret_down_map[] = {img_caret_down_map13,206
const lv_img_dsc_t img_caret_down = {img_caret_down60,8404

lib/lvgl/examples/assets/img_cogwheel_indexed16.c,377
#define LV_ATTRIBUTE_MEM_ALIGNLV_ATTRIBUTE_MEM_ALIGN6,79
#define LV_ATTRIBUTE_IMG_IMG_COGWHEEL_INDEXED16LV_ATTRIBUTE_IMG_IMG_COGWHEEL_INDEXED1610,166
const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_IMG_IMG_COGWHEEL_INDEXED16 uint8_t img_cogwheel_indexed16_map[] = {img_cogwheel_indexed16_map13,222
const lv_img_dsc_t img_cogwheel_indexed16 = {img_cogwheel_indexed16133,31327

lib/lvgl/examples/assets/img_cogwheel_chroma_keyed.c,399
#define LV_ATTRIBUTE_MEM_ALIGNLV_ATTRIBUTE_MEM_ALIGN6,79
#define LV_ATTRIBUTE_IMG_IMG_COGWHEEL_CHROMA_KEYEDLV_ATTRIBUTE_IMG_IMG_COGWHEEL_CHROMA_KEYED10,169
const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_IMG_IMG_COGWHEEL_CHROMA_KEYED uint8_t img_cogwheel_chroma_keyed_map[] = {img_cogwheel_chroma_keyed_map13,228
const lv_img_dsc_t img_cogwheel_chroma_keyed = {img_cogwheel_chroma_keyed428,541625

lib/lvgl/examples/assets/img_hand.c,278
#define LV_ATTRIBUTE_MEM_ALIGNLV_ATTRIBUTE_MEM_ALIGN6,79
#define LV_ATTRIBUTE_IMG_IMG_HANDLV_ATTRIBUTE_IMG_IMG_HAND10,152
const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_IMG_IMG_HAND uint8_t img_hand_map[] = {img_hand_map13,194
const lv_img_dsc_t img_hand = {img_hand63,65601

lib/lvgl/examples/assets/animimg001.c,320
#define LV_ATTRIBUTE_MEM_ALIGNLV_ATTRIBUTE_MEM_ALIGN6,97
#define LV_ATTRIBUTE_IMG_ANIMIMG001LV_ATTRIBUTE_IMG_ANIMIMG00110,172
const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_ANIMIMG001 uint8_t animimg001_map[] = {animimg001_map13,216
const lv_img_dsc_t animimg001 = {animimg001708,1593414

lib/lvgl/examples/assets/animimg003.c,320
#define LV_ATTRIBUTE_MEM_ALIGNLV_ATTRIBUTE_MEM_ALIGN6,97
#define LV_ATTRIBUTE_IMG_ANIMIMG003LV_ATTRIBUTE_IMG_ANIMIMG00310,172
const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_ANIMIMG003 uint8_t animimg003_map[] = {animimg003_map13,216
const lv_img_dsc_t animimg003 = {animimg003708,1593414

lib/lvgl/examples/assets/imgbtn_right.c,332
#define LV_ATTRIBUTE_MEM_ALIGNLV_ATTRIBUTE_MEM_ALIGN6,79
#define LV_ATTRIBUTE_IMG_IMGBTN_RIGHTLV_ATTRIBUTE_IMG_IMGBTN_RIGHT10,156
const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_IMGBTN_RIGHT uint8_t imgbtn_right_map[] = {imgbtn_right_map13,202
const lv_img_dsc_t imgbtn_right = {imgbtn_right228,30044

lib/lvgl/examples/assets/img_cogwheel_argb.c,343
#define LV_ATTRIBUTE_MEM_ALIGNLV_ATTRIBUTE_MEM_ALIGN6,79
#define LV_ATTRIBUTE_IMG_IMG_COGWHEEL_ARGBLV_ATTRIBUTE_IMG_IMG_COGWHEEL_ARGB10,161
const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_IMG_IMG_COGWHEEL_ARGB uint8_t img_cogwheel_argb_map[] = {img_cogwheel_argb_map13,212
const lv_img_dsc_t img_cogwheel_argb = {img_cogwheel_argb427,721565

lib/lvgl/examples/assets/img_cogwheel_alpha16.c,363
#define LV_ATTRIBUTE_MEM_ALIGNLV_ATTRIBUTE_MEM_ALIGN6,79
#define LV_ATTRIBUTE_IMG_IMG_COGWHEEL_ALPHA16LV_ATTRIBUTE_IMG_IMG_COGWHEEL_ALPHA1610,164
const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_IMG_IMG_COGWHEEL_ALPHA16 uint8_t img_cogwheel_alpha16_map[] = {img_cogwheel_alpha16_map13,218
const lv_img_dsc_t img_cogwheel_alpha16 = {img_cogwheel_alpha16116,30528

lib/lvgl/examples/assets/imgbtn_mid.c,318
#define LV_ATTRIBUTE_MEM_ALIGNLV_ATTRIBUTE_MEM_ALIGN6,79
#define LV_ATTRIBUTE_IMG_IMGBTN_MIDLV_ATTRIBUTE_IMG_IMGBTN_MID10,154
const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_IMGBTN_MID uint8_t imgbtn_mid_map[] = {imgbtn_mid_map13,198
const lv_img_dsc_t imgbtn_mid = {imgbtn_mid224,18868

lib/lvgl/examples/widgets/keyboard/lv_example_keyboard_1.py,162
def ta_event_cb(e,kb):ta_event_cb1,0
kb = lv.keyboard(lv.scr_act())kb13,345
ta = lv.textarea(lv.scr_act())ta16,428
ta = lv.textarea(lv.scr_act())ta22,612

lib/lvgl/examples/widgets/keyboard/lv_example_keyboard_1.c,119
static void ta_event_cb(lv_event_t * e)ta_event_cb4,73
void lv_example_keyboard_1(void)lv_example_keyboard_120,529

lib/lvgl/examples/widgets/img/lv_example_img_1.py,232
decoder = lv.img.decoder_create()decoder8,164
        png_data = f.read()png_data15,361
img_cogwheel_argb = lv.img_dsc_t({img_cogwheel_argb20,467
img1 = lv.img(lv.scr_act())img125,556
img2 = lv.img(lv.scr_act())img230,677

lib/lvgl/examples/widgets/img/lv_example_img_2.py,621
decoder = lv.img.decoder_create()decoder8,164
        png_data = f.read()png_data15,361
img_cogwheel_argb = lv.img_dsc_t({img_cogwheel_argb20,467
def create_slider(color):create_slider25,556
def slider_event_cb(e):slider_event_cb34,901
red_slider = create_slider(lv.palette_main(lv.PALETTE.RED))red_slider45,1320
green_slider = create_slider(lv.palette_main(lv.PALETTE.GREEN))green_slider46,1380
blue_slider = create_slider(lv.palette_main(lv.PALETTE.BLUE))blue_slider47,1444
intense_slider = create_slider(lv.palette_main(lv.PALETTE.GREY))intense_slider48,1506
img1 = lv.img(lv.scr_act())img161,2037

lib/lvgl/examples/widgets/img/lv_example_img_3.c,171
static void set_angle(void * img, int32_t v)set_angle4,68
static void set_zoom(void * img, int32_t v)set_zoom9,148
void lv_example_img_3(void)lv_example_img_318,300

lib/lvgl/examples/widgets/img/lv_example_img_3.py,323
decoder = lv.img.decoder_create()decoder8,164
        png_data = f.read()png_data15,361
img_cogwheel_argb = lv.img_dsc_t({img_cogwheel_argb20,467
def set_angle(img, v):set_angle25,556
def set_zoom(img, v):set_zoom28,601
img = lv.img(lv.scr_act())img37,744
a1 = lv.anim_t()a142,908
a2 = lv.anim_t()a251,1114

lib/lvgl/examples/widgets/img/lv_example_img_4.c,114
static void ofs_y_anim(void * img, int32_t v)ofs_y_anim4,68
void lv_example_img_4(void)lv_example_img_412,188

lib/lvgl/examples/widgets/img/lv_example_img_1.c,50
void lv_example_img_1(void)lv_example_img_15,69

lib/lvgl/examples/widgets/img/lv_example_img_4.py,243
def ofs_y_anim(img, v):    ofs_y_anim3,47
decoder = lv.img.decoder_create()decoder8,152
img_skew_strip = lv.img_dsc_t({img_skew_strip20,449
style = lv.style_t()style29,567
img = lv.img(lv.scr_act())img36,768
a = lv.anim_t()a42,884

lib/lvgl/examples/widgets/img/lv_example_img_2.c,618
static lv_obj_t * red_slider, * green_slider, * blue_slider, * intense_slider;red_slider7,182
static lv_obj_t * red_slider, * green_slider, * blue_slider, * intense_slider;green_slider7,182
static lv_obj_t * red_slider, * green_slider, * blue_slider, * intense_slider;blue_slider7,182
static lv_obj_t * red_slider, * green_slider, * blue_slider, * intense_slider;intense_slider7,182
static lv_obj_t * img1;img18,261
void lv_example_img_2(void)lv_example_img_214,336
static void slider_event_cb(lv_event_t * e)slider_event_cb41,1534
static lv_obj_t * create_slider(lv_color_t color)create_slider52,1964

lib/lvgl/examples/widgets/spinner/lv_example_spinner_1.py,58
spinner = lv.spinner(lv.scr_act(), 1000, 60)spinner2,19

lib/lvgl/examples/widgets/spinner/lv_example_spinner_1.c,58
void lv_example_spinner_1(void)lv_example_spinner_14,72

lib/lvgl/examples/widgets/win/lv_example_win_1.py,334
def event_handler(e):event_handler1,0
win = lv.win(lv.scr_act(), 60)win7,169
btn1 = win.add_btn(lv.SYMBOL.LEFT, 40)btn18,200
btn2=win.add_btn(lv.SYMBOL.RIGHT, 40)btn211,316
btn3 = win.add_btn(lv.SYMBOL.CLOSE, 60)btn313,406
cont = win.get_content()  #Content can be aded herecont16,499
label =  lv.label(cont)label17,551

lib/lvgl/examples/widgets/win/lv_example_win_1.c,113
static void event_handler(lv_event_t * e)event_handler5,69
void lv_example_win_1(void)lv_example_win_111,227

lib/lvgl/examples/widgets/table/lv_example_table_2.py,363
ITEM_CNT = 200ITEM_CNT4,38
def draw_event_cb(e):draw_event_cb6,54
def change_event_cb(e):change_event_cb42,1204
mem_free = gc.mem_free()mem_free62,1726
t = ticks_ms()t64,1780
table = lv.table(lv.scr_act())table66,1815
mem_used = mem_free - gc.mem_free()mem_used88,2546
elaps = ticks_ms()-telaps89,2582
label = lv.label(lv.scr_act())label91,2604

lib/lvgl/examples/widgets/table/lv_example_table_2.c,218
#define ITEM_CNT ITEM_CNT4,70
static void draw_event_cb(lv_event_t * e)draw_event_cb6,92
static void change_event_cb(lv_event_t * e)change_event_cb40,1288
void lv_example_table_2(void)lv_example_table_255,1761

lib/lvgl/examples/widgets/table/lv_example_table_1.py,94
def draw_part_event_cb(e):draw_part_event_cb1,0
table = lv.table(lv.scr_act())table25,938

lib/lvgl/examples/widgets/table/lv_example_table_1.c,128
static void draw_part_event_cb(lv_event_t * e)draw_part_event_cb4,70
void lv_example_table_1(void)lv_example_table_133,1172

lib/lvgl/examples/widgets/meter/lv_example_meter_1.py,704
def set_value(indic, v):set_value6,92
meter = lv.meter(lv.scr_act())meter12,179
scale = meter.add_scale()scale17,271
indic = lv.meter_indicator_t()indic21,440
indic = meter.add_arc(scale, 3, lv.palette_main(lv.PALETTE.BLUE), 0)indic24,502
indic = meter.add_scale_lines(scale, lv.palette_main(lv.PALETTE.BLUE), lv.palette_main(lv.PALETTE.BLUE), False, 0)indic29,708
indic = meter.add_arc(scale, 3, lv.palette_main(lv.PALETTE.RED), 0)indic34,934
indic = meter.add_scale_lines(scale, lv.palette_main(lv.PALETTE.RED), lv.palette_main(lv.PALETTE.RED), False, 0)indic39,1138
indic = meter.add_needle_line(scale, 4, lv.palette_main(lv.PALETTE.GREY), -10)indic44,1367
a = lv.anim_t()a47,1486

lib/lvgl/examples/widgets/meter/lv_example_meter_3.c,154
static lv_obj_t * meter;meter4,70
static void set_value(void * indic, int32_t v)set_value6,96
void lv_example_meter_3(void)lv_example_meter_314,235

lib/lvgl/examples/widgets/meter/lv_example_meter_4.py,390
meter = lv.meter(lv.scr_act())meter5,26
scale = meter.add_scale()scale15,273
indic_w = 100indic_w20,430
indic1 = meter.add_arc(scale, indic_w,lv.palette_main(lv.PALETTE.ORANGE), 0)indic121,444
indic2 = meter.add_arc(scale, indic_w, lv.palette_main(lv.PALETTE.YELLOW), 0)indic225,607
indic3 = meter.add_arc(scale, indic_w, lv.palette_main(lv.PALETTE.DEEP_ORANGE), 0)indic329,799

lib/lvgl/examples/widgets/meter/lv_example_meter_2.py,464
def set_value(indic,v):set_value6,92
meter = lv.meter(lv.scr_act())meter13,195
scale = meter.add_scale()scale21,368
indic1 = meter.add_arc(scale, 10, lv.palette_main(lv.PALETTE.RED), 0)indic127,614
indic2 = meter.add_arc(scale, 10, lv.palette_main(lv.PALETTE.GREEN), -10)indic228,684
indic3 = meter.add_arc(scale, 10, lv.palette_main(lv.PALETTE.BLUE), -20)indic329,758
a1 = lv.anim_t()a132,871
a2 = lv.anim_t()a244,1160
a3 = lv.anim_t()a356,1450

lib/lvgl/examples/widgets/meter/lv_example_meter_4.c,55
void lv_example_meter_4(void)lv_example_meter_47,100

lib/lvgl/examples/widgets/meter/lv_example_meter_2.c,154
static lv_obj_t * meter;meter4,70
static void set_value(void * indic, int32_t v)set_value6,96
void lv_example_meter_2(void)lv_example_meter_215,242

lib/lvgl/examples/widgets/meter/lv_example_meter_3.py,707
decoder = lv.img.decoder_create()decoder8,167
        img_hand_min_data = f.read()img_hand_min_data15,359
img_hand_min_dsc = lv.img_dsc_t({img_hand_min_dsc20,469
        img_hand_hour_data = f.read()img_hand_hour_data28,675
img_hand_hour_dsc = lv.img_dsc_t({img_hand_hour_dsc33,787
def set_value(indic, v):set_value38,896
meter = lv.meter(lv.scr_act())meter44,989
scale_min = meter.add_scale()scale_min50,1167
scale_hour = meter.add_scale()scale_hour55,1412
indic_min = meter.add_needle_img(scale_min, img_hand_min_dsc, 5, 5)indic_min63,1818
indic_hour = meter.add_needle_img(scale_min, img_hand_hour_dsc, 5, 5)indic_hour64,1886
a1 = lv.anim_t()a167,1996
a2 = lv.anim_t()a276,2267

lib/lvgl/examples/widgets/meter/lv_example_meter_1.c,154
static lv_obj_t * meter;meter4,70
static void set_value(void * indic, int32_t v)set_value6,96
void lv_example_meter_1(void)lv_example_meter_114,225

lib/lvgl/examples/widgets/chart/lv_example_chart_4.c,108
static void event_cb(lv_event_t * e)event_cb5,71
void lv_example_chart_4(void)lv_example_chart_462,1905

lib/lvgl/examples/widgets/chart/lv_example_chart_2.c,304
static lv_obj_t * chart1;chart14,89
static lv_chart_series_t * ser1;ser15,115
static lv_chart_series_t * ser2;ser26,148
static void draw_event_cb(lv_event_t * e)draw_event_cb8,182
static void add_data(lv_timer_t * timer)add_data87,3169
void lv_example_chart_2(void)lv_example_chart_2101,3505

lib/lvgl/examples/widgets/chart/lv_example_chart_5.py,406
ecg_sample = [ecg_sample2,125
def slider_x_event_cb(e):slider_x_event_cb45,4855
def slider_y_event_cb(e):slider_y_event_cb51,4962
chart = lv.chart(lv.scr_act())chart64,5249
ser = chart.add_series(lv.palette_main(lv.PALETTE.RED), lv.chart.AXIS.PRIMARY_Y)ser72,5479
pcnt = len(ecg_sample)pcnt74,5561
slider = lv.slider(lv.scr_act())slider78,5652
slider = lv.slider(lv.scr_act())slider84,5892

lib/lvgl/examples/widgets/chart/lv_example_chart_7.c,176
static void draw_event_cb(lv_event_t * e)draw_event_cb4,70
static void add_data(lv_timer_t * timer)add_data29,1323
void lv_example_chart_7(void)lv_example_chart_739,1568

lib/lvgl/examples/widgets/chart/lv_example_chart_3.c,117
static void draw_event_cb(lv_event_t * e)draw_event_cb4,70
void lv_example_chart_3(void)lv_example_chart_318,613

lib/lvgl/examples/widgets/chart/lv_example_chart_3.py,313
def draw_event_cb(e):draw_event_cb1,0
chart = lv.chart(lv.scr_act())chart13,498
ser1 = lv.chart.add_series(chart, lv.palette_lighten(lv.PALETTE.GREEN, 2), lv.chart.AXIS.PRIMARY_Y);ser131,1108
ser2 = lv.chart.add_series(chart, lv.palette_darken(lv.PALETTE.GREEN, 2), lv.chart.AXIS.SECONDARY_Y);ser232,1209

lib/lvgl/examples/widgets/chart/lv_example_chart_4.py,409
def event_cb(e):event_cb1,0
chart = lv.chart(lv.scr_act())chart49,1518
ser1 = chart.add_series(lv.palette_main(lv.PALETTE.RED), lv.chart.AXIS.PRIMARY_Y)ser160,1739
ser2 = chart.add_series(lv.palette_main(lv.PALETTE.GREEN), lv.chart.AXIS.PRIMARY_Y)ser261,1821
ser1_p = []ser1_p63,1906
ser2_p = []ser2_p64,1918
series = [ser1,ser2]series71,2065
series_points=[ser1_p,ser2_p]series_points72,2086

lib/lvgl/examples/widgets/chart/lv_example_chart_9.py,167
def add_data(t):add_data4,41
chart = lv.chart(lv.scr_act())chart19,386
ser = chart.add_series(lv.palette_main(lv.PALETTE.RED), lv.chart.AXIS.PRIMARY_Y)ser26,538

lib/lvgl/examples/widgets/chart/lv_example_chart_8.py,307
class StackedAreaChart:StackedAreaChart6,192
    def __init__(self):__init__7,216
stacked_area_chart = StackedAreaChart()stacked_area_chart11,311
def draw_event_cb(e):draw_event_cb16,416
def round_fixed_point(n, shift):round_fixed_point54,1688
def lv_example_chart_8():lv_example_chart_874,2177

lib/lvgl/examples/widgets/chart/lv_example_chart_5.c,295
static lv_obj_t * chart;chart4,87
static const lv_coord_t ecg_sample[] = {ecg_sample6,240
static void slider_x_event_cb(lv_event_t * e)slider_x_event_cb49,4997
static void slider_y_event_cb(lv_event_t * e)slider_y_event_cb56,5170
void lv_example_chart_5(void)lv_example_chart_568,5512

lib/lvgl/examples/widgets/chart/lv_example_chart_8.c,414
    lv_obj_t *obj;obj7,260
    lv_chart_series_t *series_list[3];series_list8,279
} stacked_area_chart_t;stacked_area_chart_t9,318
static stacked_area_chart_t stacked_area_chart;stacked_area_chart11,343
static void draw_event_cb(lv_event_t *e)draw_event_cb16,462
static int32_t round_fixed_point(int32_t n, int8_t shift)round_fixed_point54,1865
void lv_example_chart_8(void)lv_example_chart_875,2448

lib/lvgl/examples/widgets/chart/lv_example_chart_7.py,327
def draw_event_cb(e):draw_event_cb6,91
def add_data(timer,chart):add_data31,1230
chart = lv.chart(lv.scr_act())chart46,1516
ser = chart.add_series(lv.palette_main(lv.PALETTE.RED), lv.chart.AXIS.PRIMARY_Y)ser62,2042
x_array = []x_array64,2124
y_array = []y_array65,2137
timer = lv.timer_create_basic()timer75,2360

lib/lvgl/examples/widgets/chart/lv_example_chart_1.c,54
void lv_example_chart_1(void)lv_example_chart_14,70

lib/lvgl/examples/widgets/chart/lv_example_chart_9.c,107
static void add_data(lv_timer_t * t)add_data5,90
void lv_example_chart_9(void)lv_example_chart_926,657

lib/lvgl/examples/widgets/chart/lv_example_chart_2.py,379
def draw_event_cb(e):draw_event_cb1,0
def add_data(timer):add_data45,1457
chart1 = lv.chart(lv.scr_act())chart160,1720
ser1 = chart1.add_series(lv.palette_main(lv.PALETTE.RED), lv.chart.AXIS.PRIMARY_Y)ser169,2006
ser2 = chart1.add_series(lv.palette_main(lv.PALETTE.BLUE), lv.chart.AXIS.SECONDARY_Y)ser270,2089
timer = lv.timer_create(add_data, 200, None)timer76,2295

lib/lvgl/examples/widgets/chart/lv_example_chart_6.c,234
static lv_obj_t * chart;chart4,70
static lv_chart_series_t * ser;ser5,95
static lv_chart_cursor_t * cursor;cursor6,127
static void event_cb(lv_event_t * e)event_cb8,163
void lv_example_chart_6(void)lv_example_chart_660,1912

lib/lvgl/examples/widgets/chart/lv_example_chart_1.py,233
chart = lv.chart(lv.scr_act())chart2,17
ser1 = chart.add_series(lv.palette_main(lv.PALETTE.RED), lv.chart.AXIS.PRIMARY_Y);ser18,176
ser2 = chart.add_series(lv.palette_main(lv.PALETTE.GREEN), lv.chart.AXIS.SECONDARY_Y)ser29,259

lib/lvgl/examples/widgets/chart/lv_example_chart_6.py,183
class ExampleChart_6():ExampleChart_61,0
    def __init__(self):__init__3,29
    def event_cb(self,e):event_cb37,1202
example_chart_6 = ExampleChart_6()example_chart_688,3262

lib/lvgl/examples/widgets/msgbox/lv_example_msgbox_1.py,179
def event_cb(e):event_cb1,0
btns = ["Apply", "Close", ""]btns5,112
mbox1 = lv.msgbox(lv.scr_act(), "Hello", "This is a message box with two buttons.", btns, True)mbox17,143

lib/lvgl/examples/widgets/msgbox/lv_example_msgbox_1.c,109
static void event_cb(lv_event_t * e)event_cb4,71
void lv_example_msgbox_1(void)lv_example_msgbox_110,240

lib/lvgl/examples/widgets/list/test.py,858
def event_handler(e):event_handler4,69
list1 = lv.list(lv.scr_act())list111,253
btn_new = list1.add_btn(lv.SYMBOL.FILE, "New")btn_new17,373
btn_open = list1.add_btn(lv.SYMBOL.DIRECTORY, "Open")btn_open19,475
btn_save = list1.add_btn(lv.SYMBOL.SAVE, "Save")btn_save21,585
btn_delete = list1.add_btn(lv.SYMBOL.CLOSE, "Delete")btn_delete23,690
btn_edit = list1.add_btn(lv.SYMBOL.EDIT, "Edit")btn_edit25,802
btn_bluetooth = list1.add_btn(lv.SYMBOL.BLUETOOTH, "Bluetooth")btn_bluetooth29,939
btn_navig = list1.add_btn(lv.SYMBOL.GPS, "Navigation")btn_navig31,1064
btn_USB = list1.add_btn(lv.SYMBOL.USB, "USB")btn_USB33,1176
btn_battery = list1.add_btn(lv.SYMBOL.BATTERY_FULL, "Battery")btn_battery35,1277
btn_apply = list1.add_btn(lv.SYMBOL.OK, "Apply")btn_apply39,1423
btn_close = list1.add_btn(lv.SYMBOL.CLOSE, "Close")btn_close41,1529

lib/lvgl/examples/widgets/list/lv_example_list_1.c,151
static lv_obj_t * list1;list13,68
static void event_handler(lv_event_t * e)event_handler5,94
void lv_example_list_1(void)lv_example_list_113,345

lib/lvgl/examples/widgets/list/lv_example_list_2.c,686
static lv_obj_t* list1;list17,91
static lv_obj_t* list2;list28,115
static lv_obj_t* currentButton = NULL;currentButton10,140
static void event_handler(lv_event_t* e)event_handler12,180
static void event_handler_top(lv_event_t* e)event_handler_top45,1032
static void event_handler_up(lv_event_t* e)event_handler_up56,1325
static void event_handler_center(lv_event_t* e)event_handler_center69,1760
static void event_handler_dn(lv_event_t* e)event_handler_dn85,2236
static void event_handler_bottom(lv_event_t* e)event_handler_bottom98,2652
static void event_handler_swap(lv_event_t* e)event_handler_swap109,2954
void lv_example_list_2(void)lv_example_list_2129,3617

lib/lvgl/examples/widgets/list/lv_example_list_2.py,986
currentButton = NonecurrentButton3,16
list1 = Nonelist14,37
def event_handler(evt):event_handler6,51
def event_handler_top(evt):event_handler_top23,581
def event_handler_up(evt):event_handler_up33,864
def event_handler_center(evt):event_handler_center46,1276
def event_handler_dn(evt):event_handler_dn58,1688
def event_handler_bottom(evt):event_handler_bottom69,2058
def event_handler_swap(evt):event_handler_swap79,2383
list1 = lv.list(lv.scr_act())list194,2919
    btn = lv.btn(list1)btn99,3041
    lab = lv.label(btn)lab102,3157
currentButton = list1.get_child(0)currentButton106,3253
list2 = lv.list(lv.scr_act())list2110,3378
btn = list2.add_btn(None, "Top")btn115,3528
btn = list2.add_btn(lv.SYMBOL.UP, "Up")btn119,3643
btn = list2.add_btn(lv.SYMBOL.LEFT, "Center")btn123,3764
btn = list2.add_btn(lv.SYMBOL.DOWN, "Down")btn127,3895
btn = list2.add_btn(None, "Bottom")btn131,4020
btn = list2.add_btn(lv.SYMBOL.SHUFFLE, "Shuffle")btn135,4141

lib/lvgl/examples/widgets/list/lv_example_list_1.py,855
def event_handler(e):event_handler1,0
list1 = lv.list(lv.scr_act())list18,184
btn_new = list1.add_btn(lv.SYMBOL.FILE, "New")btn_new14,304
btn_open = list1.add_btn(lv.SYMBOL.DIRECTORY, "Open")btn_open16,406
btn_save = list1.add_btn(lv.SYMBOL.SAVE, "Save")btn_save18,516
btn_delete = list1.add_btn(lv.SYMBOL.CLOSE, "Delete")btn_delete20,621
btn_edit = list1.add_btn(lv.SYMBOL.EDIT, "Edit")btn_edit22,733
btn_bluetooth = list1.add_btn(lv.SYMBOL.BLUETOOTH, "Bluetooth")btn_bluetooth26,870
btn_navig = list1.add_btn(lv.SYMBOL.GPS, "Navigation")btn_navig28,995
btn_USB = list1.add_btn(lv.SYMBOL.USB, "USB")btn_USB30,1107
btn_battery = list1.add_btn(lv.SYMBOL.BATTERY_FULL, "Battery")btn_battery32,1208
btn_apply = list1.add_btn(lv.SYMBOL.OK, "Apply")btn_apply36,1354
btn_close = list1.add_btn(lv.SYMBOL.CLOSE, "Close")btn_close38,1460

lib/lvgl/examples/widgets/animimg/lv_example_animimg_1.py,292
decoder = lv.img.decoder_create()decoder4,76
anim_imgs = [None]*3anim_imgs8,169
        anim001_data = f.read()anim001_data12,287
        anim002_data = f.read()anim002_data24,543
        anim003_data = f.read()anim003_data36,799
animimg0 = lv.animimg(lv.scr_act())animimg046,994

lib/lvgl/examples/widgets/animimg/lv_example_animimg_1.c,120
static const lv_img_dsc_t* anim_imgs[3] = {anim_imgs7,153
void lv_example_animimg_1(void)lv_example_animimg_113,252

lib/lvgl/examples/widgets/roller/lv_example_roller_1.py,89
def event_handler(e):event_handler1,0
roller1 = lv.roller(lv.scr_act())roller113,290

lib/lvgl/examples/widgets/roller/lv_example_roller_1.c,119
static void event_handler(lv_event_t * e)event_handler4,71
void lv_example_roller_1(void)lv_example_roller_118,448

lib/lvgl/examples/widgets/roller/lv_example_roller_2.c,119
static void event_handler(lv_event_t * e)event_handler4,96
void lv_example_roller_2(void)lv_example_roller_218,492

lib/lvgl/examples/widgets/roller/lv_example_roller_3.py,169
class Lv_Roller_3():Lv_Roller_34,29
    def __init__(self):__init__6,51
    def mask_event_cb(self,e):mask_event_cb56,1716
roller3 = Lv_Roller_3()roller399,3538

lib/lvgl/examples/widgets/roller/lv_example_roller_3.c,120
static void mask_event_cb(lv_event_t * e)mask_event_cb4,90
void lv_example_roller_3(void)lv_example_roller_356,2234

lib/lvgl/examples/widgets/roller/lv_example_roller_2.py,453
def event_handler(e):event_handler3,18
style_sel =  lv.style_t()style_sel16,379
    fs_drv = lv.fs_drv_t()fs_drv22,487
    font_montserrat_22 = lv.font_load("S:" + "../../assets/font/montserrat-22.fnt")font_montserrat_2225,635
opts = "\n".join(["1","2","3","4","5","6","7","8","9","10"])opts28,772
roller = lv.roller(lv.scr_act())roller31,898
roller = lv.roller(lv.scr_act());roller42,1337
roller = lv.roller(lv.scr_act());roller51,1691

lib/lvgl/examples/widgets/led/lv_example_led_1.c,51
void lv_example_led_1(void)lv_example_led_17,128

lib/lvgl/examples/widgets/led/lv_example_led_1.py,121
led1  = lv.led(lv.scr_act())led16,89
led2  = lv.led(lv.scr_act())led211,211
led3  = lv.led(lv.scr_act())led317,389

lib/lvgl/examples/widgets/btnmatrix/lv_example_btnmatrix_3.c,115
static void event_cb(lv_event_t * e)event_cb4,75
void lv_example_btnmatrix_3(void)lv_example_btnmatrix_327,691

lib/lvgl/examples/widgets/btnmatrix/lv_example_btnmatrix_2.c,116
static void event_cb(lv_event_t * e)event_cb5,75
void lv_example_btnmatrix_2(void)lv_example_btnmatrix_265,2481

lib/lvgl/examples/widgets/btnmatrix/lv_example_btnmatrix_2.py,223
decoder = lv.img.decoder_create()decoder4,76
        png_data = f.read()png_data11,260
img_star_argb = lv.img_dsc_t({img_star_argb16,353
def event_cb(e):event_cb21,438
btnm = lv.btnmatrix(lv.scr_act())btnm80,2785

lib/lvgl/examples/widgets/btnmatrix/lv_example_btnmatrix_1.c,206
static void event_handler(lv_event_t * e)event_handler4,74
static const char * btnm_map[] = {"1", "2", "3", "4", "5", "\n",btnm_map17,431
void lv_example_btnmatrix_1(void)lv_example_btnmatrix_121,623

lib/lvgl/examples/widgets/btnmatrix/lv_example_btnmatrix_1.py,149
def event_handler(evt):event_handler1,0
btnm_map = ["1", "2", "3", "4", "5", "\n",btnm_map11,228
btnm1 = lv.btnmatrix(lv.scr_act())btnm115,353

lib/lvgl/examples/widgets/btnmatrix/lv_example_btnmatrix_3.py,237
def event_cb(e):event_cb1,0
style_bg = lv.style_t()style_bg28,548
style_btn = lv.style_t()style_btn37,736
map = [lv.SYMBOL.LEFT,"1","2", "3", "4", "5",lv.SYMBOL.RIGHT, ""]map46,1006
btnm = lv.btnmatrix(lv.scr_act())btnm48,1073

lib/lvgl/examples/widgets/span/lv_example_span_1.py,262
style = lv.style_t()style4,18
spans = lv.spangroup(lv.scr_act())spans10,159
span = spans.new_span()span21,414
span = spans.new_span()span27,662
span = spans.new_span()span34,903
span = spans.new_span()span38,1053
span = spans.new_span()span46,1331

lib/lvgl/examples/widgets/span/lv_example_span_1.c,52
void lv_example_span_1(void)lv_example_span_17,93

lib/lvgl/examples/widgets/tabview/lv_example_tabview_1.c,58
void lv_example_tabview_1(void)lv_example_tabview_14,72

lib/lvgl/examples/widgets/tabview/lv_example_tabview_2.py,572
def scroll_begin_event(e):scroll_begin_event1,0
tabview = lv.tabview(lv.scr_act(), lv.DIR.LEFT, 80)tabview10,263
tab_btns = tabview.get_tab_btns()tab_btns15,470
tab1 = tabview.add_tab("Tab 1")tab122,798
tab2 = tabview.add_tab("Tab 2")tab223,830
tab3 = tabview.add_tab("Tab 3")tab324,862
tab4 = tabview.add_tab("Tab 4")tab425,894
tab5 = tabview.add_tab("Tab 5")tab526,926
label = lv.label(tab1)label32,1093
label = lv.label(tab2)label35,1145
label = lv.label(tab3)label38,1198
label = lv.label(tab4)label41,1250
label = lv.label(tab5)label44,1302

lib/lvgl/examples/widgets/tabview/lv_example_tabview_2.c,131
static void scroll_begin_event(lv_event_t * e)scroll_begin_event4,72
void lv_example_tabview_2(void)lv_example_tabview_213,340

lib/lvgl/examples/widgets/tabview/lv_example_tabview_1.py,301
tabview = lv.tabview(lv.scr_act(), lv.DIR.TOP, 50)tabview2,27
tab1 = tabview.add_tab("Tab 1")tab15,141
tab2 = tabview.add_tab("Tab 2")tab26,173
tab3 = tabview.add_tab("Tab 3")tab37,205
label = lv.label(tab1)label10,264
label = lv.label(tab2)label28,453
label = lv.label(tab3)label31,506

lib/lvgl/examples/widgets/tileview/lv_example_tileview_1.py,349
tv = lv.tileview(lv.scr_act())tv6,183
tile1 = tv.add_tile(0, 0, lv.DIR.BOTTOM)tile19,237
label = lv.label(tile1)label10,278
tile2 = tv.add_tile(0, 1, lv.DIR.TOP | lv.DIR.RIGHT)tile215,366
btn = lv.btn(tile2)btn17,420
label = lv.label(btn)label19,441
tile3 =  tv.add_tile(1, 1, lv.DIR.LEFT)tile326,578
list = lv.list(tile3)list27,618

lib/lvgl/examples/widgets/tileview/lv_example_tileview_1.c,61
void lv_example_tileview_1(void)lv_example_tileview_19,263

lib/lvgl/examples/widgets/colorwheel/lv_example_colorwheel_1.py,46
cw = lv.colorwheel(lv.scr_act(), True)cw1,0

lib/lvgl/examples/widgets/colorwheel/lv_example_colorwheel_1.c,64
void lv_example_colorwheel_1(void)lv_example_colorwheel_14,75

lib/lvgl/examples/widgets/obj/lv_example_obj_1.c,50
void lv_example_obj_1(void)lv_example_obj_14,54

lib/lvgl/examples/widgets/obj/lv_example_obj_1.py,123
obj1 = lv.obj(lv.scr_act())obj11,0
style_shadow = lv.style_t()style_shadow5,90
obj2 = lv.obj(lv.scr_act())obj211,271

lib/lvgl/examples/widgets/obj/lv_example_obj_2.c,123
static void drag_event_handler(lv_event_t * e)drag_event_handler4,54
void lv_example_obj_2(void)lv_example_obj_221,418

lib/lvgl/examples/widgets/obj/lv_example_obj_2.py,123
def drag_event_handler(e):drag_event_handler1,0
obj = lv.obj(lv.scr_act())obj18,249
label = lv.label(obj)label22,362

lib/lvgl/examples/widgets/line/lv_example_line_1.py,136
line_points = [ {"x":5, "y":5}, line_points2,45
style_line = lv.style_t()style_line9,236
line1 = lv.line(lv.scr_act())line116,444

lib/lvgl/examples/widgets/line/lv_example_line_1.c,52
void lv_example_line_1(void)lv_example_line_14,69

lib/lvgl/examples/widgets/slider/lv_example_slider_1.c,176
static lv_obj_t * slider_label;slider_label5,116
void lv_example_slider_1(void)lv_example_slider_110,219
static void slider_event_cb(lv_event_t * e)slider_event_cb24,681

lib/lvgl/examples/widgets/slider/lv_example_slider_3.py,92
def slider_event_cb(e):slider_event_cb1,0
slider = lv.slider(lv.scr_act())slider34,1270

lib/lvgl/examples/widgets/slider/lv_example_slider_2.py,359
props = [lv.STYLE.BG_COLOR, 0]props5,56
transition_dsc = lv.style_transition_dsc_t()transition_dsc6,87
style_main = lv.style_t()style_main9,197
style_indicator =  lv.style_t()style_indicator10,223
style_knob = lv.style_t()style_knob11,255
style_pressed_color = lv.style_t()style_pressed_color12,281
slider = lv.slider(lv.scr_act())slider38,1246

lib/lvgl/examples/widgets/slider/lv_example_slider_2.c,57
void lv_example_slider_2(void)lv_example_slider_29,112

lib/lvgl/examples/widgets/slider/lv_example_slider_3.c,125
void lv_example_slider_3(void)lv_example_slider_310,205
static void slider_event_cb(lv_event_t * e)slider_event_cb25,662

lib/lvgl/examples/widgets/slider/lv_example_slider_1.py,150
def slider_event_cb(e):slider_event_cb4,66
slider = lv.slider(lv.scr_act())slider11,295
slider_label = lv.label(lv.scr_act())slider_label16,446

lib/lvgl/examples/widgets/bar/test.py,135
def set_value(bar, v):set_value4,69
def event_cb(e):event_cb7,127
bar = lv.bar(lv.scr_act())bar43,1355
a = lv.anim_t()a48,1475

lib/lvgl/examples/widgets/bar/lv_example_bar_1.c,50
void lv_example_bar_1(void)lv_example_bar_14,68

lib/lvgl/examples/widgets/bar/lv_example_bar_2.c,51
void lv_example_bar_2(void)lv_example_bar_27,106

lib/lvgl/examples/widgets/bar/lv_example_bar_5.py,178
bar_ltr = lv.bar(lv.scr_act())bar_ltr5,43
label = lv.label(lv.scr_act())label10,175
bar_rtl = lv.bar(lv.scr_act())bar_rtl14,307
label = lv.label(lv.scr_act())label20,484

lib/lvgl/examples/widgets/bar/lv_example_bar_2.py,120
style_bg = lv.style_t()style_bg4,33
style_indic = lv.style_t()style_indic5,57
bar = lv.bar(lv.scr_act())bar19,452

lib/lvgl/examples/widgets/bar/lv_example_bar_3.c,113
static void set_temp(void * bar, int32_t temp)set_temp4,68
void lv_example_bar_3(void)lv_example_bar_312,204

lib/lvgl/examples/widgets/bar/lv_example_bar_6.py,133
def set_value(bar, v):set_value1,0
def event_cb(e):event_cb4,58
bar = lv.bar(lv.scr_act())bar40,1286
a = lv.anim_t()a45,1406

lib/lvgl/examples/widgets/bar/lv_example_bar_6.c,164
static void set_value(void *bar, int32_t v)set_value4,68
static void event_cb(lv_event_t * e)event_cb9,160
void lv_example_bar_6(void)lv_example_bar_649,1529

lib/lvgl/examples/widgets/bar/lv_example_bar_4.c,51
void lv_example_bar_4(void)lv_example_bar_47,120

lib/lvgl/examples/widgets/bar/lv_example_bar_1.py,37
bar1 = lv.bar(lv.scr_act())bar11,0

lib/lvgl/examples/widgets/bar/lv_example_bar_5.c,51
void lv_example_bar_5(void)lv_example_bar_57,115

lib/lvgl/examples/widgets/bar/lv_example_bar_3.py,145
def set_temp(bar, temp):set_temp1,0
style_indic = lv.style_t()style_indic9,98
bar = lv.bar(lv.scr_act())bar17,350
a = lv.anim_t()a23,482

lib/lvgl/examples/widgets/bar/lv_example_bar_4.py,213
def get_icon(filename,xres,yres):get_icon4,18
img_skew_strip_dsc = get_icon("img_skew_strip",80,20)img_skew_strip_dsc27,672
style_indic =  lv.style_t()style_indic28,726
bar = lv.bar(lv.scr_act())bar35,897

lib/lvgl/examples/widgets/canvas/lv_example_canvas_2.py,603
CANVAS_WIDTH   = 50CANVAS_WIDTH1,0
CANVAS_HEIGHT  = 50CANVAS_HEIGHT2,20
LV_COLOR_CHROMA_KEY = lv.color_hex(0x00ff00) LV_COLOR_CHROMA_KEY3,40
def LV_IMG_BUF_SIZE_ALPHA_1BIT(w, h):LV_IMG_BUF_SIZE_ALPHA_1BIT5,87
def LV_IMG_BUF_SIZE_INDEXED_1BIT(w, h):LV_IMG_BUF_SIZE_INDEXED_1BIT8,160
def LV_CANVAS_BUF_SIZE_INDEXED_1BIT(w, h):LV_CANVAS_BUF_SIZE_INDEXED_1BIT11,253
btn=lv.btn(lv.scr_act())btn19,483
cbuf= bytearray(LV_CANVAS_BUF_SIZE_INDEXED_1BIT(CANVAS_WIDTH, CANVAS_HEIGHT))cbuf22,542
canvas = lv.canvas(lv.scr_act())canvas25,666
c0 = lv.color_t()c031,923
c1 = lv.color_t()c132,941

lib/lvgl/examples/widgets/canvas/lv_example_canvas_1.c,139
#define CANVAS_WIDTH CANVAS_WIDTH5,72
#define CANVAS_HEIGHT CANVAS_HEIGHT6,98
void lv_example_canvas_1(void)lv_example_canvas_18,126

lib/lvgl/examples/widgets/canvas/lv_example_canvas_1.py,368
_CANVAS_WIDTH  = 200_CANVAS_WIDTH1,0
_CANVAS_HEIGHT =  150_CANVAS_HEIGHT2,21
LV_IMG_ZOOM_NONE = 256LV_IMG_ZOOM_NONE3,43
rect_dsc = lv.draw_rect_dsc_t()rect_dsc5,67
label_dsc = lv.draw_label_dsc_t()label_dsc19,495
cbuf = bytearray(_CANVAS_WIDTH * _CANVAS_HEIGHT * 4)cbuf23,600
canvas = lv.canvas(lv.scr_act())canvas25,654
img = lv.img_dsc_t()img36,1115

lib/lvgl/examples/widgets/canvas/lv_example_canvas_2.c,140
#define CANVAS_WIDTH CANVAS_WIDTH4,71
#define CANVAS_HEIGHT CANVAS_HEIGHT5,96
void lv_example_canvas_2(void)lv_example_canvas_210,217

lib/lvgl/examples/widgets/calendar/lv_example_calendar_1.py,138
def event_handler(evt):event_handler2,1
calendar = lv.calendar(lv.scr_act())calendar13,403
highlighted_days=[highlighted_days22,662

lib/lvgl/examples/widgets/calendar/lv_example_calendar_1.c,123
static void event_handler(lv_event_t * e)event_handler4,73
void lv_example_calendar_1(void)lv_example_calendar_117,456

lib/lvgl/examples/widgets/arc/lv_example_arc_1.c,50
void lv_example_arc_1(void)lv_example_arc_15,69

lib/lvgl/examples/widgets/arc/lv_example_arc_2.py,255
class ArcLoader():ArcLoader4,70
    def __init__(self):__init__5,89
    def arc_loader_cb(self,tim,arc):arc_loader_cb8,143
arc = lv.arc(lv.scr_act())arc23,379
arc_loader = ArcLoader()arc_loader29,491
timer = lv.timer_create_basic()timer33,560

lib/lvgl/examples/widgets/arc/lv_example_arc_1.py,36
arc = lv.arc(lv.scr_act())arc2,16

lib/lvgl/examples/widgets/arc/lv_example_arc_2.c,112
static void set_angle(void * obj, int32_t v)set_angle5,69
void lv_example_arc_2(void)lv_example_arc_213,198

lib/lvgl/examples/widgets/checkbox/lv_example_checkbox_1.py,204
def event_handler(e):event_handler1,0
cb = lv.checkbox(lv.scr_act())cb16,441
cb = lv.checkbox(lv.scr_act())cb20,545
cb = lv.checkbox(lv.scr_act())cb25,681
cb = lv.checkbox(lv.scr_act())cb30,817

lib/lvgl/examples/widgets/checkbox/lv_example_checkbox_2.c,450
static lv_style_t style_radio;style_radio4,73
static lv_style_t style_radio_chk;style_radio_chk5,104
static uint32_t active_index_1 = 0;active_index_16,139
static uint32_t active_index_2 = 0;active_index_27,175
static void radio_event_handler(lv_event_t * e)radio_event_handler9,212
static void radiobutton_create(lv_obj_t * parent, const char * txt)radiobutton_create28,880
void lv_example_checkbox_2(void)lv_example_checkbox_240,1272

lib/lvgl/examples/widgets/checkbox/lv_example_checkbox_1.c,123
static void event_handler(lv_event_t * e)event_handler4,73
void lv_example_checkbox_1(void)lv_example_checkbox_115,455

lib/lvgl/examples/widgets/btn/lv_example_btn_2.py,272
style = lv.style_t()style6,74
style_pr = lv.style_t()style_pr31,726
trans = lv.style_transition_dsc_t()trans44,1097
props = [lv.STYLE.OUTLINE_WIDTH, lv.STYLE.OUTLINE_OPA, 0]props45,1133
btn1 = lv.btn(lv.scr_act())btn150,1279
label = lv.label(btn1)label57,1528

lib/lvgl/examples/widgets/btn/lv_example_btn_3.c,51
void lv_example_btn_3(void)lv_example_btn_37,148

lib/lvgl/examples/widgets/btn/lv_example_btn_1.c,113
static void event_handler(lv_event_t * e)event_handler4,68
void lv_example_btn_1(void)lv_example_btn_116,322

lib/lvgl/examples/widgets/btn/lv_example_btn_3.py,413
props = [lv.STYLE.TRANSFORM_WIDTH, lv.STYLE.TRANSFORM_HEIGHT, lv.STYLE.TEXT_LETTER_SPACE, 0]props6,103
transition_dsc_def = lv.style_transition_dsc_t()transition_dsc_def10,354
transition_dsc_pr = lv.style_transition_dsc_t()transition_dsc_pr15,574
style_def = lv.style_t()style_def19,746
style_pr = lv.style_t()style_pr24,901
btn1 = lv.btn(lv.scr_act())btn131,1088
label = lv.label(btn1)label36,1225

lib/lvgl/examples/widgets/btn/lv_example_btn_1.py,190
def event_handler(evt):event_handler1,0
btn1 = lv.btn(lv.scr_act())btn110,235
label=lv.label(btn1)label16,373
btn2 = lv.btn(lv.scr_act())btn220,445
label=lv.label(btn2)label30,715

lib/lvgl/examples/widgets/btn/lv_example_btn_2.c,51
void lv_example_btn_2(void)lv_example_btn_27,107

lib/lvgl/examples/widgets/imgbtn/lv_example_imgbtn_1.c,56
void lv_example_imgbtn_1(void)lv_example_imgbtn_14,71

lib/lvgl/examples/widgets/imgbtn/lv_example_imgbtn_1.py,695
decoder = lv.img.decoder_create()decoder4,76
        imgbtn_left_data = f.read()imgbtn_left_data11,267
imgbtn_left_dsc = lv.img_dsc_t({imgbtn_left_dsc16,375
        imgbtn_mid_data = f.read()imgbtn_mid_data23,539
imgbtn_mid_dsc = lv.img_dsc_t({imgbtn_mid_dsc28,645
        imgbtn_right_data = f.read()imgbtn_right_data35,808
imgbtn_right_dsc = lv.img_dsc_t({imgbtn_right_dsc40,918
tr_prop = [lv.STYLE.TRANSFORM_WIDTH, lv.STYLE.IMG_RECOLOR_OPA, 0]tr_prop46,1093
tr = lv.style_transition_dsc_t()tr47,1159
style_def = lv.style_t()style_def50,1247
style_pr = lv.style_t()style_pr56,1413
imgbtn1 = lv.imgbtn(lv.scr_act())imgbtn163,1596
label = lv.label(imgbtn1)label71,1877

lib/lvgl/examples/widgets/label/lv_example_label_1.py,90
label1 = lv.label(lv.scr_act())label14,63
label2 = lv.label(lv.scr_act())label214,604

lib/lvgl/examples/widgets/label/lv_example_label_3.c,55
void lv_example_label_3(void)lv_example_label_37,195

lib/lvgl/examples/widgets/label/lv_example_label_2.py,158
style_shadow = lv.style_t()style_shadow6,65
shadow_label = lv.label(lv.scr_act())shadow_label12,261
main_label = lv.label(lv.scr_act())main_label16,364

lib/lvgl/examples/widgets/label/lv_example_label_3.py,404
ltr_label = lv.label(lv.scr_act())ltr_label6,62
fs_drv = lv.fs_drv_t()fs_drv10,273
    font_montserrat_16 = lv.font_load("S:../../assets/font/montserrat-16.fnt")font_montserrat_1616,416
rtl_label = lv.label(lv.scr_act())rtl_label22,624
font_simsun_16_cjk = lv.font_load("S:../../assets/font/lv_font_simsun_16_cjk.fnt")font_simsun_16_cjk29,981
cz_label = lv.label(lv.scr_act())cz_label31,1065

lib/lvgl/examples/widgets/label/lv_example_label_4.c,201
#define MASK_WIDTH MASK_WIDTH4,89
#define MASK_HEIGHT MASK_HEIGHT5,112
static void add_mask_event_cb(lv_event_t * e)add_mask_event_cb7,136
void lv_example_label_4(void)lv_example_label_432,835

lib/lvgl/examples/widgets/label/lv_example_label_1.c,55
void lv_example_label_1(void)lv_example_label_17,138

lib/lvgl/examples/widgets/label/lv_example_label_2.c,55
void lv_example_label_2(void)lv_example_label_27,107

lib/lvgl/examples/widgets/lv_example_widgets.h,55
#define LV_EXAMPLE_WIDGETS_HLV_EXAMPLE_WIDGETS_H7,71

lib/lvgl/examples/widgets/spinbox/lv_example_spinbox_1.c,289
static lv_obj_t * spinbox;spinbox4,72
static void lv_spinbox_increment_event_cb(lv_event_t * e)lv_spinbox_increment_event_cb7,101
static void lv_spinbox_decrement_event_cb(lv_event_t * e)lv_spinbox_decrement_event_cb15,340
void lv_example_spinbox_1(void)lv_example_spinbox_124,579

lib/lvgl/examples/widgets/spinbox/lv_example_spinbox_1.py,262
def increment_event_cb(e):increment_event_cb1,0
def decrement_event_cb(e):decrement_event_cb6,160
spinbox = lv.spinbox(lv.scr_act())spinbox11,319
h = spinbox.get_height()h18,478
btn = lv.btn(lv.scr_act())btn20,504
btn = lv.btn(lv.scr_act())btn26,705

lib/lvgl/examples/widgets/textarea/lv_example_textarea_1.c,214
static void textarea_event_handler(lv_event_t * e)textarea_event_handler4,73
static void btnm_event_handler(lv_event_t * e)btnm_event_handler10,262
void lv_example_textarea_1(void)lv_example_textarea_122,702

lib/lvgl/examples/widgets/textarea/lv_example_textarea_2.c,152
static lv_obj_t * kb;kb6,134
void lv_example_textarea_2(void)lv_example_textarea_28,157
static void ta_event_cb(lv_event_t * e)ta_event_cb45,1613

lib/lvgl/examples/widgets/textarea/lv_example_textarea_1.py,252
def textarea_event_handler(e,ta):textarea_event_handler1,0
def btnm_event_handler(e,ta):btnm_event_handler4,109
ta = lv.textarea(lv.scr_act())ta15,395
btnm_map = ["1", "2", "3", "\n",btnm_map21,629
btnm = lv.btnmatrix(lv.scr_act())btnm26,800

lib/lvgl/examples/widgets/textarea/lv_example_textarea_2.py,431
def ta_event_cb(e):ta_event_cb1,0
LV_HOR_RES = lv.scr_act().get_disp().driver.hor_resLV_HOR_RES14,342
LV_VER_RES = lv.scr_act().get_disp().driver.ver_resLV_VER_RES15,394
pwd_ta = lv.textarea(lv.scr_act())pwd_ta17,447
pwd_label = lv.label(lv.scr_act())pwd_label26,726
text_ta = lv.textarea(lv.scr_act())text_ta31,887
oneline_label = lv.label(lv.scr_act())oneline_label40,1173
kb = lv.keyboard(lv.scr_act())kb45,1326

lib/lvgl/examples/widgets/textarea/lv_example_textarea_3.c,152
static lv_obj_t * kb;kb6,134
void lv_example_textarea_3(void)lv_example_textarea_312,251
static void ta_event_cb(lv_event_t * e)ta_event_cb29,829

lib/lvgl/examples/widgets/textarea/lv_example_textarea_3.py,260
def ta_event_cb(e):ta_event_cb1,0
LV_HOR_RES = lv.scr_act().get_disp().driver.hor_resLV_HOR_RES33,923
LV_VER_RES = lv.scr_act().get_disp().driver.ver_resLV_VER_RES34,975
ta = lv.textarea(lv.scr_act())ta36,1028
kb = lv.keyboard(lv.scr_act())kb45,1266

lib/lvgl/examples/widgets/dropdown/lv_example_dropdown_2.c,61
void lv_example_dropdown_2(void)lv_example_dropdown_28,130

lib/lvgl/examples/widgets/dropdown/lv_example_dropdown_3.py,241
decoder = lv.img.decoder_create()decoder4,76
        png_data = f.read()png_data11,270
img_caret_down_argb = lv.img_dsc_t({img_caret_down_argb16,373
def event_cb(e):event_cb21,464
dropdown = lv.dropdown(lv.scr_act())dropdown31,788

lib/lvgl/examples/widgets/dropdown/lv_example_dropdown_3.c,113
static void event_cb(lv_event_t * e)event_cb4,73
void lv_example_dropdown_3(void)lv_example_dropdown_315,384

lib/lvgl/examples/widgets/dropdown/lv_example_dropdown_1.py,81
def event_handler(e):event_handler1,0
dd = lv.dropdown(lv.scr_act())dd11,356

lib/lvgl/examples/widgets/dropdown/lv_example_dropdown_2.py,193
opts = "\n".join([opts5,52
dd = lv.dropdown(lv.scr_act())dd13,157
dd = lv.dropdown(lv.scr_act())dd16,250
dd = lv.dropdown(lv.scr_act())dd22,402
dd = lv.dropdown(lv.scr_act())dd28,553

lib/lvgl/examples/widgets/dropdown/lv_example_dropdown_1.c,123
static void event_handler(lv_event_t * e)event_handler4,73
void lv_example_dropdown_1(void)lv_example_dropdown_115,384

lib/lvgl/examples/widgets/switch/lv_example_switch_1.py,196
def event_handler(e):event_handler1,0
sw = lv.switch(lv.scr_act())sw14,376
sw = lv.switch(lv.scr_act())sw17,456
sw = lv.switch(lv.scr_act())sw21,568
sw = lv.switch(lv.scr_act())sw25,681

lib/lvgl/examples/widgets/switch/lv_example_switch_1.c,119
static void event_handler(lv_event_t * e)event_handler4,71
void lv_example_switch_1(void)lv_example_switch_113,351

lib/lvgl/rt-thread/lv_rt_thread_port.c,227
#define DBG_TAG DBG_TAG15,264
#define DBG_LVL DBG_LVL16,290
static void lv_rt_log(const char *buf)lv_rt_log27,513
static int lv_port_init(void)lv_port_init33,580
INIT_COMPONENT_EXPORT(lv_port_init);lv_port_init50,862

lib/lvgl/rt-thread/lv_rt_thread_conf.h,1264
#define LV_RT_THREAD_CONF_HLV_RT_THREAD_CONF_H12,231
#define LV_RTTHREAD_INCLUDE LV_RTTHREAD_INCLUDE16,281
#  define LV_MEM_CUSTOM LV_MEM_CUSTOM24,451
#  define LV_MEM_CUSTOM_INCLUDE LV_MEM_CUSTOM_INCLUDE25,477
#  define LV_MEM_CUSTOM_ALLOC LV_MEM_CUSTOM_ALLOC26,529
#  define LV_MEM_CUSTOM_FREE LV_MEM_CUSTOM_FREE27,571
#  define LV_MEM_CUSTOM_REALLOC LV_MEM_CUSTOM_REALLOC28,611
#define LV_TICK_CUSTOM LV_TICK_CUSTOM35,727
#define LV_TICK_CUSTOM_INCLUDE LV_TICK_CUSTOM_INCLUDE36,752
#define LV_TICK_CUSTOM_SYS_TIME_EXPR LV_TICK_CUSTOM_SYS_TIME_EXPR37,803
#  define LV_USE_LOG LV_USE_LOG48,1078
#  define LV_LOG_PRINTF LV_LOG_PRINTF49,1101
#  define LV_USE_LOG LV_USE_LOG51,1133
#define LV_ASSERT_HANDLER_INCLUDE LV_ASSERT_HANDLER_INCLUDE58,1208
#define LV_ASSERT_HANDLER LV_ASSERT_HANDLER59,1262
#define LV_SPRINTF_CUSTOM LV_SPRINTF_CUSTOM65,1346
#define LV_SPRINTF_INCLUDE LV_SPRINTF_INCLUDE66,1374
#define lv_snprintf lv_snprintf67,1421
#define lv_vsnprintf lv_vsnprintf68,1454
#define LV_SPRINTF_USE_FLOAT LV_SPRINTF_USE_FLOAT69,1488
#  define LV_BIG_ENDIAN_SYSTEM LV_BIG_ENDIAN_SYSTEM76,1619
#  define LV_BIG_ENDIAN_SYSTEM LV_BIG_ENDIAN_SYSTEM78,1658
#define LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_MEM_ALIGN81,1699

lib/lvgl/scripts/release/release.py,0

lib/lvgl/scripts/release/patch.py,713
push = Falsepush14,412
def clone(repo):clone16,426
cmd = "git branch --remotes | grep origin/release/v8"cmd29,764
branches = str(branches)branches32,957
branches = branches.replace("b'", "")branches33,982
branches = branches.replace("'", "")branches34,1020
branches = branches.replace("origin/", "")branches35,1057
branches = branches.replace("  ", " ")branches36,1100
branches = branches.replace("\\n", "")branches37,1139
branches = branches.split(" ")branches38,1178
branches = list(filter(len, branches))branches39,1209
commits = []commits41,1249
ver = com.get_lvgl_version("master")ver67,1974
ver = com.get_lvgl_version(br)ver68,2011
t = com.ver_format(ver_new) + "-dev"t70,2080

lib/lvgl/scripts/release/com.py,254
def cmd(c, ask_on_err = True):cmd11,128
def define_set(fn, name, value):define_set19,312
def ver_format(ver):ver_format39,776
def get_lvgl_version():get_lvgl_version44,922
def push(c):push74,1642
def update_version(ver):update_version77,1681

lib/lvgl/scripts/code-format.sh,0

lib/lvgl/scripts/style_api_gen.py,576
props = [props5,44
def style_get_cast(style_type, var_type):style_get_cast365,24624
def obj_style_get(p):obj_style_get371,24753
def style_set_cast(style_type):style_set_cast382,25194
def style_set_c(p):style_set_c388,25302
def style_set_h(p):style_set_h401,25726
def local_style_set_c(p):local_style_set_c406,25882
def local_style_set_h(p):local_style_set_h420,26370
def style_const_set(p):style_const_set425,26569
docs_prop_cnt = 0docs_prop_cnt440,26960
def docs(p):docs441,26978
base_dir = os.path.abspath(os.path.dirname(__file__))base_dir487,28032

lib/lvgl/scripts/filetohex.py,50
    s = file.read()s5,72
b = bytearray()b7,93

lib/lvgl/scripts/cppcheck_run.sh,0

lib/lvgl/scripts/genexamplelist.sh,0

lib/lvgl/scripts/changelog_gen.sh,0

lib/lvgl/scripts/infer_run.sh,0

lib/lvgl/scripts/jpg_to_sjpg.py,2262
SJPG_FILE_FORMAT_VERSION = "V1.00"  #SJPG_FILE_FORMAT_VERSION5,198
JPEG_SPLIT_HEIGHT   = 16 JPEG_SPLIT_HEIGHT6,236
OUTPUT_FILE_NAME = ""OUTPUT_FILE_NAME12,380
INPUT_FILE       = ""INPUT_FILE13,402
    INPUT_FILE = sys.argv[1]INPUT_FILE17,449
    OUTPUT_FILE_NAME = INPUT_FILE.split("/")[-1].split("\\")[-1].split(".")[0]OUTPUT_FILE_NAME18,478
    im = Image.open(INPUT_FILE)im24,651
start_time = time.time()start_time31,775
lenbuf = []lenbuf39,928
block_size = JPEG_SPLIT_HEIGHT;block_size40,940
spilts = math.ceil(height/block_size)spilts41,972
sjpeg_data = bytearray()sjpeg_data45,1129
sjpeg = bytearray()sjpeg46,1154
row_remaining = height;row_remaining49,1176
        crop = im.crop((0, i*block_size, width, row_remaining + i*block_size))crop52,1259
        crop = im.crop((0, i*block_size, width, block_size + i*block_size))crop54,1348
    row_remaining = row_remaining - block_size;row_remaining56,1425
    f = open(str(i)+".jpg", "rb")f63,1542
    a = f.read()a64,1576
    sjpeg_data = sjpeg_data + asjpeg_data66,1607
header = bytearray()header69,1666
header = header + bytearray("_SJPG__".encode("UTF-8"));header72,1697
header = header + bytearray(("\x00" + SJPG_FILE_FORMAT_VERSION + "\x00").encode("UTF-8"));header75,1771
header = header + width.to_bytes(2, byteorder='little');header78,1878
header = header + height.to_bytes(2, byteorder='little');header81,1952
header = header + spilts.to_bytes(2, byteorder='little');header84,2036
header = header + int(JPEG_SPLIT_HEIGHT).to_bytes(2, byteorder='little');header87,2120
    header = header + item_len.to_bytes(2, byteorder='little');header91,2239
data = bytearray()data94,2305
sjpeg = header + sjpeg_data;sjpeg96,2325
f = open(OUTPUT_FILE_NAME+".sjpg","wb");f103,2431
new_line_threshold = 0new_line_threshold107,2498
    c_code = c_code + "\t" + str(hex(sjpeg[i])) + ","c_code109,2549
    new_line_threshold = new_line_threshold + 1new_line_threshold110,2603
        c_code = c_code + "\n"c_code112,2686
        new_line_threshold = 0new_line_threshold113,2717
c_code = c_code + "\n};\n\nlv_img_dsc_t "c_code116,2750
f = open(OUTPUT_FILE_NAME + '.c', 'w')f126,3183
time_taken = (time.time() - start_time)time_taken131,3250

lib/lvgl/scripts/install-prerequisites.sh,0

lib/lvgl/scripts/built_in_font/built_in_font_gen.py,1954
					type=int,type11,464
					metavar = 'px',metavar12,479
					nargs='?',nargs13,500
					help='Size of the font in px')help14,516
					type=int,type16,581
					metavar = '1,2,4',metavar17,596
					nargs='?',nargs18,620
					help='Bit per pixel')help19,636
					nargs='+',nargs21,700
					metavar = 'start-end',metavar22,716
					default=['0x20-0x7F,0xB0,0x2022'],default23,744
					help='Ranges and/or characters to include. Default is 0x20-7F (ASCII). E.g. -r 0x20-0x7F, 0x200, 324')help24,784
					nargs='+',nargs26,925
					metavar = 'sym',metavar27,941
					default=[''],default28,963
					help=u'Symbols to include. E.g. -s ÁÉŐ'.encode('utf-8'))help29,982
					metavar = 'file',metavar31,1077
					nargs='?',nargs32,1100
					default='Montserrat-Medium.ttf',default33,1116
					help='A TTF or WOFF file')help34,1154
					nargs='?',nargs36,1224
					metavar='file',metavar37,1240
					help='Output file name. E.g. my_font_20.c')help38,1261
                    help='Compress the bitmaps')help40,1367
                    help='3 times wider letters for sub pixel rendering')help42,1468
args = parser.parse_args()args44,1543
	compr = "--no-compress --no-prefilter"compr47,1600
	compr = ""compr49,1646
subpx = ""subpx54,1742
syms = "61441,61448,61451,61452,61452,61453,61457,61459,61461,61465,61468,61473,61478,61479,61480,61502,61507,61512,61515,61516,61517,61521,61522,61523,61524,61543,61544,61550,61552,61553,61556,61559,61560,61561,61563,61587,61589,61636,61637,61639,61641,61664,61671,61674,61683,61724,61732,61787,61931,62016,62017,62018,62019,62020,62087,62099,62212,62189,62810,63426,63650"syms59,1804
cmd = "lv_font_conv {} {} --bpp {} --size {} --font {} -r {} {} --font FontAwesome5-Solid+Brands+Regular.woff -r {} --format bin -o {} --force-fast-kern-format".format(subpx, compr, args.bpp, args.size, args.font, args.range[0], args.symbols[0], syms, args.output)cmd62,2229

lib/lvgl/scripts/built_in_font/generate_all.py,0

lib/lvgl/scripts/find_version.sh,0

lib/lvgl/scripts/lv_conf_internal_gen.py,607
fin = open("../lv_conf_template.h", "r")fin14,229
fout = open("../src/lv_conf_internal.h", "w")fout15,270
started = 0started72,1707
      started = 1started77,1811
  r = re.search(r'^[\s]*#[\s]*define[\s]+([^\s]+).*$', line)   # \s means any white space characterr85,1954
    name = r[1]name88,2063
    name = re.sub('\(.*?\)', '', name, 1)    #remove parentheses from macros. E.g. MY_FUNC(5) -> MY_FUNCname89,2079
    name_and_value = re.sub('[\s]*#[\s]*define', '', line, 1)name_and_value91,2185
    is_one = re.search(r'[\s]*#[\s]*define[\s]*[A-Z0-9_]+[\s]+1[\s]*$', line)is_one95,2446

lib/lvgl/scripts/build_html_examples.sh,0

lib/lvgl/tests/main.py,1633
lvgl_test_dir = os.path.dirname(os.path.realpath(__file__))lvgl_test_dir11,119
build_only_options = {build_only_options14,238
test_options = {test_options22,581
def is_valid_option_name(option_name):is_valid_option_name27,657
def get_option_description(option_name):get_option_description31,774
def delete_dir_ignore_missing(dir_path):delete_dir_ignore_missing37,943
def generate_test_runners():generate_test_runners45,1134
def options_abbrev(options_name):options_abbrev61,1728
def get_base_buid_dir(options_name):get_base_buid_dir68,1937
def get_build_dir(options_name):get_build_dir75,2176
def build_tests(options_name, build_type, clean):build_tests83,2432
def run_tests(options_name):run_tests113,3371
def generate_code_coverage_report():generate_code_coverage_report128,3777
    parser = argparse.ArgumentParser(parser163,5096
                        help='clean existing build artifacts before operation.')help170,5497
                        help='generate code coverage report for tests.')help172,5635
                        help='build: compile build tests, test: compile/run executable tests.')help174,5781
    args = parser.parse_args()args176,5878
        options_to_build = args.build_optionsoptions_to_build179,5937
                options_to_build = {**build_only_options, **test_options}options_to_build183,6068
                options_to_build = build_only_optionsoptions_to_build185,6160
            options_to_build = test_optionsoptions_to_build187,6228
        is_test = options_name in test_optionsis_test197,6525
        build_type = 'Debug'build_type198,6572

lib/lvgl/tests/unity/unity_support.c,670
#define PNG_DEBUG PNG_DEBUG23,395
#define REF_IMGS_PATH REF_IMGS_PATH30,551
    int width, height;width36,669
    int width, height;height36,669
    png_byte color_type;color_type37,692
    png_byte bit_depth;bit_depth38,717
    png_structp png_ptr;png_ptr40,742
    png_infop info_ptr;info_ptr41,767
    int number_of_passes;number_of_passes42,791
    png_bytep * row_pointers;row_pointers43,817
}png_img_t;png_img_t44,847
bool lv_test_assert_img_eq(const char * fn_ref)lv_test_assert_img_eq64,1244
static int read_png_file(png_img_t * p, const char* file_name)read_png_file163,3709
static void png_release(png_img_t * p)png_release227,5678

lib/lvgl/tests/unity/unity.h,38314
#define UNITY_INCLUDE_PRINT_FORMATTED UNITY_INCLUDE_PRINT_FORMATTED7,300
#define UNITY_FRAMEWORK_HUNITY_FRAMEWORK_H10,367
#define UNITYUNITY11,393
#define UNITY_VERSION_MAJOR UNITY_VERSION_MAJOR13,408
#define UNITY_VERSION_MINOR UNITY_VERSION_MINOR14,441
#define UNITY_VERSION_BUILD UNITY_VERSION_BUILD15,474
#define UNITY_VERSION UNITY_VERSION16,507
#define TEST_FAIL_MESSAGE(TEST_FAIL_MESSAGE103,4796
#define TEST_FAIL(TEST_FAIL104,4932
#define TEST_IGNORE_MESSAGE(TEST_IGNORE_MESSAGE105,5063
#define TEST_IGNORE(TEST_IGNORE106,5201
#define TEST_MESSAGE(TEST_MESSAGE107,5334
#define TEST_ONLY(TEST_ONLY108,5467
#define TEST_PRINTF(TEST_PRINTF110,5524
#define TEST_PASS(TEST_PASS115,5880
#define TEST_PASS_MESSAGE(TEST_PASS_MESSAGE116,5992
#define TEST_FILE(TEST_FILE120,6372
#define TEST_ASSERT(TEST_ASSERT127,6552
#define TEST_ASSERT_TRUE(TEST_ASSERT_TRUE128,6733
#define TEST_ASSERT_UNLESS(TEST_ASSERT_UNLESS129,6908
#define TEST_ASSERT_FALSE(TEST_ASSERT_FALSE130,7088
#define TEST_ASSERT_NULL(TEST_ASSERT_NULL131,7263
#define TEST_ASSERT_NOT_NULL(TEST_ASSERT_NOT_NULL132,7428
#define TEST_ASSERT_EMPTY(TEST_ASSERT_EMPTY133,7597
#define TEST_ASSERT_NOT_EMPTY(TEST_ASSERT_NOT_EMPTY134,7764
#define TEST_ASSERT_EQUAL_INT(TEST_ASSERT_EQUAL_INT137,7966
#define TEST_ASSERT_EQUAL_INT8(TEST_ASSERT_EQUAL_INT8138,8131
#define TEST_ASSERT_EQUAL_INT16(TEST_ASSERT_EQUAL_INT16139,8297
#define TEST_ASSERT_EQUAL_INT32(TEST_ASSERT_EQUAL_INT32140,8464
#define TEST_ASSERT_EQUAL_INT64(TEST_ASSERT_EQUAL_INT64141,8631
#define TEST_ASSERT_EQUAL_UINT(TEST_ASSERT_EQUAL_UINT142,8798
#define TEST_ASSERT_EQUAL_UINT8(TEST_ASSERT_EQUAL_UINT8143,8965
#define TEST_ASSERT_EQUAL_UINT16(TEST_ASSERT_EQUAL_UINT16144,9133
#define TEST_ASSERT_EQUAL_UINT32(TEST_ASSERT_EQUAL_UINT32145,9302
#define TEST_ASSERT_EQUAL_UINT64(TEST_ASSERT_EQUAL_UINT64146,9471
#define TEST_ASSERT_EQUAL_size_t(TEST_ASSERT_EQUAL_size_t147,9640
#define TEST_ASSERT_EQUAL_HEX(TEST_ASSERT_EQUAL_HEX148,9806
#define TEST_ASSERT_EQUAL_HEX8(TEST_ASSERT_EQUAL_HEX8149,9973
#define TEST_ASSERT_EQUAL_HEX16(TEST_ASSERT_EQUAL_HEX16150,10140
#define TEST_ASSERT_EQUAL_HEX32(TEST_ASSERT_EQUAL_HEX32151,10307
#define TEST_ASSERT_EQUAL_HEX64(TEST_ASSERT_EQUAL_HEX64152,10474
#define TEST_ASSERT_EQUAL_CHAR(TEST_ASSERT_EQUAL_CHAR153,10641
#define TEST_ASSERT_BITS(TEST_ASSERT_BITS154,10807
#define TEST_ASSERT_BITS_HIGH(TEST_ASSERT_BITS_HIGH155,10975
#define TEST_ASSERT_BITS_LOW(TEST_ASSERT_BITS_LOW156,11149
#define TEST_ASSERT_BIT_HIGH(TEST_ASSERT_BIT_HIGH157,11322
#define TEST_ASSERT_BIT_LOW(TEST_ASSERT_BIT_LOW158,11514
#define TEST_ASSERT_NOT_EQUAL_INT(TEST_ASSERT_NOT_EQUAL_INT161,11748
#define TEST_ASSERT_NOT_EQUAL_INT8(TEST_ASSERT_NOT_EQUAL_INT8162,11918
#define TEST_ASSERT_NOT_EQUAL_INT16(TEST_ASSERT_NOT_EQUAL_INT16163,12089
#define TEST_ASSERT_NOT_EQUAL_INT32(TEST_ASSERT_NOT_EQUAL_INT32164,12261
#define TEST_ASSERT_NOT_EQUAL_INT64(TEST_ASSERT_NOT_EQUAL_INT64165,12433
#define TEST_ASSERT_NOT_EQUAL_UINT(TEST_ASSERT_NOT_EQUAL_UINT166,12605
#define TEST_ASSERT_NOT_EQUAL_UINT8(TEST_ASSERT_NOT_EQUAL_UINT8167,12776
#define TEST_ASSERT_NOT_EQUAL_UINT16(TEST_ASSERT_NOT_EQUAL_UINT16168,12948
#define TEST_ASSERT_NOT_EQUAL_UINT32(TEST_ASSERT_NOT_EQUAL_UINT32169,13121
#define TEST_ASSERT_NOT_EQUAL_UINT64(TEST_ASSERT_NOT_EQUAL_UINT64170,13294
#define TEST_ASSERT_NOT_EQUAL_size_t(TEST_ASSERT_NOT_EQUAL_size_t171,13467
#define TEST_ASSERT_NOT_EQUAL_HEX8(TEST_ASSERT_NOT_EQUAL_HEX8172,13638
#define TEST_ASSERT_NOT_EQUAL_HEX16(TEST_ASSERT_NOT_EQUAL_HEX16173,13809
#define TEST_ASSERT_NOT_EQUAL_HEX32(TEST_ASSERT_NOT_EQUAL_HEX32174,13981
#define TEST_ASSERT_NOT_EQUAL_HEX64(TEST_ASSERT_NOT_EQUAL_HEX64175,14153
#define TEST_ASSERT_NOT_EQUAL_CHAR(TEST_ASSERT_NOT_EQUAL_CHAR176,14325
#define TEST_ASSERT_GREATER_THAN(TEST_ASSERT_GREATER_THAN179,14550
#define TEST_ASSERT_GREATER_THAN_INT(TEST_ASSERT_GREATER_THAN_INT180,14723
#define TEST_ASSERT_GREATER_THAN_INT8(TEST_ASSERT_GREATER_THAN_INT8181,14896
#define TEST_ASSERT_GREATER_THAN_INT16(TEST_ASSERT_GREATER_THAN_INT16182,15070
#define TEST_ASSERT_GREATER_THAN_INT32(TEST_ASSERT_GREATER_THAN_INT32183,15245
#define TEST_ASSERT_GREATER_THAN_INT64(TEST_ASSERT_GREATER_THAN_INT64184,15420
#define TEST_ASSERT_GREATER_THAN_UINT(TEST_ASSERT_GREATER_THAN_UINT185,15595
#define TEST_ASSERT_GREATER_THAN_UINT8(TEST_ASSERT_GREATER_THAN_UINT8186,15769
#define TEST_ASSERT_GREATER_THAN_UINT16(TEST_ASSERT_GREATER_THAN_UINT16187,15944
#define TEST_ASSERT_GREATER_THAN_UINT32(TEST_ASSERT_GREATER_THAN_UINT32188,16120
#define TEST_ASSERT_GREATER_THAN_UINT64(TEST_ASSERT_GREATER_THAN_UINT64189,16296
#define TEST_ASSERT_GREATER_THAN_size_t(TEST_ASSERT_GREATER_THAN_size_t190,16472
#define TEST_ASSERT_GREATER_THAN_HEX8(TEST_ASSERT_GREATER_THAN_HEX8191,16646
#define TEST_ASSERT_GREATER_THAN_HEX16(TEST_ASSERT_GREATER_THAN_HEX16192,16820
#define TEST_ASSERT_GREATER_THAN_HEX32(TEST_ASSERT_GREATER_THAN_HEX32193,16995
#define TEST_ASSERT_GREATER_THAN_HEX64(TEST_ASSERT_GREATER_THAN_HEX64194,17170
#define TEST_ASSERT_GREATER_THAN_CHAR(TEST_ASSERT_GREATER_THAN_CHAR195,17345
#define TEST_ASSERT_LESS_THAN(TEST_ASSERT_LESS_THAN197,17520
#define TEST_ASSERT_LESS_THAN_INT(TEST_ASSERT_LESS_THAN_INT198,17693
#define TEST_ASSERT_LESS_THAN_INT8(TEST_ASSERT_LESS_THAN_INT8199,17866
#define TEST_ASSERT_LESS_THAN_INT16(TEST_ASSERT_LESS_THAN_INT16200,18040
#define TEST_ASSERT_LESS_THAN_INT32(TEST_ASSERT_LESS_THAN_INT32201,18215
#define TEST_ASSERT_LESS_THAN_INT64(TEST_ASSERT_LESS_THAN_INT64202,18390
#define TEST_ASSERT_LESS_THAN_UINT(TEST_ASSERT_LESS_THAN_UINT203,18565
#define TEST_ASSERT_LESS_THAN_UINT8(TEST_ASSERT_LESS_THAN_UINT8204,18739
#define TEST_ASSERT_LESS_THAN_UINT16(TEST_ASSERT_LESS_THAN_UINT16205,18914
#define TEST_ASSERT_LESS_THAN_UINT32(TEST_ASSERT_LESS_THAN_UINT32206,19090
#define TEST_ASSERT_LESS_THAN_UINT64(TEST_ASSERT_LESS_THAN_UINT64207,19266
#define TEST_ASSERT_LESS_THAN_size_t(TEST_ASSERT_LESS_THAN_size_t208,19442
#define TEST_ASSERT_LESS_THAN_HEX8(TEST_ASSERT_LESS_THAN_HEX8209,19616
#define TEST_ASSERT_LESS_THAN_HEX16(TEST_ASSERT_LESS_THAN_HEX16210,19790
#define TEST_ASSERT_LESS_THAN_HEX32(TEST_ASSERT_LESS_THAN_HEX32211,19965
#define TEST_ASSERT_LESS_THAN_HEX64(TEST_ASSERT_LESS_THAN_HEX64212,20140
#define TEST_ASSERT_LESS_THAN_CHAR(TEST_ASSERT_LESS_THAN_CHAR213,20315
#define TEST_ASSERT_GREATER_OR_EQUAL(TEST_ASSERT_GREATER_OR_EQUAL215,20490
#define TEST_ASSERT_GREATER_OR_EQUAL_INT(TEST_ASSERT_GREATER_OR_EQUAL_INT216,20667
#define TEST_ASSERT_GREATER_OR_EQUAL_INT8(TEST_ASSERT_GREATER_OR_EQUAL_INT8217,20844
#define TEST_ASSERT_GREATER_OR_EQUAL_INT16(TEST_ASSERT_GREATER_OR_EQUAL_INT16218,21022
#define TEST_ASSERT_GREATER_OR_EQUAL_INT32(TEST_ASSERT_GREATER_OR_EQUAL_INT32219,21201
#define TEST_ASSERT_GREATER_OR_EQUAL_INT64(TEST_ASSERT_GREATER_OR_EQUAL_INT64220,21380
#define TEST_ASSERT_GREATER_OR_EQUAL_UINT(TEST_ASSERT_GREATER_OR_EQUAL_UINT221,21559
#define TEST_ASSERT_GREATER_OR_EQUAL_UINT8(TEST_ASSERT_GREATER_OR_EQUAL_UINT8222,21737
#define TEST_ASSERT_GREATER_OR_EQUAL_UINT16(TEST_ASSERT_GREATER_OR_EQUAL_UINT16223,21916
#define TEST_ASSERT_GREATER_OR_EQUAL_UINT32(TEST_ASSERT_GREATER_OR_EQUAL_UINT32224,22096
#define TEST_ASSERT_GREATER_OR_EQUAL_UINT64(TEST_ASSERT_GREATER_OR_EQUAL_UINT64225,22276
#define TEST_ASSERT_GREATER_OR_EQUAL_size_t(TEST_ASSERT_GREATER_OR_EQUAL_size_t226,22456
#define TEST_ASSERT_GREATER_OR_EQUAL_HEX8(TEST_ASSERT_GREATER_OR_EQUAL_HEX8227,22634
#define TEST_ASSERT_GREATER_OR_EQUAL_HEX16(TEST_ASSERT_GREATER_OR_EQUAL_HEX16228,22812
#define TEST_ASSERT_GREATER_OR_EQUAL_HEX32(TEST_ASSERT_GREATER_OR_EQUAL_HEX32229,22991
#define TEST_ASSERT_GREATER_OR_EQUAL_HEX64(TEST_ASSERT_GREATER_OR_EQUAL_HEX64230,23170
#define TEST_ASSERT_GREATER_OR_EQUAL_CHAR(TEST_ASSERT_GREATER_OR_EQUAL_CHAR231,23349
#define TEST_ASSERT_LESS_OR_EQUAL(TEST_ASSERT_LESS_OR_EQUAL233,23528
#define TEST_ASSERT_LESS_OR_EQUAL_INT(TEST_ASSERT_LESS_OR_EQUAL_INT234,23705
#define TEST_ASSERT_LESS_OR_EQUAL_INT8(TEST_ASSERT_LESS_OR_EQUAL_INT8235,23882
#define TEST_ASSERT_LESS_OR_EQUAL_INT16(TEST_ASSERT_LESS_OR_EQUAL_INT16236,24060
#define TEST_ASSERT_LESS_OR_EQUAL_INT32(TEST_ASSERT_LESS_OR_EQUAL_INT32237,24239
#define TEST_ASSERT_LESS_OR_EQUAL_INT64(TEST_ASSERT_LESS_OR_EQUAL_INT64238,24418
#define TEST_ASSERT_LESS_OR_EQUAL_UINT(TEST_ASSERT_LESS_OR_EQUAL_UINT239,24597
#define TEST_ASSERT_LESS_OR_EQUAL_UINT8(TEST_ASSERT_LESS_OR_EQUAL_UINT8240,24775
#define TEST_ASSERT_LESS_OR_EQUAL_UINT16(TEST_ASSERT_LESS_OR_EQUAL_UINT16241,24954
#define TEST_ASSERT_LESS_OR_EQUAL_UINT32(TEST_ASSERT_LESS_OR_EQUAL_UINT32242,25134
#define TEST_ASSERT_LESS_OR_EQUAL_UINT64(TEST_ASSERT_LESS_OR_EQUAL_UINT64243,25314
#define TEST_ASSERT_LESS_OR_EQUAL_size_t(TEST_ASSERT_LESS_OR_EQUAL_size_t244,25494
#define TEST_ASSERT_LESS_OR_EQUAL_HEX8(TEST_ASSERT_LESS_OR_EQUAL_HEX8245,25672
#define TEST_ASSERT_LESS_OR_EQUAL_HEX16(TEST_ASSERT_LESS_OR_EQUAL_HEX16246,25850
#define TEST_ASSERT_LESS_OR_EQUAL_HEX32(TEST_ASSERT_LESS_OR_EQUAL_HEX32247,26029
#define TEST_ASSERT_LESS_OR_EQUAL_HEX64(TEST_ASSERT_LESS_OR_EQUAL_HEX64248,26208
#define TEST_ASSERT_LESS_OR_EQUAL_CHAR(TEST_ASSERT_LESS_OR_EQUAL_CHAR249,26387
#define TEST_ASSERT_INT_WITHIN(TEST_ASSERT_INT_WITHIN252,26602
#define TEST_ASSERT_INT8_WITHIN(TEST_ASSERT_INT8_WITHIN253,26777
#define TEST_ASSERT_INT16_WITHIN(TEST_ASSERT_INT16_WITHIN254,26953
#define TEST_ASSERT_INT32_WITHIN(TEST_ASSERT_INT32_WITHIN255,27130
#define TEST_ASSERT_INT64_WITHIN(TEST_ASSERT_INT64_WITHIN256,27307
#define TEST_ASSERT_UINT_WITHIN(TEST_ASSERT_UINT_WITHIN257,27484
#define TEST_ASSERT_UINT8_WITHIN(TEST_ASSERT_UINT8_WITHIN258,27660
#define TEST_ASSERT_UINT16_WITHIN(TEST_ASSERT_UINT16_WITHIN259,27837
#define TEST_ASSERT_UINT32_WITHIN(TEST_ASSERT_UINT32_WITHIN260,28015
#define TEST_ASSERT_UINT64_WITHIN(TEST_ASSERT_UINT64_WITHIN261,28193
#define TEST_ASSERT_size_t_WITHIN(TEST_ASSERT_size_t_WITHIN262,28371
#define TEST_ASSERT_HEX_WITHIN(TEST_ASSERT_HEX_WITHIN263,28547
#define TEST_ASSERT_HEX8_WITHIN(TEST_ASSERT_HEX8_WITHIN264,28724
#define TEST_ASSERT_HEX16_WITHIN(TEST_ASSERT_HEX16_WITHIN265,28900
#define TEST_ASSERT_HEX32_WITHIN(TEST_ASSERT_HEX32_WITHIN266,29077
#define TEST_ASSERT_HEX64_WITHIN(TEST_ASSERT_HEX64_WITHIN267,29254
#define TEST_ASSERT_CHAR_WITHIN(TEST_ASSERT_CHAR_WITHIN268,29431
#define TEST_ASSERT_INT_ARRAY_WITHIN(TEST_ASSERT_INT_ARRAY_WITHIN271,29650
#define TEST_ASSERT_INT8_ARRAY_WITHIN(TEST_ASSERT_INT8_ARRAY_WITHIN272,29845
#define TEST_ASSERT_INT16_ARRAY_WITHIN(TEST_ASSERT_INT16_ARRAY_WITHIN273,30041
#define TEST_ASSERT_INT32_ARRAY_WITHIN(TEST_ASSERT_INT32_ARRAY_WITHIN274,30238
#define TEST_ASSERT_INT64_ARRAY_WITHIN(TEST_ASSERT_INT64_ARRAY_WITHIN275,30435
#define TEST_ASSERT_UINT_ARRAY_WITHIN(TEST_ASSERT_UINT_ARRAY_WITHIN276,30632
#define TEST_ASSERT_UINT8_ARRAY_WITHIN(TEST_ASSERT_UINT8_ARRAY_WITHIN277,30828
#define TEST_ASSERT_UINT16_ARRAY_WITHIN(TEST_ASSERT_UINT16_ARRAY_WITHIN278,31025
#define TEST_ASSERT_UINT32_ARRAY_WITHIN(TEST_ASSERT_UINT32_ARRAY_WITHIN279,31223
#define TEST_ASSERT_UINT64_ARRAY_WITHIN(TEST_ASSERT_UINT64_ARRAY_WITHIN280,31421
#define TEST_ASSERT_size_t_ARRAY_WITHIN(TEST_ASSERT_size_t_ARRAY_WITHIN281,31619
#define TEST_ASSERT_HEX_ARRAY_WITHIN(TEST_ASSERT_HEX_ARRAY_WITHIN282,31815
#define TEST_ASSERT_HEX8_ARRAY_WITHIN(TEST_ASSERT_HEX8_ARRAY_WITHIN283,32012
#define TEST_ASSERT_HEX16_ARRAY_WITHIN(TEST_ASSERT_HEX16_ARRAY_WITHIN284,32208
#define TEST_ASSERT_HEX32_ARRAY_WITHIN(TEST_ASSERT_HEX32_ARRAY_WITHIN285,32405
#define TEST_ASSERT_HEX64_ARRAY_WITHIN(TEST_ASSERT_HEX64_ARRAY_WITHIN286,32602
#define TEST_ASSERT_CHAR_ARRAY_WITHIN(TEST_ASSERT_CHAR_ARRAY_WITHIN287,32799
#define TEST_ASSERT_EQUAL_PTR(TEST_ASSERT_EQUAL_PTR291,33023
#define TEST_ASSERT_EQUAL_STRING(TEST_ASSERT_EQUAL_STRING292,33188
#define TEST_ASSERT_EQUAL_STRING_LEN(TEST_ASSERT_EQUAL_STRING_LEN293,33356
#define TEST_ASSERT_EQUAL_MEMORY(TEST_ASSERT_EQUAL_MEMORY294,33535
#define TEST_ASSERT_EQUAL_INT_ARRAY(TEST_ASSERT_EQUAL_INT_ARRAY297,33724
#define TEST_ASSERT_EQUAL_INT8_ARRAY(TEST_ASSERT_EQUAL_INT8_ARRAY298,33911
#define TEST_ASSERT_EQUAL_INT16_ARRAY(TEST_ASSERT_EQUAL_INT16_ARRAY299,34099
#define TEST_ASSERT_EQUAL_INT32_ARRAY(TEST_ASSERT_EQUAL_INT32_ARRAY300,34288
#define TEST_ASSERT_EQUAL_INT64_ARRAY(TEST_ASSERT_EQUAL_INT64_ARRAY301,34477
#define TEST_ASSERT_EQUAL_UINT_ARRAY(TEST_ASSERT_EQUAL_UINT_ARRAY302,34666
#define TEST_ASSERT_EQUAL_UINT8_ARRAY(TEST_ASSERT_EQUAL_UINT8_ARRAY303,34854
#define TEST_ASSERT_EQUAL_UINT16_ARRAY(TEST_ASSERT_EQUAL_UINT16_ARRAY304,35043
#define TEST_ASSERT_EQUAL_UINT32_ARRAY(TEST_ASSERT_EQUAL_UINT32_ARRAY305,35233
#define TEST_ASSERT_EQUAL_UINT64_ARRAY(TEST_ASSERT_EQUAL_UINT64_ARRAY306,35423
#define TEST_ASSERT_EQUAL_size_t_ARRAY(TEST_ASSERT_EQUAL_size_t_ARRAY307,35613
#define TEST_ASSERT_EQUAL_HEX_ARRAY(TEST_ASSERT_EQUAL_HEX_ARRAY308,35801
#define TEST_ASSERT_EQUAL_HEX8_ARRAY(TEST_ASSERT_EQUAL_HEX8_ARRAY309,35990
#define TEST_ASSERT_EQUAL_HEX16_ARRAY(TEST_ASSERT_EQUAL_HEX16_ARRAY310,36178
#define TEST_ASSERT_EQUAL_HEX32_ARRAY(TEST_ASSERT_EQUAL_HEX32_ARRAY311,36367
#define TEST_ASSERT_EQUAL_HEX64_ARRAY(TEST_ASSERT_EQUAL_HEX64_ARRAY312,36556
#define TEST_ASSERT_EQUAL_PTR_ARRAY(TEST_ASSERT_EQUAL_PTR_ARRAY313,36745
#define TEST_ASSERT_EQUAL_STRING_ARRAY(TEST_ASSERT_EQUAL_STRING_ARRAY314,36932
#define TEST_ASSERT_EQUAL_MEMORY_ARRAY(TEST_ASSERT_EQUAL_MEMORY_ARRAY315,37122
#define TEST_ASSERT_EQUAL_CHAR_ARRAY(TEST_ASSERT_EQUAL_CHAR_ARRAY316,37319
#define TEST_ASSERT_EACH_EQUAL_INT(TEST_ASSERT_EACH_EQUAL_INT319,37546
#define TEST_ASSERT_EACH_EQUAL_INT8(TEST_ASSERT_EACH_EQUAL_INT8320,37732
#define TEST_ASSERT_EACH_EQUAL_INT16(TEST_ASSERT_EACH_EQUAL_INT16321,37919
#define TEST_ASSERT_EACH_EQUAL_INT32(TEST_ASSERT_EACH_EQUAL_INT32322,38107
#define TEST_ASSERT_EACH_EQUAL_INT64(TEST_ASSERT_EACH_EQUAL_INT64323,38295
#define TEST_ASSERT_EACH_EQUAL_UINT(TEST_ASSERT_EACH_EQUAL_UINT324,38483
#define TEST_ASSERT_EACH_EQUAL_UINT8(TEST_ASSERT_EACH_EQUAL_UINT8325,38670
#define TEST_ASSERT_EACH_EQUAL_UINT16(TEST_ASSERT_EACH_EQUAL_UINT16326,38858
#define TEST_ASSERT_EACH_EQUAL_UINT32(TEST_ASSERT_EACH_EQUAL_UINT32327,39047
#define TEST_ASSERT_EACH_EQUAL_UINT64(TEST_ASSERT_EACH_EQUAL_UINT64328,39236
#define TEST_ASSERT_EACH_EQUAL_size_t(TEST_ASSERT_EACH_EQUAL_size_t329,39425
#define TEST_ASSERT_EACH_EQUAL_HEX(TEST_ASSERT_EACH_EQUAL_HEX330,39612
#define TEST_ASSERT_EACH_EQUAL_HEX8(TEST_ASSERT_EACH_EQUAL_HEX8331,39800
#define TEST_ASSERT_EACH_EQUAL_HEX16(TEST_ASSERT_EACH_EQUAL_HEX16332,39987
#define TEST_ASSERT_EACH_EQUAL_HEX32(TEST_ASSERT_EACH_EQUAL_HEX32333,40175
#define TEST_ASSERT_EACH_EQUAL_HEX64(TEST_ASSERT_EACH_EQUAL_HEX64334,40363
#define TEST_ASSERT_EACH_EQUAL_PTR(TEST_ASSERT_EACH_EQUAL_PTR335,40551
#define TEST_ASSERT_EACH_EQUAL_STRING(TEST_ASSERT_EACH_EQUAL_STRING336,40737
#define TEST_ASSERT_EACH_EQUAL_MEMORY(TEST_ASSERT_EACH_EQUAL_MEMORY337,40926
#define TEST_ASSERT_EACH_EQUAL_CHAR(TEST_ASSERT_EACH_EQUAL_CHAR338,41122
#define TEST_ASSERT_FLOAT_WITHIN(TEST_ASSERT_FLOAT_WITHIN341,41344
#define TEST_ASSERT_EQUAL_FLOAT(TEST_ASSERT_EQUAL_FLOAT342,41521
#define TEST_ASSERT_EQUAL_FLOAT_ARRAY(TEST_ASSERT_EQUAL_FLOAT_ARRAY343,41688
#define TEST_ASSERT_EACH_EQUAL_FLOAT(TEST_ASSERT_EACH_EQUAL_FLOAT344,41877
#define TEST_ASSERT_FLOAT_IS_INF(TEST_ASSERT_FLOAT_IS_INF345,42065
#define TEST_ASSERT_FLOAT_IS_NEG_INF(TEST_ASSERT_FLOAT_IS_NEG_INF346,42221
#define TEST_ASSERT_FLOAT_IS_NAN(TEST_ASSERT_FLOAT_IS_NAN347,42381
#define TEST_ASSERT_FLOAT_IS_DETERMINATE(TEST_ASSERT_FLOAT_IS_DETERMINATE348,42537
#define TEST_ASSERT_FLOAT_IS_NOT_INF(TEST_ASSERT_FLOAT_IS_NOT_INF349,42701
#define TEST_ASSERT_FLOAT_IS_NOT_NEG_INF(TEST_ASSERT_FLOAT_IS_NOT_NEG_INF350,42861
#define TEST_ASSERT_FLOAT_IS_NOT_NAN(TEST_ASSERT_FLOAT_IS_NOT_NAN351,43025
#define TEST_ASSERT_FLOAT_IS_NOT_DETERMINATE(TEST_ASSERT_FLOAT_IS_NOT_DETERMINATE352,43185
#define TEST_ASSERT_DOUBLE_WITHIN(TEST_ASSERT_DOUBLE_WITHIN355,43380
#define TEST_ASSERT_EQUAL_DOUBLE(TEST_ASSERT_EQUAL_DOUBLE356,43558
#define TEST_ASSERT_EQUAL_DOUBLE_ARRAY(TEST_ASSERT_EQUAL_DOUBLE_ARRAY357,43726
#define TEST_ASSERT_EACH_EQUAL_DOUBLE(TEST_ASSERT_EACH_EQUAL_DOUBLE358,43916
#define TEST_ASSERT_DOUBLE_IS_INF(TEST_ASSERT_DOUBLE_IS_INF359,44105
#define TEST_ASSERT_DOUBLE_IS_NEG_INF(TEST_ASSERT_DOUBLE_IS_NEG_INF360,44262
#define TEST_ASSERT_DOUBLE_IS_NAN(TEST_ASSERT_DOUBLE_IS_NAN361,44423
#define TEST_ASSERT_DOUBLE_IS_DETERMINATE(TEST_ASSERT_DOUBLE_IS_DETERMINATE362,44580
#define TEST_ASSERT_DOUBLE_IS_NOT_INF(TEST_ASSERT_DOUBLE_IS_NOT_INF363,44745
#define TEST_ASSERT_DOUBLE_IS_NOT_NEG_INF(TEST_ASSERT_DOUBLE_IS_NOT_NEG_INF364,44906
#define TEST_ASSERT_DOUBLE_IS_NOT_NAN(TEST_ASSERT_DOUBLE_IS_NOT_NAN365,45071
#define TEST_ASSERT_DOUBLE_IS_NOT_DETERMINATE(TEST_ASSERT_DOUBLE_IS_NOT_DETERMINATE366,45232
#define TEST_ASSERT_EQUAL(TEST_ASSERT_EQUAL370,45448
#define TEST_ASSERT_NOT_EQUAL(TEST_ASSERT_NOT_EQUAL371,45613
#define TEST_ASSERT_EQUAL(TEST_ASSERT_EQUAL374,45826
#define TEST_ASSERT_NOT_EQUAL(TEST_ASSERT_NOT_EQUAL375,45991
#define TEST_ASSERT_EQUAL(TEST_ASSERT_EQUAL378,46175
#define TEST_ASSERT_NOT_EQUAL(TEST_ASSERT_NOT_EQUAL379,46363
#define TEST_ASSERT_EQUAL(TEST_ASSERT_EQUAL382,46547
#define TEST_ASSERT_NOT_EQUAL(TEST_ASSERT_NOT_EQUAL383,46719
#define TEST_ASSERT_EQUAL(TEST_ASSERT_EQUAL386,46933
#define TEST_ASSERT_NOT_EQUAL(TEST_ASSERT_NOT_EQUAL387,47080
#define TEST_ASSERT_MESSAGE(TEST_ASSERT_MESSAGE395,47411
#define TEST_ASSERT_TRUE_MESSAGE(TEST_ASSERT_TRUE_MESSAGE396,47569
#define TEST_ASSERT_UNLESS_MESSAGE(TEST_ASSERT_UNLESS_MESSAGE397,47727
#define TEST_ASSERT_FALSE_MESSAGE(TEST_ASSERT_FALSE_MESSAGE398,47885
#define TEST_ASSERT_NULL_MESSAGE(TEST_ASSERT_NULL_MESSAGE399,48043
#define TEST_ASSERT_NOT_NULL_MESSAGE(TEST_ASSERT_NOT_NULL_MESSAGE400,48201
#define TEST_ASSERT_EMPTY_MESSAGE(TEST_ASSERT_EMPTY_MESSAGE401,48359
#define TEST_ASSERT_NOT_EMPTY_MESSAGE(TEST_ASSERT_NOT_EMPTY_MESSAGE402,48518
#define TEST_ASSERT_EQUAL_INT_MESSAGE(TEST_ASSERT_EQUAL_INT_MESSAGE405,48708
#define TEST_ASSERT_EQUAL_INT8_MESSAGE(TEST_ASSERT_EQUAL_INT8_MESSAGE406,48878
#define TEST_ASSERT_EQUAL_INT16_MESSAGE(TEST_ASSERT_EQUAL_INT16_MESSAGE407,49049
#define TEST_ASSERT_EQUAL_INT32_MESSAGE(TEST_ASSERT_EQUAL_INT32_MESSAGE408,49221
#define TEST_ASSERT_EQUAL_INT64_MESSAGE(TEST_ASSERT_EQUAL_INT64_MESSAGE409,49393
#define TEST_ASSERT_EQUAL_UINT_MESSAGE(TEST_ASSERT_EQUAL_UINT_MESSAGE410,49565
#define TEST_ASSERT_EQUAL_UINT8_MESSAGE(TEST_ASSERT_EQUAL_UINT8_MESSAGE411,49737
#define TEST_ASSERT_EQUAL_UINT16_MESSAGE(TEST_ASSERT_EQUAL_UINT16_MESSAGE412,49910
#define TEST_ASSERT_EQUAL_UINT32_MESSAGE(TEST_ASSERT_EQUAL_UINT32_MESSAGE413,50084
#define TEST_ASSERT_EQUAL_UINT64_MESSAGE(TEST_ASSERT_EQUAL_UINT64_MESSAGE414,50258
#define TEST_ASSERT_EQUAL_size_t_MESSAGE(TEST_ASSERT_EQUAL_size_t_MESSAGE415,50432
#define TEST_ASSERT_EQUAL_HEX_MESSAGE(TEST_ASSERT_EQUAL_HEX_MESSAGE416,50604
#define TEST_ASSERT_EQUAL_HEX8_MESSAGE(TEST_ASSERT_EQUAL_HEX8_MESSAGE417,50776
#define TEST_ASSERT_EQUAL_HEX16_MESSAGE(TEST_ASSERT_EQUAL_HEX16_MESSAGE418,50948
#define TEST_ASSERT_EQUAL_HEX32_MESSAGE(TEST_ASSERT_EQUAL_HEX32_MESSAGE419,51120
#define TEST_ASSERT_EQUAL_HEX64_MESSAGE(TEST_ASSERT_EQUAL_HEX64_MESSAGE420,51292
#define TEST_ASSERT_BITS_MESSAGE(TEST_ASSERT_BITS_MESSAGE421,51464
#define TEST_ASSERT_BITS_HIGH_MESSAGE(TEST_ASSERT_BITS_HIGH_MESSAGE422,51637
#define TEST_ASSERT_BITS_LOW_MESSAGE(TEST_ASSERT_BITS_LOW_MESSAGE423,51818
#define TEST_ASSERT_BIT_HIGH_MESSAGE(TEST_ASSERT_BIT_HIGH_MESSAGE424,51998
#define TEST_ASSERT_BIT_LOW_MESSAGE(TEST_ASSERT_BIT_LOW_MESSAGE425,52199
#define TEST_ASSERT_EQUAL_CHAR_MESSAGE(TEST_ASSERT_EQUAL_CHAR_MESSAGE426,52399
#define TEST_ASSERT_NOT_EQUAL_INT_MESSAGE(TEST_ASSERT_NOT_EQUAL_INT_MESSAGE429,52613
#define TEST_ASSERT_NOT_EQUAL_INT8_MESSAGE(TEST_ASSERT_NOT_EQUAL_INT8_MESSAGE430,52788
#define TEST_ASSERT_NOT_EQUAL_INT16_MESSAGE(TEST_ASSERT_NOT_EQUAL_INT16_MESSAGE431,52964
#define TEST_ASSERT_NOT_EQUAL_INT32_MESSAGE(TEST_ASSERT_NOT_EQUAL_INT32_MESSAGE432,53141
#define TEST_ASSERT_NOT_EQUAL_INT64_MESSAGE(TEST_ASSERT_NOT_EQUAL_INT64_MESSAGE433,53318
#define TEST_ASSERT_NOT_EQUAL_UINT_MESSAGE(TEST_ASSERT_NOT_EQUAL_UINT_MESSAGE434,53495
#define TEST_ASSERT_NOT_EQUAL_UINT8_MESSAGE(TEST_ASSERT_NOT_EQUAL_UINT8_MESSAGE435,53671
#define TEST_ASSERT_NOT_EQUAL_UINT16_MESSAGE(TEST_ASSERT_NOT_EQUAL_UINT16_MESSAGE436,53848
#define TEST_ASSERT_NOT_EQUAL_UINT32_MESSAGE(TEST_ASSERT_NOT_EQUAL_UINT32_MESSAGE437,54026
#define TEST_ASSERT_NOT_EQUAL_UINT64_MESSAGE(TEST_ASSERT_NOT_EQUAL_UINT64_MESSAGE438,54204
#define TEST_ASSERT_NOT_EQUAL_size_t_MESSAGE(TEST_ASSERT_NOT_EQUAL_size_t_MESSAGE439,54382
#define TEST_ASSERT_NOT_EQUAL_HEX8_MESSAGE(TEST_ASSERT_NOT_EQUAL_HEX8_MESSAGE440,54558
#define TEST_ASSERT_NOT_EQUAL_HEX16_MESSAGE(TEST_ASSERT_NOT_EQUAL_HEX16_MESSAGE441,54734
#define TEST_ASSERT_NOT_EQUAL_HEX32_MESSAGE(TEST_ASSERT_NOT_EQUAL_HEX32_MESSAGE442,54911
#define TEST_ASSERT_NOT_EQUAL_HEX64_MESSAGE(TEST_ASSERT_NOT_EQUAL_HEX64_MESSAGE443,55088
#define TEST_ASSERT_NOT_EQUAL_CHAR_MESSAGE(TEST_ASSERT_NOT_EQUAL_CHAR_MESSAGE444,55265
#define TEST_ASSERT_GREATER_THAN_MESSAGE(TEST_ASSERT_GREATER_THAN_MESSAGE448,55496
#define TEST_ASSERT_GREATER_THAN_INT_MESSAGE(TEST_ASSERT_GREATER_THAN_INT_MESSAGE449,55674
#define TEST_ASSERT_GREATER_THAN_INT8_MESSAGE(TEST_ASSERT_GREATER_THAN_INT8_MESSAGE450,55852
#define TEST_ASSERT_GREATER_THAN_INT16_MESSAGE(TEST_ASSERT_GREATER_THAN_INT16_MESSAGE451,56031
#define TEST_ASSERT_GREATER_THAN_INT32_MESSAGE(TEST_ASSERT_GREATER_THAN_INT32_MESSAGE452,56211
#define TEST_ASSERT_GREATER_THAN_INT64_MESSAGE(TEST_ASSERT_GREATER_THAN_INT64_MESSAGE453,56391
#define TEST_ASSERT_GREATER_THAN_UINT_MESSAGE(TEST_ASSERT_GREATER_THAN_UINT_MESSAGE454,56571
#define TEST_ASSERT_GREATER_THAN_UINT8_MESSAGE(TEST_ASSERT_GREATER_THAN_UINT8_MESSAGE455,56750
#define TEST_ASSERT_GREATER_THAN_UINT16_MESSAGE(TEST_ASSERT_GREATER_THAN_UINT16_MESSAGE456,56930
#define TEST_ASSERT_GREATER_THAN_UINT32_MESSAGE(TEST_ASSERT_GREATER_THAN_UINT32_MESSAGE457,57111
#define TEST_ASSERT_GREATER_THAN_UINT64_MESSAGE(TEST_ASSERT_GREATER_THAN_UINT64_MESSAGE458,57292
#define TEST_ASSERT_GREATER_THAN_size_t_MESSAGE(TEST_ASSERT_GREATER_THAN_size_t_MESSAGE459,57473
#define TEST_ASSERT_GREATER_THAN_HEX8_MESSAGE(TEST_ASSERT_GREATER_THAN_HEX8_MESSAGE460,57652
#define TEST_ASSERT_GREATER_THAN_HEX16_MESSAGE(TEST_ASSERT_GREATER_THAN_HEX16_MESSAGE461,57831
#define TEST_ASSERT_GREATER_THAN_HEX32_MESSAGE(TEST_ASSERT_GREATER_THAN_HEX32_MESSAGE462,58011
#define TEST_ASSERT_GREATER_THAN_HEX64_MESSAGE(TEST_ASSERT_GREATER_THAN_HEX64_MESSAGE463,58191
#define TEST_ASSERT_GREATER_THAN_CHAR_MESSAGE(TEST_ASSERT_GREATER_THAN_CHAR_MESSAGE464,58371
#define TEST_ASSERT_LESS_THAN_MESSAGE(TEST_ASSERT_LESS_THAN_MESSAGE466,58551
#define TEST_ASSERT_LESS_THAN_INT_MESSAGE(TEST_ASSERT_LESS_THAN_INT_MESSAGE467,58729
#define TEST_ASSERT_LESS_THAN_INT8_MESSAGE(TEST_ASSERT_LESS_THAN_INT8_MESSAGE468,58907
#define TEST_ASSERT_LESS_THAN_INT16_MESSAGE(TEST_ASSERT_LESS_THAN_INT16_MESSAGE469,59086
#define TEST_ASSERT_LESS_THAN_INT32_MESSAGE(TEST_ASSERT_LESS_THAN_INT32_MESSAGE470,59266
#define TEST_ASSERT_LESS_THAN_INT64_MESSAGE(TEST_ASSERT_LESS_THAN_INT64_MESSAGE471,59446
#define TEST_ASSERT_LESS_THAN_UINT_MESSAGE(TEST_ASSERT_LESS_THAN_UINT_MESSAGE472,59626
#define TEST_ASSERT_LESS_THAN_UINT8_MESSAGE(TEST_ASSERT_LESS_THAN_UINT8_MESSAGE473,59805
#define TEST_ASSERT_LESS_THAN_UINT16_MESSAGE(TEST_ASSERT_LESS_THAN_UINT16_MESSAGE474,59985
#define TEST_ASSERT_LESS_THAN_UINT32_MESSAGE(TEST_ASSERT_LESS_THAN_UINT32_MESSAGE475,60166
#define TEST_ASSERT_LESS_THAN_UINT64_MESSAGE(TEST_ASSERT_LESS_THAN_UINT64_MESSAGE476,60347
#define TEST_ASSERT_LESS_THAN_size_t_MESSAGE(TEST_ASSERT_LESS_THAN_size_t_MESSAGE477,60528
#define TEST_ASSERT_LESS_THAN_HEX8_MESSAGE(TEST_ASSERT_LESS_THAN_HEX8_MESSAGE478,60707
#define TEST_ASSERT_LESS_THAN_HEX16_MESSAGE(TEST_ASSERT_LESS_THAN_HEX16_MESSAGE479,60886
#define TEST_ASSERT_LESS_THAN_HEX32_MESSAGE(TEST_ASSERT_LESS_THAN_HEX32_MESSAGE480,61066
#define TEST_ASSERT_LESS_THAN_HEX64_MESSAGE(TEST_ASSERT_LESS_THAN_HEX64_MESSAGE481,61246
#define TEST_ASSERT_LESS_THAN_CHAR_MESSAGE(TEST_ASSERT_LESS_THAN_CHAR_MESSAGE482,61426
#define TEST_ASSERT_GREATER_OR_EQUAL_MESSAGE(TEST_ASSERT_GREATER_OR_EQUAL_MESSAGE484,61606
#define TEST_ASSERT_GREATER_OR_EQUAL_INT_MESSAGE(TEST_ASSERT_GREATER_OR_EQUAL_INT_MESSAGE485,61788
#define TEST_ASSERT_GREATER_OR_EQUAL_INT8_MESSAGE(TEST_ASSERT_GREATER_OR_EQUAL_INT8_MESSAGE486,61970
#define TEST_ASSERT_GREATER_OR_EQUAL_INT16_MESSAGE(TEST_ASSERT_GREATER_OR_EQUAL_INT16_MESSAGE487,62153
#define TEST_ASSERT_GREATER_OR_EQUAL_INT32_MESSAGE(TEST_ASSERT_GREATER_OR_EQUAL_INT32_MESSAGE488,62337
#define TEST_ASSERT_GREATER_OR_EQUAL_INT64_MESSAGE(TEST_ASSERT_GREATER_OR_EQUAL_INT64_MESSAGE489,62521
#define TEST_ASSERT_GREATER_OR_EQUAL_UINT_MESSAGE(TEST_ASSERT_GREATER_OR_EQUAL_UINT_MESSAGE490,62705
#define TEST_ASSERT_GREATER_OR_EQUAL_UINT8_MESSAGE(TEST_ASSERT_GREATER_OR_EQUAL_UINT8_MESSAGE491,62888
#define TEST_ASSERT_GREATER_OR_EQUAL_UINT16_MESSAGE(TEST_ASSERT_GREATER_OR_EQUAL_UINT16_MESSAGE492,63072
#define TEST_ASSERT_GREATER_OR_EQUAL_UINT32_MESSAGE(TEST_ASSERT_GREATER_OR_EQUAL_UINT32_MESSAGE493,63257
#define TEST_ASSERT_GREATER_OR_EQUAL_UINT64_MESSAGE(TEST_ASSERT_GREATER_OR_EQUAL_UINT64_MESSAGE494,63442
#define TEST_ASSERT_GREATER_OR_EQUAL_size_t_MESSAGE(TEST_ASSERT_GREATER_OR_EQUAL_size_t_MESSAGE495,63627
#define TEST_ASSERT_GREATER_OR_EQUAL_HEX8_MESSAGE(TEST_ASSERT_GREATER_OR_EQUAL_HEX8_MESSAGE496,63810
#define TEST_ASSERT_GREATER_OR_EQUAL_HEX16_MESSAGE(TEST_ASSERT_GREATER_OR_EQUAL_HEX16_MESSAGE497,63993
#define TEST_ASSERT_GREATER_OR_EQUAL_HEX32_MESSAGE(TEST_ASSERT_GREATER_OR_EQUAL_HEX32_MESSAGE498,64177
#define TEST_ASSERT_GREATER_OR_EQUAL_HEX64_MESSAGE(TEST_ASSERT_GREATER_OR_EQUAL_HEX64_MESSAGE499,64361
#define TEST_ASSERT_GREATER_OR_EQUAL_CHAR_MESSAGE(TEST_ASSERT_GREATER_OR_EQUAL_CHAR_MESSAGE500,64545
#define TEST_ASSERT_LESS_OR_EQUAL_MESSAGE(TEST_ASSERT_LESS_OR_EQUAL_MESSAGE502,64729
#define TEST_ASSERT_LESS_OR_EQUAL_INT_MESSAGE(TEST_ASSERT_LESS_OR_EQUAL_INT_MESSAGE503,64911
#define TEST_ASSERT_LESS_OR_EQUAL_INT8_MESSAGE(TEST_ASSERT_LESS_OR_EQUAL_INT8_MESSAGE504,65093
#define TEST_ASSERT_LESS_OR_EQUAL_INT16_MESSAGE(TEST_ASSERT_LESS_OR_EQUAL_INT16_MESSAGE505,65276
#define TEST_ASSERT_LESS_OR_EQUAL_INT32_MESSAGE(TEST_ASSERT_LESS_OR_EQUAL_INT32_MESSAGE506,65460
#define TEST_ASSERT_LESS_OR_EQUAL_INT64_MESSAGE(TEST_ASSERT_LESS_OR_EQUAL_INT64_MESSAGE507,65644
#define TEST_ASSERT_LESS_OR_EQUAL_UINT_MESSAGE(TEST_ASSERT_LESS_OR_EQUAL_UINT_MESSAGE508,65828
#define TEST_ASSERT_LESS_OR_EQUAL_UINT8_MESSAGE(TEST_ASSERT_LESS_OR_EQUAL_UINT8_MESSAGE509,66011
#define TEST_ASSERT_LESS_OR_EQUAL_UINT16_MESSAGE(TEST_ASSERT_LESS_OR_EQUAL_UINT16_MESSAGE510,66195
#define TEST_ASSERT_LESS_OR_EQUAL_UINT32_MESSAGE(TEST_ASSERT_LESS_OR_EQUAL_UINT32_MESSAGE511,66380
#define TEST_ASSERT_LESS_OR_EQUAL_UINT64_MESSAGE(TEST_ASSERT_LESS_OR_EQUAL_UINT64_MESSAGE512,66565
#define TEST_ASSERT_LESS_OR_EQUAL_size_t_MESSAGE(TEST_ASSERT_LESS_OR_EQUAL_size_t_MESSAGE513,66750
#define TEST_ASSERT_LESS_OR_EQUAL_HEX8_MESSAGE(TEST_ASSERT_LESS_OR_EQUAL_HEX8_MESSAGE514,66933
#define TEST_ASSERT_LESS_OR_EQUAL_HEX16_MESSAGE(TEST_ASSERT_LESS_OR_EQUAL_HEX16_MESSAGE515,67116
#define TEST_ASSERT_LESS_OR_EQUAL_HEX32_MESSAGE(TEST_ASSERT_LESS_OR_EQUAL_HEX32_MESSAGE516,67300
#define TEST_ASSERT_LESS_OR_EQUAL_HEX64_MESSAGE(TEST_ASSERT_LESS_OR_EQUAL_HEX64_MESSAGE517,67484
#define TEST_ASSERT_LESS_OR_EQUAL_CHAR_MESSAGE(TEST_ASSERT_LESS_OR_EQUAL_CHAR_MESSAGE518,67668
#define TEST_ASSERT_INT_WITHIN_MESSAGE(TEST_ASSERT_INT_WITHIN_MESSAGE521,67888
#define TEST_ASSERT_INT8_WITHIN_MESSAGE(TEST_ASSERT_INT8_WITHIN_MESSAGE522,68068
#define TEST_ASSERT_INT16_WITHIN_MESSAGE(TEST_ASSERT_INT16_WITHIN_MESSAGE523,68249
#define TEST_ASSERT_INT32_WITHIN_MESSAGE(TEST_ASSERT_INT32_WITHIN_MESSAGE524,68431
#define TEST_ASSERT_INT64_WITHIN_MESSAGE(TEST_ASSERT_INT64_WITHIN_MESSAGE525,68613
#define TEST_ASSERT_UINT_WITHIN_MESSAGE(TEST_ASSERT_UINT_WITHIN_MESSAGE526,68795
#define TEST_ASSERT_UINT8_WITHIN_MESSAGE(TEST_ASSERT_UINT8_WITHIN_MESSAGE527,68976
#define TEST_ASSERT_UINT16_WITHIN_MESSAGE(TEST_ASSERT_UINT16_WITHIN_MESSAGE528,69158
#define TEST_ASSERT_UINT32_WITHIN_MESSAGE(TEST_ASSERT_UINT32_WITHIN_MESSAGE529,69341
#define TEST_ASSERT_UINT64_WITHIN_MESSAGE(TEST_ASSERT_UINT64_WITHIN_MESSAGE530,69524
#define TEST_ASSERT_size_t_WITHIN_MESSAGE(TEST_ASSERT_size_t_WITHIN_MESSAGE531,69707
#define TEST_ASSERT_HEX_WITHIN_MESSAGE(TEST_ASSERT_HEX_WITHIN_MESSAGE532,69888
#define TEST_ASSERT_HEX8_WITHIN_MESSAGE(TEST_ASSERT_HEX8_WITHIN_MESSAGE533,70070
#define TEST_ASSERT_HEX16_WITHIN_MESSAGE(TEST_ASSERT_HEX16_WITHIN_MESSAGE534,70251
#define TEST_ASSERT_HEX32_WITHIN_MESSAGE(TEST_ASSERT_HEX32_WITHIN_MESSAGE535,70433
#define TEST_ASSERT_HEX64_WITHIN_MESSAGE(TEST_ASSERT_HEX64_WITHIN_MESSAGE536,70615
#define TEST_ASSERT_CHAR_WITHIN_MESSAGE(TEST_ASSERT_CHAR_WITHIN_MESSAGE537,70797
#define TEST_ASSERT_INT_ARRAY_WITHIN_MESSAGE(TEST_ASSERT_INT_ARRAY_WITHIN_MESSAGE540,71021
#define TEST_ASSERT_INT8_ARRAY_WITHIN_MESSAGE(TEST_ASSERT_INT8_ARRAY_WITHIN_MESSAGE541,71221
#define TEST_ASSERT_INT16_ARRAY_WITHIN_MESSAGE(TEST_ASSERT_INT16_ARRAY_WITHIN_MESSAGE542,71422
#define TEST_ASSERT_INT32_ARRAY_WITHIN_MESSAGE(TEST_ASSERT_INT32_ARRAY_WITHIN_MESSAGE543,71624
#define TEST_ASSERT_INT64_ARRAY_WITHIN_MESSAGE(TEST_ASSERT_INT64_ARRAY_WITHIN_MESSAGE544,71826
#define TEST_ASSERT_UINT_ARRAY_WITHIN_MESSAGE(TEST_ASSERT_UINT_ARRAY_WITHIN_MESSAGE545,72028
#define TEST_ASSERT_UINT8_ARRAY_WITHIN_MESSAGE(TEST_ASSERT_UINT8_ARRAY_WITHIN_MESSAGE546,72229
#define TEST_ASSERT_UINT16_ARRAY_WITHIN_MESSAGE(TEST_ASSERT_UINT16_ARRAY_WITHIN_MESSAGE547,72431
#define TEST_ASSERT_UINT32_ARRAY_WITHIN_MESSAGE(TEST_ASSERT_UINT32_ARRAY_WITHIN_MESSAGE548,72634
#define TEST_ASSERT_UINT64_ARRAY_WITHIN_MESSAGE(TEST_ASSERT_UINT64_ARRAY_WITHIN_MESSAGE549,72837
#define TEST_ASSERT_size_t_ARRAY_WITHIN_MESSAGE(TEST_ASSERT_size_t_ARRAY_WITHIN_MESSAGE550,73040
#define TEST_ASSERT_HEX_ARRAY_WITHIN_MESSAGE(TEST_ASSERT_HEX_ARRAY_WITHIN_MESSAGE551,73241
#define TEST_ASSERT_HEX8_ARRAY_WITHIN_MESSAGE(TEST_ASSERT_HEX8_ARRAY_WITHIN_MESSAGE552,73443
#define TEST_ASSERT_HEX16_ARRAY_WITHIN_MESSAGE(TEST_ASSERT_HEX16_ARRAY_WITHIN_MESSAGE553,73644
#define TEST_ASSERT_HEX32_ARRAY_WITHIN_MESSAGE(TEST_ASSERT_HEX32_ARRAY_WITHIN_MESSAGE554,73846
#define TEST_ASSERT_HEX64_ARRAY_WITHIN_MESSAGE(TEST_ASSERT_HEX64_ARRAY_WITHIN_MESSAGE555,74048
#define TEST_ASSERT_CHAR_ARRAY_WITHIN_MESSAGE(TEST_ASSERT_CHAR_ARRAY_WITHIN_MESSAGE556,74250
#define TEST_ASSERT_EQUAL_PTR_MESSAGE(TEST_ASSERT_EQUAL_PTR_MESSAGE560,74479
#define TEST_ASSERT_EQUAL_STRING_MESSAGE(TEST_ASSERT_EQUAL_STRING_MESSAGE561,74649
#define TEST_ASSERT_EQUAL_STRING_LEN_MESSAGE(TEST_ASSERT_EQUAL_STRING_LEN_MESSAGE562,74822
#define TEST_ASSERT_EQUAL_MEMORY_MESSAGE(TEST_ASSERT_EQUAL_MEMORY_MESSAGE563,75006
#define TEST_ASSERT_EQUAL_INT_ARRAY_MESSAGE(TEST_ASSERT_EQUAL_INT_ARRAY_MESSAGE566,75200
#define TEST_ASSERT_EQUAL_INT8_ARRAY_MESSAGE(TEST_ASSERT_EQUAL_INT8_ARRAY_MESSAGE567,75392
#define TEST_ASSERT_EQUAL_INT16_ARRAY_MESSAGE(TEST_ASSERT_EQUAL_INT16_ARRAY_MESSAGE568,75585
#define TEST_ASSERT_EQUAL_INT32_ARRAY_MESSAGE(TEST_ASSERT_EQUAL_INT32_ARRAY_MESSAGE569,75779
#define TEST_ASSERT_EQUAL_INT64_ARRAY_MESSAGE(TEST_ASSERT_EQUAL_INT64_ARRAY_MESSAGE570,75973
#define TEST_ASSERT_EQUAL_UINT_ARRAY_MESSAGE(TEST_ASSERT_EQUAL_UINT_ARRAY_MESSAGE571,76167
#define TEST_ASSERT_EQUAL_UINT8_ARRAY_MESSAGE(TEST_ASSERT_EQUAL_UINT8_ARRAY_MESSAGE572,76360
#define TEST_ASSERT_EQUAL_UINT16_ARRAY_MESSAGE(TEST_ASSERT_EQUAL_UINT16_ARRAY_MESSAGE573,76554
#define TEST_ASSERT_EQUAL_UINT32_ARRAY_MESSAGE(TEST_ASSERT_EQUAL_UINT32_ARRAY_MESSAGE574,76749
#define TEST_ASSERT_EQUAL_UINT64_ARRAY_MESSAGE(TEST_ASSERT_EQUAL_UINT64_ARRAY_MESSAGE575,76944
#define TEST_ASSERT_EQUAL_size_t_ARRAY_MESSAGE(TEST_ASSERT_EQUAL_size_t_ARRAY_MESSAGE576,77139
#define TEST_ASSERT_EQUAL_HEX_ARRAY_MESSAGE(TEST_ASSERT_EQUAL_HEX_ARRAY_MESSAGE577,77332
#define TEST_ASSERT_EQUAL_HEX8_ARRAY_MESSAGE(TEST_ASSERT_EQUAL_HEX8_ARRAY_MESSAGE578,77526
#define TEST_ASSERT_EQUAL_HEX16_ARRAY_MESSAGE(TEST_ASSERT_EQUAL_HEX16_ARRAY_MESSAGE579,77719
#define TEST_ASSERT_EQUAL_HEX32_ARRAY_MESSAGE(TEST_ASSERT_EQUAL_HEX32_ARRAY_MESSAGE580,77913
#define TEST_ASSERT_EQUAL_HEX64_ARRAY_MESSAGE(TEST_ASSERT_EQUAL_HEX64_ARRAY_MESSAGE581,78107
#define TEST_ASSERT_EQUAL_PTR_ARRAY_MESSAGE(TEST_ASSERT_EQUAL_PTR_ARRAY_MESSAGE582,78301
#define TEST_ASSERT_EQUAL_STRING_ARRAY_MESSAGE(TEST_ASSERT_EQUAL_STRING_ARRAY_MESSAGE583,78493
#define TEST_ASSERT_EQUAL_MEMORY_ARRAY_MESSAGE(TEST_ASSERT_EQUAL_MEMORY_ARRAY_MESSAGE584,78688
#define TEST_ASSERT_EQUAL_CHAR_ARRAY_MESSAGE(TEST_ASSERT_EQUAL_CHAR_ARRAY_MESSAGE585,78890
#define TEST_ASSERT_EACH_EQUAL_INT_MESSAGE(TEST_ASSERT_EACH_EQUAL_INT_MESSAGE588,79121
#define TEST_ASSERT_EACH_EQUAL_INT8_MESSAGE(TEST_ASSERT_EACH_EQUAL_INT8_MESSAGE589,79312
#define TEST_ASSERT_EACH_EQUAL_INT16_MESSAGE(TEST_ASSERT_EACH_EQUAL_INT16_MESSAGE590,79504
#define TEST_ASSERT_EACH_EQUAL_INT32_MESSAGE(TEST_ASSERT_EACH_EQUAL_INT32_MESSAGE591,79697
#define TEST_ASSERT_EACH_EQUAL_INT64_MESSAGE(TEST_ASSERT_EACH_EQUAL_INT64_MESSAGE592,79890
#define TEST_ASSERT_EACH_EQUAL_UINT_MESSAGE(TEST_ASSERT_EACH_EQUAL_UINT_MESSAGE593,80083
#define TEST_ASSERT_EACH_EQUAL_UINT8_MESSAGE(TEST_ASSERT_EACH_EQUAL_UINT8_MESSAGE594,80275
#define TEST_ASSERT_EACH_EQUAL_UINT16_MESSAGE(TEST_ASSERT_EACH_EQUAL_UINT16_MESSAGE595,80468
#define TEST_ASSERT_EACH_EQUAL_UINT32_MESSAGE(TEST_ASSERT_EACH_EQUAL_UINT32_MESSAGE596,80662
#define TEST_ASSERT_EACH_EQUAL_UINT64_MESSAGE(TEST_ASSERT_EACH_EQUAL_UINT64_MESSAGE597,80856
#define TEST_ASSERT_EACH_EQUAL_size_t_MESSAGE(TEST_ASSERT_EACH_EQUAL_size_t_MESSAGE598,81050
#define TEST_ASSERT_EACH_EQUAL_HEX_MESSAGE(TEST_ASSERT_EACH_EQUAL_HEX_MESSAGE599,81242
#define TEST_ASSERT_EACH_EQUAL_HEX8_MESSAGE(TEST_ASSERT_EACH_EQUAL_HEX8_MESSAGE600,81435
#define TEST_ASSERT_EACH_EQUAL_HEX16_MESSAGE(TEST_ASSERT_EACH_EQUAL_HEX16_MESSAGE601,81627
#define TEST_ASSERT_EACH_EQUAL_HEX32_MESSAGE(TEST_ASSERT_EACH_EQUAL_HEX32_MESSAGE602,81820
#define TEST_ASSERT_EACH_EQUAL_HEX64_MESSAGE(TEST_ASSERT_EACH_EQUAL_HEX64_MESSAGE603,82013
#define TEST_ASSERT_EACH_EQUAL_PTR_MESSAGE(TEST_ASSERT_EACH_EQUAL_PTR_MESSAGE604,82206
#define TEST_ASSERT_EACH_EQUAL_STRING_MESSAGE(TEST_ASSERT_EACH_EQUAL_STRING_MESSAGE605,82397
#define TEST_ASSERT_EACH_EQUAL_MEMORY_MESSAGE(TEST_ASSERT_EACH_EQUAL_MEMORY_MESSAGE606,82591
#define TEST_ASSERT_EACH_EQUAL_CHAR_MESSAGE(TEST_ASSERT_EACH_EQUAL_CHAR_MESSAGE607,82792
#define TEST_ASSERT_FLOAT_WITHIN_MESSAGE(TEST_ASSERT_FLOAT_WITHIN_MESSAGE610,83019
#define TEST_ASSERT_EQUAL_FLOAT_MESSAGE(TEST_ASSERT_EQUAL_FLOAT_MESSAGE611,83201
#define TEST_ASSERT_EQUAL_FLOAT_ARRAY_MESSAGE(TEST_ASSERT_EQUAL_FLOAT_ARRAY_MESSAGE612,83373
#define TEST_ASSERT_EACH_EQUAL_FLOAT_MESSAGE(TEST_ASSERT_EACH_EQUAL_FLOAT_MESSAGE613,83567
#define TEST_ASSERT_FLOAT_IS_INF_MESSAGE(TEST_ASSERT_FLOAT_IS_INF_MESSAGE614,83760
#define TEST_ASSERT_FLOAT_IS_NEG_INF_MESSAGE(TEST_ASSERT_FLOAT_IS_NEG_INF_MESSAGE615,83921
#define TEST_ASSERT_FLOAT_IS_NAN_MESSAGE(TEST_ASSERT_FLOAT_IS_NAN_MESSAGE616,84086
#define TEST_ASSERT_FLOAT_IS_DETERMINATE_MESSAGE(TEST_ASSERT_FLOAT_IS_DETERMINATE_MESSAGE617,84247
#define TEST_ASSERT_FLOAT_IS_NOT_INF_MESSAGE(TEST_ASSERT_FLOAT_IS_NOT_INF_MESSAGE618,84416
#define TEST_ASSERT_FLOAT_IS_NOT_NEG_INF_MESSAGE(TEST_ASSERT_FLOAT_IS_NOT_NEG_INF_MESSAGE619,84581
#define TEST_ASSERT_FLOAT_IS_NOT_NAN_MESSAGE(TEST_ASSERT_FLOAT_IS_NOT_NAN_MESSAGE620,84750
#define TEST_ASSERT_FLOAT_IS_NOT_DETERMINATE_MESSAGE(TEST_ASSERT_FLOAT_IS_NOT_DETERMINATE_MESSAGE621,84915
#define TEST_ASSERT_DOUBLE_WITHIN_MESSAGE(TEST_ASSERT_DOUBLE_WITHIN_MESSAGE624,85115
#define TEST_ASSERT_EQUAL_DOUBLE_MESSAGE(TEST_ASSERT_EQUAL_DOUBLE_MESSAGE625,85298
#define TEST_ASSERT_EQUAL_DOUBLE_ARRAY_MESSAGE(TEST_ASSERT_EQUAL_DOUBLE_ARRAY_MESSAGE626,85471
#define TEST_ASSERT_EACH_EQUAL_DOUBLE_MESSAGE(TEST_ASSERT_EACH_EQUAL_DOUBLE_MESSAGE627,85666
#define TEST_ASSERT_DOUBLE_IS_INF_MESSAGE(TEST_ASSERT_DOUBLE_IS_INF_MESSAGE628,85860
#define TEST_ASSERT_DOUBLE_IS_NEG_INF_MESSAGE(TEST_ASSERT_DOUBLE_IS_NEG_INF_MESSAGE629,86022
#define TEST_ASSERT_DOUBLE_IS_NAN_MESSAGE(TEST_ASSERT_DOUBLE_IS_NAN_MESSAGE630,86188
#define TEST_ASSERT_DOUBLE_IS_DETERMINATE_MESSAGE(TEST_ASSERT_DOUBLE_IS_DETERMINATE_MESSAGE631,86350
#define TEST_ASSERT_DOUBLE_IS_NOT_INF_MESSAGE(TEST_ASSERT_DOUBLE_IS_NOT_INF_MESSAGE632,86520
#define TEST_ASSERT_DOUBLE_IS_NOT_NEG_INF_MESSAGE(TEST_ASSERT_DOUBLE_IS_NOT_NEG_INF_MESSAGE633,86686
#define TEST_ASSERT_DOUBLE_IS_NOT_NAN_MESSAGE(TEST_ASSERT_DOUBLE_IS_NOT_NAN_MESSAGE634,86856
#define TEST_ASSERT_DOUBLE_IS_NOT_DETERMINATE_MESSAGE(TEST_ASSERT_DOUBLE_IS_NOT_DETERMINATE_MESSAGE635,87022
#define TEST_ASSERT_EQUAL_MESSAGE(TEST_ASSERT_EQUAL_MESSAGE639,87243
#define TEST_ASSERT_NOT_EQUAL_MESSAGE(TEST_ASSERT_NOT_EQUAL_MESSAGE640,87413
#define TEST_ASSERT_EQUAL_MESSAGE(TEST_ASSERT_EQUAL_MESSAGE643,87614
#define TEST_ASSERT_NOT_EQUAL_MESSAGE(TEST_ASSERT_NOT_EQUAL_MESSAGE644,87782
#define TEST_ASSERT_EQUAL_MESSAGE(TEST_ASSERT_EQUAL_MESSAGE647,87967
#define TEST_ASSERT_NOT_EQUAL_MESSAGE(TEST_ASSERT_NOT_EQUAL_MESSAGE648,88158
#define TEST_ASSERT_EQUAL_MESSAGE(TEST_ASSERT_EQUAL_MESSAGE651,88343
#define TEST_ASSERT_NOT_EQUAL_MESSAGE(TEST_ASSERT_NOT_EQUAL_MESSAGE652,88505
#define TEST_ASSERT_EQUAL_MESSAGE(TEST_ASSERT_EQUAL_MESSAGE655,88705
#define TEST_ASSERT_NOT_EQUAL_MESSAGE(TEST_ASSERT_NOT_EQUAL_MESSAGE656,88852

lib/lvgl/tests/unity/unity.c,10007
#define UNITY_INCLUDE_PRINT_FORMATTED UNITY_INCLUDE_PRINT_FORMATTED7,365
#define PROGMEMPROGMEM14,490
#define UNITY_FAIL_AND_BAIL UNITY_FAIL_AND_BAIL23,752
#define UNITY_IGNORE_AND_BAIL UNITY_IGNORE_AND_BAIL24,852
#define RETURN_IF_FAIL_OR_IGNORE RETURN_IF_FAIL_OR_IGNORE25,952
struct UNITY_STORAGE_T Unity;Unity27,1056
const char PROGMEM UnityStrOk[]                            = "\033[42mOK\033[00m";UnityStrOk30,1113
const char PROGMEM UnityStrPass[]                          = "\033[42mPASS\033[00m";UnityStrPass31,1196
const char PROGMEM UnityStrFail[]                          = "\033[41mFAIL\033[00m";UnityStrFail32,1281
const char PROGMEM UnityStrIgnore[]                        = "\033[43mIGNORE\033[00m";UnityStrIgnore33,1366
const char PROGMEM UnityStrOk[]                            = "OK";UnityStrOk35,1459
const char PROGMEM UnityStrPass[]                          = "PASS";UnityStrPass36,1526
const char PROGMEM UnityStrFail[]                          = "FAIL";UnityStrFail37,1595
const char PROGMEM UnityStrIgnore[]                        = "IGNORE";UnityStrIgnore38,1664
static const char PROGMEM UnityStrNull[]                   = "NULL";UnityStrNull40,1742
static const char PROGMEM UnityStrSpacer[]                 = ". ";UnityStrSpacer41,1811
static const char PROGMEM UnityStrExpected[]               = " Expected ";UnityStrExpected42,1878
static const char PROGMEM UnityStrWas[]                    = " Was ";UnityStrWas43,1953
static const char PROGMEM UnityStrGt[]                     = " to be greater than ";UnityStrGt44,2023
static const char PROGMEM UnityStrLt[]                     = " to be less than ";UnityStrLt45,2108
static const char PROGMEM UnityStrOrEqual[]                = "or equal to ";UnityStrOrEqual46,2190
static const char PROGMEM UnityStrNotEqual[]               = " to be not equal to ";UnityStrNotEqual47,2267
static const char PROGMEM UnityStrElement[]                = " Element ";UnityStrElement48,2352
static const char PROGMEM UnityStrByte[]                   = " Byte ";UnityStrByte49,2426
static const char PROGMEM UnityStrMemory[]                 = " Memory Mismatch.";UnityStrMemory50,2497
static const char PROGMEM UnityStrDelta[]                  = " Values Not Within Delta ";UnityStrDelta51,2579
static const char PROGMEM UnityStrPointless[]              = " You Asked Me To Compare Nothing, Which Was Pointless.";UnityStrPointless52,2669
static const char PROGMEM UnityStrNullPointerForExpected[] = " Expected pointer to be NULL";UnityStrNullPointerForExpected53,2788
static const char PROGMEM UnityStrNullPointerForActual[]   = " Actual pointer was NULL";UnityStrNullPointerForActual54,2881
static const char PROGMEM UnityStrNot[]                    = "Not ";UnityStrNot56,2998
static const char PROGMEM UnityStrInf[]                    = "Infinity";UnityStrInf57,3067
static const char PROGMEM UnityStrNegInf[]                 = "Negative Infinity";UnityStrNegInf58,3140
static const char PROGMEM UnityStrNaN[]                    = "NaN";UnityStrNaN59,3222
static const char PROGMEM UnityStrDet[]                    = "Determinate";UnityStrDet60,3290
static const char PROGMEM UnityStrInvalidFloatTrait[]      = "Invalid Float Trait";UnityStrInvalidFloatTrait61,3366
const char PROGMEM UnityStrErrShorthand[]                  = "Unity Shorthand Support Disabled";UnityStrErrShorthand63,3457
const char PROGMEM UnityStrErrFloat[]                      = "Unity Floating Point Disabled";UnityStrErrFloat64,3554
const char PROGMEM UnityStrErrDouble[]                     = "Unity Double Precision Disabled";UnityStrErrDouble65,3648
const char PROGMEM UnityStrErr64[]                         = "Unity 64-bit Support Disabled";UnityStrErr6466,3744
static const char PROGMEM UnityStrBreaker[]                = "-----------------------";UnityStrBreaker67,3838
static const char PROGMEM UnityStrResultsTests[]           = " Tests ";UnityStrResultsTests68,3926
static const char PROGMEM UnityStrResultsFailures[]        = " Failures ";UnityStrResultsFailures69,3998
static const char PROGMEM UnityStrResultsIgnored[]         = " Ignored ";UnityStrResultsIgnored70,4073
static const char PROGMEM UnityStrDetail1Name[]            = UNITY_DETAIL1_NAME " ";UnityStrDetail1Name72,4177
static const char PROGMEM UnityStrDetail2Name[]            = " " UNITY_DETAIL2_NAME " ";UnityStrDetail2Name73,4262
static void UnityPrintChar(const char* pch)UnityPrintChar81,4611
static UNITY_UINT UnityPrintAnsiEscapeString(const char* string)UnityPrintAnsiEscapeString112,5420
void UnityPrint(const char* string)UnityPrint131,5777
void UnityPrintLen(const char* string, const UNITY_UINT32 length)UnityPrintLen153,6263
void UnityPrintNumberByStyle(const UNITY_INT number, const UNITY_DISPLAY_STYLE_T style)UnityPrintNumberByStyle191,7353
void UnityPrintNumber(const UNITY_INT number_to_print)UnityPrintNumber242,8913
void UnityPrintNumberUnsigned(const UNITY_UINT number)UnityPrintNumberUnsigned257,9335
void UnityPrintNumberHex(const UNITY_UINT number, const char nibbles_to_print)UnityPrintNumberHex276,9760
void UnityPrintMask(const UNITY_UINT mask, const UNITY_UINT number)UnityPrintMask302,10347
void UnityPrintFloat(const UNITY_DOUBLE input_number)UnityPrintFloat337,11337
static void UnityTestResultsBegin(const char* file, const UNITY_LINE_TYPE line)UnityTestResultsBegin491,15705
static void UnityTestResultsFailBegin(const UNITY_LINE_TYPE line)UnityTestResultsFailBegin534,16868
void UnityConcludeTest(void)UnityConcludeTest542,17098
static void UnityAddMsgIfSpecified(const char* msg)UnityAddMsgIfSpecified566,17615
static void UnityPrintExpectedAndActualStrings(const char* expected, const char* actual)UnityPrintExpectedAndActualStrings593,18273
static void UnityPrintExpectedAndActualStringsLen(const char* expected,UnityPrintExpectedAndActualStringsLen620,18856
static int UnityIsOneArrayNull(UNITY_INTERNAL_PTR expected,UnityIsOneArrayNull653,19725
void UnityAssertBits(const UNITY_INT mask,UnityAssertBits687,20768
void UnityAssertEqualNumber(const UNITY_INT expected,UnityAssertEqualNumber708,21452
void UnityAssertGreaterOrLessOrEqualNumber(const UNITY_INT threshold,UnityAssertGreaterOrLessOrEqualNumber729,22138
#define UnityPrintPointlessAndBail(UnityPrintPointlessAndBail768,23862
void UnityAssertEqualIntArray(UNITY_INTERNAL_PTR expected,UnityAssertEqualIntArray776,24167
#define UNITY_FLOAT_OR_DOUBLE_WITHIN(UNITY_FLOAT_OR_DOUBLE_WITHIN872,27558
  #define UNITY_NAN_CHECK UNITY_NAN_CHECK881,28311
  #define UNITY_NAN_CHECK UNITY_NAN_CHECK883,28376
  #define UNITY_PRINT_EXPECTED_AND_ACTUAL_FLOAT(UNITY_PRINT_EXPECTED_AND_ACTUAL_FLOAT887,28446
  #define UNITY_PRINT_EXPECTED_AND_ACTUAL_FLOAT(UNITY_PRINT_EXPECTED_AND_ACTUAL_FLOAT894,28823
static int UnityFloatsWithin(UNITY_FLOAT delta, UNITY_FLOAT expected, UNITY_FLOAT actual)UnityFloatsWithin899,29013
void UnityAssertEqualFloatArray(UNITY_PTR_ATTRIBUTE const UNITY_FLOAT* expected,UnityAssertEqualFloatArray906,29247
void UnityAssertFloatsWithin(const UNITY_FLOAT delta,UnityAssertFloatsWithin954,30829
void UnityAssertFloatSpecial(const UNITY_FLOAT actual,UnityAssertFloatSpecial973,31464
static int UnityDoublesWithin(UNITY_DOUBLE delta, UNITY_DOUBLE expected, UNITY_DOUBLE actual)UnityDoublesWithin1040,33519
void UnityAssertEqualDoubleArray(UNITY_PTR_ATTRIBUTE const UNITY_DOUBLE* expected,UnityAssertEqualDoubleArray1047,33758
void UnityAssertDoublesWithin(const UNITY_DOUBLE delta,UnityAssertDoublesWithin1095,35324
void UnityAssertDoubleSpecial(const UNITY_DOUBLE actual,UnityAssertDoubleSpecial1113,35939
void UnityAssertNumbersWithin(const UNITY_UINT delta,UnityAssertNumbersWithin1179,37957
void UnityAssertNumbersArrayWithin(const UNITY_UINT delta,UnityAssertNumbersArrayWithin1226,39473
void UnityAssertEqualString(const char* expected,UnityAssertEqualString1346,43744
void UnityAssertEqualStringLen(const char* expected,UnityAssertEqualStringLen1385,44776
void UnityAssertEqualStringArray(UNITY_INTERNAL_PTR expected,UnityAssertEqualStringArray1425,45907
void UnityAssertEqualMemory(UNITY_INTERNAL_PTR expected,UnityAssertEqualMemory1504,48062
    UNITY_INT8 i8;i81571,50201
    UNITY_INT16 i16;i161572,50220
    UNITY_INT32 i32;i321573,50241
    UNITY_INT64 i64;i641575,50286
    float f;f1578,50342
    double d;d1581,50391
} UnityQuickCompare;UnityQuickCompare1583,50412
UNITY_INTERNAL_PTR UnityNumToPtr(const UNITY_INT num, const UNITY_UINT8 size)UnityNumToPtr1585,50434
UNITY_INTERNAL_PTR UnityFloatToPtr(const float num)UnityFloatToPtr1611,51212
UNITY_INTERNAL_PTR UnityDoubleToPtr(const double num)UnityDoubleToPtr1620,51443
static void UnityPrintFVA(const char* format, va_list va)UnityPrintFVA1631,51760
void UnityPrintF(const UNITY_LINE_TYPE line, const char* format, ...)UnityPrintF1737,55597
void UnityFail(const char* msg, const UNITY_LINE_TYPE line)UnityFail1759,56156
void UnityIgnore(const char* msg, const UNITY_LINE_TYPE line)UnityIgnore1796,57045
void UnityMessage(const char* msg, const UNITY_LINE_TYPE line)UnityMessage1812,57425
void UnityDefaultTestRun(UnityTestFunction Func, const char* FuncName, const int FuncLineNum)UnityDefaultTestRun1828,57898
void UnitySetTestFile(const char* filename)UnitySetTestFile1850,58417
void UnityBegin(const char* filename)UnityBegin1856,58546
int UnityEnd(void)UnityEnd1872,58946
char* UnityOptionIncludeNamed = NULL;UnityOptionIncludeNamed1906,59875
char* UnityOptionExcludeNamed = NULL;UnityOptionExcludeNamed1907,59913
int UnityVerbosity            = 1;UnityVerbosity1908,59951
int UnityParseOptions(int argc, char** argv)UnityParseOptions1911,60039
int IsStringInBiggerString(const char* longstring, const char* shortstring)IsStringInBiggerString1977,62189
int UnityStringArgumentMatches(const char* str)UnityStringArgumentMatches2022,63280
int UnityTestMatches(void)UnityTestMatches2085,64937

lib/lvgl/tests/unity/generate_test_runner.rb,1416
class UnityTestRunnerGeneratorUnityTestRunnerGenerator7,278
  def initialize(options = nil)initialize8,309
  def self.default_optionsdefault_options28,1025
  def self.grab_config(config_file)grab_config51,1657
  def run(input_file, output_file, options = nil)run62,2009
  def generate(input_file, output_file, tests, used_mocks, testfile_includes)generate87,3088
  def find_tests(source)find_tests109,3913
  def find_includes(source)find_includes181,7600
  def find_mocks(includes)find_mocks196,8371
  def find_setup_and_teardown(source)find_setup_and_teardown205,8652
  def create_header(output, mocks, testfile_includes = [])create_header212,9030
  def create_externs(output, tests, _mocks)create_externs243,10297
  def create_mock_management(output, mock_headers)create_mock_management255,10837
  def create_setup(output)create_setup290,11911
  def create_teardown(output)create_teardown297,12089
  def create_suite_setup(output)create_suite_setup304,12279
  def create_suite_teardown(output)create_suite_teardown314,12534
  def create_reset(output)create_reset324,12815
  def create_run_test(output)create_run_test342,13481
  def create_args_wrappers(output, tests)create_args_wrappers348,13666
  def create_main(output, filename, tests, used_mocks)create_main364,14153
  def create_h_file(output, filename, tests, testfile_includes, used_mocks)create_h_file434,17011

lib/lvgl/tests/unity/unity_support.h,538
#define LV_UNITY_SUPPORT_HLV_UNITY_SUPPORT_H3,28
#  define TEST_ASSERT_EQUAL_SCREENSHOT(TEST_ASSERT_EQUAL_SCREENSHOT16,219
#  define TEST_ASSERT_EQUAL_SCREENSHOT_MESSAGE(TEST_ASSERT_EQUAL_SCREENSHOT_MESSAGE17,330
#  define TEST_ASSERT_EQUAL_SCREENSHOT(TEST_ASSERT_EQUAL_SCREENSHOT20,466
#  define TEST_ASSERT_EQUAL_SCREENSHOT_MESSAGE(TEST_ASSERT_EQUAL_SCREENSHOT_MESSAGE26,1102
#  define TEST_ASSERT_EQUAL_COLOR(TEST_ASSERT_EQUAL_COLOR34,1775
#  define TEST_ASSERT_EQUAL_COLOR_MESSAGE(TEST_ASSERT_EQUAL_COLOR_MESSAGE35,1878

lib/lvgl/tests/unity/unity_internals.h,32513
#define UNITY_INTERNALS_HUNITY_INTERNALS_H9,327
  #define UNITY_FUNCTION_ATTR(UNITY_FUNCTION_ATTR45,1127
  #define UNITY_FUNCTION_ATTR(UNITY_FUNCTION_ATTR47,1188
      #define UNITY_INT_WIDTH UNITY_INT_WIDTH63,1825
      #define UNITY_INT_WIDTH UNITY_INT_WIDTH65,1895
      #define UNITY_INT_WIDTH UNITY_INT_WIDTH67,1973
    #define UNITY_INT_WIDTH UNITY_INT_WIDTH70,2048
      #define UNITY_LONG_WIDTH UNITY_LONG_WIDTH78,2249
      #define UNITY_LONG_WIDTH UNITY_LONG_WIDTH80,2321
      #define UNITY_LONG_WIDTH UNITY_LONG_WIDTH82,2401
    #define UNITY_LONG_WIDTH UNITY_LONG_WIDTH85,2477
      #define UNITY_POINTER_WIDTH UNITY_POINTER_WIDTH93,2690
      #define UNITY_POINTER_WIDTH UNITY_POINTER_WIDTH95,2767
      #define UNITY_POINTER_WIDTH UNITY_POINTER_WIDTH97,2852
    #define UNITY_POINTER_WIDTH UNITY_POINTER_WIDTH100,2931
    typedef unsigned char   UNITY_UINT8;UNITY_UINT8109,3216
    typedef unsigned short  UNITY_UINT16;UNITY_UINT16110,3257
    typedef unsigned int    UNITY_UINT32;UNITY_UINT32111,3299
    typedef signed char     UNITY_INT8;UNITY_INT8112,3341
    typedef signed short    UNITY_INT16;UNITY_INT16113,3381
    typedef signed int      UNITY_INT32;UNITY_INT32114,3422
    typedef unsigned char   UNITY_UINT8;UNITY_UINT8116,3493
    typedef unsigned int    UNITY_UINT16;UNITY_UINT16117,3534
    typedef unsigned long   UNITY_UINT32;UNITY_UINT32118,3576
    typedef signed char     UNITY_INT8;UNITY_INT8119,3618
    typedef signed int      UNITY_INT16;UNITY_INT16120,3658
    typedef signed long     UNITY_INT32;UNITY_INT32121,3699
    #define UNITY_SUPPORT_64UNITY_SUPPORT_64133,4078
    typedef UNITY_UINT32 UNITY_UINT;UNITY_UINT140,4222
    typedef UNITY_INT32  UNITY_INT;UNITY_INT141,4259
    #define UNITY_MAX_NIBBLES UNITY_MAX_NIBBLES142,4295
    typedef unsigned long long UNITY_UINT64;UNITY_UINT64146,4440
    typedef signed long long   UNITY_INT64;UNITY_INT64147,4485
    typedef unsigned long      UNITY_UINT64;UNITY_UINT64149,4562
    typedef signed long        UNITY_INT64;UNITY_INT64150,4607
    typedef UNITY_UINT64 UNITY_UINT;UNITY_UINT154,4740
    typedef UNITY_INT64  UNITY_INT;UNITY_INT155,4777
    #define UNITY_MAX_NIBBLES UNITY_MAX_NIBBLES156,4813
  #define UNITY_PTR_TO_INT UNITY_PTR_TO_INT164,5076
  #define UNITY_DISPLAY_STYLE_POINTER UNITY_DISPLAY_STYLE_POINTER165,5115
  #define UNITY_PTR_TO_INT UNITY_PTR_TO_INT167,5213
  #define UNITY_DISPLAY_STYLE_POINTER UNITY_DISPLAY_STYLE_POINTER168,5252
  #define UNITY_PTR_TO_INT UNITY_PTR_TO_INT170,5350
  #define UNITY_DISPLAY_STYLE_POINTER UNITY_DISPLAY_STYLE_POINTER171,5389
  #define UNITY_PTR_ATTRIBUTEUNITY_PTR_ATTRIBUTE177,5572
  #define UNITY_INTERNAL_PTR UNITY_INTERNAL_PTR181,5637
#define UNITY_EXCLUDE_DOUBLE UNITY_EXCLUDE_DOUBLE192,5931
#define UNITY_EXCLUDE_FLOAT_PRINTUNITY_EXCLUDE_FLOAT_PRINT195,6050
#define UNITY_FLOAT_PRECISION UNITY_FLOAT_PRECISION202,6158
#define UNITY_FLOAT_TYPE UNITY_FLOAT_TYPE205,6231
typedef UNITY_FLOAT_TYPE UNITY_FLOAT;UNITY_FLOAT207,6269
#define isinf(isinf212,6414
#define isnan(isnan218,6596
  #define UNITY_EXCLUDE_DOUBLEUNITY_EXCLUDE_DOUBLE232,6973
    #undef UNITY_INCLUDE_DOUBLEUNITY_INCLUDE_DOUBLE234,7012
    #define UNITY_DOUBLE_TYPE UNITY_DOUBLE_TYPE239,7114
  typedef UNITY_FLOAT UNITY_DOUBLE;UNITY_DOUBLE241,7162
  #define UNITY_DOUBLE_PRECISION UNITY_DOUBLE_PRECISION249,7375
  #define UNITY_DOUBLE_TYPE UNITY_DOUBLE_TYPE253,7454
  typedef UNITY_DOUBLE_TYPE UNITY_DOUBLE;UNITY_DOUBLE255,7498
  #define UNITY_OUTPUT_CHAR(UNITY_OUTPUT_CHAR265,7811
    #define UNITY_OUTPUT_FLUSH(UNITY_OUTPUT_FLUSH277,8203
    #define UNITY_OUTPUT_FLUSH(UNITY_OUTPUT_FLUSH280,8339
#define UNITY_FLUSH_CALL(UNITY_FLUSH_CALL290,8622
#define UNITY_FLUSH_CALL(UNITY_FLUSH_CALL292,8655
#define UNITY_PRINT_EOL(UNITY_PRINT_EOL296,8735
#define UNITY_OUTPUT_START(UNITY_OUTPUT_START300,8823
#define UNITY_OUTPUT_COMPLETE(UNITY_OUTPUT_COMPLETE304,8890
      #define UNITY_TIME_TYPE UNITY_TIME_TYPE316,9372
      #define UNITY_EXEC_TIME_START(UNITY_EXEC_TIME_START317,9413
      #define UNITY_EXEC_TIME_STOP(UNITY_EXEC_TIME_STOP318,9497
      #define UNITY_PRINT_EXEC_TIME(UNITY_PRINT_EXEC_TIME319,9579
      #define UNITY_TIME_TYPE UNITY_TIME_TYPE327,9879
      #define UNITY_GET_TIME(UNITY_GET_TIME328,9917
      #define UNITY_EXEC_TIME_START(UNITY_EXEC_TIME_START329,9998
      #define UNITY_EXEC_TIME_STOP(UNITY_EXEC_TIME_STOP330,10079
      #define UNITY_PRINT_EXEC_TIME(UNITY_PRINT_EXEC_TIME331,10158
      #define UNITY_TIME_TYPE UNITY_TIME_TYPE339,10482
      #define UNITY_GET_TIME(UNITY_GET_TIME340,10528
      #define UNITY_EXEC_TIME_START(UNITY_EXEC_TIME_START341,10595
      #define UNITY_EXEC_TIME_STOP(UNITY_EXEC_TIME_STOP342,10676
      #define UNITY_PRINT_EXEC_TIME(UNITY_PRINT_EXEC_TIME343,10755
#define UNITY_EXEC_TIME_START(UNITY_EXEC_TIME_START355,11198
#define UNITY_EXEC_TIME_STOP(UNITY_EXEC_TIME_STOP359,11280
#define UNITY_TIME_TYPE UNITY_TIME_TYPE363,11356
#define UNITY_PRINT_EXEC_TIME(UNITY_PRINT_EXEC_TIME367,11429
#define UNITY_LINE_TYPE UNITY_LINE_TYPE375,11638
#define UNITY_COUNTER_TYPE UNITY_COUNTER_TYPE379,11708
typedef void (*UnityTestFunction)(void);UnityTestFunction386,11900
#define UNITY_DISPLAY_RANGE_INT UNITY_DISPLAY_RANGE_INT388,11942
#define UNITY_DISPLAY_RANGE_UINT UNITY_DISPLAY_RANGE_UINT389,11982
#define UNITY_DISPLAY_RANGE_HEX UNITY_DISPLAY_RANGE_HEX390,12022
#define UNITY_DISPLAY_RANGE_CHAR UNITY_DISPLAY_RANGE_CHAR391,12062
    UNITY_DISPLAY_STYLE_INT      = (UNITY_INT_WIDTH / 8) + UNITY_DISPLAY_RANGE_INT,UNITY_DISPLAY_STYLE_INT395,12118
    UNITY_DISPLAY_STYLE_INT8     = 1 + UNITY_DISPLAY_RANGE_INT,UNITY_DISPLAY_STYLE_INT8396,12202
    UNITY_DISPLAY_STYLE_INT16    = 2 + UNITY_DISPLAY_RANGE_INT,UNITY_DISPLAY_STYLE_INT16397,12266
    UNITY_DISPLAY_STYLE_INT32    = 4 + UNITY_DISPLAY_RANGE_INT,UNITY_DISPLAY_STYLE_INT32398,12330
    UNITY_DISPLAY_STYLE_INT64    = 8 + UNITY_DISPLAY_RANGE_INT,UNITY_DISPLAY_STYLE_INT64400,12418
    UNITY_DISPLAY_STYLE_UINT     = (UNITY_INT_WIDTH / 8) + UNITY_DISPLAY_RANGE_UINT,UNITY_DISPLAY_STYLE_UINT403,12490
    UNITY_DISPLAY_STYLE_UINT8    = 1 + UNITY_DISPLAY_RANGE_UINT,UNITY_DISPLAY_STYLE_UINT8404,12575
    UNITY_DISPLAY_STYLE_UINT16   = 2 + UNITY_DISPLAY_RANGE_UINT,UNITY_DISPLAY_STYLE_UINT16405,12640
    UNITY_DISPLAY_STYLE_UINT32   = 4 + UNITY_DISPLAY_RANGE_UINT,UNITY_DISPLAY_STYLE_UINT32406,12705
    UNITY_DISPLAY_STYLE_UINT64   = 8 + UNITY_DISPLAY_RANGE_UINT,UNITY_DISPLAY_STYLE_UINT64408,12794
    UNITY_DISPLAY_STYLE_HEX8     = 1 + UNITY_DISPLAY_RANGE_HEX,UNITY_DISPLAY_STYLE_HEX8411,12867
    UNITY_DISPLAY_STYLE_HEX16    = 2 + UNITY_DISPLAY_RANGE_HEX,UNITY_DISPLAY_STYLE_HEX16412,12931
    UNITY_DISPLAY_STYLE_HEX32    = 4 + UNITY_DISPLAY_RANGE_HEX,UNITY_DISPLAY_STYLE_HEX32413,12995
    UNITY_DISPLAY_STYLE_HEX64    = 8 + UNITY_DISPLAY_RANGE_HEX,UNITY_DISPLAY_STYLE_HEX64415,13083
    UNITY_DISPLAY_STYLE_CHAR     = 1 + UNITY_DISPLAY_RANGE_CHAR + UNITY_DISPLAY_RANGE_INT,UNITY_DISPLAY_STYLE_CHAR418,13155
    UNITY_DISPLAY_STYLE_UNKNOWNUNITY_DISPLAY_STYLE_UNKNOWN420,13247
} UNITY_DISPLAY_STYLE_T;UNITY_DISPLAY_STYLE_T421,13279
    UNITY_WITHIN           = 0x0,UNITY_WITHIN425,13320
    UNITY_EQUAL_TO         = 0x1,UNITY_EQUAL_TO426,13354
    UNITY_GREATER_THAN     = 0x2,UNITY_GREATER_THAN427,13388
    UNITY_GREATER_OR_EQUAL = 0x2 + UNITY_EQUAL_TO,UNITY_GREATER_OR_EQUAL428,13422
    UNITY_SMALLER_THAN     = 0x4,UNITY_SMALLER_THAN429,13473
    UNITY_SMALLER_OR_EQUAL = 0x4 + UNITY_EQUAL_TO,UNITY_SMALLER_OR_EQUAL430,13507
    UNITY_NOT_EQUAL        = 0x0,UNITY_NOT_EQUAL431,13558
    UNITY_UNKNOWNUNITY_UNKNOWN432,13592
} UNITY_COMPARISON_T;UNITY_COMPARISON_T433,13610
typedef enum UNITY_FLOAT_TRAITUNITY_FLOAT_TRAIT436,13661
    UNITY_FLOAT_IS_NOT_INF       = 0,UNITY_FLOAT_IS_NOT_INF438,13694
    UNITY_FLOAT_IS_INF,UNITY_FLOAT_IS_INF439,13732
    UNITY_FLOAT_IS_NOT_NEG_INF,UNITY_FLOAT_IS_NOT_NEG_INF440,13756
    UNITY_FLOAT_IS_NEG_INF,UNITY_FLOAT_IS_NEG_INF441,13788
    UNITY_FLOAT_IS_NOT_NAN,UNITY_FLOAT_IS_NOT_NAN442,13816
    UNITY_FLOAT_IS_NAN,UNITY_FLOAT_IS_NAN443,13844
    UNITY_FLOAT_IS_NOT_DET,UNITY_FLOAT_IS_NOT_DET444,13868
    UNITY_FLOAT_IS_DET,UNITY_FLOAT_IS_DET445,13896
    UNITY_FLOAT_INVALID_TRAITUNITY_FLOAT_INVALID_TRAIT446,13920
} UNITY_FLOAT_TRAIT_T;UNITY_FLOAT_TRAIT_T447,13950
    UNITY_ARRAY_TO_VAL = 0,UNITY_ARRAY_TO_VAL452,13996
    UNITY_ARRAY_TO_ARRAY,UNITY_ARRAY_TO_ARRAY453,14024
    UNITY_ARRAY_UNKNOWNUNITY_ARRAY_UNKNOWN454,14050
} UNITY_FLAGS_T;UNITY_FLAGS_T455,14074
struct UNITY_STORAGE_TUNITY_STORAGE_T457,14092
    const char* TestFile;TestFile459,14117
    const char* CurrentTestName;CurrentTestName460,14143
    const char* CurrentDetail1;CurrentDetail1462,14206
    const char* CurrentDetail2;CurrentDetail2463,14238
    UNITY_LINE_TYPE CurrentTestLineNumber;CurrentTestLineNumber465,14277
    UNITY_COUNTER_TYPE NumberOfTests;NumberOfTests466,14320
    UNITY_COUNTER_TYPE TestFailures;TestFailures467,14358
    UNITY_COUNTER_TYPE TestIgnores;TestIgnores468,14395
    UNITY_COUNTER_TYPE CurrentTestFailed;CurrentTestFailed469,14431
    UNITY_COUNTER_TYPE CurrentTestIgnored;CurrentTestIgnored470,14473
    UNITY_TIME_TYPE CurrentTestStartTime;CurrentTestStartTime472,14547
    UNITY_TIME_TYPE CurrentTestStopTime;CurrentTestStopTime473,14589
    jmp_buf AbortFrame;AbortFrame476,14668
#define UNITY_SKIP_DEFAULT_RUNNERUNITY_SKIP_DEFAULT_RUNNER494,15139
#define UNITY_CLR_DETAILS(UNITY_CLR_DETAILS502,15348
#define UNITY_SET_DETAIL(UNITY_SET_DETAIL503,15376
#define UNITY_SET_DETAILS(UNITY_SET_DETAILS504,15405
#define UNITY_CLR_DETAILS(UNITY_CLR_DETAILS506,15444
#define UNITY_SET_DETAIL(UNITY_SET_DETAIL507,15536
#define UNITY_SET_DETAILS(UNITY_SET_DETAILS508,15630
#define UNITY_DETAIL1_NAME UNITY_DETAIL1_NAME511,15754
#define UNITY_DETAIL2_NAME UNITY_DETAIL2_NAME515,15827
void UnityFail(const char* message, const UNITY_LINE_TYPE line) UNITY_FUNCTION_ATTR(noreturn);noreturn622,20564
void UnityIgnore(const char* message, const UNITY_LINE_TYPE line) UNITY_FUNCTION_ATTR(noreturn);noreturn623,20659
#define TEST_PROTECT(TEST_PROTECT702,23879
#define TEST_ABORT(TEST_ABORT703,23934
#define TEST_PROTECT(TEST_PROTECT705,23990
#define TEST_ABORT(TEST_ABORT706,24015
#define UNITY_SUPPORT_VARIADIC_MACROSUNITY_SUPPORT_VARIADIC_MACROS713,24238
#define RUN_TEST(RUN_TEST717,24327
#define RUN_TEST_AT_LINE(RUN_TEST_AT_LINE718,24400
#define RUN_TEST(RUN_TEST725,24633
#define RUN_TEST(RUN_TEST727,24705
#define TEST_LINE_NUM TEST_LINE_NUM731,24786
#define TEST_IS_IGNORED TEST_IS_IGNORED732,24838
#define UNITY_NEW_TEST(UNITY_NEW_TEST733,24889
#define UNITY_BEGIN(UNITY_BEGIN739,25065
#define UNITY_END(UNITY_END743,25134
#define UNITY_SHORTHAND_AS_OLDUNITY_SHORTHAND_AS_OLD750,25298
#define UNITY_TEST_FAIL(UNITY_TEST_FAIL769,25755
#define UNITY_TEST_IGNORE(UNITY_TEST_IGNORE770,25845
#define UNITY_TEST_ASSERT(UNITY_TEST_ASSERT776,26071
#define UNITY_TEST_ASSERT_NULL(UNITY_TEST_ASSERT_NULL777,26260
#define UNITY_TEST_ASSERT_NOT_NULL(UNITY_TEST_ASSERT_NOT_NULL778,26433
#define UNITY_TEST_ASSERT_EMPTY(UNITY_TEST_ASSERT_EMPTY779,26606
#define UNITY_TEST_ASSERT_NOT_EMPTY(UNITY_TEST_ASSERT_NOT_EMPTY780,26779
#define UNITY_TEST_ASSERT_EQUAL_INT(UNITY_TEST_ASSERT_EQUAL_INT782,26953
#define UNITY_TEST_ASSERT_EQUAL_INT8(UNITY_TEST_ASSERT_EQUAL_INT8783,27178
#define UNITY_TEST_ASSERT_EQUAL_INT16(UNITY_TEST_ASSERT_EQUAL_INT16784,27430
#define UNITY_TEST_ASSERT_EQUAL_INT32(UNITY_TEST_ASSERT_EQUAL_INT32785,27683
#define UNITY_TEST_ASSERT_EQUAL_UINT(UNITY_TEST_ASSERT_EQUAL_UINT786,27936
#define UNITY_TEST_ASSERT_EQUAL_UINT8(UNITY_TEST_ASSERT_EQUAL_UINT8787,28162
#define UNITY_TEST_ASSERT_EQUAL_UINT16(UNITY_TEST_ASSERT_EQUAL_UINT16788,28417
#define UNITY_TEST_ASSERT_EQUAL_UINT32(UNITY_TEST_ASSERT_EQUAL_UINT32789,28673
#define UNITY_TEST_ASSERT_EQUAL_HEX8(UNITY_TEST_ASSERT_EQUAL_HEX8790,28929
#define UNITY_TEST_ASSERT_EQUAL_HEX16(UNITY_TEST_ASSERT_EQUAL_HEX16791,29181
#define UNITY_TEST_ASSERT_EQUAL_HEX32(UNITY_TEST_ASSERT_EQUAL_HEX32792,29434
#define UNITY_TEST_ASSERT_EQUAL_CHAR(UNITY_TEST_ASSERT_EQUAL_CHAR793,29687
#define UNITY_TEST_ASSERT_BITS(UNITY_TEST_ASSERT_BITS794,29939
#define UNITY_TEST_ASSERT_NOT_EQUAL_INT(UNITY_TEST_ASSERT_NOT_EQUAL_INT796,30152
#define UNITY_TEST_ASSERT_NOT_EQUAL_INT8(UNITY_TEST_ASSERT_NOT_EQUAL_INT8797,30438
#define UNITY_TEST_ASSERT_NOT_EQUAL_INT16(UNITY_TEST_ASSERT_NOT_EQUAL_INT16798,30725
#define UNITY_TEST_ASSERT_NOT_EQUAL_INT32(UNITY_TEST_ASSERT_NOT_EQUAL_INT32799,31013
#define UNITY_TEST_ASSERT_NOT_EQUAL_UINT(UNITY_TEST_ASSERT_NOT_EQUAL_UINT800,31301
#define UNITY_TEST_ASSERT_NOT_EQUAL_UINT8(UNITY_TEST_ASSERT_NOT_EQUAL_UINT8801,31588
#define UNITY_TEST_ASSERT_NOT_EQUAL_UINT16(UNITY_TEST_ASSERT_NOT_EQUAL_UINT16802,31876
#define UNITY_TEST_ASSERT_NOT_EQUAL_UINT32(UNITY_TEST_ASSERT_NOT_EQUAL_UINT32803,32165
#define UNITY_TEST_ASSERT_NOT_EQUAL_HEX8(UNITY_TEST_ASSERT_NOT_EQUAL_HEX8804,32454
#define UNITY_TEST_ASSERT_NOT_EQUAL_HEX16(UNITY_TEST_ASSERT_NOT_EQUAL_HEX16805,32741
#define UNITY_TEST_ASSERT_NOT_EQUAL_HEX32(UNITY_TEST_ASSERT_NOT_EQUAL_HEX32806,33029
#define UNITY_TEST_ASSERT_NOT_EQUAL_CHAR(UNITY_TEST_ASSERT_NOT_EQUAL_CHAR807,33317
#define UNITY_TEST_ASSERT_GREATER_THAN_INT(UNITY_TEST_ASSERT_GREATER_THAN_INT809,33605
#define UNITY_TEST_ASSERT_GREATER_THAN_INT8(UNITY_TEST_ASSERT_GREATER_THAN_INT8810,33892
#define UNITY_TEST_ASSERT_GREATER_THAN_INT16(UNITY_TEST_ASSERT_GREATER_THAN_INT16811,34180
#define UNITY_TEST_ASSERT_GREATER_THAN_INT32(UNITY_TEST_ASSERT_GREATER_THAN_INT32812,34469
#define UNITY_TEST_ASSERT_GREATER_THAN_UINT(UNITY_TEST_ASSERT_GREATER_THAN_UINT813,34758
#define UNITY_TEST_ASSERT_GREATER_THAN_UINT8(UNITY_TEST_ASSERT_GREATER_THAN_UINT8814,35046
#define UNITY_TEST_ASSERT_GREATER_THAN_UINT16(UNITY_TEST_ASSERT_GREATER_THAN_UINT16815,35337
#define UNITY_TEST_ASSERT_GREATER_THAN_UINT32(UNITY_TEST_ASSERT_GREATER_THAN_UINT32816,35629
#define UNITY_TEST_ASSERT_GREATER_THAN_HEX8(UNITY_TEST_ASSERT_GREATER_THAN_HEX8817,35921
#define UNITY_TEST_ASSERT_GREATER_THAN_HEX16(UNITY_TEST_ASSERT_GREATER_THAN_HEX16818,36211
#define UNITY_TEST_ASSERT_GREATER_THAN_HEX32(UNITY_TEST_ASSERT_GREATER_THAN_HEX32819,36502
#define UNITY_TEST_ASSERT_GREATER_THAN_CHAR(UNITY_TEST_ASSERT_GREATER_THAN_CHAR820,36793
#define UNITY_TEST_ASSERT_SMALLER_THAN_INT(UNITY_TEST_ASSERT_SMALLER_THAN_INT822,37082
#define UNITY_TEST_ASSERT_SMALLER_THAN_INT8(UNITY_TEST_ASSERT_SMALLER_THAN_INT8823,37369
#define UNITY_TEST_ASSERT_SMALLER_THAN_INT16(UNITY_TEST_ASSERT_SMALLER_THAN_INT16824,37657
#define UNITY_TEST_ASSERT_SMALLER_THAN_INT32(UNITY_TEST_ASSERT_SMALLER_THAN_INT32825,37946
#define UNITY_TEST_ASSERT_SMALLER_THAN_UINT(UNITY_TEST_ASSERT_SMALLER_THAN_UINT826,38235
#define UNITY_TEST_ASSERT_SMALLER_THAN_UINT8(UNITY_TEST_ASSERT_SMALLER_THAN_UINT8827,38523
#define UNITY_TEST_ASSERT_SMALLER_THAN_UINT16(UNITY_TEST_ASSERT_SMALLER_THAN_UINT16828,38814
#define UNITY_TEST_ASSERT_SMALLER_THAN_UINT32(UNITY_TEST_ASSERT_SMALLER_THAN_UINT32829,39106
#define UNITY_TEST_ASSERT_SMALLER_THAN_HEX8(UNITY_TEST_ASSERT_SMALLER_THAN_HEX8830,39398
#define UNITY_TEST_ASSERT_SMALLER_THAN_HEX16(UNITY_TEST_ASSERT_SMALLER_THAN_HEX16831,39688
#define UNITY_TEST_ASSERT_SMALLER_THAN_HEX32(UNITY_TEST_ASSERT_SMALLER_THAN_HEX32832,39979
#define UNITY_TEST_ASSERT_SMALLER_THAN_CHAR(UNITY_TEST_ASSERT_SMALLER_THAN_CHAR833,40270
#define UNITY_TEST_ASSERT_GREATER_OR_EQUAL_INT(UNITY_TEST_ASSERT_GREATER_OR_EQUAL_INT835,40559
#define UNITY_TEST_ASSERT_GREATER_OR_EQUAL_INT8(UNITY_TEST_ASSERT_GREATER_OR_EQUAL_INT8836,40852
#define UNITY_TEST_ASSERT_GREATER_OR_EQUAL_INT16(UNITY_TEST_ASSERT_GREATER_OR_EQUAL_INT16837,41146
#define UNITY_TEST_ASSERT_GREATER_OR_EQUAL_INT32(UNITY_TEST_ASSERT_GREATER_OR_EQUAL_INT32838,41441
#define UNITY_TEST_ASSERT_GREATER_OR_EQUAL_UINT(UNITY_TEST_ASSERT_GREATER_OR_EQUAL_UINT839,41736
#define UNITY_TEST_ASSERT_GREATER_OR_EQUAL_UINT8(UNITY_TEST_ASSERT_GREATER_OR_EQUAL_UINT8840,42030
#define UNITY_TEST_ASSERT_GREATER_OR_EQUAL_UINT16(UNITY_TEST_ASSERT_GREATER_OR_EQUAL_UINT16841,42325
#define UNITY_TEST_ASSERT_GREATER_OR_EQUAL_UINT32(UNITY_TEST_ASSERT_GREATER_OR_EQUAL_UINT32842,42621
#define UNITY_TEST_ASSERT_GREATER_OR_EQUAL_HEX8(UNITY_TEST_ASSERT_GREATER_OR_EQUAL_HEX8843,42917
#define UNITY_TEST_ASSERT_GREATER_OR_EQUAL_HEX16(UNITY_TEST_ASSERT_GREATER_OR_EQUAL_HEX16844,43211
#define UNITY_TEST_ASSERT_GREATER_OR_EQUAL_HEX32(UNITY_TEST_ASSERT_GREATER_OR_EQUAL_HEX32845,43506
#define UNITY_TEST_ASSERT_GREATER_OR_EQUAL_CHAR(UNITY_TEST_ASSERT_GREATER_OR_EQUAL_CHAR846,43801
#define UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_INT(UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_INT848,44096
#define UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_INT8(UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_INT8849,44389
#define UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_INT16(UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_INT16850,44683
#define UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_INT32(UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_INT32851,44978
#define UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_UINT(UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_UINT852,45273
#define UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_UINT8(UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_UINT8853,45567
#define UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_UINT16(UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_UINT16854,45862
#define UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_UINT32(UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_UINT32855,46158
#define UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_HEX8(UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_HEX8856,46454
#define UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_HEX16(UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_HEX16857,46748
#define UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_HEX32(UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_HEX32858,47043
#define UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_CHAR(UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_CHAR859,47338
#define UNITY_TEST_ASSERT_INT_WITHIN(UNITY_TEST_ASSERT_INT_WITHIN861,47633
#define UNITY_TEST_ASSERT_INT8_WITHIN(UNITY_TEST_ASSERT_INT8_WITHIN862,47935
#define UNITY_TEST_ASSERT_INT16_WITHIN(UNITY_TEST_ASSERT_INT16_WITHIN863,48238
#define UNITY_TEST_ASSERT_INT32_WITHIN(UNITY_TEST_ASSERT_INT32_WITHIN864,48542
#define UNITY_TEST_ASSERT_UINT_WITHIN(UNITY_TEST_ASSERT_UINT_WITHIN865,48846
#define UNITY_TEST_ASSERT_UINT8_WITHIN(UNITY_TEST_ASSERT_UINT8_WITHIN866,49149
#define UNITY_TEST_ASSERT_UINT16_WITHIN(UNITY_TEST_ASSERT_UINT16_WITHIN867,49453
#define UNITY_TEST_ASSERT_UINT32_WITHIN(UNITY_TEST_ASSERT_UINT32_WITHIN868,49758
#define UNITY_TEST_ASSERT_HEX8_WITHIN(UNITY_TEST_ASSERT_HEX8_WITHIN869,50063
#define UNITY_TEST_ASSERT_HEX16_WITHIN(UNITY_TEST_ASSERT_HEX16_WITHIN870,50366
#define UNITY_TEST_ASSERT_HEX32_WITHIN(UNITY_TEST_ASSERT_HEX32_WITHIN871,50670
#define UNITY_TEST_ASSERT_CHAR_WITHIN(UNITY_TEST_ASSERT_CHAR_WITHIN872,50974
#define UNITY_TEST_ASSERT_INT_ARRAY_WITHIN(UNITY_TEST_ASSERT_INT_ARRAY_WITHIN874,51278
#define UNITY_TEST_ASSERT_INT8_ARRAY_WITHIN(UNITY_TEST_ASSERT_INT8_ARRAY_WITHIN875,51609
#define UNITY_TEST_ASSERT_INT16_ARRAY_WITHIN(UNITY_TEST_ASSERT_INT16_ARRAY_WITHIN876,51941
#define UNITY_TEST_ASSERT_INT32_ARRAY_WITHIN(UNITY_TEST_ASSERT_INT32_ARRAY_WITHIN877,52274
#define UNITY_TEST_ASSERT_UINT_ARRAY_WITHIN(UNITY_TEST_ASSERT_UINT_ARRAY_WITHIN878,52607
#define UNITY_TEST_ASSERT_UINT8_ARRAY_WITHIN(UNITY_TEST_ASSERT_UINT8_ARRAY_WITHIN879,52939
#define UNITY_TEST_ASSERT_UINT16_ARRAY_WITHIN(UNITY_TEST_ASSERT_UINT16_ARRAY_WITHIN880,53272
#define UNITY_TEST_ASSERT_UINT32_ARRAY_WITHIN(UNITY_TEST_ASSERT_UINT32_ARRAY_WITHIN881,53606
#define UNITY_TEST_ASSERT_HEX8_ARRAY_WITHIN(UNITY_TEST_ASSERT_HEX8_ARRAY_WITHIN882,53940
#define UNITY_TEST_ASSERT_HEX16_ARRAY_WITHIN(UNITY_TEST_ASSERT_HEX16_ARRAY_WITHIN883,54272
#define UNITY_TEST_ASSERT_HEX32_ARRAY_WITHIN(UNITY_TEST_ASSERT_HEX32_ARRAY_WITHIN884,54605
#define UNITY_TEST_ASSERT_CHAR_ARRAY_WITHIN(UNITY_TEST_ASSERT_CHAR_ARRAY_WITHIN885,54938
#define UNITY_TEST_ASSERT_EQUAL_PTR(UNITY_TEST_ASSERT_EQUAL_PTR888,55272
#define UNITY_TEST_ASSERT_EQUAL_STRING(UNITY_TEST_ASSERT_EQUAL_STRING889,55515
#define UNITY_TEST_ASSERT_EQUAL_STRING_LEN(UNITY_TEST_ASSERT_EQUAL_STRING_LEN890,55719
#define UNITY_TEST_ASSERT_EQUAL_MEMORY(UNITY_TEST_ASSERT_EQUAL_MEMORY891,55947
#define UNITY_TEST_ASSERT_EQUAL_INT_ARRAY(UNITY_TEST_ASSERT_EQUAL_INT_ARRAY893,56212
#define UNITY_TEST_ASSERT_EQUAL_INT8_ARRAY(UNITY_TEST_ASSERT_EQUAL_INT8_ARRAY894,56513
#define UNITY_TEST_ASSERT_EQUAL_INT16_ARRAY(UNITY_TEST_ASSERT_EQUAL_INT16_ARRAY895,56814
#define UNITY_TEST_ASSERT_EQUAL_INT32_ARRAY(UNITY_TEST_ASSERT_EQUAL_INT32_ARRAY896,57115
#define UNITY_TEST_ASSERT_EQUAL_UINT_ARRAY(UNITY_TEST_ASSERT_EQUAL_UINT_ARRAY897,57416
#define UNITY_TEST_ASSERT_EQUAL_UINT8_ARRAY(UNITY_TEST_ASSERT_EQUAL_UINT8_ARRAY898,57717
#define UNITY_TEST_ASSERT_EQUAL_UINT16_ARRAY(UNITY_TEST_ASSERT_EQUAL_UINT16_ARRAY899,58018
#define UNITY_TEST_ASSERT_EQUAL_UINT32_ARRAY(UNITY_TEST_ASSERT_EQUAL_UINT32_ARRAY900,58319
#define UNITY_TEST_ASSERT_EQUAL_HEX8_ARRAY(UNITY_TEST_ASSERT_EQUAL_HEX8_ARRAY901,58620
#define UNITY_TEST_ASSERT_EQUAL_HEX16_ARRAY(UNITY_TEST_ASSERT_EQUAL_HEX16_ARRAY902,58921
#define UNITY_TEST_ASSERT_EQUAL_HEX32_ARRAY(UNITY_TEST_ASSERT_EQUAL_HEX32_ARRAY903,59222
#define UNITY_TEST_ASSERT_EQUAL_PTR_ARRAY(UNITY_TEST_ASSERT_EQUAL_PTR_ARRAY904,59523
#define UNITY_TEST_ASSERT_EQUAL_STRING_ARRAY(UNITY_TEST_ASSERT_EQUAL_STRING_ARRAY905,59824
#define UNITY_TEST_ASSERT_EQUAL_MEMORY_ARRAY(UNITY_TEST_ASSERT_EQUAL_MEMORY_ARRAY906,60093
#define UNITY_TEST_ASSERT_EQUAL_CHAR_ARRAY(UNITY_TEST_ASSERT_EQUAL_CHAR_ARRAY907,60384
#define UNITY_TEST_ASSERT_EACH_EQUAL_INT(UNITY_TEST_ASSERT_EACH_EQUAL_INT909,60686
#define UNITY_TEST_ASSERT_EACH_EQUAL_INT8(UNITY_TEST_ASSERT_EACH_EQUAL_INT8910,61037
#define UNITY_TEST_ASSERT_EACH_EQUAL_INT16(UNITY_TEST_ASSERT_EACH_EQUAL_INT16911,61388
#define UNITY_TEST_ASSERT_EACH_EQUAL_INT32(UNITY_TEST_ASSERT_EACH_EQUAL_INT32912,61739
#define UNITY_TEST_ASSERT_EACH_EQUAL_UINT(UNITY_TEST_ASSERT_EACH_EQUAL_UINT913,62090
#define UNITY_TEST_ASSERT_EACH_EQUAL_UINT8(UNITY_TEST_ASSERT_EACH_EQUAL_UINT8914,62441
#define UNITY_TEST_ASSERT_EACH_EQUAL_UINT16(UNITY_TEST_ASSERT_EACH_EQUAL_UINT16915,62792
#define UNITY_TEST_ASSERT_EACH_EQUAL_UINT32(UNITY_TEST_ASSERT_EACH_EQUAL_UINT32916,63143
#define UNITY_TEST_ASSERT_EACH_EQUAL_HEX8(UNITY_TEST_ASSERT_EACH_EQUAL_HEX8917,63494
#define UNITY_TEST_ASSERT_EACH_EQUAL_HEX16(UNITY_TEST_ASSERT_EACH_EQUAL_HEX16918,63845
#define UNITY_TEST_ASSERT_EACH_EQUAL_HEX32(UNITY_TEST_ASSERT_EACH_EQUAL_HEX32919,64196
#define UNITY_TEST_ASSERT_EACH_EQUAL_PTR(UNITY_TEST_ASSERT_EACH_EQUAL_PTR920,64547
#define UNITY_TEST_ASSERT_EACH_EQUAL_STRING(UNITY_TEST_ASSERT_EACH_EQUAL_STRING921,64898
#define UNITY_TEST_ASSERT_EACH_EQUAL_MEMORY(UNITY_TEST_ASSERT_EACH_EQUAL_MEMORY922,65165
#define UNITY_TEST_ASSERT_EACH_EQUAL_CHAR(UNITY_TEST_ASSERT_EACH_EQUAL_CHAR923,65454
#define UNITY_TEST_ASSERT_EQUAL_INT64(UNITY_TEST_ASSERT_EQUAL_INT64926,65830
#define UNITY_TEST_ASSERT_EQUAL_UINT64(UNITY_TEST_ASSERT_EQUAL_UINT64927,66057
#define UNITY_TEST_ASSERT_EQUAL_HEX64(UNITY_TEST_ASSERT_EQUAL_HEX64928,66285
#define UNITY_TEST_ASSERT_EQUAL_INT64_ARRAY(UNITY_TEST_ASSERT_EQUAL_INT64_ARRAY929,66512
#define UNITY_TEST_ASSERT_EQUAL_UINT64_ARRAY(UNITY_TEST_ASSERT_EQUAL_UINT64_ARRAY930,66812
#define UNITY_TEST_ASSERT_EQUAL_HEX64_ARRAY(UNITY_TEST_ASSERT_EQUAL_HEX64_ARRAY931,67112
#define UNITY_TEST_ASSERT_EACH_EQUAL_INT64(UNITY_TEST_ASSERT_EACH_EQUAL_INT64932,67412
#define UNITY_TEST_ASSERT_EACH_EQUAL_UINT64(UNITY_TEST_ASSERT_EACH_EQUAL_UINT64933,67732
#define UNITY_TEST_ASSERT_EACH_EQUAL_HEX64(UNITY_TEST_ASSERT_EACH_EQUAL_HEX64934,68053
#define UNITY_TEST_ASSERT_INT64_WITHIN(UNITY_TEST_ASSERT_INT64_WITHIN935,68373
#define UNITY_TEST_ASSERT_UINT64_WITHIN(UNITY_TEST_ASSERT_UINT64_WITHIN936,68611
#define UNITY_TEST_ASSERT_HEX64_WITHIN(UNITY_TEST_ASSERT_HEX64_WITHIN937,68850
#define UNITY_TEST_ASSERT_NOT_EQUAL_INT64(UNITY_TEST_ASSERT_NOT_EQUAL_INT64938,69088
#define UNITY_TEST_ASSERT_NOT_EQUAL_UINT64(UNITY_TEST_ASSERT_NOT_EQUAL_UINT64939,69355
#define UNITY_TEST_ASSERT_NOT_EQUAL_HEX64(UNITY_TEST_ASSERT_NOT_EQUAL_HEX64940,69623
#define UNITY_TEST_ASSERT_GREATER_THAN_INT64(UNITY_TEST_ASSERT_GREATER_THAN_INT64941,69890
#define UNITY_TEST_ASSERT_GREATER_THAN_UINT64(UNITY_TEST_ASSERT_GREATER_THAN_UINT64942,70157
#define UNITY_TEST_ASSERT_GREATER_THAN_HEX64(UNITY_TEST_ASSERT_GREATER_THAN_HEX64943,70425
#define UNITY_TEST_ASSERT_GREATER_OR_EQUAL_INT64(UNITY_TEST_ASSERT_GREATER_OR_EQUAL_INT64944,70692
#define UNITY_TEST_ASSERT_GREATER_OR_EQUAL_UINT64(UNITY_TEST_ASSERT_GREATER_OR_EQUAL_UINT64945,70959
#define UNITY_TEST_ASSERT_GREATER_OR_EQUAL_HEX64(UNITY_TEST_ASSERT_GREATER_OR_EQUAL_HEX64946,71227
#define UNITY_TEST_ASSERT_SMALLER_THAN_INT64(UNITY_TEST_ASSERT_SMALLER_THAN_INT64947,71494
#define UNITY_TEST_ASSERT_SMALLER_THAN_UINT64(UNITY_TEST_ASSERT_SMALLER_THAN_UINT64948,71761
#define UNITY_TEST_ASSERT_SMALLER_THAN_HEX64(UNITY_TEST_ASSERT_SMALLER_THAN_HEX64949,72029
#define UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_INT64(UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_INT64950,72296
#define UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_UINT64(UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_UINT64951,72563
#define UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_HEX64(UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_HEX64952,72831
#define UNITY_TEST_ASSERT_INT64_ARRAY_WITHIN(UNITY_TEST_ASSERT_INT64_ARRAY_WITHIN953,73098
#define UNITY_TEST_ASSERT_UINT64_ARRAY_WITHIN(UNITY_TEST_ASSERT_UINT64_ARRAY_WITHIN954,73429
#define UNITY_TEST_ASSERT_HEX64_ARRAY_WITHIN(UNITY_TEST_ASSERT_HEX64_ARRAY_WITHIN955,73761
#define UNITY_TEST_ASSERT_EQUAL_INT64(UNITY_TEST_ASSERT_EQUAL_INT64957,74098
#define UNITY_TEST_ASSERT_EQUAL_UINT64(UNITY_TEST_ASSERT_EQUAL_UINT64958,74251
#define UNITY_TEST_ASSERT_EQUAL_HEX64(UNITY_TEST_ASSERT_EQUAL_HEX64959,74404
#define UNITY_TEST_ASSERT_EQUAL_INT64_ARRAY(UNITY_TEST_ASSERT_EQUAL_INT64_ARRAY960,74557
#define UNITY_TEST_ASSERT_EQUAL_UINT64_ARRAY(UNITY_TEST_ASSERT_EQUAL_UINT64_ARRAY961,74710
#define UNITY_TEST_ASSERT_EQUAL_HEX64_ARRAY(UNITY_TEST_ASSERT_EQUAL_HEX64_ARRAY962,74863
#define UNITY_TEST_ASSERT_INT64_WITHIN(UNITY_TEST_ASSERT_INT64_WITHIN963,75016
#define UNITY_TEST_ASSERT_UINT64_WITHIN(UNITY_TEST_ASSERT_UINT64_WITHIN964,75169
#define UNITY_TEST_ASSERT_HEX64_WITHIN(UNITY_TEST_ASSERT_HEX64_WITHIN965,75322
#define UNITY_TEST_ASSERT_GREATER_THAN_INT64(UNITY_TEST_ASSERT_GREATER_THAN_INT64966,75475
#define UNITY_TEST_ASSERT_GREATER_THAN_UINT64(UNITY_TEST_ASSERT_GREATER_THAN_UINT64967,75628
#define UNITY_TEST_ASSERT_GREATER_THAN_HEX64(UNITY_TEST_ASSERT_GREATER_THAN_HEX64968,75781
#define UNITY_TEST_ASSERT_GREATER_OR_EQUAL_INT64(UNITY_TEST_ASSERT_GREATER_OR_EQUAL_INT64969,75934
#define UNITY_TEST_ASSERT_GREATER_OR_EQUAL_UINT64(UNITY_TEST_ASSERT_GREATER_OR_EQUAL_UINT64970,76087
#define UNITY_TEST_ASSERT_GREATER_OR_EQUAL_HEX64(UNITY_TEST_ASSERT_GREATER_OR_EQUAL_HEX64971,76240
#define UNITY_TEST_ASSERT_SMALLER_THAN_INT64(UNITY_TEST_ASSERT_SMALLER_THAN_INT64972,76393
#define UNITY_TEST_ASSERT_SMALLER_THAN_UINT64(UNITY_TEST_ASSERT_SMALLER_THAN_UINT64973,76546
#define UNITY_TEST_ASSERT_SMALLER_THAN_HEX64(UNITY_TEST_ASSERT_SMALLER_THAN_HEX64974,76699
#define UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_INT64(UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_INT64975,76852
#define UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_UINT64(UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_UINT64976,77005
#define UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_HEX64(UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_HEX64977,77158
#define UNITY_TEST_ASSERT_INT64_ARRAY_WITHIN(UNITY_TEST_ASSERT_INT64_ARRAY_WITHIN978,77311
#define UNITY_TEST_ASSERT_UINT64_ARRAY_WITHIN(UNITY_TEST_ASSERT_UINT64_ARRAY_WITHIN979,77468
#define UNITY_TEST_ASSERT_HEX64_ARRAY_WITHIN(UNITY_TEST_ASSERT_HEX64_ARRAY_WITHIN980,77625
#define UNITY_TEST_ASSERT_FLOAT_WITHIN(UNITY_TEST_ASSERT_FLOAT_WITHIN984,77817
#define UNITY_TEST_ASSERT_EQUAL_FLOAT(UNITY_TEST_ASSERT_EQUAL_FLOAT985,77973
#define UNITY_TEST_ASSERT_EQUAL_FLOAT_ARRAY(UNITY_TEST_ASSERT_EQUAL_FLOAT_ARRAY986,78129
#define UNITY_TEST_ASSERT_EACH_EQUAL_FLOAT(UNITY_TEST_ASSERT_EACH_EQUAL_FLOAT987,78285
#define UNITY_TEST_ASSERT_FLOAT_IS_INF(UNITY_TEST_ASSERT_FLOAT_IS_INF988,78441
#define UNITY_TEST_ASSERT_FLOAT_IS_NEG_INF(UNITY_TEST_ASSERT_FLOAT_IS_NEG_INF989,78597
#define UNITY_TEST_ASSERT_FLOAT_IS_NAN(UNITY_TEST_ASSERT_FLOAT_IS_NAN990,78753
#define UNITY_TEST_ASSERT_FLOAT_IS_DETERMINATE(UNITY_TEST_ASSERT_FLOAT_IS_DETERMINATE991,78909
#define UNITY_TEST_ASSERT_FLOAT_IS_NOT_INF(UNITY_TEST_ASSERT_FLOAT_IS_NOT_INF992,79065
#define UNITY_TEST_ASSERT_FLOAT_IS_NOT_NEG_INF(UNITY_TEST_ASSERT_FLOAT_IS_NOT_NEG_INF993,79221
#define UNITY_TEST_ASSERT_FLOAT_IS_NOT_NAN(UNITY_TEST_ASSERT_FLOAT_IS_NOT_NAN994,79377
#define UNITY_TEST_ASSERT_FLOAT_IS_NOT_DETERMINATE(UNITY_TEST_ASSERT_FLOAT_IS_NOT_DETERMINATE995,79533
#define UNITY_TEST_ASSERT_FLOAT_WITHIN(UNITY_TEST_ASSERT_FLOAT_WITHIN997,79695
#define UNITY_TEST_ASSERT_EQUAL_FLOAT(UNITY_TEST_ASSERT_EQUAL_FLOAT998,79922
#define UNITY_TEST_ASSERT_EQUAL_FLOAT_ARRAY(UNITY_TEST_ASSERT_EQUAL_FLOAT_ARRAY999,80196
#define UNITY_TEST_ASSERT_EACH_EQUAL_FLOAT(UNITY_TEST_ASSERT_EACH_EQUAL_FLOAT1000,80458
#define UNITY_TEST_ASSERT_FLOAT_IS_INF(UNITY_TEST_ASSERT_FLOAT_IS_INF1001,80719
#define UNITY_TEST_ASSERT_FLOAT_IS_NEG_INF(UNITY_TEST_ASSERT_FLOAT_IS_NEG_INF1002,80919
#define UNITY_TEST_ASSERT_FLOAT_IS_NAN(UNITY_TEST_ASSERT_FLOAT_IS_NAN1003,81123
#define UNITY_TEST_ASSERT_FLOAT_IS_DETERMINATE(UNITY_TEST_ASSERT_FLOAT_IS_DETERMINATE1004,81323
#define UNITY_TEST_ASSERT_FLOAT_IS_NOT_INF(UNITY_TEST_ASSERT_FLOAT_IS_NOT_INF1005,81523
#define UNITY_TEST_ASSERT_FLOAT_IS_NOT_NEG_INF(UNITY_TEST_ASSERT_FLOAT_IS_NOT_NEG_INF1006,81727
#define UNITY_TEST_ASSERT_FLOAT_IS_NOT_NAN(UNITY_TEST_ASSERT_FLOAT_IS_NOT_NAN1007,81935
#define UNITY_TEST_ASSERT_FLOAT_IS_NOT_DETERMINATE(UNITY_TEST_ASSERT_FLOAT_IS_NOT_DETERMINATE1008,82139
#define UNITY_TEST_ASSERT_DOUBLE_WITHIN(UNITY_TEST_ASSERT_DOUBLE_WITHIN1012,82379
#define UNITY_TEST_ASSERT_EQUAL_DOUBLE(UNITY_TEST_ASSERT_EQUAL_DOUBLE1013,82536
#define UNITY_TEST_ASSERT_EQUAL_DOUBLE_ARRAY(UNITY_TEST_ASSERT_EQUAL_DOUBLE_ARRAY1014,82693
#define UNITY_TEST_ASSERT_EACH_EQUAL_DOUBLE(UNITY_TEST_ASSERT_EACH_EQUAL_DOUBLE1015,82850
#define UNITY_TEST_ASSERT_DOUBLE_IS_INF(UNITY_TEST_ASSERT_DOUBLE_IS_INF1016,83007
#define UNITY_TEST_ASSERT_DOUBLE_IS_NEG_INF(UNITY_TEST_ASSERT_DOUBLE_IS_NEG_INF1017,83164
#define UNITY_TEST_ASSERT_DOUBLE_IS_NAN(UNITY_TEST_ASSERT_DOUBLE_IS_NAN1018,83321
#define UNITY_TEST_ASSERT_DOUBLE_IS_DETERMINATE(UNITY_TEST_ASSERT_DOUBLE_IS_DETERMINATE1019,83478
#define UNITY_TEST_ASSERT_DOUBLE_IS_NOT_INF(UNITY_TEST_ASSERT_DOUBLE_IS_NOT_INF1020,83635
#define UNITY_TEST_ASSERT_DOUBLE_IS_NOT_NEG_INF(UNITY_TEST_ASSERT_DOUBLE_IS_NOT_NEG_INF1021,83792
#define UNITY_TEST_ASSERT_DOUBLE_IS_NOT_NAN(UNITY_TEST_ASSERT_DOUBLE_IS_NOT_NAN1022,83949
#define UNITY_TEST_ASSERT_DOUBLE_IS_NOT_DETERMINATE(UNITY_TEST_ASSERT_DOUBLE_IS_NOT_DETERMINATE1023,84106
#define UNITY_TEST_ASSERT_DOUBLE_WITHIN(UNITY_TEST_ASSERT_DOUBLE_WITHIN1025,84269
#define UNITY_TEST_ASSERT_EQUAL_DOUBLE(UNITY_TEST_ASSERT_EQUAL_DOUBLE1026,84500
#define UNITY_TEST_ASSERT_EQUAL_DOUBLE_ARRAY(UNITY_TEST_ASSERT_EQUAL_DOUBLE_ARRAY1027,84780
#define UNITY_TEST_ASSERT_EACH_EQUAL_DOUBLE(UNITY_TEST_ASSERT_EACH_EQUAL_DOUBLE1028,85045
#define UNITY_TEST_ASSERT_DOUBLE_IS_INF(UNITY_TEST_ASSERT_DOUBLE_IS_INF1029,85309
#define UNITY_TEST_ASSERT_DOUBLE_IS_NEG_INF(UNITY_TEST_ASSERT_DOUBLE_IS_NEG_INF1030,85511
#define UNITY_TEST_ASSERT_DOUBLE_IS_NAN(UNITY_TEST_ASSERT_DOUBLE_IS_NAN1031,85717
#define UNITY_TEST_ASSERT_DOUBLE_IS_DETERMINATE(UNITY_TEST_ASSERT_DOUBLE_IS_DETERMINATE1032,85919
#define UNITY_TEST_ASSERT_DOUBLE_IS_NOT_INF(UNITY_TEST_ASSERT_DOUBLE_IS_NOT_INF1033,86121
#define UNITY_TEST_ASSERT_DOUBLE_IS_NOT_NEG_INF(UNITY_TEST_ASSERT_DOUBLE_IS_NOT_NEG_INF1034,86327
#define UNITY_TEST_ASSERT_DOUBLE_IS_NOT_NAN(UNITY_TEST_ASSERT_DOUBLE_IS_NOT_NAN1035,86537
#define UNITY_TEST_ASSERT_DOUBLE_IS_NOT_DETERMINATE(UNITY_TEST_ASSERT_DOUBLE_IS_NOT_DETERMINATE1036,86743

lib/lvgl/tests/unity/type_sanitizer.rb,112
module TypeSanitizerTypeSanitizer1,0
  def self.sanitize_c_identifier(unsanitized)sanitize_c_identifier2,21

lib/lvgl/tests/src/lv_test_indev.c,1563
static lv_coord_t x_act;x_act10,155
static lv_coord_t y_act;y_act11,180
static uint32_t key_act;key_act12,205
static int32_t diff_act;diff_act13,230
static bool mouse_pressed;mouse_pressed14,255
static bool key_pressed;key_pressed15,282
static bool enc_pressed;enc_pressed16,307
void lv_test_mouse_read_cb(lv_indev_drv_t * drv, lv_indev_data_t * data) lv_test_mouse_read_cb18,333
void lv_test_mouse_move_to(lv_coord_t x, lv_coord_t y)lv_test_mouse_move_to26,562
void lv_test_mouse_move_by(lv_coord_t x, lv_coord_t y)lv_test_mouse_move_by32,650
void lv_test_mouse_press(void)lv_test_mouse_press38,738
void lv_test_mouse_release(void)lv_test_mouse_release43,798
void lv_test_mouse_click_at(lv_coord_t x, lv_coord_t y)lv_test_mouse_click_at48,861
void lv_test_keypad_read_cb(lv_indev_drv_t * drv, lv_indev_data_t * data) lv_test_keypad_read_cb60,1112
void lv_test_key_press(uint32_t k)lv_test_key_press67,1313
void lv_test_key_release(void)lv_test_key_release73,1390
void lv_test_key_hit(uint32_t k)lv_test_key_hit78,1449
void lv_test_encoder_read_cb(lv_indev_drv_t * drv, lv_indev_data_t * data) lv_test_encoder_read_cb89,1664
void lv_test_encoder_add_diff(int32_t d)lv_test_encoder_add_diff97,1888
void lv_test_encoder_turn(int32_t d)lv_test_encoder_turn102,1951
void lv_test_encoder_press(void)lv_test_encoder_press109,2037
void lv_test_encoder_release(void)lv_test_encoder_release114,2097
void lv_test_encoder_click(void)lv_test_encoder_click119,2160
void lv_test_indev_wait(uint32_t ms)lv_test_indev_wait130,2362

lib/lvgl/tests/src/lv_test_init.h,43
#define LV_TEST_INIT_HLV_TEST_INIT_H3,24

lib/lvgl/tests/src/lv_test_init.c,1179
#define HOR_RES HOR_RES9,134
#define VER_RES VER_RES10,154
lv_indev_t * lv_test_mouse_indev;lv_test_mouse_indev15,304
lv_indev_t * lv_test_keypad_indev;lv_test_keypad_indev16,338
lv_indev_t * lv_test_encoder_indev;lv_test_encoder_indev17,373
lv_color_t test_fb[HOR_RES * VER_RES];test_fb19,410
static lv_color_t disp_buf1[HOR_RES * VER_RES];disp_buf120,449
void lv_test_init(void)lv_test_init22,498
void lv_test_deinit(void)lv_test_deinit28,558
static void * open_cb(lv_fs_drv_t * drv, const char * path, lv_fs_mode_t mode)open_cb33,610
static lv_fs_res_t close_cb(lv_fs_drv_t * drv, void * file_p)close_cb43,808
static lv_fs_res_t read_cb(lv_fs_drv_t * drv, void * file_p, void * buf, uint32_t btr, uint32_t * br)read_cb51,937
static lv_fs_res_t seek_cb(lv_fs_drv_t * drv, void * file_p, uint32_t pos, lv_fs_whence_t w)seek_cb59,1157
static lv_fs_res_t tell_cb(lv_fs_drv_t * drv, void * file_p, uint32_t * pos_p)tell_cb83,1592
static void hal_init(void)hal_init92,1747
static void dummy_flush_cb(lv_disp_drv_t * disp_drv, const lv_area_t * area, lv_color_t * color_p)dummy_flush_cb138,3590
uint32_t custom_tick_get(void)custom_tick_get148,3851

lib/lvgl/tests/src/test_fonts/font_2.c,744
#define FONT_2 FONT_211,827
static LV_ATTRIBUTE_LARGE_CONST const uint8_t gylph_bitmap[] = {gylph_bitmap21,954
static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {glyph_dsc747,22109
static const uint16_t unicode_list_1[] = {unicode_list_1909,36112
static const lv_font_fmt_txt_cmap_t cmaps[] =cmaps921,36710
static const uint8_t kern_left_class_mapping[] =kern_left_class_mapping938,37267
static const uint8_t kern_right_class_mapping[] =kern_right_class_mapping963,37979
static const int8_t kern_class_values[] =kern_class_values988,38684
static const lv_font_fmt_txt_kern_classes_t kern_classes =kern_classes1367,50095
static lv_font_fmt_txt_dsc_t font_dsc = {font_dsc1381,50484
lv_font_t font_2 = {font_21398,50850

lib/lvgl/tests/src/test_fonts/font_1.c,744
#define FONT_1 FONT_111,773
static LV_ATTRIBUTE_LARGE_CONST const uint8_t gylph_bitmap[] = {gylph_bitmap21,900
static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {glyph_dsc717,20477
static const uint16_t unicode_list_1[] = {unicode_list_1879,34474
static const lv_font_fmt_txt_cmap_t cmaps[] =cmaps891,35072
static const uint8_t kern_left_class_mapping[] =kern_left_class_mapping908,35629
static const uint8_t kern_right_class_mapping[] =kern_right_class_mapping933,36341
static const int8_t kern_class_values[] =kern_class_values958,37046
static const lv_font_fmt_txt_kern_classes_t kern_classes =kern_classes1337,48457
static lv_font_fmt_txt_dsc_t font_dsc = {font_dsc1351,48846
lv_font_t font_1 = {font_11368,49212

lib/lvgl/tests/src/test_fonts/font_3.c,353
#define FONT_3 FONT_311,364
static LV_ATTRIBUTE_LARGE_CONST const uint8_t gylph_bitmap[] = {gylph_bitmap21,491
static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {glyph_dsc802,29922
static const lv_font_fmt_txt_cmap_t cmaps[] =cmaps906,38910
static lv_font_fmt_txt_dsc_t font_dsc = {font_dsc919,39270
lv_font_t font_3 = {font_3936,39626

lib/lvgl/tests/src/lv_test_indev.h,45
#define LV_TEST_INDEV_HLV_TEST_INDEV_H3,25

lib/lvgl/tests/src/test_cases/test_checkbox.c,842
static lv_obj_t *active_screen = NULL;active_screen14,412
static lv_obj_t *checkbox = NULL;checkbox15,451
static volatile bool event_called = false;event_called17,486
static void event_handler(lv_event_t *e)event_handler19,530
void test_checkbox_creation_successfull(void)test_checkbox_creation_successfull28,703
void test_checkbox_should_call_event_handler_on_click_when_enabled(void)test_checkbox_should_call_event_handler_on_click_when_enabled36,875
void test_checkbox_should_have_default_text_when_created(void)test_checkbox_should_have_default_text_when_created51,1301
void test_checkbox_should_return_dinamically_allocated_text(void)test_checkbox_should_return_dinamically_allocated_text62,1633
void test_checkbox_should_allocate_memory_for_static_text(void)test_checkbox_should_allocate_memory_for_static_text75,2007

lib/lvgl/tests/src/test_cases/test_dropdown.c,629
void test_dropdown_create_delete(void)test_dropdown_create_delete16,374
void test_dropdown_set_options(void)test_dropdown_set_options49,1555
void test_dropdown_select(void)test_dropdown_select115,4173
void test_dropdown_click(void)test_dropdown_click136,4745
static uint32_t event_cnt;event_cnt153,5339
static void dd_event(lv_event_t * e) dd_event154,5366
void test_dropdown_keypad(void)test_dropdown_keypad160,5440
void test_dropdown_encoder(void)test_dropdown_encoder263,8891
void test_dropdown_render_1(void)test_dropdown_render_1320,10570
void test_dropdown_render_2(void)test_dropdown_render_2366,12254

lib/lvgl/tests/src/test_cases/test_arc.c,1260
static lv_obj_t *active_screen = NULL;active_screen18,635
static lv_obj_t *arc = NULL;arc19,674
static uint32_t event_cnt;event_cnt20,703
void setUp(void)setUp24,776
void test_arc_creation_successfull(void)test_arc_creation_successfull29,832
void test_arc_should_truncate_to_max_range_when_new_value_exceeds_it(void)test_arc_should_truncate_to_max_range_when_new_value_exceeds_it36,950
void test_arc_should_truncate_to_min_range_when_new_value_is_inferior(void)test_arc_should_truncate_to_min_range_when_new_value_is_inferior48,1258
void test_arc_should_update_value_after_updating_range(void)test_arc_should_update_value_after_updating_range60,1563
void test_arc_should_update_angles_when_changing_to_symmetrical_mode(void)test_arc_should_update_angles_when_changing_to_symmetrical_mode78,2071
void test_arc_should_update_angles_when_changing_to_symmetrical_mode_value_more_than_middle_range(void)test_arc_should_update_angles_when_changing_to_symmetrical_mode_value_more_than_middle_range91,2536
void test_arc_angles_when_reversed(void)test_arc_angles_when_reversed106,3098
void test_arc_click_area_with_adv_hittest(void)test_arc_click_area_with_adv_hittest126,3716
static void dummy_event_cb(lv_event_t * e) dummy_event_cb161,4831

lib/lvgl/tests/src/test_cases/test_style.c,0

lib/lvgl/tests/src/test_cases/test_txt.c,2366
static const char color_cmd = LV_TXT_COLOR_CMD[0];color_cmd6,66
void test_txt_should_identify_valid_start_of_command(void)test_txt_should_identify_valid_start_of_command8,118
void test_txt_should_identify_invalid_start_of_command(void)test_txt_should_identify_invalid_start_of_command19,418
void test_txt_should_identify_scaped_command_in_parameter(void)test_txt_should_identify_scaped_command_in_parameter30,716
void test_txt_should_skip_color_parameter_in_parameter(void)test_txt_should_skip_color_parameter_in_parameter41,1022
void test_txt_should_reset_state_when_receiving_color_cmd_while_processing_commands(void)test_txt_should_reset_state_when_receiving_color_cmd_while_processing_commands52,1317
void test_txt_should_identify_space_after_parameter(void)test_txt_should_identify_space_after_parameter63,1647
void test_txt_should_insert_string_into_another(void)test_txt_should_insert_string_into_another74,1938
void test_txt_should_handle_null_pointers_when_inserting(void)test_txt_should_handle_null_pointers_when_inserting88,2247
void test_txt_cut_should_handle_null_pointer_to_txt(void)test_txt_cut_should_handle_null_pointer_to_txt101,2524
void test_txt_cut_happy_path(void)test_txt_cut_happy_path106,2616
void test_txt_cut_should_handle_len_longer_than_string_length(void)test_txt_cut_should_handle_len_longer_than_string_length115,2762
void test_txt_get_encoded_next_should_decode_valid_ascii(void)test_txt_get_encoded_next_should_decode_valid_ascii124,2941
void test_txt_get_encoded_next_detect_valid_2_byte_input(void)test_txt_get_encoded_next_detect_valid_2_byte_input134,3169
void test_txt_get_encoded_next_detect_invalid_2_byte_input(void)test_txt_get_encoded_next_detect_invalid_2_byte_input144,3382
void test_txt_get_encoded_next_detect_valid_3_byte_input(void)test_txt_get_encoded_next_detect_valid_3_byte_input154,3595
void test_txt_get_encoded_next_detect_invalid_3_byte_input(void)test_txt_get_encoded_next_detect_invalid_3_byte_input164,3813
void test_txt_get_encoded_next_detect_valid_4_byte_input(void)test_txt_get_encoded_next_detect_valid_4_byte_input174,4030
void test_txt_get_encoded_next_detect_invalid_4_byte_input(void)test_txt_get_encoded_next_detect_invalid_4_byte_input184,4253
void test_txt_next_line_should_handle_empty_string(void)test_txt_next_line_should_handle_empty_string195,4511

lib/lvgl/tests/src/test_cases/test_config.c,40
void test_config(void)test_config8,91

lib/lvgl/tests/src/test_cases/test_font_loader.c,131
void test_font_loader(void)test_font_loader46,749
static int compare_fonts(lv_font_t * f1, lv_font_t * f2)compare_fonts61,1216

lib/lvgl/tests/src/test_cases/_test_template.c,108
void setUp(void)setUp11,131
void tearDown(void)tearDown16,194
void test_func_1(void)test_func_121,259

lib/lvgl/tests/src/test_cases/test_obj_tree.c,99
void test_obj_tree_1(void)test_obj_tree_19,123
void test_obj_tree_2(void)test_obj_tree_214,215

lib/lvgl/tests/src/lv_test_conf.h,170
#define LV_TEST_CONF_HLV_TEST_CONF_H7,59
#define LV_TICK_CUSTOM_SYS_TIME_EXPR LV_TICK_CUSTOM_SYS_TIME_EXPR26,351
typedef void * lv_user_data_t;lv_user_data_t28,407

lib/lvgl/src/extra/themes/basic/lv_theme_basic.h,47
#define LV_THEME_BASIC_HLV_THEME_BASIC_H7,63

lib/lvgl/src/extra/themes/basic/lv_theme_basic.c,1230
#define COLOR_WHITE COLOR_WHITE20,307
#define COLOR_LIGHT COLOR_LIGHT21,346
#define COLOR_MID COLOR_MID22,407
#define COLOR_DARK COLOR_DARK23,468
#define COLOR_DIM COLOR_DIM24,523
#define PAD_DEF PAD_DEF25,583
    lv_style_t scr;scr31,699
    lv_style_t light;light32,719
    lv_style_t dark;dark33,741
    lv_style_t scrollbar;scrollbar34,762
    lv_style_t pressed;pressed35,788
    lv_style_t disabled;disabled36,812
    lv_style_t pad_zero;pad_zero37,837
    lv_style_t ta_cursor;ta_cursor39,882
} my_theme_styles_t;my_theme_styles_t41,915
static my_theme_styles_t * styles;styles53,1188
static lv_theme_t theme;theme54,1223
static bool inited;inited55,1248
static lv_color_t dark_color_filter_cb(const lv_color_filter_dsc_t * f, lv_color_t c, lv_opa_t opa)dark_color_filter_cb65,1406
static lv_color_t grey_filter_cb(const lv_color_filter_dsc_t * f, lv_color_t color, lv_opa_t opa)grey_filter_cb72,1566
static void style_init(void)style_init78,1742
lv_theme_t * lv_theme_basic_init(lv_disp_t * disp)lv_theme_basic_init149,4625
static void theme_apply(lv_theme_t * th, lv_obj_t * obj)theme_apply176,5446
static void style_init_reset(lv_style_t * style)style_init_reset418,14002

lib/lvgl/src/extra/themes/lv_themes.h,37
#define LV_THEMES_HLV_THEMES_H7,53

lib/lvgl/src/extra/themes/mono/lv_theme_mono.h,53
#define LV_USE_THEME_MONO_HLV_USE_THEME_MONO_H7,65

lib/lvgl/src/extra/themes/mono/lv_theme_mono.c,1516
#define COLOR_FG COLOR_FG20,277
#define COLOR_BG COLOR_BG21,345
#define BORDER_W_NORMAL BORDER_W_NORMAL23,414
#define BORDER_W_PR BORDER_W_PR24,441
#define BORDER_W_DIS BORDER_W_DIS25,468
#define BORDER_W_FOCUS BORDER_W_FOCUS26,495
#define BORDER_W_EDIT BORDER_W_EDIT27,522
#define PAD_DEF PAD_DEF28,549
    lv_style_t scr;scr34,660
    lv_style_t card;card35,680
    lv_style_t scrollbar;scrollbar36,701
    lv_style_t btn;btn37,727
    lv_style_t pr;pr38,747
    lv_style_t inv;inv39,766
    lv_style_t disabled;disabled40,786
    lv_style_t focus;focus41,811
    lv_style_t edit;edit42,833
    lv_style_t pad_gap;pad_gap43,854
    lv_style_t pad_zero;pad_zero44,878
    lv_style_t no_radius;no_radius45,903
    lv_style_t radius_circle;radius_circle46,929
    lv_style_t large_border;large_border47,959
    lv_style_t large_line_space;large_line_space48,988
    lv_style_t underline;underline49,1021
    lv_style_t ta_cursor;ta_cursor51,1067
} my_theme_styles_t;my_theme_styles_t53,1100
static my_theme_styles_t * styles;styles65,1373
static lv_theme_t theme;theme66,1408
static bool inited;inited67,1433
static void style_init(bool dark_bg, const lv_font_t * font)style_init77,1591
lv_theme_t * lv_theme_mono_init(lv_disp_t * disp, bool dark_bg, const lv_font_t * font)lv_theme_mono_init167,5063
static void theme_apply(lv_theme_t * th, lv_obj_t * obj)theme_apply194,5934
static void style_init_reset(lv_style_t * style)style_init_reset488,18333

lib/lvgl/src/extra/themes/default/lv_theme_default.c,5829
#define MODE_DARK MODE_DARK19,312
#define RADIUS_DEFAULT RADIUS_DEFAULT20,332
#define LIGHT_COLOR_SCR LIGHT_COLOR_SCR23,452
#define LIGHT_COLOR_CARD LIGHT_COLOR_CARD24,522
#define LIGHT_COLOR_TEXT LIGHT_COLOR_TEXT25,570
#define LIGHT_COLOR_GREY LIGHT_COLOR_GREY26,639
#define DARK_COLOR_SCR DARK_COLOR_SCR27,709
#define DARK_COLOR_CARD DARK_COLOR_CARD28,763
#define DARK_COLOR_TEXT DARK_COLOR_TEXT29,817
#define DARK_COLOR_GREY DARK_COLOR_GREY30,887
#define TRANSITION_TIME TRANSITION_TIME32,942
#define BORDER_WIDTH BORDER_WIDTH33,1007
#define OUTLINE_WIDTH OUTLINE_WIDTH34,1066
#define PAD_DEF PAD_DEF36,1126
#define PAD_SMALL PAD_SMALL37,1289
#define PAD_TINY PAD_TINY38,1452
    lv_style_t scr;scr44,1695
    lv_style_t scrollbar;scrollbar45,1715
    lv_style_t scrollbar_scrolled;scrollbar_scrolled46,1741
    lv_style_t card;card47,1776
    lv_style_t btn;btn48,1797
    lv_style_t bg_color_primary;bg_color_primary51,1834
    lv_style_t bg_color_primary_muted;bg_color_primary_muted52,1867
    lv_style_t bg_color_secondary;bg_color_secondary53,1906
    lv_style_t bg_color_secondary_muted;bg_color_secondary_muted54,1941
    lv_style_t bg_color_grey;bg_color_grey55,1982
    lv_style_t bg_color_white;bg_color_white56,2012
    lv_style_t pressed;pressed57,2043
    lv_style_t disabled;disabled58,2067
    lv_style_t pad_zero;pad_zero59,2092
    lv_style_t pad_tiny;pad_tiny60,2117
    lv_style_t pad_small;pad_small61,2142
    lv_style_t pad_normal;pad_normal62,2168
    lv_style_t pad_gap;pad_gap63,2195
    lv_style_t line_space_large;line_space_large64,2219
    lv_style_t text_align_center;text_align_center65,2252
    lv_style_t outline_primary;outline_primary66,2286
    lv_style_t outline_secondary;outline_secondary67,2318
    lv_style_t circle;circle68,2352
    lv_style_t no_radius;no_radius69,2375
    lv_style_t clip_corner;clip_corner70,2401
    lv_style_t grow;grow72,2455
    lv_style_t transition_delayed;transition_delayed74,2483
    lv_style_t transition_normal;transition_normal75,2518
    lv_style_t anim;anim76,2552
    lv_style_t anim_fast;anim_fast77,2573
    lv_style_t knob;knob80,2614
    lv_style_t indic;indic81,2635
    lv_style_t arc_indic;arc_indic84,2673
    lv_style_t arc_indic_primary;arc_indic_primary85,2699
    lv_style_t chart_series, chart_indic, chart_ticks, chart_bg;chart_series89,2758
    lv_style_t chart_series, chart_indic, chart_ticks, chart_bg;chart_indic89,2758
    lv_style_t chart_series, chart_indic, chart_ticks, chart_bg;chart_ticks89,2758
    lv_style_t chart_series, chart_indic, chart_ticks, chart_bg;chart_bg89,2758
    lv_style_t dropdown_list;dropdown_list93,2851
    lv_style_t cb_marker, cb_marker_checked;cb_marker97,2909
    lv_style_t cb_marker, cb_marker_checked;cb_marker_checked97,2909
    lv_style_t switch_knob;switch_knob101,2980
    lv_style_t line;line105,3032
    lv_style_t table_cell;table_cell109,3078
    lv_style_t meter_marker, meter_indic;meter_marker113,3130
    lv_style_t meter_marker, meter_indic;meter_indic113,3130
    lv_style_t ta_cursor, ta_placeholder;ta_cursor117,3200
    lv_style_t ta_cursor, ta_placeholder;ta_placeholder117,3200
    lv_style_t calendar_btnm_bg, calendar_btnm_day, calendar_header;calendar_btnm_bg121,3270
    lv_style_t calendar_btnm_bg, calendar_btnm_day, calendar_header;calendar_btnm_day121,3270
    lv_style_t calendar_btnm_bg, calendar_btnm_day, calendar_header;calendar_header121,3270
    lv_style_t colorwheel_main;colorwheel_main125,3369
    lv_style_t msgbox_bg, msgbox_btn_bg, msgbox_backdrop_bg;msgbox_bg129,3427
    lv_style_t msgbox_bg, msgbox_btn_bg, msgbox_backdrop_bg;msgbox_btn_bg129,3427
    lv_style_t msgbox_bg, msgbox_btn_bg, msgbox_backdrop_bg;msgbox_backdrop_bg129,3427
    lv_style_t keyboard_btn_bg;keyboard_btn_bg133,3516
    lv_style_t list_bg, list_btn, list_item_grow, list_label;list_bg137,3572
    lv_style_t list_bg, list_btn, list_item_grow, list_label;list_btn137,3572
    lv_style_t list_bg, list_btn, list_item_grow, list_label;list_item_grow137,3572
    lv_style_t list_bg, list_btn, list_item_grow, list_label;list_label137,3572
    lv_style_t tab_bg_focus, tab_btn;tab_bg_focus141,3661
    lv_style_t tab_bg_focus, tab_btn;tab_btn141,3661
    lv_style_t led;led144,3721
} my_theme_styles_t;my_theme_styles_t146,3748
    lv_theme_t base;base149,3787
    uint8_t light : 1;light150,3808
} my_theme_t;my_theme_t151,3831
    DISP_SMALL = 3,DISP_SMALL154,3861
    DISP_MEDIUM = 2,DISP_MEDIUM155,3881
    DISP_LARGE = 1,DISP_LARGE156,3902
} disp_size_t;disp_size_t157,3922
static my_theme_styles_t * styles;styles168,4188
static lv_theme_t theme;theme169,4223
static disp_size_t disp_size;disp_size170,4248
static bool inited;inited171,4278
static lv_color_t color_scr;color_scr172,4298
static lv_color_t color_text;color_text173,4327
static lv_color_t color_card;color_card174,4357
static lv_color_t color_grey;color_grey175,4387
static lv_color_t dark_color_filter_cb(const lv_color_filter_dsc_t * f, lv_color_t c, lv_opa_t opa)dark_color_filter_cb187,4557
static lv_color_t grey_filter_cb(const lv_color_filter_dsc_t * f, lv_color_t color, lv_opa_t opa)grey_filter_cb193,4716
static void style_init(void)style_init200,5023
lv_theme_t * lv_theme_default_init(lv_disp_t * disp, lv_color_t color_primary, lv_color_t color_secondary, bool dark,lv_theme_default_init577,22427
lv_theme_t * lv_theme_default_get(void)lv_theme_default_get611,23605
bool lv_theme_default_is_inited(void)lv_theme_default_is_inited618,23713
static void theme_apply(lv_theme_t * th, lv_obj_t * obj)theme_apply624,23776
static void style_init_reset(lv_style_t * style)style_init_reset1050,43448

lib/lvgl/src/extra/themes/default/lv_theme_default.h,51
#define LV_THEME_DEFAULT_HLV_THEME_DEFAULT_H7,67

lib/lvgl/src/extra/lv_extra.h,35
#define LV_EXTRA_HLV_EXTRA_H7,51

lib/lvgl/src/extra/extra.mk,0

lib/lvgl/src/extra/libs/rlottie/lv_rlottie.c,924
#define MY_CLASS MY_CLASS16,207
const lv_obj_class_t lv_rlottie_class = {lv_rlottie_class32,664
static lv_coord_t create_width;create_width39,875
static lv_coord_t create_height;create_height40,907
static const char* rlottie_desc_create;rlottie_desc_create41,940
static const char* path_create;path_create42,980
lv_obj_t* lv_rlottie_create_from_file(lv_obj_t* parent, lv_coord_t width, lv_coord_t height, const char* path)lv_rlottie_create_from_file52,1153
lv_obj_t* lv_rlottie_create_from_raw(lv_obj_t* parent, lv_coord_t width, lv_coord_t height, const char* rlottie_desc)lv_rlottie_create_from_raw68,1521
static void lv_rlottie_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)lv_rlottie_constructor87,1975
static void lv_rlottie_destructor(const lv_obj_class_t * class_p, lv_obj_t* obj)lv_rlottie_destructor132,3534
static void next_frame_task_cb(lv_timer_t* t)next_frame_task_cb159,4203

lib/lvgl/src/extra/libs/rlottie/lv_rlottie.h,527
#define LV_RLOTTIE_HLV_RLOTTIE_H7,55
    lv_img_t img_ext;img_ext29,402
    Lottie_Animation* animation;animation30,424
    lv_timer_t* task;task31,457
    lv_img_dsc_t imgdsc;imgdsc32,479
    size_t total_frames;total_frames33,504
    size_t current_frame;current_frame34,529
    size_t framerate;framerate35,555
    uint32_t* allocated_buf;allocated_buf36,577
    size_t allocated_buffer_size;allocated_buffer_size37,606
    size_t scanline_width;scanline_width38,640
}lv_rlottie_t;lv_rlottie_t39,667

lib/lvgl/src/extra/libs/bmp/lv_bmp.h,31
#define LV_BMP_HLV_BMP_H7,49

lib/lvgl/src/extra/libs/bmp/lv_bmp.c,747
    lv_fs_file_t f;f23,306
    unsigned int px_offset;px_offset24,326
    int px_width;px_width25,354
    int px_height;px_height26,372
    unsigned int bpp;bpp27,391
    int row_size_bytes;row_size_bytes28,413
} bmp_dsc_t;bmp_dsc_t29,437
void lv_bmp_init(void)lv_bmp_init54,1195
static lv_res_t decoder_info(lv_img_decoder_t * decoder, const void * src, lv_img_header_t * header)decoder_info73,1758
static lv_res_t decoder_open(lv_img_decoder_t * decoder, lv_img_decoder_dsc_t * dsc)decoder_open124,3535
static lv_res_t decoder_read_line(lv_img_decoder_t * decoder, lv_img_decoder_dsc_t * dsc,decoder_read_line171,4981
static void decoder_close(lv_img_decoder_t * decoder, lv_img_decoder_dsc_t * dsc)decoder_close219,6341

lib/lvgl/src/extra/libs/gif/lv_gif.c,581
#define MY_CLASS MY_CLASS17,217
const lv_obj_class_t lv_gif_class = {lv_gif_class34,669
lv_obj_t * lv_gif_create(lv_obj_t * parent)lv_gif_create49,1001
void lv_gif_set_src(lv_obj_t * obj, const void * src)lv_gif_set_src58,1189
void lv_gif_restart(lv_obj_t * obj)lv_gif_restart98,2314
static void lv_gif_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)lv_gif_constructor108,2497
static void lv_gif_destructor(const lv_obj_class_t * class_p, lv_obj_t * obj)lv_gif_destructor118,2750
static void next_frame_task_cb(lv_timer_t * t)next_frame_task_cb127,3013

lib/lvgl/src/extra/libs/gif/gifdec.c,1996
#define MIN(MIN11,202
#define MAX(MAX12,244
typedef struct Entry {Entry14,287
    uint16_t length;length15,310
    uint16_t prefix;prefix16,331
    uint8_t  suffix;suffix17,352
} Entry;Entry18,373
typedef struct Table {Table20,383
    int bulk;bulk21,406
    int nentries;nentries22,420
    Entry *entries;entries23,438
} Table;Table24,458
read_num(gd_GIF * gif)read_num33,754
gd_open_gif_file(const char *fname)gd_open_gif_file44,899
gd_open_gif_data(const void *data)gd_open_gif_data57,1126
static gd_GIF * gif_open(gd_GIF * gif_base)gif_open68,1342
discard_sub_blocks(gd_GIF *gif)discard_sub_blocks167,4443
read_plain_text_ext(gd_GIF *gif)read_plain_text_ext178,4622
read_graphic_control_ext(gd_GIF *gif)read_graphic_control_ext205,5447
read_comment_ext(gd_GIF *gif)read_comment_ext222,5897
read_application_ext(gd_GIF *gif)read_application_ext234,6183
read_ext(gd_GIF *gif)read_ext262,7091
new_table(int key_size)new_table286,7541
add_entry(Table **tablep, uint16_t length, uint16_t prefix, uint8_t suffix)add_entry306,8149
get_key(gd_GIF *gif, int key_size, uint8_t *sub_len, uint8_t *shift, uint8_t *byte)get_key324,8718
interlaced_line_index(int h, int y)interlaced_line_index354,9628
read_image_data(gd_GIF *gif, int interlace)read_image_data377,10140
read_image(gd_GIF *gif)read_image451,12594
render_frame_rect(gd_GIF *gif, uint8_t *buffer)render_frame_rect477,13241
dispose(gd_GIF *gif)dispose513,14628
gd_get_frame(gd_GIF *gif)gd_get_frame560,16360
gd_render_frame(gd_GIF *gif, uint8_t *buffer)gd_render_frame580,16709
gd_rewind(gd_GIF *gif)gd_rewind595,17153
gd_close_gif(gd_GIF *gif)gd_close_gif601,17240
static bool f_gif_open(gd_GIF * gif, const void * path, bool is_file)f_gif_open607,17315
static void f_gif_read(gd_GIF * gif, void * buf, size_t len)f_gif_read623,17687
static int f_gif_seek(gd_GIF * gif, size_t pos, int k)f_gif_seek634,17924
static void f_gif_close(gd_GIF * gif)f_gif_close648,18272

lib/lvgl/src/extra/libs/gif/gifdec.h,1420
#define GIFDEC_HGIFDEC_H2,17
typedef struct gd_Palette {gd_Palette9,105
    int size;size10,133
    uint8_t colors[0x100 * 3];colors11,147
} gd_Palette;gd_Palette12,178
typedef struct gd_GCE {gd_GCE14,193
    uint16_t delay;delay15,217
    uint8_t tindex;tindex16,237
    uint8_t disposal;disposal17,257
    int input;input18,279
    int transparency;transparency19,294
} gd_GCE;gd_GCE20,316
typedef struct gd_GIF {gd_GIF24,329
    lv_fs_file_t fd;fd25,353
    const char * data;data26,374
    uint8_t is_file;is_file27,397
    uint32_t f_rw_p;f_rw_p28,418
    int32_t anim_start;anim_start29,439
    uint16_t width, height;width30,463
    uint16_t width, height;height30,463
    uint16_t depth;depth31,491
    uint16_t loop_count;loop_count32,511
    gd_GCE gce;gce33,536
    gd_Palette *palette;palette34,552
    gd_Palette lct, gct;lct35,577
    gd_Palette lct, gct;gct35,577
    void (*plain_text)(plain_text36,602
    void (*comment)(struct gd_GIF *gif);comment41,776
    void (*application)(struct gd_GIF *gif, char id[8], char auth[3]);application42,817
    uint16_t fx, fy, fw, fh;fx43,888
    uint16_t fx, fy, fw, fh;fy43,888
    uint16_t fx, fy, fw, fh;fw43,888
    uint16_t fx, fy, fw, fh;fh43,888
    uint8_t bgindex;bgindex44,917
    uint8_t *canvas, *frame;canvas45,938
    uint8_t *canvas, *frame;frame45,938
} gd_GIF;gd_GIF46,967

lib/lvgl/src/extra/libs/gif/lv_gif.h,232
#define LV_GIF_HLV_GIF_H7,47
    lv_img_t img;img31,382
    gd_GIF *gif;gif32,400
    lv_timer_t * timer;timer33,417
    lv_img_dsc_t imgdsc;imgdsc34,441
    uint32_t last_call;last_call35,466
}lv_gif_t;lv_gif_t36,490

lib/lvgl/src/extra/libs/freetype/lv_freetype.h,539
#define LV_FREETYPE_HLV_FREETYPE_H6,56
    FT_FONT_STYLE_NORMAL = 0,FT_FONT_STYLE_NORMAL26,376
    FT_FONT_STYLE_ITALIC = 1 << 0,FT_FONT_STYLE_ITALIC27,406
    FT_FONT_STYLE_BOLD   = 1 << 1FT_FONT_STYLE_BOLD28,441
} LV_FT_FONT_STYLE;LV_FT_FONT_STYLE29,475
    const char * name;  /* The name of the font file */name32,513
    lv_font_t * font;   /* point to lvgl font */font33,569
    uint16_t weight;    /* font size */weight34,618
    uint16_t style;     /* font style */style35,658
} lv_ft_info_t;lv_ft_info_t36,699

lib/lvgl/src/extra/libs/freetype/lv_freetype.c,2178
    char * name;name26,398
} lv_face_info_t;lv_face_info_t27,415
    lv_ll_t  face_ll;face_ll30,451
} lv_faces_control_t;lv_faces_control_t31,473
    void * face_id;face_id35,545
    lv_font_t * font;font39,600
    uint16_t    style;style40,622
    uint16_t    height;height41,645
} lv_font_fmt_ft_dsc_t;lv_font_fmt_ft_dsc_t42,669
static FT_Library library;library66,1572
    static FTC_Manager cache_manager;cache_manager69,1632
    static FTC_CMapCache cmap_cache;cmap_cache70,1670
    static FTC_SBitCache sbit_cache;sbit_cache71,1707
    static FTC_SBit sbit;sbit72,1744
    static lv_faces_control_t face_control;face_control74,1776
bool lv_freetype_init(uint16_t max_faces, uint16_t max_sizes, uint32_t max_bytes)lv_freetype_init85,1965
void lv_freetype_destroy(void)lv_freetype_destroy128,3118
bool lv_ft_font_init(lv_ft_info_t * info)lv_ft_font_init136,3261
void lv_ft_font_destroy(lv_font_t * font)lv_ft_font_destroy145,3435
static FT_Error font_face_requester(FTC_FaceID face_id,font_face_requester159,3705
static bool get_glyph_dsc_cb_cache(const lv_font_t * font,get_glyph_dsc_cb_cache174,4157
static const uint8_t * get_glyph_bitmap_cb_cache(const lv_font_t * font, uint32_t unicode_letter)get_glyph_bitmap_cb_cache216,5787
static bool lv_ft_font_init_cache(lv_ft_info_t * info)lv_ft_font_init_cache223,5984
void lv_ft_font_destroy_cache(lv_font_t * font)lv_ft_font_destroy_cache284,7870
static FT_Face face_find_in_list(lv_ft_info_t * info)face_find_in_list300,8187
static void face_add_to_list(FT_Face face)face_add_to_list315,8600
static void face_remove_from_list(FT_Face face)face_remove_from_list322,8751
static void face_generic_finalizer(void * object)face_generic_finalizer335,9101
static bool get_glyph_dsc_cb_nocache(const lv_font_t * font,get_glyph_dsc_cb_nocache346,9414
static const uint8_t * get_glyph_bitmap_cb_nocache(const lv_font_t * font, uint32_t unicode_letter)get_glyph_bitmap_cb_nocache391,10914
static bool lv_ft_font_init_nocache(lv_ft_info_t * info)lv_ft_font_init_nocache399,11214
static void lv_ft_font_destroy_nocache(lv_font_t * font)lv_ft_font_destroy_nocache468,13334

lib/lvgl/src/extra/libs/qrcode/qrcodegen.c,4667
	#define testable testable31,1364
	#define testable testable33,1422
static const char *ALPHANUMERIC_CHARSET = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:";ALPHANUMERIC_CHARSET93,4640
testable const int8_t ECC_CODEWORDS_PER_BLOCK[4][41] = {ECC_CODEWORDS_PER_BLOCK96,4774
#define qrcodegen_REED_SOLOMON_DEGREE_MAX qrcodegen_REED_SOLOMON_DEGREE_MAX105,5815
testable const int8_t NUM_ERROR_CORRECTION_BLOCKS[4][41] = {NUM_ERROR_CORRECTION_BLOCKS108,5932
static const int PENALTY_N1 =  3;PENALTY_N1118,6968
static const int PENALTY_N2 =  3;PENALTY_N2119,7002
static const int PENALTY_N3 = 40;PENALTY_N3120,7036
static const int PENALTY_N4 = 10;PENALTY_N4121,7070
bool qrcodegen_encodeText(const char *text, uint8_t tempBuffer[], uint8_t qrcode[],qrcodegen_encodeText128,7223
bool qrcodegen_encodeBinary(uint8_t dataAndTemp[], size_t dataLen, uint8_t qrcode[],qrcodegen_encodeBinary166,8632
testable void appendBitsToBuffer(unsigned int val, int numBits, uint8_t buffer[], int *bitLen) {appendBitsToBuffer184,9403
bool qrcodegen_encodeSegments(const struct qrcodegen_Segment segs[], size_t len,qrcodegen_encodeSegments195,9818
bool qrcodegen_encodeSegmentsAdvanced(const struct qrcodegen_Segment segs[], size_t len, enum qrcodegen_Ecc ecl,qrcodegen_encodeSegmentsAdvanced203,10170
testable void addEccAndInterleave(uint8_t data[], int version, enum qrcodegen_Ecc ecl, uint8_t result[]) {addEccAndInterleave291,14020
testable int getNumDataCodewords(int version, enum qrcodegen_Ecc ecl) {getNumDataCodewords324,15583
testable int getNumRawDataModules(int ver) {getNumRawDataModules336,16134
testable void calcReedSolomonGenerator(int degree, uint8_t result[]) {calcReedSolomonGenerator353,16603
testable void calcReedSolomonRemainder(const uint8_t data[], int dataLen,calcReedSolomonRemainder377,17668
#undef qrcodegen_REED_SOLOMON_DEGREE_MAXqrcodegen_REED_SOLOMON_DEGREE_MAX392,18226
testable uint8_t finiteFieldMultiply(uint8_t x, uint8_t y) {finiteFieldMultiply397,18424
testable void initializeFunctionModules(int version, uint8_t qrcode[]) {initializeFunctionModules413,18819
static void drawWhiteFunctionModules(uint8_t qrcode[], int version) {drawWhiteFunctionModules450,20297
static void drawFormatBits(enum qrcodegen_Ecc ecl, enum qrcodegen_Mask mask, uint8_t qrcode[]) {drawFormatBits511,22369
testable int getAlignmentPatternPositions(int version, uint8_t result[7]) {getAlignmentPatternPositions545,23792
static void fillRectangle(int left, int top, int width, int height, uint8_t qrcode[]) {fillRectangle559,24245
static void drawCodewords(const uint8_t data[], int dataLen, uint8_t qrcode[]) {drawCodewords572,24737
static void applyMask(const uint8_t functionModules[], uint8_t qrcode[], enum qrcodegen_Mask mask) {applyMask603,26047
static long getPenaltyScore(const uint8_t qrcode[]) {getPenaltyScore631,27306
static void addRunToHistory(unsigned char run, unsigned char history[7]) {addRunToHistory717,29884
static bool hasFinderLikePattern(const unsigned char runHistory[7]) {hasFinderLikePattern726,30303
int qrcodegen_getSize(const uint8_t qrcode[]) {qrcodegen_getSize739,30808
bool qrcodegen_getModule(const uint8_t qrcode[], int x, int y) {qrcodegen_getModule749,31090
testable bool getModule(const uint8_t qrcode[], int x, int y) {getModule757,31362
testable void setModule(uint8_t qrcode[], int x, int y, bool isBlack) {setModule766,31695
testable void setModuleBounded(uint8_t qrcode[], int x, int y, bool isBlack) {setModuleBounded780,32157
static bool getBit(int x, int i) {getBit788,32437
bool qrcodegen_isAlphanumeric(const char *text) {qrcodegen_isAlphanumeric797,32601
bool qrcodegen_isNumeric(const char *text) {qrcodegen_isNumeric808,32859
size_t qrcodegen_calcSegmentBufferSize(enum qrcodegen_Mode mode, size_t numChars) {qrcodegen_calcSegmentBufferSize819,33095
testable int calcSegmentBitLength(enum qrcodegen_Mode mode, size_t numChars) {calcSegmentBitLength836,33928
struct qrcodegen_Segment qrcodegen_makeBytes(const uint8_t data[], size_t len, uint8_t buf[]) {qrcodegen_makeBytes863,34758
struct qrcodegen_Segment qrcodegen_makeNumeric(const char *digits, uint8_t buf[]) {qrcodegen_makeNumeric878,35241
struct qrcodegen_Segment qrcodegen_makeAlphanumeric(const char *text, uint8_t buf[]) {qrcodegen_makeAlphanumeric912,36270
struct qrcodegen_Segment qrcodegen_makeEci(long assignVal, uint8_t buf[]) {qrcodegen_makeEci946,37330
testable int getTotalBits(const struct qrcodegen_Segment segs[], size_t len, int version) {getTotalBits975,38466
static int numCharCountBits(enum qrcodegen_Mode mode, int version) {numCharCountBits998,39382

lib/lvgl/src/extra/libs/qrcode/lv_qrcode.c,406
#define QR_SIZE QR_SIZE17,226
const lv_obj_class_t lv_qrcode_class = {lv_qrcode_class31,461
lv_obj_t * lv_qrcode_create(lv_obj_t * parent, lv_coord_t size, lv_color_t dark_color, lv_color_t light_color)lv_qrcode_create51,994
lv_res_t lv_qrcode_update(lv_obj_t * qrcode, const void * data, uint32_t data_len)lv_qrcode_update76,1775
void lv_qrcode_delete(lv_obj_t * qrcode)lv_qrcode_delete166,4583

lib/lvgl/src/extra/libs/qrcode/lv_qrcode.h,37
#define LV_QRCODE_HLV_QRCODE_H7,51

lib/lvgl/src/extra/libs/qrcode/qrcodegen.h,1793
enum qrcodegen_Ecc {qrcodegen_Ecc57,2312
	qrcodegen_Ecc_LOW = 0 ,  // The QR Code can tolerate about  7% erroneous codewordsqrcodegen_Ecc_LOW60,2451
	qrcodegen_Ecc_MEDIUM  ,  // The QR Code can tolerate about 15% erroneous codewordsqrcodegen_Ecc_MEDIUM61,2535
	qrcodegen_Ecc_QUARTILE,  // The QR Code can tolerate about 25% erroneous codewordsqrcodegen_Ecc_QUARTILE62,2619
	qrcodegen_Ecc_HIGH    ,  // The QR Code can tolerate about 30% erroneous codewordsqrcodegen_Ecc_HIGH63,2703
enum qrcodegen_Mask {qrcodegen_Mask70,2846
	qrcodegen_Mask_AUTO = -1,qrcodegen_Mask_AUTO73,2972
	qrcodegen_Mask_0 = 0,qrcodegen_Mask_075,3034
	qrcodegen_Mask_1,qrcodegen_Mask_176,3057
	qrcodegen_Mask_2,qrcodegen_Mask_277,3076
	qrcodegen_Mask_3,qrcodegen_Mask_378,3095
	qrcodegen_Mask_4,qrcodegen_Mask_479,3114
	qrcodegen_Mask_5,qrcodegen_Mask_580,3133
	qrcodegen_Mask_6,qrcodegen_Mask_681,3152
	qrcodegen_Mask_7,qrcodegen_Mask_782,3171
enum qrcodegen_Mode {qrcodegen_Mode89,3259
	qrcodegen_Mode_NUMERIC      = 0x1,qrcodegen_Mode_NUMERIC90,3281
	qrcodegen_Mode_ALPHANUMERIC = 0x2,qrcodegen_Mode_ALPHANUMERIC91,3317
	qrcodegen_Mode_BYTE         = 0x4,qrcodegen_Mode_BYTE92,3353
	qrcodegen_Mode_KANJI        = 0x8,qrcodegen_Mode_KANJI93,3389
	qrcodegen_Mode_ECI          = 0x7,qrcodegen_Mode_ECI94,3425
struct qrcodegen_Segment {qrcodegen_Segment109,4112
	enum qrcodegen_Mode mode;mode111,4179
	int numChars;numChars116,4430
	uint8_t *data;data120,4555
	int bitLength;bitLength125,4799
#define qrcodegen_VERSION_MIN qrcodegen_VERSION_MIN132,4866
#define qrcodegen_VERSION_MAX qrcodegen_VERSION_MAX133,4973
#define qrcodegen_BUFFER_LEN_FOR_VERSION(qrcodegen_BUFFER_LEN_FOR_VERSION139,5458
#define qrcodegen_BUFFER_LEN_MAX qrcodegen_BUFFER_LEN_MAX144,5797

lib/lvgl/src/extra/libs/sjpg/tjpgd.h,3239
#define DEF_TJPGDECDEF_TJPGDEC5,256
typedef int16_t jd_yuv_t;jd_yuv_t19,459
typedef uint8_t jd_yuv_t;jd_yuv_t21,491
	JDR_OK = 0,	/* 0: Succeeded */JDR_OK27,558
	JDR_INTR,	/* 1: Interrupted by output function */	JDR_INTR28,590
	JDR_INP,	/* 2: Device error or wrong termination of input stream */JDR_INP29,642
	JDR_MEM1,	/* 3: Insufficient memory pool for the image */JDR_MEM130,711
	JDR_MEM2,	/* 4: Insufficient stream input buffer */JDR_MEM231,770
	JDR_PAR,	/* 5: Parameter error */JDR_PAR32,823
	JDR_FMT1,	/* 6: Data format error (may be broken data) */JDR_FMT133,858
	JDR_FMT2,	/* 7: Right format but not supported */JDR_FMT234,917
	JDR_FMT3	/* 8: Not supported JPEG standard */JDR_FMT335,968
} JRESULT;JRESULT36,1015
	uint16_t left;		/* Left end */left40,1089
	uint16_t right;		/* Right end */right41,1121
	uint16_t top;		/* Top end */top42,1155
	uint16_t bottom;	/* Bottom end */bottom43,1185
} JRECT;JRECT44,1220
typedef struct JDEC JDEC;JDEC47,1266
struct JDEC {JDEC48,1292
	size_t dctr;				/* Number of bytes available in the input buffer */dctr49,1306
	uint8_t* dptr;				/* Current data read ptr */dptr50,1375
	uint8_t* inbuf;				/* Bit stream input buffer */inbuf51,1422
	uint8_t dbit;				/* Number of bits availavble in wreg or reading bit mask */dbit52,1472
	uint8_t scale;				/* Output scaling ratio */scale53,1550
	uint8_t msx, msy;			/* MCU size in unit of block (width, height) */msx54,1596
	uint8_t msx, msy;			/* MCU size in unit of block (width, height) */msy54,1596
	uint8_t qtid[3];			/* Quantization table ID of each component, Y, Cb, Cr */qtid55,1665
	uint8_t ncomp;				/* Number of color components 1:grayscale, 3:color */ncomp56,1742
	int16_t dcv[3];				/* Previous DC element of each component */dcv57,1815
	uint16_t nrst;				/* Restart inverval */nrst58,1879
	uint16_t width, height;		/* Size of the input image (pixel) */width59,1921
	uint16_t width, height;		/* Size of the input image (pixel) */height59,1921
	uint8_t* huffbits[2][2];	/* Huffman bit distribution tables [id][dcac] */huffbits60,1985
	uint16_t* huffcode[2][2];	/* Huffman code word tables [id][dcac] */huffcode61,2060
	uint8_t* huffdata[2][2];	/* Huffman decoded data tables [id][dcac] */huffdata62,2129
	int32_t* qttbl[4];			/* Dequantizer tables [id] */qttbl63,2200
	uint32_t wreg;				/* Working shift register */wreg65,2275
	uint8_t marker;				/* Detected marker (0:None) */marker66,2323
	uint8_t longofs[2][2];		/* Table offset of long code [id][dcac] */longofs68,2397
	uint16_t* hufflut_ac[2];	/* Fast huffman decode tables for AC short code [id] */hufflut_ac69,2465
	uint8_t* hufflut_dc[2];		/* Fast huffman decode tables for DC short code [id] */hufflut_dc70,2547
	void* workbuf;				/* Working buffer for IDCT and RGB output */workbuf73,2643
	jd_yuv_t* mcubuf;			/* Working buffer for the MCU */mcubuf74,2707
	void* pool;					/* Pointer to available memory pool */pool75,2761
	size_t sz_pool;				/* Size of momory pool (bytes available) */sz_pool76,2817
	size_t (*infunc)(JDEC*, uint8_t*, size_t);	/* Pointer to jpeg stream input function */infunc77,2881
	void* device;				/* Pointer to I/O device identifiler for the session */device78,2969

lib/lvgl/src/extra/libs/sjpg/lv_sjpg.c,2966
#define TJPGD_WORKBUFF_SIZE TJPGD_WORKBUFF_SIZE58,2783
#define SJPEG_VERSION_OFFSET SJPEG_VERSION_OFFSET61,2895
#define SJPEG_X_RES_OFFSET SJPEG_X_RES_OFFSET62,2937
#define SJPEG_y_RES_OFFSET SJPEG_y_RES_OFFSET63,2980
#define SJPEG_TOTAL_FRAMES_OFFSET SJPEG_TOTAL_FRAMES_OFFSET64,3023
#define SJPEG_BLOCK_WIDTH_OFFSET SJPEG_BLOCK_WIDTH_OFFSET65,3066
#define SJPEG_FRAME_INFO_ARRAY_OFFSET SJPEG_FRAME_INFO_ARRAY_OFFSET66,3109
enum io_source_type {io_source_type72,3220
    SJPEG_IO_SOURCE_C_ARRAY,SJPEG_IO_SOURCE_C_ARRAY73,3242
    SJPEG_IO_SOURCE_DISK,SJPEG_IO_SOURCE_DISK74,3271
    enum io_source_type type;type78,3318
    lv_fs_file_t lv_file;lv_file79,3348
    uint8_t* img_cache_buff;img_cache_buff80,3374
    int img_cache_x_res;img_cache_x_res81,3403
    int img_cache_y_res;img_cache_y_res82,3428
    uint8_t *raw_sjpg_data;               //Used when type==SJPEG_IO_SOURCE_C_ARRAY.raw_sjpg_data83,3453
    uint32_t raw_sjpg_data_size;          //Num bytes pointed to by raw_sjpg_data.raw_sjpg_data_size84,3538
    uint32_t raw_sjpg_data_next_read_pos; //Used for all types.raw_sjpg_data_next_read_pos85,3621
} io_source_t;io_source_t86,3685
    uint8_t *sjpeg_data;sjpeg_data90,3719
    uint32_t sjpeg_data_size;sjpeg_data_size91,3744
    int sjpeg_x_res;sjpeg_x_res92,3774
    int sjpeg_y_res;sjpeg_y_res93,3795
    int sjpeg_total_frames;sjpeg_total_frames94,3816
    int sjpeg_single_frame_height;sjpeg_single_frame_height95,3844
    int sjpeg_cache_frame_index;sjpeg_cache_frame_index96,3879
    uint8_t **frame_base_array;         //to save base address of each split frames upto sjpeg_total_frames.frame_base_array97,3912
    int *frame_base_offset;             //to save base offset for fseekframe_base_offset98,4021
    uint8_t *frame_cache;frame_cache99,4093
    uint8_t* workb;                     //JPG work buffer for jpeg libraryworkb100,4119
    JDEC *tjpeg_jd;tjpeg_jd101,4194
    io_source_t io;io102,4214
} SJPEG;SJPEG103,4234
void lv_split_jpeg_init( void )lv_split_jpeg_init128,5152
static lv_res_t decoder_info( lv_img_decoder_t * decoder, const void * src, lv_img_header_t * header )decoder_info147,5808
static int img_data_cb( JDEC* jd, void* data, JRECT* rect )img_data_cb278,10263
static size_t input_func ( JDEC* jd, uint8_t* buff, size_t ndata )input_func297,10904
static lv_res_t decoder_open( lv_img_decoder_t * decoder, lv_img_decoder_dsc_t * dsc )decoder_open338,12223
static lv_res_t decoder_read_line( lv_img_decoder_t * decoder, lv_img_decoder_dsc_t * dsc, lv_coord_t x, lv_coord_t y, lv_coord_t len, uint8_t * buf )decoder_read_line713,26393
static void decoder_close( lv_img_decoder_t * decoder, lv_img_decoder_dsc_t * dsc )decoder_close857,31580
static int is_jpg( const uint8_t *raw_data )is_jpg881,32100
static void lv_sjpg_free( SJPEG* sjpeg )lv_sjpg_free887,32328
static void lv_sjpg_cleanup( SJPEG* sjpeg )lv_sjpg_cleanup896,32678

lib/lvgl/src/extra/libs/sjpg/tjpgdcnf.h,192
#define	JD_SZBUF	JD_SZBUF5,154
#define JD_FORMAT	JD_FORMAT8,221
#define	JD_USE_SCALE	JD_USE_SCALE15,360
#define JD_TBLCLIP	JD_TBLCLIP21,452
#define JD_FASTDECODE	JD_FASTDECODE27,603

lib/lvgl/src/extra/libs/sjpg/tjpgd.c,1154
#define HUFF_BIT	HUFF_BIT31,1512
#define HUFF_LEN	HUFF_LEN32,1578
#define HUFF_MASK	HUFF_MASK33,1611
static const uint8_t Zig[64] = {	/* Zigzag-order to raster-order conversion table */Zig41,1810
static const uint16_t Ipsf[64] = {	/* See also aa_idct.png */Ipsf55,2377
#define BYTECLIP(BYTECLIP74,4283
static const uint8_t Clip8[1024] = {Clip876,4337
static uint8_t BYTECLIP (int val)BYTECLIP117,8483
static void* alloc_pool (	/* Pointer to allocated memory block (NULL:no memory available) */alloc_pool132,8835
static JRESULT create_qt_tbl (	/* 0:OK, !0:Failed */create_qt_tbl158,9635
static JRESULT create_huffman_tbl (	/* 0:OK, !0:Failed */create_huffman_tbl194,10887
static int huffext (	/* >=0: decoded data, <0: error code */huffext282,14282
static int bitext (	/* >=0: extracted data, <0: error code */bitext423,18855
static JRESULT restart (restart508,21375
static void block_idct (block_idct579,23171
static JRESULT mcu_load (mcu_load702,26262
static JRESULT mcu_output (mcu_output788,29876
#define	LDB_WORD(LDB_WORD959,35774
JRESULT jd_prepare (jd_prepare962,35876
JRESULT jd_decomp (jd_decomp1118,42009

lib/lvgl/src/extra/libs/sjpg/lv_sjpg.h,35
#define LV_SJPEG_HLV_SJPEG_H7,50

lib/lvgl/src/extra/libs/fsdrv/lv_fs_stdio.c,996
void lv_fs_stdio_init(void)lv_fs_stdio_init57,1476
static void * fs_open(lv_fs_drv_t * drv, const char * path, lv_fs_mode_t mode)fs_open94,2593
static lv_fs_res_t fs_close(lv_fs_drv_t * drv, void * file_p)fs_close123,3395
static lv_fs_res_t fs_read(lv_fs_drv_t * drv, void * file_p, void * buf, uint32_t btr, uint32_t * br)fs_read140,3932
static lv_fs_res_t fs_write(lv_fs_drv_t * drv, void * file_p, const void * buf, uint32_t btw, uint32_t * bw)fs_write156,4521
static lv_fs_res_t fs_seek(lv_fs_drv_t * drv, void * file_p, uint32_t pos, lv_fs_whence_t whence)fs_seek171,5115
static lv_fs_res_t fs_tell(lv_fs_drv_t * drv, void * file_p, uint32_t * pos_p)fs_tell186,5599
static char next_fn[256];next_fn194,5769
static void * fs_dir_open(lv_fs_drv_t * drv, const char * path)fs_dir_open203,6037
static lv_fs_res_t fs_dir_read(lv_fs_drv_t * drv, void * dir_p, char * fn)fs_dir_read254,7530
static lv_fs_res_t fs_dir_close(lv_fs_drv_t * drv, void * dir_p)fs_dir_close299,8806

lib/lvgl/src/extra/libs/fsdrv/lv_fs_win32.c,1214
void lv_fs_win32_init(void)lv_fs_win32_init54,1489
static bool is_dots_name(const char * name)is_dots_name89,2395
static lv_fs_res_t fs_error_from_win32(DWORD error)fs_error_from_win32100,2712
static void * fs_open(lv_fs_drv_t * drv, const char * path, lv_fs_mode_t mode)fs_open196,5640
static lv_fs_res_t fs_close(lv_fs_drv_t * drv, void * file_p)fs_close238,6605
static lv_fs_res_t fs_read(lv_fs_drv_t * drv, void * file_p, void * buf, uint32_t btr, uint32_t * br)fs_read256,7206
static lv_fs_res_t fs_write(lv_fs_drv_t * drv, void * file_p, const void * buf, uint32_t btw, uint32_t * bw)fs_write273,7828
static lv_fs_res_t fs_seek(lv_fs_drv_t * drv, void * file_p, uint32_t pos, lv_fs_whence_t whence)fs_seek289,8455
static lv_fs_res_t fs_tell(lv_fs_drv_t * drv, void * file_p, uint32_t * pos_p)fs_tell319,9379
static char next_fn[256];next_fn350,10078
static lv_fs_res_t next_error = LV_FS_RES_OK;next_error351,10104
static void * fs_dir_open(lv_fs_drv_t * drv, const char * path)fs_dir_open359,10385
static lv_fs_res_t fs_dir_read(lv_fs_drv_t * drv, void * dir_p, char * fn)fs_dir_read404,11645
static lv_fs_res_t fs_dir_close(lv_fs_drv_t * drv, void * dir_p)fs_dir_close443,12653

lib/lvgl/src/extra/libs/fsdrv/lv_fsdrv.h,35
#define LV_FSDRV_HLV_FSDRV_H7,51

lib/lvgl/src/extra/libs/fsdrv/lv_fs_fatfs.c,995
void lv_fs_fatfs_init(void)lv_fs_fatfs_init49,1353
static void fs_init(void)fs_init85,2395
static void * fs_open(lv_fs_drv_t * drv, const char * path, lv_fs_mode_t mode)fs_open98,2874
static lv_fs_res_t fs_close(lv_fs_drv_t * drv, void * file_p)fs_close126,3693
static lv_fs_res_t fs_read(lv_fs_drv_t * drv, void * file_p, void * buf, uint32_t btr, uint32_t * br)fs_read144,4255
static lv_fs_res_t fs_write(lv_fs_drv_t * drv, void * file_p, const void * buf, uint32_t btw, uint32_t * bw)fs_write161,4874
static lv_fs_res_t fs_seek(lv_fs_drv_t * drv, void * file_p, uint32_t pos, lv_fs_whence_t whence)fs_seek178,5545
static lv_fs_res_t fs_tell(lv_fs_drv_t * drv, void * file_p, uint32_t * pos_p)fs_tell205,6296
static void * fs_dir_open(lv_fs_drv_t * drv, const char * path)fs_dir_open218,6664
static lv_fs_res_t fs_dir_read(lv_fs_drv_t * drv, void * dir_p, char * fn)fs_dir_read240,7285
static lv_fs_res_t fs_dir_close(lv_fs_drv_t * drv, void * dir_p)fs_dir_close268,7988

lib/lvgl/src/extra/libs/fsdrv/lv_fs_posix.c,996
void lv_fs_posix_init(void)lv_fs_posix_init58,1495
static void * fs_open(lv_fs_drv_t * drv, const char * path, lv_fs_mode_t mode)fs_open95,2602
static lv_fs_res_t fs_close(lv_fs_drv_t * drv, void * file_p)fs_close125,3457
static lv_fs_res_t fs_read(lv_fs_drv_t * drv, void * file_p, void * buf, uint32_t btr, uint32_t * br)fs_read142,4003
static lv_fs_res_t fs_write(lv_fs_drv_t * drv, void * file_p, const void * buf, uint32_t btw, uint32_t * bw)fs_write158,4598
static lv_fs_res_t fs_seek(lv_fs_drv_t * drv, void * file_p, uint32_t pos, lv_fs_whence_t whence)fs_seek173,5198
static lv_fs_res_t fs_tell(lv_fs_drv_t * drv, void * file_p, uint32_t * pos_p)fs_tell188,5692
static char next_fn[256];next_fn196,5889
static void * fs_dir_open(lv_fs_drv_t * drv, const char * path)fs_dir_open205,6155
static lv_fs_res_t fs_dir_read(lv_fs_drv_t * drv, void * dir_p, char * fn)fs_dir_read257,7649
static lv_fs_res_t fs_dir_close(lv_fs_drv_t * drv, void * dir_p)fs_dir_close302,8925

lib/lvgl/src/extra/libs/png/lv_png.c,476
void lv_png_init(void)lv_png_init47,1005
static lv_res_t decoder_info(struct _lv_img_decoder_t * decoder, const void * src, lv_img_header_t * header)decoder_info65,1507
static lv_res_t decoder_open(lv_img_decoder_t * decoder, lv_img_decoder_dsc_t * dsc)decoder_open118,3759
static void decoder_close(lv_img_decoder_t *decoder, lv_img_decoder_dsc_t *dsc)decoder_close186,6431
static void convert_color_depth(uint8_t * img, uint32_t px_cnt)convert_color_depth200,6843

lib/lvgl/src/extra/libs/png/lodepng.c,30619
const char* LODEPNG_VERSION_STRING = "20201017";LODEPNG_VERSION_STRING47,1669
static void* lodepng_malloc(size_t size) {lodepng_malloc74,3058
static void* lodepng_realloc(void* ptr, size_t new_size) {lodepng_realloc82,3285
static void lodepng_free(void* ptr) {lodepng_free89,3464
#define LODEPNG_INLINE LODEPNG_INLINE102,4092
#define LODEPNG_INLINE LODEPNG_INLINE104,4128
#define LODEPNG_RESTRICT LODEPNG_RESTRICT111,4477
#define LODEPNG_RESTRICT LODEPNG_RESTRICT113,4519
static void lodepng_memcpy(void* LODEPNG_RESTRICT dst,lodepng_memcpy120,4771
static void lodepng_memset(void* LODEPNG_RESTRICT dst,lodepng_memset126,4986
static size_t lodepng_strlen(const char* a) {lodepng_strlen133,5238
#define LODEPNG_MAX(LODEPNG_MAX141,5466
#define LODEPNG_MIN(LODEPNG_MIN142,5518
#define LODEPNG_ABS(LODEPNG_ABS143,5570
static int lodepng_addofl(size_t a, size_t b, size_t* result) {lodepng_addofl148,5821
static int lodepng_mulofl(size_t a, size_t b, size_t* result) {lodepng_mulofl157,6232
static int lodepng_gtofl(size_t a, size_t b, size_t c) {lodepng_gtofl164,6511
#define CERROR_BREAK(CERROR_BREAK180,7006
#define ERROR_BREAK(ERROR_BREAK186,7177
#define CERROR_RETURN_ERROR(CERROR_RETURN_ERROR189,7282
#define CERROR_TRY_RETURN(CERROR_TRY_RETURN195,7429
#define CERROR_RETURN(CERROR_RETURN201,7591
typedef struct uivector {uivector218,8274
  unsigned* data;data219,8300
  size_t size; /*size in number of unsigned longs*/size220,8318
  size_t allocsize; /*allocated size in bytes*/allocsize221,8370
} uivector;uivector222,8418
static void uivector_cleanup(void* p) {uivector_cleanup224,8431
static unsigned uivector_resize(uivector* p, size_t size) {uivector_resize231,8655
static void uivector_init(uivector* p) {uivector_init246,9082
static unsigned uivector_push_back(uivector* p, unsigned c) {uivector_push_back252,9230
typedef struct ucvector {ucvector263,9571
  unsigned char* data;data264,9597
  size_t size; /*used size*/size265,9620
  size_t allocsize; /*allocated size*/allocsize266,9649
} ucvector;ucvector267,9688
static unsigned ucvector_resize(ucvector* p, size_t size) {ucvector_resize270,9757
static ucvector ucvector_init(unsigned char* buffer, size_t size) {ucvector_init284,10133
static void string_cleanup(char** out) {string_cleanup297,10473
static char* alloc_string_sized(const char* in, size_t insize) {alloc_string_sized303,10598
static char* alloc_string(const char* in) {alloc_string313,10890
static unsigned lodepng_read32bitInt(const unsigned char* buffer) {lodepng_read32bitInt322,11216
static void lodepng_set32bitInt(unsigned char* buffer, unsigned value) {lodepng_set32bitInt330,11623
static long lodepng_filesize(const char* filename) {lodepng_filesize345,12346
static unsigned lodepng_buffer_file(unsigned char* out, size_t size, const char* filename) {lodepng_buffer_file361,12800
unsigned lodepng_load_file(unsigned char** out, size_t* outsize, const char* filename) {lodepng_load_file374,13183
unsigned lodepng_save_file(const unsigned char* buffer, size_t buffersize, const char* filename) {lodepng_save_file386,13635
  ucvector* data;data409,14466
  unsigned char bp; /*ok to overflow, indicates bit pos inside byte*/bp410,14484
} LodePNGBitWriter;LodePNGBitWriter411,14554
static void LodePNGBitWriter_init(LodePNGBitWriter* writer, ucvector* data) {LodePNGBitWriter_init413,14575
#define WRITEBIT(WRITEBIT419,14751
static void writeBits(LodePNGBitWriter* writer, unsigned value, size_t nbits) {writeBits430,15141
static void writeBitsReversed(LodePNGBitWriter* writer, unsigned value, size_t nbits) {writeBitsReversed443,15635
  const unsigned char* data;data455,16012
  size_t size; /*size of data in bytes*/size456,16041
  size_t bitsize; /*size of data in bits, end of valid bp values, should be 8*size*/bitsize457,16082
  size_t bp;bp458,16167
  unsigned buffer; /*buffer for reading bits. NOTE: 'unsigned' must support at least 32 bits*/buffer459,16180
} LodePNGBitReader;LodePNGBitReader460,16275
static unsigned LodePNGBitReader_init(LodePNGBitReader* reader, const unsigned char* data, size_t size) {LodePNGBitReader_init463,16383
static unsigned ensureBits9(LodePNGBitReader* reader, size_t nbits) {ensureBits9492,17541
static unsigned ensureBits17(LodePNGBitReader* reader, size_t nbits) {ensureBits17508,18133
static LODEPNG_INLINE unsigned ensureBits25(LodePNGBitReader* reader, size_t nbits) {ensureBits25526,18879
static LODEPNG_INLINE unsigned ensureBits32(LodePNGBitReader* reader, size_t nbits) {ensureBits32545,19773
static unsigned peekBits(LodePNGBitReader* reader, size_t nbits) {peekBits566,20895
static void advanceBits(LodePNGBitReader* reader, size_t nbits) {advanceBits572,21119
static unsigned readBits(LodePNGBitReader* reader, size_t nbits) {readBits578,21293
static unsigned reverseBits(unsigned bits, unsigned num) {reverseBits608,22299
#define FIRST_LENGTH_CODE_INDEX FIRST_LENGTH_CODE_INDEX619,22791
#define LAST_LENGTH_CODE_INDEX LAST_LENGTH_CODE_INDEX620,22827
#define NUM_DEFLATE_CODE_SYMBOLS NUM_DEFLATE_CODE_SYMBOLS622,22932
#define NUM_DISTANCE_SYMBOLS NUM_DISTANCE_SYMBOLS624,23034
#define NUM_CODE_LENGTH_CODES NUM_CODE_LENGTH_CODES626,23175
static const unsigned LENGTHBASE[29]LENGTHBASE629,23259
static const unsigned LENGTHEXTRA[29]LENGTHEXTRA634,23487
static const unsigned DISTANCEBASE[30]DISTANCEBASE639,23771
static const unsigned DISTANCEEXTRA[30]DISTANCEEXTRA644,24022
static const unsigned CLCL_ORDER[NUM_CODE_LENGTH_CODES]CLCL_ORDER650,24389
typedef struct HuffmanTree {HuffmanTree658,24675
  unsigned* codes; /*the huffman codes (bit patterns representing the symbols)*/codes659,24704
  unsigned* lengths; /*the lengths of the huffman codes*/lengths660,24785
  unsigned maxbitlen; /*maximum number of bits a single code can get*/maxbitlen661,24843
  unsigned numcodes; /*number of symbols in the alphabet = number of codes*/numcodes662,24914
  unsigned char* table_len; /*length of symbol from lookup table, or max length if secondary lookup needed*/table_len664,25016
  unsigned short* table_value; /*value of symbol from lookup table, or pointer to secondary table if needed*/table_value665,25125
} HuffmanTree;HuffmanTree666,25235
static void HuffmanTree_init(HuffmanTree* tree) {HuffmanTree_init668,25251
static void HuffmanTree_cleanup(HuffmanTree* tree) {HuffmanTree_cleanup675,25392
#define FIRSTBITS FIRSTBITS684,25735
#define INVALIDSYMBOL INVALIDSYMBOL688,25932
static unsigned HuffmanTree_makeTable(HuffmanTree* tree) {HuffmanTree_makeTable691,26000
static unsigned HuffmanTree_makeFromLengths2(HuffmanTree* tree) {HuffmanTree_makeFromLengths2811,31553
static unsigned HuffmanTree_makeFromLengths(HuffmanTree* tree, const unsigned* bitlen,HuffmanTree_makeFromLengths852,33034
typedef struct BPMNode {BPMNode869,33777
  int weight; /*the sum of all weights in this chain*/weight870,33802
  unsigned index; /*index of this leaf node (called "count" in the paper)*/index871,33857
  struct BPMNode* tail; /*the next nodes in this chain (null if last)*/tail872,33933
  int in_use;in_use873,34005
} BPMNode;BPMNode874,34019
typedef struct BPMLists {BPMLists877,34051
  unsigned memsize;memsize879,34095
  BPMNode* memory;memory880,34115
  unsigned numfree;numfree881,34134
  unsigned nextfree;nextfree882,34154
  BPMNode** freelist;freelist883,34175
  unsigned listsize;listsize885,34242
  BPMNode** chains0;chains0886,34263
  BPMNode** chains1;chains1887,34284
} BPMLists;BPMLists888,34305
static BPMNode* bpmnode_create(BPMLists* lists, int weight, unsigned index, BPMNode* tail) {bpmnode_create891,34404
static void bpmnode_sort(BPMNode* leaves, size_t num) {bpmnode_sort920,35373
static void boundaryPM(BPMLists* lists, BPMNode* leaves, size_t numpresent, int c, int num) {boundaryPM943,36226
unsigned lodepng_huffman_code_lengths(unsigned* lengths, const unsigned* frequencies,lodepng_huffman_code_lengths968,37386
static unsigned HuffmanTree_makeFromFrequencies(HuffmanTree* tree, const unsigned* frequencies,HuffmanTree_makeFromFrequencies1047,40513
static unsigned generateFixedLitLenTree(HuffmanTree* tree) {generateFixedLitLenTree1063,41347
static unsigned generateFixedDistanceTree(HuffmanTree* tree) {generateFixedDistanceTree1081,42076
static unsigned huffmanDecodeSymbol(LodePNGBitReader* reader, const HuffmanTree* codetree) {huffmanDecodeSymbol1099,42652
static unsigned getTreeInflateFixed(HuffmanTree* tree_ll, HuffmanTree* tree_d) {getTreeInflateFixed1124,43633
static unsigned getTreeInflateDynamic(HuffmanTree* tree_ll, HuffmanTree* tree_d,getTreeInflateDynamic1131,43957
static unsigned inflateHuffmanBlock(ucvector* out, LodePNGBitReader* reader,inflateHuffmanBlock1264,49842
static unsigned inflateNoCompression(ucvector* out, LodePNGBitReader* reader,inflateNoCompression1357,53716
static unsigned lodepng_inflatev(ucvector* out,lodepng_inflatev1389,54915
unsigned lodepng_inflate(unsigned char** out, size_t* outsize,lodepng_inflate1414,55866
static unsigned inflatev(ucvector* out, const unsigned char* in, size_t insize,inflatev1424,56230
static const size_t MAX_SUPPORTED_DEFLATE_LENGTH = 258;MAX_SUPPORTED_DEFLATE_LENGTH1449,57287
static size_t searchCodeIndex(const unsigned* array, size_t array_size, size_t value) {searchCodeIndex1453,57540
static void addLengthDistance(uivector* values, size_t length, size_t distance) {addLengthDistance1467,58002
static const unsigned HASH_NUM_VALUES = 65536;HASH_NUM_VALUES1492,59112
static const unsigned HASH_BIT_MASK = 65535; /*HASH_NUM_VALUES - 1, but C90 does not like that as initializer*/HASH_BIT_MASK1493,59159
typedef struct Hash {Hash1495,59272
  int* head; /*hash value to head circular pos - can be outdated if went around window*/head1496,59294
  unsigned short* chain;chain1498,59423
  int* val; /*circular pos to hash value*/val1499,59448
  int* headz; /*similar to head, but for chainz*/headz1503,59650
  unsigned short* chainz; /*those with same amount of zeros*/chainz1504,59700
  unsigned short* zeros; /*length of zeros streak, used as a second hash chain*/zeros1505,59762
} Hash;Hash1506,59843
static unsigned hash_init(Hash* hash, unsigned windowsize) {hash_init1508,59852
static void hash_cleanup(Hash* hash) {hash_cleanup1533,60980
static unsigned getHash(const unsigned char* data, size_t size, size_t pos) {getHash1545,61197
static unsigned countZeros(const unsigned char* data, size_t size, size_t pos) {countZeros1564,61930
static void updateHashChain(Hash* hash, size_t wpos, unsigned hashval, unsigned short numzeros) {updateHashChain1575,62397
static unsigned encodeLZ77(uivector* out, Hash* hash,encodeLZ771594,63320
static unsigned deflateNoCompression(ucvector* out, const unsigned char* data, size_t datasize) {deflateNoCompression1745,69187
static void writeLZ77data(LodePNGBitWriter* writer, const uivector* lz77_encoded,writeLZ77data1783,70551
static unsigned deflateDynamic(LodePNGBitWriter* writer, Hash* hash,deflateDynamic1808,71731
static unsigned deflateFixed(LodePNGBitWriter* writer, Hash* hash,deflateFixed2030,81697
static unsigned lodepng_deflatev(ucvector* out, const unsigned char* in, size_t insize,lodepng_deflatev2075,83288
unsigned lodepng_deflate(unsigned char** out, size_t* outsize,lodepng_deflate2116,84667
static unsigned deflate(unsigned char** out, size_t* outsize,deflate2126,85029
static unsigned update_adler32(unsigned adler, const unsigned char* data, unsigned len) {update_adler322144,85832
static unsigned adler32(const unsigned char* data, unsigned len) {adler322165,86403
static unsigned lodepng_zlib_decompressv(ucvector* out,lodepng_zlib_decompressv2175,86789
unsigned lodepng_zlib_decompress(unsigned char** out, size_t* outsize, const unsigned char* in,lodepng_zlib_decompress2217,88250
static unsigned zlib_decompress(unsigned char** out, size_t* outsize, size_t expected_size,zlib_decompress2227,88715
unsigned lodepng_zlib_compress(unsigned char** out, size_t* outsize, const unsigned char* in,lodepng_zlib_compress2256,89814
static unsigned zlib_compress(unsigned char** out, size_t* outsize, const unsigned char* in,zlib_compress2294,91133
static unsigned zlib_decompress(unsigned char** out, size_t* outsize, size_t expected_size,zlib_decompress2310,91743
static unsigned zlib_compress(unsigned char** out, size_t* outsize, const unsigned char* in,zlib_compress2318,92194
#define DEFAULT_WINDOWSIZE DEFAULT_WINDOWSIZE2332,92770
void lodepng_compress_settings_init(LodePNGCompressSettings* settings) {lodepng_compress_settings_init2334,92803
const LodePNGCompressSettings lodepng_default_compress_settings = {2, 1, DEFAULT_WINDOWSIZE, 3, 128, 1, 0, 0, 0};lodepng_default_compress_settings2348,93254
void lodepng_decompress_settings_init(LodePNGDecompressSettings* settings) {lodepng_decompress_settings_init2355,93438
const LodePNGDecompressSettings lodepng_default_decompress_settings = {0, 0, 0, 0, 0, 0};lodepng_default_decompress_settings2365,93706
static unsigned lodepng_crc32_table[256] = {lodepng_crc32_table2384,94576
unsigned lodepng_crc32(const unsigned char* data, size_t length) {lodepng_crc322420,98063
static unsigned char readBitFromReversedStream(size_t* bitpointer, const unsigned char* bitstream) {readBitFromReversedStream2439,98842
static unsigned readBitsFromReversedStream(size_t* bitpointer, const unsigned char* bitstream, size_t nbits) {readBitsFromReversedStream2446,99121
static void setBitOfReversedStream(size_t* bitpointer, unsigned char* bitstream, unsigned char bit) {setBitOfReversedStream2456,99416
unsigned lodepng_chunk_length(const unsigned char* chunk) {lodepng_chunk_length2467,100042
void lodepng_chunk_type(char type[5], const unsigned char* chunk) {lodepng_chunk_type2471,100147
unsigned char lodepng_chunk_type_equals(const unsigned char* chunk, const char* type) {lodepng_chunk_type_equals2477,100329
unsigned char lodepng_chunk_ancillary(const unsigned char* chunk) {lodepng_chunk_ancillary2482,100563
unsigned char lodepng_chunk_private(const unsigned char* chunk) {lodepng_chunk_private2486,100666
unsigned char lodepng_chunk_safetocopy(const unsigned char* chunk) {lodepng_chunk_safetocopy2490,100767
unsigned char* lodepng_chunk_data(unsigned char* chunk) {lodepng_chunk_data2494,100871
const unsigned char* lodepng_chunk_data_const(const unsigned char* chunk) {lodepng_chunk_data_const2498,100952
unsigned lodepng_chunk_check_crc(const unsigned char* chunk) {lodepng_chunk_check_crc2502,101051
void lodepng_chunk_generate_crc(unsigned char* chunk) {lodepng_chunk_generate_crc2511,101414
unsigned char* lodepng_chunk_next(unsigned char* chunk, unsigned char* end) {lodepng_chunk_next2517,101625
const unsigned char* lodepng_chunk_next_const(const unsigned char* chunk, const unsigned char* end) {lodepng_chunk_next_const2533,102339
unsigned char* lodepng_chunk_find(unsigned char* chunk, unsigned char* end, const char type[5]) {lodepng_chunk_find2549,103083
const unsigned char* lodepng_chunk_find_const(const unsigned char* chunk, const unsigned char* end, const char type[5]) {lodepng_chunk_find_const2559,103432
unsigned lodepng_chunk_append(unsigned char** out, size_t* outsize, const unsigned char* chunk) {lodepng_chunk_append2569,103811
static unsigned lodepng_chunk_init(unsigned char** chunk,lodepng_chunk_init2592,104725
static unsigned lodepng_chunk_createv(ucvector* out,lodepng_chunk_createv2611,105382
unsigned lodepng_chunk_create(unsigned char** out, size_t* outsize,lodepng_chunk_create2625,105801
static unsigned checkColorValidity(LodePNGColorType colortype, unsigned bd) {checkColorValidity2640,106502
static unsigned getNumColorChannels(LodePNGColorType colortype) {getNumColorChannels2653,107293
static unsigned lodepng_get_bpp_lct(LodePNGColorType colortype, unsigned bitdepth) {lodepng_get_bpp_lct2665,107652
void lodepng_color_mode_init(LodePNGColorMode* info) {lodepng_color_mode_init2672,107936
static void lodepng_color_mode_alloc_palette(LodePNGColorMode* info) {lodepng_color_mode_alloc_palette2682,108240
void lodepng_color_mode_cleanup(LodePNGColorMode* info) {lodepng_color_mode_cleanup2699,109064
unsigned lodepng_color_mode_copy(LodePNGColorMode* dest, const LodePNGColorMode* source) {lodepng_color_mode_copy2703,109156
LodePNGColorMode lodepng_color_mode_make(LodePNGColorType colortype, unsigned bitdepth) {lodepng_color_mode_make2714,109591
static int lodepng_color_mode_equal(const LodePNGColorMode* a, const LodePNGColorMode* b) {lodepng_color_mode_equal2722,109826
void lodepng_palette_clear(LodePNGColorMode* info) {lodepng_palette_clear2739,110373
unsigned lodepng_palette_add(LodePNGColorMode* info,lodepng_palette_add2745,110524
unsigned lodepng_get_bpp(const LodePNGColorMode* info) {lodepng_get_bpp2763,111196
unsigned lodepng_get_channels(const LodePNGColorMode* info) {lodepng_get_channels2767,111319
unsigned lodepng_is_greyscale_type(const LodePNGColorMode* info) {lodepng_is_greyscale_type2771,111431
unsigned lodepng_is_alpha_type(const LodePNGColorMode* info) {lodepng_is_alpha_type2775,111576
unsigned lodepng_is_palette_type(const LodePNGColorMode* info) {lodepng_is_palette_type2779,111690
unsigned lodepng_has_palette_alpha(const LodePNGColorMode* info) {lodepng_has_palette_alpha2783,111799
unsigned lodepng_can_have_alpha(const LodePNGColorMode* info) {lodepng_can_have_alpha2791,111990
static size_t lodepng_get_raw_size_lct(unsigned w, unsigned h, LodePNGColorType colortype, unsigned bitdepth) {lodepng_get_raw_size_lct2797,112163
size_t lodepng_get_raw_size(unsigned w, unsigned h, const LodePNGColorMode* color) {lodepng_get_raw_size2803,112427
static size_t lodepng_get_raw_size_idat(unsigned w, unsigned h, unsigned bpp) {lodepng_get_raw_size_idat2813,112894
static int lodepng_pixel_overflow(unsigned w, unsigned h,lodepng_pixel_overflow2829,113689
static void LodePNGUnknownChunks_init(LodePNGInfo* info) {LodePNGUnknownChunks_init2852,114761
static void LodePNGUnknownChunks_cleanup(LodePNGInfo* info) {LodePNGUnknownChunks_cleanup2858,114957
static unsigned LodePNGUnknownChunks_copy(LodePNGInfo* dest, const LodePNGInfo* src) {LodePNGUnknownChunks_copy2863,115106
static void LodePNGText_init(LodePNGInfo* info) {LodePNGText_init2883,115780
static void LodePNGText_cleanup(LodePNGInfo* info) {LodePNGText_cleanup2889,115910
static unsigned LodePNGText_copy(LodePNGInfo* dest, const LodePNGInfo* source) {LodePNGText_copy2899,116177
static unsigned lodepng_add_text_sized(LodePNGInfo* info, const char* key, const char* str, size_t size) {lodepng_add_text_sized2910,116507
unsigned lodepng_add_text(LodePNGInfo* info, const char* key, const char* str) {lodepng_add_text2927,117261
void lodepng_clear_text(LodePNGInfo* info) {lodepng_clear_text2931,117415
static void LodePNGIText_init(LodePNGInfo* info) {LodePNGIText_init2937,117574
static void LodePNGIText_cleanup(LodePNGInfo* info) {LodePNGIText_cleanup2945,117771
static unsigned LodePNGIText_copy(LodePNGInfo* dest, const LodePNGInfo* source) {LodePNGIText_copy2959,118214
void lodepng_clear_itext(LodePNGInfo* info) {lodepng_clear_itext2973,118710
static unsigned lodepng_add_itext_sized(LodePNGInfo* info, const char* key, const char* langtag,lodepng_add_itext_sized2977,118789
unsigned lodepng_add_itext(LodePNGInfo* info, const char* key, const char* langtag,lodepng_add_itext3001,120043
static unsigned lodepng_assign_icc(LodePNGInfo* info, const char* name, const unsigned char* profile, unsigned profile_size) {lodepng_assign_icc3007,120326
unsigned lodepng_set_icc(LodePNGInfo* info, const char* name, const unsigned char* profile, unsigned profile_size) {lodepng_set_icc3021,120828
void lodepng_clear_icc(LodePNGInfo* info) {lodepng_clear_icc3028,121086
void lodepng_info_init(LodePNGInfo* info) {lodepng_info_init3037,121335
void lodepng_info_cleanup(LodePNGInfo* info) {lodepng_info_cleanup3063,121999
unsigned lodepng_info_copy(LodePNGInfo* dest, const LodePNGInfo* source) {lodepng_info_copy3075,122303
static void addColorBits(unsigned char* out, size_t index, unsigned bits, unsigned in) {addColorBits3097,123226
typedef struct ColorTree ColorTree;ColorTree3107,123706
struct ColorTree {ColorTree3115,123987
  ColorTree* children[16]; /*up to 16 pointers to ColorTree of next level*/children3116,124006
  int index; /*the payload. Only has a meaningful value if this is in the last level*/index3117,124082
static void color_tree_init(ColorTree* tree) {color_tree_init3120,124173
static void color_tree_cleanup(ColorTree* tree) {color_tree_cleanup3125,124310
static int color_tree_get(ColorTree* tree, unsigned char r, unsigned char g, unsigned char b, unsigned char a) {color_tree_get3136,124580
static int color_tree_has(ColorTree* tree, unsigned char r, unsigned char g, unsigned char b, unsigned char a) {color_tree_has3147,124989
static unsigned color_tree_add(ColorTree* tree,color_tree_add3155,125348
static unsigned rgba8ToPixel(unsigned char* out, size_t i,rgba8ToPixel3172,126010
static void rgba16ToPixel(unsigned char* out, size_t i,rgba16ToPixel3226,128055
static void getPixelColorRGBA8(unsigned char* r, unsigned char* g,getPixelColorRGBA83259,129346
static void getPixelColorsRGBA8(unsigned char* LODEPNG_RESTRICT buffer, size_t numpixels,getPixelColorsRGBA83333,132171
static void getPixelColorsRGB8(unsigned char* LODEPNG_RESTRICT buffer, size_t numpixels,getPixelColorsRGB83429,136018
static void getPixelColorRGBA16(unsigned short* r, unsigned short* g, unsigned short* b, unsigned short* a,getPixelColorRGBA163503,138892
unsigned lodepng_convert(unsigned char* out, const unsigned char* in,lodepng_convert3529,140116
static unsigned lodepng_convert_rgb(lodepng_convert_rgb3610,143484
void lodepng_color_stats_init(LodePNGColorStats* stats) {lodepng_color_stats_init3662,145249
static unsigned getValueRequiredBits(unsigned char value) {getValueRequiredBits3689,146159
unsigned lodepng_compute_color_stats(LodePNGColorStats* stats,lodepng_compute_color_stats3697,146445
static unsigned lodepng_color_stats_add(LodePNGColorStats* stats,lodepng_color_stats_add3884,153484
static unsigned auto_choose_color(LodePNGColorMode* mode_out,auto_choose_color3907,154662
static unsigned char paethPredictor(short a, short b, short c) {paethPredictor3979,157357
static const unsigned ADAM7_IX[7] = { 0, 4, 0, 2, 0, 1, 0 }; /*x start values*/ADAM7_IX3990,157753
static const unsigned ADAM7_IY[7] = { 0, 0, 4, 0, 2, 0, 1 }; /*y start values*/ADAM7_IY3991,157833
static const unsigned ADAM7_DX[7] = { 8, 8, 4, 4, 2, 2, 1 }; /*x delta values*/ADAM7_DX3992,157913
static const unsigned ADAM7_DY[7] = { 8, 8, 8, 4, 4, 2, 2 }; /*y delta values*/ADAM7_DY3993,157993
static void Adam7_getpassvalues(unsigned passw[7], unsigned passh[7], size_t filter_passstart[8],Adam7_getpassvalues4010,158846
unsigned lodepng_inspect(unsigned* w, unsigned* h, LodePNGState* state,lodepng_inspect4042,160466
static unsigned unfilterScanline(unsigned char* recon, const unsigned char* scanline, const unsigned char* precon,unfilterScanline4106,163178
static unsigned unfilter(unsigned char* out, const unsigned char* in, unsigned w, unsigned h, unsigned bpp) {unfilter4203,167704
static void Adam7_deinterlace(unsigned char* out, const unsigned char* in, unsigned w, unsigned h, unsigned bpp) {Adam7_deinterlace4244,169524
static void removePaddingBits(unsigned char* out, const unsigned char* in,removePaddingBits4284,171110
static unsigned postProcessScanlines(unsigned char* out, unsigned char* in,postProcessScanlines4311,172468
static unsigned readChunk_PLTE(LodePNGColorMode* color, const unsigned char* data, size_t chunkLength) {readChunk_PLTE4354,174488
static unsigned readChunk_tRNS(LodePNGColorMode* color, const unsigned char* data, size_t chunkLength) {readChunk_tRNS4374,175188
static unsigned readChunk_bKGD(LodePNGInfo* info, const unsigned char* data, size_t chunkLength) {readChunk_bKGD4404,176269
static unsigned readChunk_tEXt(LodePNGInfo* info, const unsigned char* data, size_t chunkLength) {readChunk_tEXt4436,177622
static unsigned readChunk_zTXt(LodePNGInfo* info, const LodePNGDecoderSettings* decoder,readChunk_zTXt4476,178835
static unsigned readChunk_iTXt(LodePNGInfo* info, const LodePNGDecoderSettings* decoder,readChunk_iTXt4523,180588
static unsigned readChunk_tIME(LodePNGInfo* info, const unsigned char* data, size_t chunkLength) {readChunk_tIME4609,183682
static unsigned readChunk_pHYs(LodePNGInfo* info, const unsigned char* data, size_t chunkLength) {readChunk_pHYs4623,184090
static unsigned readChunk_gAMA(LodePNGInfo* info, const unsigned char* data, size_t chunkLength) {readChunk_gAMA4634,184500
static unsigned readChunk_cHRM(LodePNGInfo* info, const unsigned char* data, size_t chunkLength) {readChunk_cHRM4643,184801
static unsigned readChunk_sRGB(LodePNGInfo* info, const unsigned char* data, size_t chunkLength) {readChunk_sRGB4659,185767
static unsigned readChunk_iCCP(LodePNGInfo* info, const LodePNGDecoderSettings* decoder,readChunk_iCCP4668,186039
unsigned lodepng_inspect_chunk(LodePNGState* state, size_t pos,lodepng_inspect_chunk4709,187679
static void decodeGeneric(unsigned char** out, unsigned* w, unsigned* h,decodeGeneric4762,190090
unsigned lodepng_decode(unsigned char** out, unsigned* w, unsigned* h,lodepng_decode4956,198942
unsigned lodepng_decode_memory(unsigned char** out, unsigned* w, unsigned* h, const unsigned char* in,lodepng_decode_memory4993,200575
unsigned lodepng_decode32(unsigned char** out, unsigned* w, unsigned* h, const unsigned char* in, size_t insize) {lodepng_decode325010,201260
unsigned lodepng_decode24(unsigned char** out, unsigned* w, unsigned* h, const unsigned char* in, size_t insize) {lodepng_decode245014,201446
unsigned lodepng_decode_file(unsigned char** out, unsigned* w, unsigned* h, const char* filename,lodepng_decode_file5019,201659
unsigned lodepng_decode32_file(unsigned char** out, unsigned* w, unsigned* h, const char* filename) {lodepng_decode32_file5033,202179
unsigned lodepng_decode24_file(unsigned char** out, unsigned* w, unsigned* h, const char* filename) {lodepng_decode24_file5037,202348
void lodepng_decoder_settings_init(LodePNGDecoderSettings* settings) {lodepng_decoder_settings_init5042,202548
void lodepng_state_init(LodePNGState* state) {lodepng_state_init5060,203214
void lodepng_state_cleanup(LodePNGState* state) {lodepng_state_cleanup5072,203600
void lodepng_state_copy(LodePNGState* dest, const LodePNGState* source) {lodepng_state_copy5077,203743
static unsigned writeSignature(ucvector* out) {writeSignature5095,204508
static unsigned addChunk_IHDR(ucvector* out, unsigned w, unsigned h,addChunk_IHDR5104,204835
static unsigned addChunk_PLTE(ucvector* out, const LodePNGColorMode* info) {addChunk_PLTE5123,205578
static unsigned addChunk_tRNS(ucvector* out, const LodePNGColorMode* info) {addChunk_tRNS5140,206061
static unsigned addChunk_IDAT(ucvector* out, const unsigned char* data, size_t datasize,addChunk_IDAT5177,207473
static unsigned addChunk_IEND(ucvector* out) {addChunk_IEND5191,207903
static unsigned addChunk_tEXt(ucvector* out, const char* keyword, const char* textstring) {addChunk_tEXt5197,208045
static unsigned addChunk_zTXt(ucvector* out, const char* keyword, const char* textstring,addChunk_zTXt5210,208645
static unsigned addChunk_iTXt(ucvector* out, unsigned compress, const char* keyword, const char* langtag,addChunk_iTXt5238,209684
static unsigned addChunk_bKGD(ucvector* out, const LodePNGInfo* info) {addChunk_bKGD5282,211363
static unsigned addChunk_tIME(ucvector* out, const LodePNGTime* time) {addChunk_tIME5304,212492
static unsigned addChunk_pHYs(ucvector* out, const LodePNGInfo* info) {addChunk_pHYs5318,213009
static unsigned addChunk_gAMA(ucvector* out, const LodePNGInfo* info) {addChunk_gAMA5328,213350
static unsigned addChunk_cHRM(ucvector* out, const LodePNGInfo* info) {addChunk_cHRM5336,213615
static unsigned addChunk_sRGB(ucvector* out, const LodePNGInfo* info) {addChunk_sRGB5351,214262
static unsigned addChunk_iCCP(ucvector* out, const LodePNGInfo* info, LodePNGCompressSettings* zlibsettings) {addChunk_iCCP5356,214434
static void filterScanline(unsigned char* out, const unsigned char* scanline, const unsigned char* prevline,filterScanline5384,215437
static size_t ilog2(size_t i) {ilog25429,217347
static size_t ilog2i(size_t i) {ilog2i5440,217705
static unsigned filter(unsigned char* out, const unsigned char* in, unsigned w, unsigned h,filter5449,217981
static void addPaddingBits(unsigned char* out, const unsigned char* in,addPaddingBits5643,226647
static void Adam7_interlace(unsigned char* out, const unsigned char* in, unsigned w, unsigned h, unsigned bpp) {Adam7_interlace5673,227906
static unsigned preProcessScanlines(unsigned char** out, size_t* outsize, const unsigned char* in,preProcessScanlines5714,229555
static unsigned addUnknownChunks(ucvector* out, unsigned char* data, size_t datasize) {addUnknownChunks5788,232662
static unsigned isGrayICCProfile(const unsigned char* profile, unsigned size) {isGrayICCProfile5798,233047
static unsigned isRGBICCProfile(const unsigned char* profile, unsigned size) {isRGBICCProfile5812,233801
unsigned lodepng_encode(unsigned char** out, size_t* outsize,lodepng_encode5819,234090
unsigned lodepng_encode_memory(unsigned char** out, size_t* outsize, const unsigned char* image,lodepng_encode_memory6080,244628
unsigned lodepng_encode32(unsigned char** out, size_t* outsize, const unsigned char* image, unsigned w, unsigned h) {lodepng_encode326095,245195
unsigned lodepng_encode24(unsigned char** out, size_t* outsize, const unsigned char* image, unsigned w, unsigned h) {lodepng_encode246099,245388
unsigned lodepng_encode_file(const char* filename, const unsigned char* image, unsigned w, unsigned h,lodepng_encode_file6104,245608
unsigned lodepng_encode32_file(const char* filename, const unsigned char* image, unsigned w, unsigned h) {lodepng_encode32_file6114,246046
unsigned lodepng_encode24_file(const char* filename, const unsigned char* image, unsigned w, unsigned h) {lodepng_encode24_file6118,246222
void lodepng_encoder_settings_init(LodePNGEncoderSettings* settings) {lodepng_encoder_settings_init6123,246429
const char* lodepng_error_text(unsigned code) {lodepng_error_text6144,247109

lib/lvgl/src/extra/libs/png/lodepng.h,12514
#define LODEPNG_HLODEPNG_H27,932
#define LODEPNG_COMPILE_ZLIBLODEPNG_COMPILE_ZLIB47,1708
#define LODEPNG_COMPILE_PNGLODEPNG_COMPILE_PNG52,1808
#define LODEPNG_COMPILE_DECODERLODEPNG_COMPILE_DECODER57,1920
#define LODEPNG_COMPILE_ENCODERLODEPNG_COMPILE_ENCODER62,2036
#define LODEPNG_COMPILE_DISKLODEPNG_COMPILE_DISK67,2177
#define LODEPNG_COMPILE_ANCILLARY_CHUNKSLODEPNG_COMPILE_ANCILLARY_CHUNKS72,2351
#define LODEPNG_COMPILE_ERROR_TEXTLODEPNG_COMPILE_ERROR_TEXT77,2506
#define LODEPNG_COMPILE_ALLOCATORSLODEPNG_COMPILE_ALLOCATORS84,2798
#define LODEPNG_COMPILE_CPPLODEPNG_COMPILE_CPP90,2986
typedef enum LodePNGColorType {LodePNGColorType101,3202
  LCT_GREY = 0, /*grayscale: 1,2,4,8,16 bit*/LCT_GREY102,3234
  LCT_RGB = 2, /*RGB: 8,16 bit*/LCT_RGB103,3280
  LCT_PALETTE = 3, /*palette: 1,2,4,8 bit*/LCT_PALETTE104,3313
  LCT_GREY_ALPHA = 4, /*grayscale with alpha: 8,16 bit*/LCT_GREY_ALPHA105,3357
  LCT_RGBA = 6, /*RGB with alpha: 8,16 bit*/LCT_RGBA106,3414
  LCT_MAX_OCTET_VALUE = 255LCT_MAX_OCTET_VALUE112,3871
} LodePNGColorType;LodePNGColorType113,3899
namespace lodepng {lodepng214,8931
typedef struct LodePNGDecompressSettings LodePNGDecompressSettings;LodePNGDecompressSettings269,11602
struct LodePNGDecompressSettings {LodePNGDecompressSettings270,11670
  unsigned ignore_adler32; /*if 1, continue and don't give an error message if the Adler32 checksum is corrupted*/ignore_adler32272,11787
  unsigned ignore_nlen; /*ignore complement of len checksum in uncompressed blocks*/ignore_nlen273,11902
  size_t max_output_size;max_output_size280,12423
  unsigned (*custom_zlib)(unsigned char**, size_t*,custom_zlib284,12599
  unsigned (*custom_inflate)(unsigned char**, size_t*,custom_inflate290,13007
  const void* custom_context; /*optional custom settings for custom functions*/custom_context294,13186
typedef struct LodePNGCompressSettings LodePNGCompressSettings;LodePNGCompressSettings306,13606
struct LodePNGCompressSettings /*deflate = compress*/ {LodePNGCompressSettings307,13670
  unsigned btype; /*the block type for LZ (0, 1, 2 or 3, see zlib standard). Should be 2 for proper compression.*/btype309,13754
  unsigned use_lz77; /*whether or not to use LZ77. Should be 1 for proper compression.*/use_lz77310,13869
  unsigned windowsize; /*must be a power of two <= 32768. higher compresses more but is slower. Default value: 2048.*/windowsize311,13958
  unsigned minmatch; /*minimum lz77 length. 3 is normally best, 6 can be better for some PNGs. Default: 0*/minmatch312,14077
  unsigned nicematch; /*stop searching if >= this length found. Set to 258 for best compression. Default: 128*/nicematch313,14185
  unsigned lazymatching; /*use lazy matching: better compression but a bit slower. Default: true*/lazymatching314,14297
  unsigned (*custom_zlib)(unsigned char**, size_t*,custom_zlib317,14467
  unsigned (*custom_deflate)(unsigned char**, size_t*,custom_deflate323,14824
  const void* custom_context; /*optional custom settings for custom functions*/custom_context327,15001
typedef struct LodePNGColorMode {LodePNGColorMode340,15514
  LodePNGColorType colortype; /*color type, see PNG standard or documentation further in this header file*/colortype342,15568
  unsigned bitdepth;  /*bits per sample, see PNG standard or documentation further in this header file*/bitdepth343,15676
  unsigned char* palette; /*palette in RGBARGBA... order. Must be either 0, or when allocated must have 1024 bytes*/palette360,16351
  size_t palettesize; /*palette size in number of colors (amount of used bytes is 4 * palettesize)*/palettesize361,16468
  unsigned key_defined; /*is a transparent color key given? 0 = false, 1 = true*/key_defined374,16992
  unsigned key_r;       /*red/grayscale component of color key*/key_r375,17074
  unsigned key_g;       /*green component of color key*/key_g376,17139
  unsigned key_b;       /*blue component of color key*/key_b377,17196
} LodePNGColorMode;LodePNGColorMode378,17252
typedef struct LodePNGTime {LodePNGTime420,19610
  unsigned year;    /*2 bytes used (0-65535)*/year421,19639
  unsigned month;   /*1-12*/month422,19686
  unsigned day;     /*1-31*/day423,19715
  unsigned hour;    /*0-23*/hour424,19744
  unsigned minute;  /*0-59*/minute425,19773
  unsigned second;  /*0-60 (to allow for leap seconds)*/second426,19802
} LodePNGTime;LodePNGTime427,19859
typedef struct LodePNGInfo {LodePNGInfo431,19989
  unsigned compression_method;/*compression method of the original file. Always 0.*/compression_method433,20085
  unsigned filter_method;     /*filter method of the original file*/filter_method434,20170
  unsigned interlace_method;  /*interlace method of the original file: 0=none, 1=Adam7*/interlace_method435,20239
  LodePNGColorMode color;     /*color type and bits, palette and transparency of the PNG file*/color436,20328
  unsigned background_defined; /*is a suggested background color given?*/background_defined462,21573
  unsigned background_r;       /*red/gray/palette component of suggested background color*/background_r463,21647
  unsigned background_g;       /*green component of suggested background color*/background_g464,21739
  unsigned background_b;       /*blue component of suggested background color*/background_b465,21820
  size_t text_num; /*the amount of texts in these char** buffers (there may be more texts in itext)*/text_num487,22887
  char** text_keys; /*the keyword of a text chunk (e.g. "Comment")*/text_keys488,22989
  char** text_strings; /*the actual text*/text_strings489,23058
  size_t itext_num; /*the amount of international texts in this PNG*/itext_num499,23466
  char** itext_keys; /*the English keyword of the text chunk (e.g. "Comment")*/itext_keys500,23536
  char** itext_langtags; /*language tag for this text's language, ISO/IEC 646 string, e.g. ISO 639 language tag*/itext_langtags501,23616
  char** itext_transkeys; /*keyword translated to the international language - UTF-8 string*/itext_transkeys502,23730
  char** itext_strings; /*the actual international text - UTF-8 string*/itext_strings503,23824
  unsigned time_defined; /*set to 1 to make the encoder generate a tIME chunk*/time_defined506,23922
  LodePNGTime time;time507,24002
  unsigned phys_defined; /*if 0, there is no pHYs chunk and the values below are undefined, if 1 else there is one*/phys_defined510,24047
  unsigned phys_x; /*pixels per unit in x direction*/phys_x511,24164
  unsigned phys_y; /*pixels per unit in y direction*/phys_y512,24218
  unsigned phys_unit; /*may be 0 (unknown unit) or 1 (metre)*/phys_unit513,24272
  unsigned gama_defined; /* Whether a gAMA chunk is present (0 = not present, 1 = present). */gama_defined526,24868
  unsigned gama_gamma;   /* Gamma exponent times 100000 */gama_gamma527,24963
  unsigned chrm_defined; /* Whether a cHRM chunk is present (0 = not present, 1 = present). */chrm_defined530,25102
  unsigned chrm_white_x; /* White Point x times 100000 */chrm_white_x531,25197
  unsigned chrm_white_y; /* White Point y times 100000 */chrm_white_y532,25255
  unsigned chrm_red_x;   /* Red x times 100000 */chrm_red_x533,25313
  unsigned chrm_red_y;   /* Red y times 100000 */chrm_red_y534,25363
  unsigned chrm_green_x; /* Green x times 100000 */chrm_green_x535,25413
  unsigned chrm_green_y; /* Green y times 100000 */chrm_green_y536,25465
  unsigned chrm_blue_x;  /* Blue x times 100000 */chrm_blue_x537,25517
  unsigned chrm_blue_y;  /* Blue y times 100000 */chrm_blue_y538,25568
  unsigned srgb_defined; /* Whether an sRGB chunk is present (0 = not present, 1 = present). */srgb_defined545,25857
  unsigned srgb_intent;  /* Rendering intent: 0=perceptual, 1=rel. colorimetric, 2=saturation, 3=abs. colorimetric */srgb_intent546,25953
  unsigned iccp_defined;      /* Whether an iCCP chunk is present (0 = not present, 1 = present). */iccp_defined569,27543
  char* iccp_name;            /* Null terminated string with profile name, 1-79 bytes */iccp_name570,27644
  unsigned char* iccp_profile;iccp_profile576,27918
  unsigned iccp_profile_size; /* The size of iccp_profile in bytes */iccp_profile_size577,27949
  unsigned char* unknown_chunks_data[3];unknown_chunks_data599,29038
  size_t unknown_chunks_size[3]; /*size in bytes of the unknown chunks, given for protection*/unknown_chunks_size600,29079
} LodePNGInfo;LodePNGInfo602,29218
typedef struct LodePNGDecoderSettings {LodePNGDecoderSettings643,31406
  LodePNGDecompressSettings zlibsettings; /*in here is the setting to ignore Adler32 checksums*/zlibsettings644,31446
  unsigned ignore_crc; /*ignore CRC checksums*/ignore_crc647,31633
  unsigned ignore_critical; /*ignore unknown critical chunks*/ignore_critical648,31681
  unsigned ignore_end; /*ignore issues at end of file if possible (missing IEND chunk, too large chunk, ...)*/ignore_end649,31744
  unsigned color_convert; /*whether to convert the PNG to the color type you want. Default: yes*/color_convert655,32218
  unsigned read_text_chunks; /*if false but remember_unknown_chunks is true, they're stored in the unknown chunks*/read_text_chunks658,32357
  unsigned remember_unknown_chunks;remember_unknown_chunks661,32577
  size_t max_text_size;max_text_size666,32930
  size_t max_icc_size;max_icc_size671,33234
} LodePNGDecoderSettings;LodePNGDecoderSettings673,33301
typedef enum LodePNGFilterStrategy {LodePNGFilterStrategy680,33561
  LFS_ZERO = 0,LFS_ZERO682,33625
  LFS_ONE = 1,LFS_ONE684,33736
  LFS_TWO = 2,LFS_TWO685,33751
  LFS_THREE = 3,LFS_THREE686,33766
  LFS_FOUR = 4,LFS_FOUR687,33783
  LFS_MINSUM,LFS_MINSUM689,33891
  LFS_ENTROPY,LFS_ENTROPY692,34049
  LFS_BRUTE_FORCE,LFS_BRUTE_FORCE697,34234
  LFS_PREDEFINEDLFS_PREDEFINED699,34336
} LodePNGFilterStrategy;LodePNGFilterStrategy700,34353
typedef struct LodePNGColorStats {LodePNGColorStats705,34659
  unsigned colored; /*not grayscale*/colored706,34694
  unsigned key; /*image is not opaque and color key is possible instead of full alpha*/key707,34732
  unsigned short key_r; /*key values, always as 16-bit, in 8-bit case the byte is duplicated, e.g. 65535 means 255*/key_r708,34820
  unsigned short key_g;key_g709,34937
  unsigned short key_b;key_b710,34961
  unsigned alpha; /*image is not opaque and alpha channel or alpha palette required*/alpha711,34985
  unsigned numcolors; /*amount of colors, up to 257. Not valid if bits == 16 or allow_palette is disabled.*/numcolors712,35071
  unsigned char palette[1024]; /*Remembers up to the first 256 RGBA colors, in no particular order, only valid when numcolors is valid*/palette713,35180
  unsigned bits; /*bits per channel (not for palette). 1,2 or 4 for grayscale only. 16 if 16-bit per channel required.*/bits714,35317
  size_t numpixels;numpixels715,35438
  unsigned allow_palette; /*default 1. if 0, disallow choosing palette colortype in auto_choose_color, and don't count numcolors*/allow_palette718,35509
  unsigned allow_greyscale; /*default 1. if 0, choose RGB or RGBA even if the image only has gray colors*/allow_greyscale719,35640
} LodePNGColorStats;LodePNGColorStats720,35747
typedef struct LodePNGEncoderSettings {LodePNGEncoderSettings731,36213
  LodePNGCompressSettings zlibsettings; /*settings for the zlib encoder, such as window size, ...*/zlibsettings732,36253
  unsigned auto_convert; /*automatically choose output PNG color type. Default: true*/auto_convert734,36354
  unsigned filter_palette_zero;filter_palette_zero740,36743
  LodePNGFilterStrategy filter_strategy;filter_strategy743,36956
  const unsigned char* predefined_filters;predefined_filters748,37361
  unsigned force_palette;force_palette752,37534
  unsigned add_id;add_id755,37672
  unsigned text_compression;text_compression757,37790
} LodePNGEncoderSettings;LodePNGEncoderSettings759,37863
typedef struct LodePNGState {LodePNGState767,38146
  LodePNGDecoderSettings decoder; /*the decoding settings*/decoder769,38207
  LodePNGEncoderSettings encoder; /*the encoding settings*/encoder772,38333
  LodePNGColorMode info_raw; /*specifies the format in which you would like to get the raw pixel buffer*/info_raw774,38428
  LodePNGInfo info_png; /*info of the PNG image obtained after decoding*/info_png775,38534
  unsigned error;error776,38608
} LodePNGState;LodePNGState777,38626
namespace lodepng {lodepng997,48821
class State : public LodePNGState {State999,48868

lib/lvgl/src/extra/libs/png/lv_png.h,31
#define LV_PNG_HLV_PNG_H7,47

lib/lvgl/src/extra/libs/lv_libs.h,33
#define LV_LIBS_HLV_LIBS_H7,49

lib/lvgl/src/extra/layouts/lv_layouts.h,139
#define LV_LAYOUTS_HLV_LAYOUTS_H7,55
#  define LV_TRACE_LAYOUT(LV_TRACE_LAYOUT35,538
#  define LV_TRACE_LAYOUT(LV_TRACE_LAYOUT37,601

lib/lvgl/src/extra/layouts/flex/lv_flex.c,3609
    lv_flex_align_t main_place;main_place21,287
    lv_flex_align_t cross_place;cross_place22,319
    lv_flex_align_t track_place;track_place23,352
    uint8_t row : 1;row24,385
    uint8_t wrap : 1;wrap25,406
    uint8_t rev : 1;rev26,428
} flex_t;flex_t27,449
    lv_obj_t * item;item30,477
    lv_coord_t min_size;min_size31,498
    lv_coord_t max_size;max_size32,523
    lv_coord_t final_size;final_size33,548
    uint32_t grow_value;grow_value34,575
    uint32_t clamped : 1;clamped35,600
} grow_dsc_t;grow_dsc_t36,626
    lv_coord_t track_cross_size;track_cross_size39,658
    lv_coord_t track_main_size;         /*For all items*/track_main_size40,691
    lv_coord_t track_fix_main_size;     /*For non grow items*/track_fix_main_size41,749
    uint32_t item_cnt;item_cnt42,812
    grow_dsc_t * grow_dsc;grow_dsc43,835
    uint32_t grow_item_cnt;grow_item_cnt44,862
    uint32_t grow_dsc_calc : 1;grow_dsc_calc45,890
} track_t;track_t46,922
uint32_t LV_LAYOUT_FLEX;LV_LAYOUT_FLEX68,1871
lv_style_prop_t LV_STYLE_FLEX_FLOW;LV_STYLE_FLEX_FLOW69,1896
lv_style_prop_t LV_STYLE_FLEX_MAIN_PLACE;LV_STYLE_FLEX_MAIN_PLACE70,1932
lv_style_prop_t LV_STYLE_FLEX_CROSS_PLACE;LV_STYLE_FLEX_CROSS_PLACE71,1974
lv_style_prop_t LV_STYLE_FLEX_TRACK_PLACE;LV_STYLE_FLEX_TRACK_PLACE72,2017
lv_style_prop_t LV_STYLE_FLEX_GROW;LV_STYLE_FLEX_GROW73,2060
void lv_flex_init(void)lv_flex_init92,2376
void lv_obj_set_flex_flow(lv_obj_t * obj, lv_flex_flow_t flow)lv_obj_set_flex_flow102,2774
void lv_obj_set_flex_align(lv_obj_t * obj, lv_flex_align_t main_place, lv_flex_align_t cross_place,lv_obj_set_flex_align108,2941
void lv_obj_set_flex_grow(lv_obj_t * obj, uint8_t grow)lv_obj_set_flex_grow117,3333
void lv_style_set_flex_flow(lv_style_t * style, lv_flex_flow_t value)lv_style_set_flex_flow124,3498
void lv_style_set_flex_main_place(lv_style_t * style, lv_flex_align_t value)lv_style_set_flex_main_place132,3690
void lv_style_set_flex_cross_place(lv_style_t * style, lv_flex_align_t value)lv_style_set_flex_cross_place140,3895
void lv_style_set_flex_track_place(lv_style_t * style, lv_flex_align_t value)lv_style_set_flex_track_place148,4102
void lv_style_set_flex_grow(lv_style_t * style, uint8_t value)lv_style_set_flex_grow156,4309
void lv_obj_set_style_flex_flow(lv_obj_t * obj, lv_flex_flow_t value, lv_style_selector_t selector)lv_obj_set_style_flex_flow165,4495
void lv_obj_set_style_flex_main_place(lv_obj_t * obj, lv_flex_align_t value, lv_style_selector_t selector)lv_obj_set_style_flex_main_place173,4736
void lv_obj_set_style_flex_cross_place(lv_obj_t * obj, lv_flex_align_t value, lv_style_selector_t selector)lv_obj_set_style_flex_cross_place181,4990
void lv_obj_set_style_flex_track_place(lv_obj_t * obj, lv_flex_align_t value, lv_style_selector_t selector)lv_obj_set_style_flex_track_place189,5246
void lv_obj_set_style_flex_grow(lv_obj_t * obj, uint8_t value, lv_style_selector_t selector)lv_obj_set_style_flex_grow197,5502
static void flex_update(lv_obj_t * cont, void * user_data)flex_update209,5808
static int32_t find_track_end(lv_obj_t * cont, flex_t * f, int32_t item_start_id, lv_coord_t max_main_size,find_track_end317,10680
static void children_repos(lv_obj_t * cont, flex_t * f, int32_t item_first_id, int32_t item_last_id, lv_coord_t abs_x,children_repos405,14552
static void place_content(lv_flex_align_t place, lv_coord_t max_size, lv_coord_t content_size, lv_coord_t item_cnt,place_content541,20058
static lv_obj_t * get_next_item(lv_obj_t * cont, bool rev, int32_t * item_id)get_next_item581,21390

lib/lvgl/src/extra/layouts/flex/lv_flex.h,2311
#define LV_FLEX_HLV_FLEX_H7,49
#define LV_OBJ_FLAG_FLEX_IN_NEW_TRACK LV_OBJ_FLAG_FLEX_IN_NEW_TRACK23,287
LV_EXPORT_CONST_INT(LV_OBJ_FLAG_FLEX_IN_NEW_TRACK);LV_OBJ_FLAG_FLEX_IN_NEW_TRACK24,348
#define _LV_FLEX_COLUMN _LV_FLEX_COLUMN26,401
#define _LV_FLEX_WRAP _LV_FLEX_WRAP27,441
#define _LV_FLEX_REVERSE _LV_FLEX_REVERSE28,478
    LV_FLEX_ALIGN_START,LV_FLEX_ALIGN_START38,681
    LV_FLEX_ALIGN_END,LV_FLEX_ALIGN_END39,706
    LV_FLEX_ALIGN_CENTER,LV_FLEX_ALIGN_CENTER40,729
    LV_FLEX_ALIGN_SPACE_EVENLY,LV_FLEX_ALIGN_SPACE_EVENLY41,755
    LV_FLEX_ALIGN_SPACE_AROUND,LV_FLEX_ALIGN_SPACE_AROUND42,787
    LV_FLEX_ALIGN_SPACE_BETWEEN,LV_FLEX_ALIGN_SPACE_BETWEEN43,819
} lv_flex_align_t;lv_flex_align_t44,852
    LV_FLEX_FLOW_ROW                 = 0x00,LV_FLEX_FLOW_ROW47,887
    LV_FLEX_FLOW_COLUMN              = _LV_FLEX_COLUMN,LV_FLEX_FLOW_COLUMN48,932
    LV_FLEX_FLOW_ROW_WRAP            = LV_FLEX_FLOW_ROW | _LV_FLEX_WRAP,LV_FLEX_FLOW_ROW_WRAP49,988
    LV_FLEX_FLOW_ROW_REVERSE         = LV_FLEX_FLOW_ROW | _LV_FLEX_REVERSE,LV_FLEX_FLOW_ROW_REVERSE50,1061
    LV_FLEX_FLOW_ROW_WRAP_REVERSE    = LV_FLEX_FLOW_ROW | _LV_FLEX_WRAP | _LV_FLEX_REVERSE,LV_FLEX_FLOW_ROW_WRAP_REVERSE51,1137
    LV_FLEX_FLOW_COLUMN_WRAP         = LV_FLEX_FLOW_COLUMN | _LV_FLEX_WRAP,LV_FLEX_FLOW_COLUMN_WRAP52,1229
    LV_FLEX_FLOW_COLUMN_REVERSE      = LV_FLEX_FLOW_COLUMN | _LV_FLEX_REVERSE,LV_FLEX_FLOW_COLUMN_REVERSE53,1305
    LV_FLEX_FLOW_COLUMN_WRAP_REVERSE = LV_FLEX_FLOW_COLUMN | _LV_FLEX_WRAP | _LV_FLEX_REVERSE,LV_FLEX_FLOW_COLUMN_WRAP_REVERSE54,1384
} lv_flex_flow_t;lv_flex_flow_t55,1479
static inline lv_flex_flow_t lv_obj_get_style_flex_flow(const lv_obj_t * obj, uint32_t part)lv_obj_get_style_flex_flow112,4091
static inline lv_flex_align_t lv_obj_get_style_flex_main_place(const lv_obj_t * obj, uint32_t part)lv_obj_get_style_flex_main_place118,4302
static inline lv_flex_align_t lv_obj_get_style_flex_cross_place(const lv_obj_t * obj, uint32_t part)lv_obj_get_style_flex_cross_place124,4527
static inline lv_flex_align_t lv_obj_get_style_flex_track_place(const lv_obj_t * obj, uint32_t part)lv_obj_get_style_flex_track_place130,4754
static inline uint8_t lv_obj_get_style_flex_grow(const lv_obj_t * obj, uint32_t part)lv_obj_get_style_flex_grow136,4981

lib/lvgl/src/extra/layouts/grid/lv_grid.c,6067
#define IS_FR(IS_FR19,234
#define IS_CONTENT(IS_CONTENT20,283
#define GET_FR(GET_FR21,332
    uint32_t col;col27,466
    uint32_t row;row28,484
    lv_point_t grid_abs;grid_abs29,502
} item_repos_hint_t;item_repos_hint_t30,527
    lv_coord_t * x;x33,566
    lv_coord_t * y;y34,586
    lv_coord_t * w;w35,606
    lv_coord_t * h;h36,626
    uint32_t col_num;col_num37,646
    uint32_t row_num;row_num38,668
    lv_coord_t grid_w;grid_w39,690
    lv_coord_t grid_h;grid_h40,713
} _lv_grid_calc_t;_lv_grid_calc_t41,736
static inline const lv_coord_t * get_col_dsc(lv_obj_t * obj)get_col_dsc61,1544
static inline const lv_coord_t * get_row_dsc(lv_obj_t * obj)get_row_dsc65,1668
static inline uint8_t get_col_pos(lv_obj_t * obj)get_col_pos69,1789
static inline uint8_t get_row_pos(lv_obj_t * obj)get_row_pos73,1901
static inline uint8_t get_col_span(lv_obj_t * obj)get_col_span77,2010
static inline uint8_t get_row_span(lv_obj_t * obj)get_row_span81,2124
static inline uint8_t get_cell_col_align(lv_obj_t * obj)get_cell_col_align85,2235
static inline uint8_t get_cell_row_align(lv_obj_t * obj)get_cell_row_align89,2351
static inline uint8_t get_grid_col_align(lv_obj_t * obj)get_grid_col_align93,2467
static inline uint8_t get_grid_row_align(lv_obj_t * obj)get_grid_row_align97,2583
uint32_t LV_LAYOUT_GRID;LV_LAYOUT_GRID105,2767
lv_style_prop_t LV_STYLE_GRID_COLUMN_DSC_ARRAY;LV_STYLE_GRID_COLUMN_DSC_ARRAY106,2792
lv_style_prop_t LV_STYLE_GRID_COLUMN_ALIGN;LV_STYLE_GRID_COLUMN_ALIGN107,2840
lv_style_prop_t LV_STYLE_GRID_ROW_DSC_ARRAY;LV_STYLE_GRID_ROW_DSC_ARRAY108,2884
lv_style_prop_t LV_STYLE_GRID_ROW_ALIGN;LV_STYLE_GRID_ROW_ALIGN109,2929
lv_style_prop_t LV_STYLE_GRID_CELL_COLUMN_POS;LV_STYLE_GRID_CELL_COLUMN_POS110,2970
lv_style_prop_t LV_STYLE_GRID_CELL_COLUMN_SPAN;LV_STYLE_GRID_CELL_COLUMN_SPAN111,3017
lv_style_prop_t LV_STYLE_GRID_CELL_X_ALIGN;LV_STYLE_GRID_CELL_X_ALIGN112,3065
lv_style_prop_t LV_STYLE_GRID_CELL_ROW_POS;LV_STYLE_GRID_CELL_ROW_POS113,3109
lv_style_prop_t LV_STYLE_GRID_CELL_ROW_SPAN;LV_STYLE_GRID_CELL_ROW_SPAN114,3153
lv_style_prop_t LV_STYLE_GRID_CELL_Y_ALIGN;LV_STYLE_GRID_CELL_Y_ALIGN115,3198
void lv_grid_init(void)lv_grid_init130,3452
void lv_obj_set_grid_dsc_array(lv_obj_t * obj, const lv_coord_t col_dsc[], const lv_coord_t row_dsc[])lv_obj_set_grid_dsc_array147,4423
void lv_obj_set_grid_align(lv_obj_t * obj, lv_grid_align_t column_align, lv_grid_align_t row_align)lv_obj_set_grid_align154,4703
void lv_obj_set_grid_cell(lv_obj_t * obj, lv_grid_align_t x_align, uint8_t col_pos, uint8_t col_span,lv_obj_set_grid_cell161,4927
void lv_style_set_grid_row_dsc_array(lv_style_t * style, const lv_coord_t value[])lv_style_set_grid_row_dsc_array176,5532
void lv_style_set_grid_column_dsc_array(lv_style_t * style, const lv_coord_t value[])lv_style_set_grid_column_dsc_array184,5751
void lv_style_set_grid_row_align(lv_style_t * style, lv_grid_align_t value)lv_style_set_grid_row_align192,5976
void lv_style_set_grid_column_align(lv_style_t * style, lv_grid_align_t value)lv_style_set_grid_column_align200,6187
void lv_style_set_grid_cell_column_pos(lv_style_t * style, lv_coord_t value)lv_style_set_grid_cell_column_pos209,6405
void lv_style_set_grid_cell_column_span(lv_style_t * style, lv_coord_t value)lv_style_set_grid_cell_column_span217,6606
void lv_style_set_grid_cell_row_pos(lv_style_t * style, lv_coord_t value)lv_style_set_grid_cell_row_pos225,6809
void lv_style_set_grid_cell_row_span(lv_style_t * style, lv_coord_t value)lv_style_set_grid_cell_row_span233,7004
void lv_style_set_grid_cell_x_align(lv_style_t * style, lv_coord_t value)lv_style_set_grid_cell_x_align241,7201
void lv_style_set_grid_cell_y_align(lv_style_t * style, lv_coord_t value)lv_style_set_grid_cell_y_align249,7396
void lv_obj_set_style_grid_row_dsc_array(lv_obj_t * obj, const lv_coord_t value[], lv_style_selector_t selector)lv_obj_set_style_grid_row_dsc_array257,7591
void lv_obj_set_style_grid_column_dsc_array(lv_obj_t * obj, const lv_coord_t value[], lv_style_selector_t selector)lv_obj_set_style_grid_column_dsc_array265,7858
void lv_obj_set_style_grid_row_align(lv_obj_t * obj, lv_grid_align_t value, lv_style_selector_t selector)lv_obj_set_style_grid_row_align274,8132
void lv_obj_set_style_grid_column_align(lv_obj_t * obj, lv_grid_align_t value, lv_style_selector_t selector)lv_obj_set_style_grid_column_align282,8384
void lv_obj_set_style_grid_cell_column_pos(lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)lv_obj_set_style_grid_cell_column_pos291,8643
void lv_obj_set_style_grid_cell_column_span(lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)lv_obj_set_style_grid_cell_column_span299,8892
void lv_obj_set_style_grid_cell_row_pos(lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)lv_obj_set_style_grid_cell_row_pos307,9143
void lv_obj_set_style_grid_cell_row_span(lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)lv_obj_set_style_grid_cell_row_span315,9386
void lv_obj_set_style_grid_cell_x_align(lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)lv_obj_set_style_grid_cell_x_align323,9631
void lv_obj_set_style_grid_cell_y_align(lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)lv_obj_set_style_grid_cell_y_align331,9874
static void grid_update(lv_obj_t * cont, void * user_data)grid_update344,10190
static void calc(lv_obj_t * cont, _lv_grid_calc_t * calc_out)calc391,11941
static void calc_free(_lv_grid_calc_t * calc)calc_free425,13331
static void calc_cols(lv_obj_t * cont, _lv_grid_calc_t * c)calc_cols433,13514
static void calc_rows(lv_obj_t * cont, _lv_grid_calc_t * c)calc_rows505,15774
static void item_repos(lv_obj_t * item, _lv_grid_calc_t * c, item_repos_hint_t * hint)item_repos580,18280
static lv_coord_t grid_align(lv_coord_t cont_size,  bool auto_size, uint8_t align, lv_coord_t gap, uint32_t track_num,grid_align704,22764
static uint32_t count_tracks(const lv_coord_t * templ)count_tracks771,25104

lib/lvgl/src/extra/layouts/grid/lv_grid.h,2289
#define LV_GRID_HLV_GRID_H7,49
#define LV_GRID_FR(LV_GRID_FR27,460
#define LV_GRID_CONTENT LV_GRID_CONTENT29,517
LV_EXPORT_CONST_INT(LV_GRID_CONTENT);LV_GRID_CONTENT30,569
#define LV_GRID_TEMPLATE_LAST LV_GRID_TEMPLATE_LAST32,608
LV_EXPORT_CONST_INT(LV_GRID_TEMPLATE_LAST);LV_GRID_TEMPLATE_LAST33,654
    LV_GRID_ALIGN_START,LV_GRID_ALIGN_START43,864
    LV_GRID_ALIGN_CENTER,LV_GRID_ALIGN_CENTER44,889
    LV_GRID_ALIGN_END,LV_GRID_ALIGN_END45,915
    LV_GRID_ALIGN_STRETCH,LV_GRID_ALIGN_STRETCH46,938
    LV_GRID_ALIGN_SPACE_EVENLY,LV_GRID_ALIGN_SPACE_EVENLY47,965
    LV_GRID_ALIGN_SPACE_AROUND,LV_GRID_ALIGN_SPACE_AROUND48,997
    LV_GRID_ALIGN_SPACE_BETWEEN,LV_GRID_ALIGN_SPACE_BETWEEN49,1029
} lv_grid_align_t;lv_grid_align_t50,1062
static inline lv_coord_t lv_grid_fr(uint8_t x)lv_grid_fr94,2748
static inline const lv_coord_t * lv_obj_get_style_grid_row_dsc_array(const lv_obj_t * obj, uint32_t part)lv_obj_get_style_grid_row_dsc_array121,4700
static inline const lv_coord_t * lv_obj_get_style_grid_column_dsc_array(const lv_obj_t * obj, uint32_t part)lv_obj_get_style_grid_column_dsc_array127,4937
static inline lv_grid_align_t lv_obj_get_style_grid_row_align(const lv_obj_t * obj, uint32_t part)lv_obj_get_style_grid_row_align133,5180
static inline lv_grid_align_t lv_obj_get_style_grid_column_align(const lv_obj_t * obj, uint32_t part)lv_obj_get_style_grid_column_align139,5403
static inline lv_coord_t lv_obj_get_style_grid_cell_column_pos(const lv_obj_t * obj, uint32_t part)lv_obj_get_style_grid_cell_column_pos145,5632
static inline lv_coord_t lv_obj_get_style_grid_cell_column_span(const lv_obj_t * obj, uint32_t part)lv_obj_get_style_grid_cell_column_span151,5857
static inline lv_coord_t lv_obj_get_style_grid_cell_row_pos(const lv_obj_t * obj, uint32_t part)lv_obj_get_style_grid_cell_row_pos157,6084
static inline lv_coord_t lv_obj_get_style_grid_cell_row_span(const lv_obj_t * obj, uint32_t part)lv_obj_get_style_grid_cell_row_span163,6303
static inline lv_coord_t lv_obj_get_style_grid_cell_x_align(const lv_obj_t * obj, uint32_t part)lv_obj_get_style_grid_cell_x_align169,6524
static inline lv_coord_t lv_obj_get_style_grid_cell_y_align(const lv_obj_t * obj, uint32_t part)lv_obj_get_style_grid_cell_y_align175,6743

lib/lvgl/src/extra/lv_extra.c,46
void lv_extra_init(void)lv_extra_init35,529

lib/lvgl/src/extra/others/lv_others.h,37
#define LV_OTHERS_HLV_OTHERS_H7,53

lib/lvgl/src/extra/others/snapshot/lv_snapshot.h,41
#define LV_SNAPSHOT_HLV_SNAPSHOT_H7,57

lib/lvgl/src/extra/others/snapshot/lv_snapshot.c,411
uint32_t lv_snapshot_buf_size_needed(lv_obj_t * obj, lv_img_cf_t cf)lv_snapshot_buf_size_needed46,854
lv_res_t lv_snapshot_take_to_buf(lv_obj_t * obj, lv_img_cf_t cf, lv_img_dsc_t * dsc, void * buf, uint32_t buff_size)lv_snapshot_take_to_buf82,1969
lv_img_dsc_t * lv_snapshot_take(lv_obj_t * obj, lv_img_cf_t cf)lv_snapshot_take182,4826
void lv_snapshot_free(lv_img_dsc_t * dsc)lv_snapshot_free213,5579

lib/lvgl/src/extra/widgets/keyboard/lv_keyboard.h,1096
#define LV_KEYBOARD_HLV_KEYBOARD_H7,57
#define LV_KEYBOARD_CTRL_BTN_FLAGS LV_KEYBOARD_CTRL_BTN_FLAGS32,570
    LV_KEYBOARD_MODE_TEXT_LOWER,LV_KEYBOARD_MODE_TEXT_LOWER40,798
    LV_KEYBOARD_MODE_TEXT_UPPER,LV_KEYBOARD_MODE_TEXT_UPPER41,831
    LV_KEYBOARD_MODE_SPECIAL,LV_KEYBOARD_MODE_SPECIAL42,864
    LV_KEYBOARD_MODE_NUMBER,LV_KEYBOARD_MODE_NUMBER43,894
    LV_KEYBOARD_MODE_USER_1,LV_KEYBOARD_MODE_USER_144,923
    LV_KEYBOARD_MODE_USER_2,LV_KEYBOARD_MODE_USER_245,952
    LV_KEYBOARD_MODE_USER_3,LV_KEYBOARD_MODE_USER_346,981
    LV_KEYBOARD_MODE_USER_4,LV_KEYBOARD_MODE_USER_447,1010
typedef uint8_t lv_keyboard_mode_t;lv_keyboard_mode_t49,1042
    lv_btnmatrix_t btnm;btnm53,1117
    lv_obj_t * ta;              /*Pointer to the assigned text area*/ta54,1142
    lv_keyboard_mode_t mode;    /*Key map type*/mode55,1212
    uint8_t popovers : 1;       /*Show button titles in popovers on press*/popovers56,1261
} lv_keyboard_t;lv_keyboard_t57,1337
static inline const char ** lv_keyboard_get_map_array(const lv_obj_t * kb)lv_keyboard_get_map_array137,3681

lib/lvgl/src/extra/widgets/keyboard/lv_keyboard.c,2348
#define MY_CLASS MY_CLASS21,310
#define LV_KB_BTN(LV_KB_BTN22,349
const lv_obj_class_t lv_keyboard_class = {lv_keyboard_class40,814
static const char * const default_kb_map_lc[] = {"1#", "q", "w", "e", "r", "t", "y", "u", "i", "o", "p", LV_SYMBOL_BACKSPACE, "\n",default_kb_map_lc49,1069
static const lv_btnmatrix_ctrl_t default_kb_ctrl_lc_map[] = {default_kb_ctrl_lc_map55,1619
static const char * const default_kb_map_uc[] = {"1#", "Q", "W", "E", "R", "T", "Y", "U", "I", "O", "P", LV_SYMBOL_BACKSPACE, "\n",default_kb_map_uc62,2529
static const lv_btnmatrix_ctrl_t default_kb_ctrl_uc_map[] = {default_kb_ctrl_uc_map68,3079
static const char * const default_kb_map_spec[] = {"1", "2", "3", "4", "5", "6", "7", "8", "9", "0", LV_SYMBOL_BACKSPACE, "\n",default_kb_map_spec75,3989
static const lv_btnmatrix_ctrl_t default_kb_ctrl_spec_map[] = {default_kb_ctrl_spec_map81,4536
static const char * const default_kb_map_num[] = {"1", "2", "3", LV_SYMBOL_KEYBOARD, "\n",default_kb_map_num88,5273
static const lv_btnmatrix_ctrl_t default_kb_ctrl_num_map[] = {default_kb_ctrl_num_map94,5697
static const char * * kb_map[9] = {kb_map101,5888
static const lv_btnmatrix_ctrl_t * kb_ctrl[9] = {kb_ctrl112,6268
lv_obj_t * lv_keyboard_create(lv_obj_t * parent)lv_keyboard_create137,6854
void lv_keyboard_set_textarea(lv_obj_t * obj, lv_obj_t * ta)lv_keyboard_set_textarea154,7315
void lv_keyboard_set_mode(lv_obj_t * obj, lv_keyboard_mode_t mode)lv_keyboard_set_mode181,8013
void lv_keyboard_set_popovers(lv_obj_t * obj, bool en)lv_keyboard_set_popovers196,8422
void lv_keyboard_set_map(lv_obj_t * obj, lv_keyboard_mode_t mode, const char * map[],lv_keyboard_set_map215,8923
lv_obj_t * lv_keyboard_get_textarea(const lv_obj_t * obj)lv_keyboard_get_textarea232,9417
lv_keyboard_mode_t lv_keyboard_get_mode(const lv_obj_t * obj)lv_keyboard_get_mode244,9737
bool lv_btnmatrix_get_popovers(const lv_obj_t * obj)lv_btnmatrix_get_popovers256,10080
void lv_keyboard_def_event_cb(lv_event_t * e)lv_keyboard_def_event_cb273,10570
static void lv_keyboard_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)lv_keyboard_constructor373,14195
static void lv_keyboard_update_map(lv_obj_t * obj)lv_keyboard_update_map394,14871
static void lv_keyboard_update_ctrl_map(lv_obj_t * obj)lv_keyboard_update_ctrl_map405,15171

lib/lvgl/src/extra/widgets/spinner/lv_spinner.c,560
const lv_obj_class_t lv_spinner_class = {lv_spinner_class30,611
static uint32_t time_param;time_param35,735
static uint32_t arc_length_param;arc_length_param36,763
lv_obj_t * lv_spinner_create(lv_obj_t * parent, uint32_t time, uint32_t arc_length)lv_spinner_create51,1089
static void lv_spinner_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)lv_spinner_constructor66,1431
static void arc_anim_start_angle(void * obj, int32_t v)arc_anim_start_angle93,2181
static void arc_anim_end_angle(void * obj, int32_t v)arc_anim_end_angle99,2290

lib/lvgl/src/extra/widgets/spinner/lv_spinner.h,39
#define LV_SPINNER_HLV_SPINNER_H7,55

lib/lvgl/src/extra/widgets/win/lv_win.c,656
const lv_obj_class_t lv_win_class = {lv_win_class29,484
static lv_coord_t create_header_height;create_header_height36,699
lv_obj_t * lv_win_create(lv_obj_t * parent, lv_coord_t header_height)lv_win_create45,876
lv_obj_t * lv_win_add_title(lv_obj_t * win, const char * txt)lv_win_add_title55,1137
lv_obj_t * lv_win_add_btn(lv_obj_t * win, const void * icon, lv_coord_t btn_w)lv_win_add_btn65,1443
lv_obj_t * lv_win_get_header(lv_obj_t * win)lv_win_get_header78,1801
lv_obj_t * lv_win_get_content(lv_obj_t * win)lv_win_get_content83,1888
static void lv_win_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)lv_win_constructor92,2048

lib/lvgl/src/extra/widgets/win/lv_win.h,88
#define LV_WIN_HLV_WIN_H7,47
    lv_obj_t obj;obj26,344
} lv_win_t;lv_win_t27,362

lib/lvgl/src/extra/widgets/meter/lv_meter.c,2610
#define MY_CLASS MY_CLASS17,242
const lv_obj_class_t lv_meter_class = {lv_meter_class38,1221
lv_obj_t * lv_meter_create(lv_obj_t * parent)lv_meter_create54,1593
lv_meter_scale_t * lv_meter_add_scale(lv_obj_t * obj)lv_meter_add_scale66,1845
void lv_meter_set_scale_ticks(lv_obj_t * obj, lv_meter_scale_t * scale, uint16_t cnt, uint16_t width, uint16_t len,lv_meter_set_scale_ticks87,2386
void lv_meter_set_scale_major_ticks(lv_obj_t * obj, lv_meter_scale_t * scale, uint16_t nth, uint16_t width,lv_meter_set_scale_major_ticks97,2702
void lv_meter_set_scale_range(lv_obj_t * obj, lv_meter_scale_t * scale, int32_t min, int32_t max, uint32_t angle_range,lv_meter_set_scale_range108,3107
lv_meter_indicator_t * lv_meter_add_needle_line(lv_obj_t * obj, lv_meter_scale_t * scale, uint16_t width,lv_meter_add_needle_line122,3490
lv_meter_indicator_t * lv_meter_add_needle_img(lv_obj_t * obj, lv_meter_scale_t * scale, const void * src,lv_meter_add_needle_img142,4222
lv_meter_indicator_t * lv_meter_add_arc(lv_obj_t * obj, lv_meter_scale_t * scale, uint16_t width, lv_color_t color,lv_meter_add_arc162,4961
lv_meter_indicator_t * lv_meter_add_scale_lines(lv_obj_t * obj, lv_meter_scale_t * scale, lv_color_t color_start,lv_meter_add_scale_lines182,5645
void lv_meter_set_indicator_value(lv_obj_t * obj, lv_meter_indicator_t * indic, int32_t value)lv_meter_set_indicator_value207,6559
void lv_meter_set_indicator_start_value(lv_obj_t * obj, lv_meter_indicator_t * indic, int32_t value)lv_meter_set_indicator_start_value228,7248
void lv_meter_set_indicator_end_value(lv_obj_t * obj, lv_meter_indicator_t * indic, int32_t value)lv_meter_set_indicator_end_value245,7789
static void lv_meter_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)lv_meter_constructor266,8396
static void lv_meter_destructor(const lv_obj_class_t * class_p, lv_obj_t * obj)lv_meter_destructor279,8754
static void lv_meter_event(const lv_obj_class_t * class_p, lv_event_t * e)lv_meter_event289,9018
static void draw_arcs(lv_obj_t * obj, const lv_area_t * clip_area, const lv_area_t * scale_area)draw_arcs326,10387
static void draw_ticks_and_labels(lv_obj_t * obj, const lv_area_t * clip_area, const lv_area_t * scale_area)draw_ticks_and_labels373,12341
static void draw_needles(lv_obj_t * obj, const lv_area_t * clip_area, const lv_area_t * scale_area)draw_needles562,20715
static void inv_arc(lv_obj_t * obj, lv_meter_indicator_t * indic, int32_t old_value, int32_t new_value)inv_arc636,24088
static void inv_line(lv_obj_t * obj, lv_meter_indicator_t * indic, int32_t value)inv_line662,25183

lib/lvgl/src/extra/widgets/meter/lv_meter.h,2793
#define LV_METER_HLV_METER_H7,51
    lv_color_t tick_color;tick_color34,526
    uint16_t tick_cnt;tick_cnt35,553
    uint16_t tick_length;tick_length36,576
    uint16_t tick_width;tick_width37,602
    lv_color_t tick_major_color;tick_major_color39,628
    uint16_t tick_major_nth;tick_major_nth40,661
    uint16_t tick_major_length;tick_major_length41,690
    uint16_t tick_major_width;tick_major_width42,722
    int16_t label_gap;label_gap44,754
    int16_t label_color;label_color45,777
    int32_t min;min47,803
    int32_t max;max48,820
    int16_t r_mod;r_mod49,837
    uint16_t angle_range;angle_range50,856
    int16_t rotation;rotation51,882
} lv_meter_scale_t;lv_meter_scale_t52,904
    LV_METER_INDICATOR_TYPE_NEEDLE_IMG,LV_METER_INDICATOR_TYPE_NEEDLE_IMG55,932
    LV_METER_INDICATOR_TYPE_NEEDLE_LINE,LV_METER_INDICATOR_TYPE_NEEDLE_LINE56,972
    LV_METER_INDICATOR_TYPE_SCALE_LINES,LV_METER_INDICATOR_TYPE_SCALE_LINES57,1013
    LV_METER_INDICATOR_TYPE_ARC,LV_METER_INDICATOR_TYPE_ARC58,1054
typedef uint8_t lv_meter_indicator_type_t;lv_meter_indicator_type_t60,1090
    lv_meter_scale_t * scale;scale63,1151
    lv_meter_indicator_type_t type;type64,1181
    lv_opa_t opa;opa65,1217
    int32_t start_value;start_value66,1235
    int32_t end_value;end_value67,1260
            const void * src;src70,1312
            lv_point_t pivot;pivot71,1342
        } needle_img;needle_img72,1372
            uint16_t width;width74,1411
            int16_t r_mod;r_mod75,1439
            lv_color_t color;color76,1466
        } needle_line;needle_line77,1496
            uint16_t width;width79,1536
            const void * src;src80,1564
            lv_color_t color;color81,1594
            int16_t r_mod;r_mod82,1624
        } arc;arc83,1651
            int16_t width_mod;width_mod85,1683
            lv_color_t color_start;color_start86,1714
            lv_color_t color_end;color_end87,1750
            uint8_t local_grad  : 1;local_grad88,1784
        } scale_lines;scale_lines89,1821
    } type_data;type_data90,1844
} lv_meter_indicator_t;lv_meter_indicator_t91,1861
    lv_obj_t obj;obj95,1926
    lv_ll_t scale_ll;scale_ll96,1944
    lv_ll_t indicator_ll;indicator_ll97,1966
} lv_meter_t;lv_meter_t98,1992
    LV_METER_DRAW_PART_ARC,             /**< The arc indicator*/LV_METER_DRAW_PART_ARC107,2216
    LV_METER_DRAW_PART_NEEDLE_LINE,     /**< The needle lines*/LV_METER_DRAW_PART_NEEDLE_LINE108,2281
    LV_METER_DRAW_PART_NEEDLE_IMG,      /**< The needle images*/LV_METER_DRAW_PART_NEEDLE_IMG109,2345
    LV_METER_DRAW_PART_TICK,            /**< The tick lines and labels*/LV_METER_DRAW_PART_TICK110,2410
} lv_meter_draw_part_type_t;lv_meter_draw_part_type_t111,2483

lib/lvgl/src/extra/widgets/chart/lv_chart.c,5951
#define MY_CLASS MY_CLASS17,242
#define LV_CHART_HDIV_DEF LV_CHART_HDIV_DEF19,276
#define LV_CHART_VDIV_DEF LV_CHART_VDIV_DEF20,304
#define LV_CHART_POINT_CNT_DEF LV_CHART_POINT_CNT_DEF21,332
#define LV_CHART_LABEL_MAX_TEXT_LENGTH LV_CHART_LABEL_MAX_TEXT_LENGTH22,366
const lv_obj_class_t lv_chart_class = {lv_chart_class49,1585
lv_obj_t * lv_chart_create(lv_obj_t * parent)lv_chart_create67,2021
void lv_chart_set_type(lv_obj_t * obj, lv_chart_type_t type)lv_chart_set_type75,2210
void lv_chart_set_point_count(lv_obj_t * obj, uint16_t cnt)lv_chart_set_point_count104,2980
void lv_chart_set_range(lv_obj_t * obj, lv_chart_axis_t axis, lv_coord_t min, lv_coord_t max)lv_chart_set_range128,3599
void lv_chart_set_update_mode(lv_obj_t * obj, lv_chart_update_mode_t update_mode)lv_chart_set_update_mode160,4462
void lv_chart_set_div_line_count(lv_obj_t * obj, uint8_t hdiv, uint8_t vdiv)lv_chart_set_div_line_count171,4746
void lv_chart_set_zoom_x(lv_obj_t * obj, uint16_t zoom_x)lv_chart_set_zoom_x185,5062
void lv_chart_set_zoom_y(lv_obj_t * obj, uint16_t zoom_y)lv_chart_set_zoom_y199,5432
uint16_t lv_chart_get_zoom_x(const lv_obj_t * obj)lv_chart_get_zoom_x213,5802
uint16_t lv_chart_get_zoom_y(const lv_obj_t * obj)lv_chart_get_zoom_y221,5964
void lv_chart_set_axis_tick(lv_obj_t * obj, lv_chart_axis_t axis, lv_coord_t major_len, lv_coord_t minor_len,lv_chart_set_axis_tick229,6126
lv_chart_type_t lv_chart_get_type(const lv_obj_t * obj)lv_chart_get_type246,6686
uint16_t lv_chart_get_point_count(const lv_obj_t * obj)lv_chart_get_point_count254,6851
uint16_t lv_chart_get_x_start_point(const lv_obj_t * obj, lv_chart_series_t * ser)lv_chart_get_x_start_point262,7021
void lv_chart_get_point_pos_by_id(lv_obj_t * obj, lv_chart_series_t * ser, uint16_t id, lv_point_t * p_out)lv_chart_get_point_pos_by_id270,7184
void lv_chart_refresh(lv_obj_t * obj)lv_chart_refresh325,9528
lv_chart_series_t * lv_chart_add_series(lv_obj_t * obj, lv_color_t color, lv_chart_axis_t axis)lv_chart_add_series336,9696
void lv_chart_remove_series(lv_obj_t * obj, lv_chart_series_t * series)lv_chart_remove_series379,10891
void lv_chart_hide_series(lv_obj_t * chart, lv_chart_series_t * series, bool hide)lv_chart_hide_series393,11250
void lv_chart_set_series_color(lv_obj_t * chart, lv_chart_series_t * series, lv_color_t color)lv_chart_set_series_color403,11468
void lv_chart_set_x_start_point(lv_obj_t * obj, lv_chart_series_t * ser, uint16_t id)lv_chart_set_x_start_point412,11689
lv_chart_series_t * lv_chart_get_series_next(const lv_obj_t * obj, const lv_chart_series_t * ser)lv_chart_get_series_next422,11951
lv_chart_cursor_t  * lv_chart_add_cursor(lv_obj_t * obj, lv_color_t color, lv_dir_t dir)lv_chart_add_cursor442,12604
void lv_chart_set_cursor_pos(lv_obj_t * chart, lv_chart_cursor_t * cursor, lv_point_t * pos)lv_chart_set_cursor_pos468,13392
void lv_chart_set_cursor_point(lv_obj_t * chart, lv_chart_cursor_t * cursor, lv_chart_series_t * ser, uint16_t point_id)lv_chart_set_cursor_point487,13909
lv_point_t lv_chart_get_cursor_point(lv_obj_t * chart, lv_chart_cursor_t * cursor)lv_chart_get_cursor_point505,14490
void lv_chart_set_all_value(lv_obj_t * obj, lv_chart_series_t * ser, lv_coord_t value)lv_chart_set_all_value518,14724
void lv_chart_set_next_value(lv_obj_t * obj, lv_chart_series_t * ser, lv_coord_t value)lv_chart_set_next_value532,15074
void lv_chart_set_next_value2(lv_obj_t * obj, lv_chart_series_t * ser, lv_coord_t x_value, lv_coord_t y_value)lv_chart_set_next_value2544,15473
void lv_chart_set_value_by_id(lv_obj_t * obj, lv_chart_series_t * ser, uint16_t id, lv_coord_t value)lv_chart_set_value_by_id565,16102
void lv_chart_set_value_by_id2(lv_obj_t * obj, lv_chart_series_t * ser, uint16_t id, lv_coord_t x_value,lv_chart_set_value_by_id2575,16384
void lv_chart_set_ext_y_array(lv_obj_t * obj, lv_chart_series_t * ser, lv_coord_t array[])lv_chart_set_ext_y_array592,16884
void lv_chart_set_ext_x_array(lv_obj_t * obj, lv_chart_series_t * ser, lv_coord_t array[])lv_chart_set_ext_x_array603,17209
lv_coord_t * lv_chart_get_y_array(const lv_obj_t * obj, lv_chart_series_t * ser)lv_chart_get_y_array614,17534
lv_coord_t * lv_chart_get_x_array(const lv_obj_t * obj, lv_chart_series_t * ser)lv_chart_get_x_array622,17725
uint32_t lv_chart_get_pressed_point(const lv_obj_t * obj)lv_chart_get_pressed_point630,17916
static void lv_chart_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)lv_chart_constructor640,18131
static void lv_chart_destructor(const lv_obj_class_t * class_p, lv_obj_t * obj)lv_chart_destructor671,19060
static void lv_chart_event(const lv_obj_class_t * class_p, lv_event_t * e)lv_chart_event691,19583
static void draw_div_lines(lv_obj_t * obj, const lv_area_t * clip_area)draw_div_lines750,21803
static void draw_series_line(lv_obj_t * obj, const lv_area_t * clip_area)draw_series_line854,25906
static void draw_series_scatter(lv_obj_t * obj, const lv_area_t * clip_area)draw_series_scatter1017,33028
static void draw_series_bar(lv_obj_t * obj, const lv_area_t * clip_area)draw_series_bar1160,38880
static void draw_cursors(lv_obj_t * obj, const lv_area_t * clip_area)draw_cursors1242,42540
static void draw_y_ticks(lv_obj_t * obj, const lv_area_t * clip_area, lv_chart_axis_t axis)draw_y_ticks1346,46019
static void draw_x_ticks(lv_obj_t * obj, const lv_area_t * clip_area, lv_chart_axis_t axis)draw_x_ticks1477,50644
static void draw_axes(lv_obj_t * obj, const lv_area_t * mask)draw_axes1614,55761
static uint32_t get_index_from_x(lv_obj_t * obj, lv_coord_t x)get_index_from_x1628,56244
static void invalidate_point(lv_obj_t * obj, uint16_t i)invalidate_point1643,56780
static void new_points_alloc(lv_obj_t * obj, lv_chart_series_t * ser, uint32_t cnt, lv_coord_t ** a)new_points_alloc1706,59252
lv_chart_tick_dsc_t * get_tick_gsc(lv_obj_t * obj, lv_chart_axis_t axis)get_tick_gsc1752,60743

lib/lvgl/src/extra/widgets/chart/lv_chart.h,4342
#define LV_CHART_HLV_CHART_H7,51
#define LV_CHART_POINT_NONE LV_CHART_POINT_NONE25,352
LV_EXPORT_CONST_INT(LV_CHART_POINT_NONE);LV_CHART_POINT_NONE26,392
    LV_CHART_TYPE_NONE,     /**< Don't draw the series*/LV_CHART_TYPE_NONE36,532
    LV_CHART_TYPE_LINE,     /**< Connect the points with lines*/LV_CHART_TYPE_LINE37,589
    LV_CHART_TYPE_BAR,      /**< Draw columns*/LV_CHART_TYPE_BAR38,654
    LV_CHART_TYPE_SCATTER,  /**< Draw points and lines in 2D (x,y coordinates)*/LV_CHART_TYPE_SCATTER39,702
typedef uint8_t lv_chart_type_t;lv_chart_type_t41,786
    LV_CHART_UPDATE_MODE_SHIFT,     /**< Shift old data to the left and add the new one the right*/LV_CHART_UPDATE_MODE_SHIFT47,880
    LV_CHART_UPDATE_MODE_CIRCULAR,  /**< Add the new data in a circular way*/LV_CHART_UPDATE_MODE_CIRCULAR48,980
typedef uint8_t lv_chart_update_mode_t;lv_chart_update_mode_t50,1061
    LV_CHART_AXIS_PRIMARY_Y     = 0x00,LV_CHART_AXIS_PRIMARY_Y56,1145
    LV_CHART_AXIS_SECONDARY_Y   = 0x01,LV_CHART_AXIS_SECONDARY_Y57,1185
    LV_CHART_AXIS_PRIMARY_X     = 0x02,LV_CHART_AXIS_PRIMARY_X58,1225
    LV_CHART_AXIS_SECONDARY_X   = 0x04,LV_CHART_AXIS_SECONDARY_X59,1265
    _LV_CHART_AXIS_LAST_LV_CHART_AXIS_LAST60,1305
typedef uint8_t lv_chart_axis_t;lv_chart_axis_t62,1332
    lv_coord_t * x_points;x_points68,1420
    lv_coord_t * y_points;y_points69,1447
    lv_color_t color;color70,1474
    uint16_t start_point;start_point71,1496
    uint8_t hidden : 1;hidden72,1522
    uint8_t x_ext_buf_assigned : 1;x_ext_buf_assigned73,1546
    uint8_t y_ext_buf_assigned : 1;y_ext_buf_assigned74,1582
    uint8_t x_axis_sec : 1;x_axis_sec75,1618
    uint8_t y_axis_sec : 1;y_axis_sec76,1646
} lv_chart_series_t;lv_chart_series_t77,1674
    lv_point_t pos;pos80,1713
    uint16_t point_id;point_id81,1733
    lv_color_t color;color82,1756
    lv_chart_series_t * ser;ser83,1778
    lv_dir_t dir;dir84,1807
    uint8_t pos_set: 1; /*1: pos is set; 0: point_id is set*/pos_set85,1825
} lv_chart_cursor_t;lv_chart_cursor_t86,1887
    lv_coord_t major_len;major_len89,1926
    lv_coord_t minor_len;minor_len90,1952
    lv_coord_t draw_size;draw_size91,1978
    uint32_t minor_cnt : 15;minor_cnt92,2004
    uint32_t major_cnt : 15;major_cnt93,2033
    uint32_t label_en  : 1;label_en94,2062
} lv_chart_tick_dsc_t;lv_chart_tick_dsc_t95,2090
    lv_obj_t obj;obj99,2132
    lv_ll_t series_ll;     /**< Linked list for the series (stores lv_chart_series_t)*/series_ll100,2150
    lv_ll_t cursor_ll;     /**< Linked list for the cursors (stores lv_chart_cursor_t)*/cursor_ll101,2238
    lv_chart_tick_dsc_t tick[4];tick102,2327
    lv_coord_t ymin[2];ymin103,2360
    lv_coord_t ymax[2];ymax104,2384
    lv_coord_t xmin[2];xmin105,2408
    lv_coord_t xmax[2];xmax106,2432
    uint16_t pressed_point_id;pressed_point_id107,2456
    uint16_t hdiv_cnt;      /**< Number of horizontal division lines*/hdiv_cnt108,2487
    uint16_t vdiv_cnt;      /**< Number of vertical division lines*/vdiv_cnt109,2558
    uint16_t point_cnt;    /**< Point number in a data line*/point_cnt110,2627
    uint16_t zoom_x;zoom_x111,2689
    uint16_t zoom_y;zoom_y112,2710
    lv_chart_type_t type  : 3; /**< Line or column chart*/type113,2731
    lv_chart_update_mode_t update_mode : 1;update_mode114,2790
} lv_chart_t;lv_chart_t115,2834
    LV_CHART_DRAW_PART_DIV_LINE_INIT,    /**< Used before/after drawn the div lines*/LV_CHART_DRAW_PART_DIV_LINE_INIT124,3058
    LV_CHART_DRAW_PART_DIV_LINE_HOR,     /**< Used for each horizontal division lines*/LV_CHART_DRAW_PART_DIV_LINE_HOR125,3144
    LV_CHART_DRAW_PART_DIV_LINE_VER,     /**< Used for each vertical division lines*/LV_CHART_DRAW_PART_DIV_LINE_VER126,3232
    LV_CHART_DRAW_PART_LINE_AND_POINT,   /**< Used on line and scatter charts for lines and points*/LV_CHART_DRAW_PART_LINE_AND_POINT127,3318
    LV_CHART_DRAW_PART_BAR,              /**< Used on bar charts for the rectangles*/LV_CHART_DRAW_PART_BAR128,3419
    LV_CHART_DRAW_PART_CURSOR,           /**< Used on cursor lines and points*/LV_CHART_DRAW_PART_CURSOR129,3505
    LV_CHART_DRAW_PART_TICK_LABEL,       /**< Used on tick lines and labels*/LV_CHART_DRAW_PART_TICK_LABEL130,3585
} lv_chart_draw_part_type_t;lv_chart_draw_part_type_t131,3663

lib/lvgl/src/extra/widgets/msgbox/lv_msgbox.h,283
#define LV_MSGBOX_HLV_MSGBOX_H7,51
    lv_obj_t obj;obj38,630
    lv_obj_t * title;title39,648
    lv_obj_t * close_btn;close_btn40,670
    lv_obj_t * content;content41,696
    lv_obj_t * text;text42,720
    lv_obj_t * btns;btns43,741
} lv_msgbox_t;lv_msgbox_t44,762

lib/lvgl/src/extra/widgets/msgbox/lv_msgbox.c,1271
#define LV_MSGBOX_FLAG_AUTO_PARENT LV_MSGBOX_FLAG_AUTO_PARENT17,240
#define MY_CLASS MY_CLASS18,355
const lv_obj_class_t lv_msgbox_class = {lv_msgbox_class32,659
const lv_obj_class_t lv_msgbox_content_class = {lv_msgbox_content_class39,862
const lv_obj_class_t lv_msgbox_backdrop_class = {lv_msgbox_backdrop_class46,1067
lv_obj_t * lv_msgbox_create(lv_obj_t * parent, const char * title, const char * txt, const char * btn_txts[],lv_msgbox_create61,1406
lv_obj_t * lv_msgbox_get_title(lv_obj_t * obj)lv_msgbox_get_title139,4619
lv_obj_t * lv_msgbox_get_close_btn(lv_obj_t * obj)lv_msgbox_get_close_btn146,4774
lv_obj_t * lv_msgbox_get_text(lv_obj_t * obj)lv_msgbox_get_text153,4937
lv_obj_t * lv_msgbox_get_content(lv_obj_t * obj)lv_msgbox_get_content160,5090
lv_obj_t * lv_msgbox_get_btns(lv_obj_t * obj)lv_msgbox_get_btns167,5249
uint16_t lv_msgbox_get_active_btn(lv_obj_t * mbox)lv_msgbox_get_active_btn174,5402
const char * lv_msgbox_get_active_btn_text(lv_obj_t * mbox)lv_msgbox_get_active_btn_text180,5554
void lv_msgbox_close(lv_obj_t * mbox)lv_msgbox_close186,5748
void lv_msgbox_close_async(lv_obj_t * dialog)lv_msgbox_close_async192,5913
static void msgbox_close_click_event_cb(lv_event_t * e)msgbox_close_click_event_cb202,6176

lib/lvgl/src/extra/widgets/list/lv_list.c,589
#define MV_CLASS MV_CLASS20,345
const lv_obj_class_t lv_list_class = {lv_list_class30,511
const lv_obj_class_t lv_list_btn_class = {lv_list_btn_class36,659
const lv_obj_class_t lv_list_text_class = {lv_list_text_class40,739
lv_obj_t * lv_list_create(lv_obj_t * parent)lv_list_create56,1030
lv_obj_t * lv_list_add_text(lv_obj_t * list, const char * txt)lv_list_add_text65,1276
lv_obj_t * lv_list_add_btn(lv_obj_t * list, const char * icon, const char * txt)lv_list_add_btn76,1628
const char * lv_list_get_btn_text(lv_obj_t * list, lv_obj_t * btn)lv_list_get_btn_text99,2287

lib/lvgl/src/extra/widgets/list/lv_list.h,33
#define LV_LIST_HLV_LIST_H7,48

lib/lvgl/src/extra/widgets/animimg/lv_animimg.c,773
#define LV_OBJX_NAME LV_OBJX_NAME28,602
#define MY_CLASS MY_CLASS30,637
const lv_obj_class_t lv_animimg_class = {lv_animimg_class45,1023
lv_obj_t * lv_animimg_create(lv_obj_t * parent)lv_animimg_create59,1327
void lv_animimg_set_src(lv_obj_t * obj,  lv_img_dsc_t * dsc[], uint8_t num)lv_animimg_set_src67,1527
void lv_animimg_start(lv_obj_t * obj)lv_animimg_start76,1794
void lv_animimg_set_duration(lv_obj_t * obj, uint32_t duration)lv_animimg_set_duration87,2026
void lv_animimg_set_repeat_count(lv_obj_t * obj, uint16_t count)lv_animimg_set_repeat_count95,2285
static void lv_animimg_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)lv_animimg_constructor110,2634
static void index_change(lv_obj_t * obj, int32_t index)index_change128,3220

lib/lvgl/src/extra/widgets/animimg/lv_animimg.h,330
#define LV_ANIM_IMG_HLV_ANIM_IMG_H7,56
    lv_img_t img;img37,584
    lv_anim_t anim;anim38,602
    lv_img_dsc_t ** dsc;dsc40,648
    int8_t  pic_count;pic_count41,673
} lv_animimg_t;lv_animimg_t42,696
    LV_ANIM_IMG_PART_MAIN,LV_ANIM_IMG_PART_MAIN47,737
typedef uint8_t lv_animimg_part_t;lv_animimg_part_t49,767

lib/lvgl/src/extra/widgets/led/lv_led.c,774
#define MY_CLASS MY_CLASS17,231
const lv_obj_class_t lv_led_class  = {lv_led_class32,626
lv_obj_t * lv_led_create(lv_obj_t * parent)lv_led_create54,1160
void lv_led_set_color(lv_obj_t * obj, lv_color_t color)lv_led_set_color71,1542
void lv_led_set_brightness(lv_obj_t * obj, uint8_t bright)lv_led_set_brightness85,1894
void lv_led_on(lv_obj_t * led)lv_led_on102,2297
void lv_led_off(lv_obj_t * led)lv_led_off111,2449
void lv_led_toggle(lv_obj_t * obj)lv_led_toggle120,2612
uint8_t lv_led_get_brightness(const lv_obj_t * obj)lv_led_get_brightness138,3026
static void lv_led_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)lv_led_constructor150,3252
static void lv_led_event(const lv_obj_class_t * class_p, lv_event_t * e)lv_led_event158,3485

lib/lvgl/src/extra/widgets/led/lv_led.h,466
#define LV_LED_HLV_LED_H7,47
# define LV_LED_BRIGHT_MIN LV_LED_BRIGHT_MIN26,341
# define LV_LED_BRIGHT_MAX LV_LED_BRIGHT_MAX31,442
    lv_obj_t obj;obj40,581
    lv_color_t color;color41,599
    uint8_t bright;     /**< Current brightness of the LED (0..255)*/bright42,621
} lv_led_t;lv_led_t43,691
    LV_LED_DRAW_PART_RECTANGLE,    /**< The main rectangle*/LV_LED_DRAW_PART_RECTANGLE52,909
} lv_led_draw_part_type_t;lv_led_draw_part_type_t53,970

lib/lvgl/src/extra/widgets/span/lv_span.h,1548
#define LV_SPAN_HLV_SPAN_H7,49
#define LV_SPAN_SNIPPET_STACK_SIZE LV_SPAN_SNIPPET_STACK_SIZE24,320
    LV_SPAN_OVERFLOW_CLIP,LV_SPAN_OVERFLOW_CLIP31,439
    LV_SPAN_OVERFLOW_ELLIPSIS,LV_SPAN_OVERFLOW_ELLIPSIS32,466
typedef uint8_t lv_span_overflow_t;lv_span_overflow_t34,500
    LV_SPAN_MODE_FIXED,     /**< fixed the obj size*/LV_SPAN_MODE_FIXED37,544
    LV_SPAN_MODE_EXPAND,    /**< Expand the object size to the text size*/LV_SPAN_MODE_EXPAND38,598
    LV_SPAN_MODE_BREAK,     /**< Keep width, break the too long lines and expand height*/LV_SPAN_MODE_BREAK39,673
typedef uint8_t lv_span_mode_t;lv_span_mode_t41,766
    char * txt;             /* a pointer to display text */txt44,816
    lv_obj_t * spangroup;   /* a pointer to spangroup */spangroup45,876
    lv_style_t style;       /* display text style */style46,933
    uint8_t static_flag : 1;/* the text is static flag */static_flag47,986
} lv_span_t;lv_span_t48,1044
    lv_obj_t obj;obj52,1095
    lv_coord_t indent;      /* first line indent */indent53,1113
    lv_coord_t cache_w;     /* the cache automatically calculates the width */cache_w54,1165
    lv_coord_t cache_h;     /* similar cache_w */cache_h55,1244
    lv_ll_t  child_ll;child_ll56,1294
    uint8_t mode : 2;       /* details see lv_span_mode_t */mode57,1317
    uint8_t overflow : 1;   /* details see lv_span_overflow_t */overflow58,1378
    uint8_t refresh : 1;    /* the spangroup need refresh cache_w and cache_h */refresh59,1443
} lv_spangroup_t;lv_spangroup_t60,1524

lib/lvgl/src/extra/widgets/span/lv_span.c,4295
#define MY_CLASS MY_CLASS18,240
    lv_span_t * span;span24,361
    const char * txt;txt25,383
    const lv_font_t * font;font26,405
    uint16_t   bytes;bytes27,433
    lv_coord_t txt_w;txt_w28,455
    lv_coord_t line_h;line_h29,477
    lv_coord_t letter_space;letter_space30,500
} lv_snippet_t;lv_snippet_t31,529
struct _snippet_stack {_snippet_stack33,546
    lv_snippet_t    stack[LV_SPAN_SNIPPET_STACK_SIZE];stack34,570
    uint16_t        index;index35,625
static struct _snippet_stack snippet_stack;snippet_stack69,2293
const lv_obj_class_t lv_spangroup_class  = {lv_spangroup_class71,2338
lv_obj_t * lv_spangroup_create(lv_obj_t * par)lv_spangroup_create94,2962
lv_span_t * lv_spangroup_new_span(lv_obj_t * obj)lv_spangroup_new_span106,3284
void lv_spangroup_del_span(lv_obj_t * obj, lv_span_t * span)lv_spangroup_del_span132,3866
void lv_span_set_text(lv_span_t * span, const char * text)lv_span_set_text165,4734
void lv_span_set_text_static(lv_span_t * span, const char * text)lv_span_set_text_static189,5336
void lv_spangroup_set_align(lv_obj_t * obj, lv_text_align_t align)lv_spangroup_set_align209,5788
void lv_spangroup_set_overflow(lv_obj_t * obj, lv_span_overflow_t overflow)lv_spangroup_set_overflow219,6065
void lv_spangroup_set_indent(lv_obj_t * obj, lv_coord_t indent)lv_spangroup_set_indent235,6556
void lv_spangroup_set_mode(lv_obj_t * obj, lv_span_mode_t mode)lv_spangroup_set_mode251,6943
lv_span_t * lv_spangroup_get_child(const lv_obj_t * obj, int32_t id)lv_spangroup_get_child275,7639
uint32_t lv_spangroup_get_child_cnt(const lv_obj_t * obj)lv_spangroup_get_child_cnt317,8729
lv_text_align_t lv_spangroup_get_align(lv_obj_t * obj)lv_spangroup_get_align335,9123
lv_span_overflow_t lv_spangroup_get_overflow(lv_obj_t * obj)lv_spangroup_get_overflow345,9364
lv_coord_t lv_spangroup_get_indent(lv_obj_t * obj)lv_spangroup_get_indent357,9662
lv_span_mode_t lv_spangroup_get_mode(lv_obj_t * obj)lv_spangroup_get_mode369,9944
void lv_spangroup_refr_mode(lv_obj_t * obj)lv_spangroup_refr_mode380,10202
lv_coord_t lv_spangroup_get_max_line_h(lv_obj_t * obj)lv_spangroup_get_max_line_h418,11519
lv_coord_t lv_spangroup_get_expand_width(lv_obj_t * obj)lv_spangroup_get_expand_width440,12162
lv_coord_t lv_spangroup_get_expand_height(lv_obj_t * obj, lv_coord_t width)lv_spangroup_get_expand_height473,13345
static void lv_spangroup_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)lv_spangroup_constructor571,17032
static void lv_spangroup_destructor(const lv_obj_class_t * class_p, lv_obj_t * obj)lv_spangroup_destructor584,17431
static void lv_spangroup_event(const lv_obj_class_t * class_p, lv_event_t * e)lv_spangroup_event600,17972
static void draw_main(lv_event_t * e)draw_main657,19941
static bool lv_txt_get_snippet(const char * txt, const lv_font_t * font,lv_txt_get_snippet671,20262
static void lv_snippet_push(lv_snippet_t * item)lv_snippet_push694,20949
static uint16_t lv_get_snippet_cnt(void)lv_get_snippet_cnt705,21303
static lv_snippet_t * lv_get_snippet(uint16_t index)lv_get_snippet710,21381
static void lv_snippet_clear(void)lv_snippet_clear715,21479
static const lv_font_t * lv_span_get_style_text_font(lv_obj_t * par, lv_span_t * span)lv_span_get_style_text_font720,21548
static lv_coord_t lv_span_get_style_text_letter_space(lv_obj_t * par, lv_span_t * span)lv_span_get_style_text_letter_space734,21950
static lv_color_t lv_span_get_style_text_color(lv_obj_t * par, lv_span_t * span)lv_span_get_style_text_color748,22387
static lv_opa_t lv_span_get_style_text_opa(lv_obj_t * par, lv_span_t * span)lv_span_get_style_text_opa758,22709
static lv_blend_mode_t lv_span_get_style_text_blend_mode(lv_obj_t * par, lv_span_t * span)lv_span_get_style_text_blend_mode772,23087
static int32_t lv_span_get_style_text_decor(lv_obj_t * par, lv_span_t * span)lv_span_get_style_text_decor786,23508
static inline void span_text_check(const char ** text)span_text_check800,23905
static lv_coord_t convert_indent_pct(lv_obj_t * obj, lv_coord_t width)convert_indent_pct808,24078
static void lv_draw_span(lv_obj_t * obj, const lv_area_t * coords, const lv_area_t * mask)lv_draw_span831,24644
static void refresh_self_size(lv_obj_t * obj)refresh_self_size1098,35860

lib/lvgl/src/extra/widgets/tabview/lv_tabview.c,1277
#define MY_CLASS MY_CLASS17,243
const lv_obj_class_t lv_tabview_class = {lv_tabview_class35,847
static lv_dir_t tabpos_create;tabpos_create45,1153
static lv_coord_t tabsize_create;tabsize_create46,1184
lv_obj_t * lv_tabview_create(lv_obj_t * parent, lv_dir_t tab_pos, lv_coord_t tab_size)lv_tabview_create56,1356
lv_obj_t * lv_tabview_add_tab(lv_obj_t * obj, const char * name)lv_tabview_add_tab67,1656
void lv_tabview_set_act(lv_obj_t * obj, uint32_t id, lv_anim_enable_t anim_en)lv_tabview_set_act124,3647
uint16_t lv_tabview_get_tab_act(lv_obj_t * obj)lv_tabview_get_tab_act153,4598
lv_obj_t * lv_tabview_get_content(lv_obj_t * tv)lv_tabview_get_content160,4764
lv_obj_t * lv_tabview_get_tab_btns(lv_obj_t * tv)lv_tabview_get_tab_btns165,4854
static void lv_tabview_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)lv_tabview_constructor174,5017
static void lv_tabview_destructor(const lv_obj_class_t * class_p, lv_obj_t * obj)lv_tabview_destructor238,7120
static void lv_tabview_event(const lv_obj_class_t * class_p, lv_event_t * e)lv_tabview_event262,7728
static void btns_value_changed_event_cb(lv_event_t * e)btns_value_changed_event_cb277,8154
static void cont_scroll_end_event_cb(lv_event_t * e)cont_scroll_end_event_cb286,8406

lib/lvgl/src/extra/widgets/tabview/lv_tabview.h,243
#define LV_TABVIEW_HLV_TABVIEW_H7,53
    lv_obj_t obj;obj29,375
    char ** map;map30,393
    uint16_t tab_cnt;tab_cnt31,410
    uint16_t tab_cur;tab_cur32,432
    lv_dir_t tab_pos;tab_pos33,454
} lv_tabview_t;lv_tabview_t34,476

lib/lvgl/src/extra/widgets/tileview/lv_tileview.h,255
#define LV_TILEVIEW_HLV_TILEVIEW_H7,57
    lv_obj_t obj;obj28,387
    lv_obj_t * tile_act;tile_act29,405
} lv_tileview_t;lv_tileview_t30,430
    lv_obj_t obj;obj33,465
    lv_dir_t dir;dir34,483
} lv_tileview_tile_t;lv_tileview_tile_t35,501

lib/lvgl/src/extra/widgets/tileview/lv_tileview.c,1223
const lv_obj_class_t lv_tileview_class = {.constructor_cb = lv_tileview_constructor,lv_tileview_class31,641
const lv_obj_class_t lv_tileview_tile_class = {.constructor_cb = lv_tileview_tile_constructor,lv_tileview_tile_class36,923
static lv_dir_t create_dir;create_dir41,1235
static uint32_t create_col_id;create_col_id42,1263
static uint32_t create_row_id;create_row_id43,1294
lv_obj_t * lv_tileview_create(lv_obj_t * parent)lv_tileview_create53,1463
lv_obj_t * lv_tileview_add_tile(lv_obj_t * tv, uint8_t col_id, uint8_t row_id, lv_dir_t dir)lv_tileview_add_tile65,1741
void lv_obj_set_tile(lv_obj_t * obj, lv_obj_t * tile_obj, lv_anim_enable_t anim_en)lv_obj_set_tile77,2067
void lv_obj_set_tile_id(lv_obj_t * tv, uint32_t col_id, uint32_t row_id, lv_anim_enable_t anim_en)lv_obj_set_tile_id90,2482
lv_obj_t * lv_tileview_get_tile_act(lv_obj_t * obj)lv_tileview_get_tile_act112,3172
static void lv_tileview_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)lv_tileview_constructor122,3374
static void lv_tileview_tile_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)lv_tileview_tile_constructor133,3775
static void tileview_event_cb(lv_event_t * e)tileview_event_cb151,4400

lib/lvgl/src/extra/widgets/colorwheel/lv_colorwheel.h,785
#define LV_COLORWHEEL_HLV_COLORWHEEL_H7,61
    LV_COLORWHEEL_MODE_HUE,LV_COLORWHEEL_MODE_HUE29,379
    LV_COLORWHEEL_MODE_SATURATION,LV_COLORWHEEL_MODE_SATURATION30,407
    LV_COLORWHEEL_MODE_VALUELV_COLORWHEEL_MODE_VALUE31,442
typedef uint8_t lv_colorwheel_mode_t;lv_colorwheel_mode_t33,474
    lv_obj_t obj;obj38,556
    lv_color_hsv_t hsv;hsv39,574
        lv_point_t pos;pos41,611
        uint8_t recolor     : 1;recolor42,635
    } knob;knob43,668
    uint32_t last_click_time;last_click_time44,680
    uint32_t last_change_time;last_change_time45,710
    lv_point_t last_press_point;last_press_point46,741
    lv_colorwheel_mode_t mode  : 2;mode47,774
    uint8_t mode_fixed            : 1;mode_fixed48,810
} lv_colorwheel_t;lv_colorwheel_t49,849

lib/lvgl/src/extra/widgets/colorwheel/lv_colorwheel.c,2279
#define MY_CLASS MY_CLASS18,301
#define LV_CPICKER_DEF_QF LV_CPICKER_DEF_QF20,340
#define OUTER_MASK_WIDTH OUTER_MASK_WIDTH28,768
const lv_obj_class_t lv_colorwheel_class = {.instance_size = sizeof(lv_colorwheel_t), .base_class = &lv_obj_class,lv_colorwheel_class54,1610
static bool create_knob_recolor;create_knob_recolor62,2169
lv_obj_t * lv_colorwheel_create(lv_obj_t * parent, bool knob_recolor)lv_colorwheel_create77,2509
bool lv_colorwheel_set_hsv(lv_obj_t * obj, lv_color_hsv_t hsv)lv_colorwheel_set_hsv97,3014
bool lv_colorwheel_set_rgb(lv_obj_t * obj, lv_color_t color)lv_colorwheel_set_rgb123,3671
void lv_colorwheel_set_mode(lv_obj_t * obj, lv_colorwheel_mode_t mode)lv_colorwheel_set_mode136,4027
void lv_colorwheel_set_mode_fixed(lv_obj_t * obj, bool fixed)lv_colorwheel_set_mode_fixed151,4456
lv_color_hsv_t lv_colorwheel_get_hsv(lv_obj_t * obj)lv_colorwheel_get_hsv169,4865
lv_color_t lv_colorwheel_get_rgb(lv_obj_t * obj)lv_colorwheel_get_rgb182,5196
lv_colorwheel_mode_t lv_colorwheel_get_color_mode(lv_obj_t * obj)lv_colorwheel_get_color_mode195,5559
bool lv_colorwheel_get_color_mode_fixed(lv_obj_t * obj)lv_colorwheel_get_color_mode_fixed208,5920
static void lv_colorwheel_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)lv_colorwheel_constructor224,6251
static void draw_disc_grad(lv_event_t * e)draw_disc_grad242,6846
static void draw_knob(lv_event_t * e)draw_knob306,9382
static void invalidate_knob(lv_obj_t * obj)invalidate_knob327,9952
static lv_area_t get_knob_area(lv_obj_t * obj)get_knob_area334,10093
static void lv_colorwheel_event(const lv_obj_class_t * class_p, lv_event_t * e)lv_colorwheel_event356,10922
static void next_color_mode(lv_obj_t * obj)next_color_mode541,17514
static void refr_knob_pos(lv_obj_t * obj)refr_knob_pos549,17725
static lv_res_t double_click_reset(lv_obj_t * obj)double_click_reset567,18367
#define SWAPPTR(SWAPPTR600,19393
#define HSV_PTR_SWAP(HSV_PTR_SWAP601,19462
static void fast_hsv2rgb(uint16_t h, uint8_t s, uint8_t v, uint8_t * r, uint8_t * g, uint8_t * b)fast_hsv2rgb617,20594
static lv_color_t angle_to_mode_color_fast(lv_obj_t * obj, uint16_t angle)angle_to_mode_color_fast649,21328
static uint16_t get_angle(lv_obj_t * obj)get_angle690,22935

lib/lvgl/src/extra/widgets/calendar/lv_calendar_header_dropdown.c,673
const lv_obj_class_t lv_calendar_header_dropdown_class = {lv_calendar_header_dropdown_class35,786
static const char * month_list = "01\n02\n03\n04\n05\n06\n07\n08\n09\n10\n11\n12";month_list42,984
static const char * year_list = {year_list43,1067
lv_obj_t * lv_calendar_header_dropdown_create(lv_obj_t * parent)lv_calendar_header_dropdown_create61,2027
static void my_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)my_constructor73,2307
static void month_event_cb(lv_event_t * e)month_event_cb98,3198
static void year_event_cb(lv_event_t * e)year_event_cb113,3614
static void value_changed_event_cb(lv_event_t * e)value_changed_event_cb128,4031

lib/lvgl/src/extra/widgets/calendar/lv_calendar.c,2118
#define LV_CALENDAR_CTRL_TODAY LV_CALENDAR_CTRL_TODAY18,273
#define LV_CALENDAR_CTRL_HIGHLIGHT LV_CALENDAR_CTRL_HIGHLIGHT19,336
#define MY_CLASS MY_CLASS21,400
const lv_obj_class_t lv_calendar_class = {lv_calendar_class41,1020
static const char * day_names_def[7] = LV_CALENDAR_DEFAULT_DAY_NAMES;day_names_def50,1315
lv_obj_t * lv_calendar_create(lv_obj_t * parent)lv_calendar_create60,1523
void lv_calendar_set_day_names(lv_obj_t * obj, const char * day_names[])lv_calendar_set_day_names72,1795
void lv_calendar_set_today_date(lv_obj_t * obj, uint32_t year, uint32_t month, uint32_t day)lv_calendar_set_today_date84,2081
void lv_calendar_set_highlighted_dates(lv_obj_t * obj, lv_calendar_date_t highlighted[], uint16_t date_num)lv_calendar_set_highlighted_dates96,2418
void lv_calendar_set_showed_date(lv_obj_t * obj, uint32_t year, uint32_t month)lv_calendar_set_showed_date109,2780
lv_obj_t * lv_calendar_get_btnmatrix(const lv_obj_t * obj)lv_calendar_get_btnmatrix172,5048
const lv_calendar_date_t * lv_calendar_get_today_date(const lv_obj_t * obj)lv_calendar_get_today_date179,5232
const lv_calendar_date_t * lv_calendar_get_showed_date(const lv_obj_t * obj)lv_calendar_get_showed_date187,5436
lv_calendar_date_t * lv_calendar_get_highlighted_dates(const lv_obj_t * obj)lv_calendar_get_highlighted_dates195,5647
uint16_t lv_calendar_get_highlighted_dates_num(const lv_obj_t * obj)lv_calendar_get_highlighted_dates_num203,5857
lv_res_t lv_calendar_get_pressed_date(const lv_obj_t * obj, lv_calendar_date_t * date)lv_calendar_get_pressed_date211,6063
static void lv_calendar_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)lv_calendar_constructor240,6857
static void draw_part_begin_event_cb(lv_event_t * e)draw_part_begin_event_cb291,8597
static uint8_t get_month_length(int32_t year, int32_t month)get_month_length331,10077
static uint8_t is_leap_year(uint32_t year)is_leap_year352,10653
static uint8_t get_day_of_week(uint32_t year, uint32_t month, uint32_t day)get_day_of_week364,10988
static void highlight_update(lv_obj_t * obj)highlight_update378,11434

lib/lvgl/src/extra/widgets/calendar/lv_calendar.h,819
#define LV_CALENDAR_HLV_CALENDAR_H7,57
    uint16_t year;year32,470
    int8_t month;  /** 1..12*/month33,489
    int8_t day;    /** 1..31*/day34,520
} lv_calendar_date_t;lv_calendar_date_t35,551
    lv_obj_t obj;obj39,612
    lv_obj_t * btnm;btnm40,630
    lv_calendar_date_t today;               /*Date of today*/today42,682
    lv_calendar_date_t showed_date;         /*Currently visible month (day is ignored)*/showed_date43,744
    highlighted_dates; /*Apply different style on these days (pointer to an array defined by the user)*/highlighted_dates45,858
    uint16_t highlighted_dates_num;          /*Number of elements in `highlighted_days`*/highlighted_dates_num46,963
    const char * map[8 * 7];map47,1053
    char nums [7 * 6][4];nums48,1082
} lv_calendar_t;lv_calendar_t49,1108

lib/lvgl/src/extra/widgets/calendar/lv_calendar_header_arrow.h,67
#define LV_CALENDAR_HEADER_ARROW_HLV_CALENDAR_HEADER_ARROW_H7,83

lib/lvgl/src/extra/widgets/calendar/lv_calendar_header_arrow.c,542
const lv_obj_class_t lv_calendar_header_arrow_class = {lv_calendar_header_arrow_class35,771
static const char * month_names_def[12] = LV_CALENDAR_DEFAULT_MONTH_NAMES;month_names_def42,965
lv_obj_t * lv_calendar_header_arrow_create(lv_obj_t * parent)lv_calendar_header_arrow_create52,1178
static void my_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)my_constructor63,1451
static void month_event_cb(lv_event_t * e)month_event_cb101,2866
static void value_changed_event_cb(lv_event_t * e)value_changed_event_cb138,3790

lib/lvgl/src/extra/widgets/calendar/lv_calendar_header_dropdown.h,73
#define LV_CALENDAR_HEADER_DROPDOWN_HLV_CALENDAR_HEADER_DROPDOWN_H7,89

lib/lvgl/src/extra/widgets/lv_widgets.h,39
#define LV_WIDGETS_HLV_WIDGETS_H7,55

lib/lvgl/src/extra/widgets/imgbtn/lv_imgbtn.h,1045
#define LV_IMGBTN_HLV_IMGBTN_H7,53
    LV_IMGBTN_STATE_RELEASED,LV_IMGBTN_STATE_RELEASED24,308
    LV_IMGBTN_STATE_PRESSED,LV_IMGBTN_STATE_PRESSED25,338
    LV_IMGBTN_STATE_DISABLED,LV_IMGBTN_STATE_DISABLED26,367
    LV_IMGBTN_STATE_CHECKED_RELEASED,LV_IMGBTN_STATE_CHECKED_RELEASED27,397
    LV_IMGBTN_STATE_CHECKED_PRESSED,LV_IMGBTN_STATE_CHECKED_PRESSED28,435
    LV_IMGBTN_STATE_CHECKED_DISABLED,LV_IMGBTN_STATE_CHECKED_DISABLED29,472
    _LV_IMGBTN_STATE_NUM,_LV_IMGBTN_STATE_NUM30,510
} lv_imgbtn_state_t;lv_imgbtn_state_t31,536
    lv_obj_t obj;obj38,666
    const void * img_src_mid[_LV_IMGBTN_STATE_NUM];   /*Store center images to each state*/img_src_mid39,684
    const void * img_src_left[_LV_IMGBTN_STATE_NUM];  /*Store left side images to each state*/img_src_left40,776
    const void * img_src_right[_LV_IMGBTN_STATE_NUM]; /*Store right side images to each state*/img_src_right41,871
    lv_img_cf_t act_cf; /*Color format of the currently active image*/act_cf42,967
} lv_imgbtn_t;lv_imgbtn_t43,1038

lib/lvgl/src/extra/widgets/imgbtn/lv_imgbtn.c,1234
#define MY_CLASS MY_CLASS17,209
const lv_obj_class_t lv_imgbtn_class = {lv_imgbtn_class36,831
lv_obj_t * lv_imgbtn_create(lv_obj_t * parent)lv_imgbtn_create56,1335
void lv_imgbtn_set_src(lv_obj_t * obj, lv_imgbtn_state_t state, const void * src_left, const void * src_mid,lv_imgbtn_set_src79,2100
void lv_imgbtn_set_state(lv_obj_t * obj, lv_imgbtn_state_t state)lv_imgbtn_set_state93,2496
const void * lv_imgbtn_get_src_left(lv_obj_t * obj, lv_imgbtn_state_t state)lv_imgbtn_get_src_left121,3498
const void * lv_imgbtn_get_src_middle(lv_obj_t * obj, lv_imgbtn_state_t state)lv_imgbtn_get_src_middle136,3954
const void * lv_imgbtn_get_src_right(lv_obj_t * obj, lv_imgbtn_state_t state)lv_imgbtn_get_src_right150,4407
static void lv_imgbtn_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)lv_imgbtn_constructor163,4686
static void lv_imgbtn_event(const lv_obj_class_t * class_p, lv_event_t * e)lv_imgbtn_event176,5143
static void draw_main(lv_event_t * e)draw_main209,6367
static void refr_img(lv_obj_t * obj)refr_img288,8999
static lv_imgbtn_state_t suggest_state(lv_obj_t * obj, lv_imgbtn_state_t state)suggest_state319,9945
lv_imgbtn_state_t get_state(const lv_obj_t * imgbtn)get_state350,11399

lib/lvgl/src/extra/widgets/spinbox/lv_spinbox.h,722
#define LV_SPINBOX_HLV_SPINBOX_H7,55
#define LV_SPINBOX_MAX_DIGIT_COUNT LV_SPINBOX_MAX_DIGIT_COUNT28,438
    lv_textarea_t ta;   /*Ext. of ancestor*/ta36,581
    int32_t value;value38,657
    int32_t range_max;range_max39,676
    int32_t range_min;range_min40,699
    int32_t step;step41,722
    uint16_t digit_count : 4;digit_count42,740
    uint16_t dec_point_pos : 4; /*if 0, there is no separator and the number is an integer*/dec_point_pos43,770
    uint16_t rollover : 1;   // Set to true for rollover functionalityrollover44,863
    uint16_t digit_step_dir : 2; // the direction the digit will step on encoder button press when editingdigit_step_dir45,934
} lv_spinbox_t;lv_spinbox_t46,1041

lib/lvgl/src/extra/widgets/spinbox/lv_spinbox.c,1688
#define MY_CLASS MY_CLASS17,243
const lv_obj_class_t lv_spinbox_class = {lv_spinbox_class34,706
lv_obj_t * lv_spinbox_create(lv_obj_t * parent)lv_spinbox_create49,1092
void lv_spinbox_set_value(lv_obj_t * obj, int32_t i)lv_spinbox_set_value66,1447
void lv_spinbox_set_rollover(lv_obj_t * obj, bool b)lv_spinbox_set_rollover84,1894
void lv_spinbox_set_digit_format(lv_obj_t * obj, uint8_t digit_count, uint8_t separator_position)lv_spinbox_set_digit_format99,2360
void lv_spinbox_set_step(lv_obj_t * obj, uint32_t step)lv_spinbox_set_step126,3319
void lv_spinbox_set_range(lv_obj_t * obj, int32_t range_min, int32_t range_max)lv_spinbox_set_range141,3686
void lv_spinbox_set_pos(lv_obj_t * obj, uint8_t pos)lv_spinbox_set_pos160,4268
void lv_spinbox_set_digit_step_direction(lv_obj_t *obj, lv_dir_t direction)lv_spinbox_set_digit_step_direction178,4938
int32_t lv_spinbox_get_value(lv_obj_t * obj)lv_spinbox_get_value195,5432
int32_t lv_spinbox_get_step(lv_obj_t * obj)lv_spinbox_get_step207,5780
void lv_spinbox_step_next(lv_obj_t * obj)lv_spinbox_step_next223,6093
void lv_spinbox_step_prev(lv_obj_t * obj)lv_spinbox_step_prev241,6480
bool lv_spinbox_get_rollover(lv_obj_t * obj)lv_spinbox_get_rollover257,6976
void lv_spinbox_increment(lv_obj_t * obj)lv_spinbox_increment269,7225
void lv_spinbox_decrement(lv_obj_t * obj)lv_spinbox_decrement295,7958
static void lv_spinbox_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)lv_spinbox_constructor320,8679
static void lv_spinbox_event(const lv_obj_class_t * class_p, lv_event_t * e)lv_spinbox_event346,9444
static void lv_spinbox_updatevalue(lv_obj_t * obj)lv_spinbox_updatevalue444,12969

lib/lvgl/src/draw/lv_draw_label.h,1044
#define LV_DRAW_LABEL_HLV_DRAW_LABEL_H7,61
#define LV_DRAW_LABEL_NO_TXT_SEL LV_DRAW_LABEL_NO_TXT_SEL24,368
    const lv_font_t * font;font31,495
    uint32_t sel_start;sel_start32,523
    uint32_t sel_end;sel_end33,547
    lv_color_t color;color34,569
    lv_color_t sel_color;sel_color35,591
    lv_color_t sel_bg_color;sel_bg_color36,617
    lv_coord_t line_space;line_space37,646
    lv_coord_t letter_space;letter_space38,673
    lv_coord_t ofs_x;ofs_x39,702
    lv_coord_t ofs_y;ofs_y40,724
    lv_opa_t opa;opa41,746
    lv_base_dir_t bidi_dir;bidi_dir42,764
    lv_text_align_t align;align43,792
    lv_text_flag_t flag;flag44,819
    lv_text_decor_t decor : 3;decor45,844
    lv_blend_mode_t blend_mode: 3;blend_mode46,875
} lv_draw_label_dsc_t;lv_draw_label_dsc_t47,910
typedef struct _lv_draw_label_hint_t {_lv_draw_label_hint_t54,1289
    int32_t line_start;line_start56,1374
    int32_t y;y59,1512
    int32_t coord_y;coord_y63,1664
} lv_draw_label_hint_t;lv_draw_label_hint_t64,1685

lib/lvgl/src/draw/lv_draw_blend.h,45
#define LV_DRAW_BLEND_HLV_DRAW_BLEND_H7,61

lib/lvgl/src/draw/lv_img_buf.c,1366
lv_color_t lv_img_buf_get_px_color(lv_img_dsc_t * dsc, lv_coord_t x, lv_coord_t y, lv_color_t color)lv_img_buf_get_px_color51,1049
lv_opa_t lv_img_buf_get_px_alpha(lv_img_dsc_t * dsc, lv_coord_t x, lv_coord_t y)lv_img_buf_get_px_alpha118,3789
void lv_img_buf_set_px_alpha(lv_img_dsc_t * dsc, lv_coord_t x, lv_coord_t y, lv_opa_t opa)lv_img_buf_set_px_alpha181,6333
void lv_img_buf_set_px_color(lv_img_dsc_t * dsc, lv_coord_t x, lv_coord_t y, lv_color_t c)lv_img_buf_set_px_color240,8736
void lv_img_buf_set_palette(lv_img_dsc_t * dsc, uint8_t id, lv_color_t c)lv_img_buf_set_palette309,11687
lv_img_dsc_t * lv_img_buf_alloc(lv_coord_t w, lv_coord_t h, lv_img_cf_t cf)lv_img_buf_alloc330,12432
void lv_img_buf_free(lv_img_dsc_t * dsc)lv_img_buf_free366,13296
uint32_t lv_img_buf_get_img_size(lv_coord_t w, lv_coord_t h, lv_img_cf_t cf)lv_img_buf_get_img_size383,13649
void _lv_img_buf_transform_init(lv_img_transform_dsc_t * dsc)_lv_img_buf_transform_init418,14987
void _lv_img_buf_get_transformed_area(lv_area_t * res, lv_coord_t w, lv_coord_t h, int16_t angle, uint16_t zoom,_lv_img_buf_get_transformed_area474,17070
bool _lv_img_buf_transform(lv_img_transform_dsc_t * dsc, lv_coord_t x, lv_coord_t y)_lv_img_buf_transform569,20168
bool _lv_img_buf_transform_anti_alias(lv_img_transform_dsc_t * dsc)_lv_img_buf_transform_anti_alias654,23223

lib/lvgl/src/draw/lv_draw_rect.c,1889
#define SHADOW_UPSCALE_SHIFT SHADOW_UPSCALE_SHIFT20,363
#define SHADOW_ENHANCE SHADOW_ENHANCE21,396
#define SPLIT_LIMIT SPLIT_LIMIT22,430
    static uint8_t sh_cache[LV_SHADOW_CACHE_SIZE * LV_SHADOW_CACHE_SIZE];sh_cache64,2473
    static int32_t sh_cache_size = -1;sh_cache_size65,2547
    static int32_t sh_cache_r = -1;sh_cache_r66,2586
LV_ATTRIBUTE_FAST_MEM void lv_draw_rect_dsc_init(lv_draw_rect_dsc_t * dsc)lv_draw_rect_dsc_init77,2767
void lv_draw_rect(const lv_area_t * coords, const lv_area_t * clip, const lv_draw_rect_dsc_t * dsc)lv_draw_rect101,3610
LV_ATTRIBUTE_FAST_MEM static void draw_bg(const lv_area_t * coords, const lv_area_t * clip_area,draw_bg122,4106
LV_ATTRIBUTE_FAST_MEM static void draw_bg_img(const lv_area_t * coords, const lv_area_t * clip,draw_bg_img316,12500
LV_ATTRIBUTE_FAST_MEM static void draw_border(const lv_area_t * coords, const lv_area_t * clip,draw_border381,15008
LV_ATTRIBUTE_FAST_MEM static inline lv_color_t grad_get(const lv_draw_rect_dsc_t * dsc, lv_coord_t s, lv_coord_t i)grad_get412,16374
LV_ATTRIBUTE_FAST_MEM static void draw_shadow(const lv_area_t * coords, const lv_area_t * clip,draw_shadow427,16890
LV_ATTRIBUTE_FAST_MEM static void shadow_draw_corner_buf(const lv_area_t * coords, uint16_t * sh_buf, lv_coord_t sw,shadow_draw_corner_buf879,36727
LV_ATTRIBUTE_FAST_MEM static void shadow_blur_corner(lv_coord_t size, lv_coord_t sw, uint16_t * sh_ups_buf)shadow_blur_corner966,39458
static void draw_outline(const lv_area_t * coords, const lv_area_t * clip, const lv_draw_rect_dsc_t * dsc)draw_outline1041,41886
void draw_border_generic(const lv_area_t * clip_area, const lv_area_t * outer_area, const lv_area_t * inner_area,draw_border_generic1081,43195
static void draw_border_simple(const lv_area_t * clip, const lv_area_t * outer_area, const lv_area_t * inner_area,draw_border_simple1298,51497

lib/lvgl/src/draw/lv_draw_mask.c,3389
#define CIRCLE_CACHE_LIFE_MAX CIRCLE_CACHE_LIFE_MAX19,320
#define CIRCLE_CACHE_AGING(CIRCLE_CACHE_AGING20,357
int16_t lv_draw_mask_add(void * param, void * custom_id)lv_draw_mask_add78,3808
LV_ATTRIBUTE_FAST_MEM lv_draw_mask_res_t lv_draw_mask_apply(lv_opa_t * mask_buf, lv_coord_t abs_x, lv_coord_t abs_y,lv_draw_mask_apply108,5048
LV_ATTRIBUTE_FAST_MEM lv_draw_mask_res_t lv_draw_mask_apply_ids(lv_opa_t * mask_buf, lv_coord_t abs_x, lv_coord_t abs_y,lv_draw_mask_apply_ids142,6629
void * lv_draw_mask_remove_id(int16_t id)lv_draw_mask_remove_id168,7718
void * lv_draw_mask_remove_custom(void * custom_id)lv_draw_mask_remove_custom187,8278
void lv_draw_mask_free_param(void * p)lv_draw_mask_free_param207,8972
void _lv_draw_mask_cleanup(void)_lv_draw_mask_cleanup224,9480
LV_ATTRIBUTE_FAST_MEM uint8_t lv_draw_mask_get_cnt(void)lv_draw_mask_get_cnt239,9883
bool lv_draw_mask_is_any(const lv_area_t * a)lv_draw_mask_is_any249,10106
void lv_draw_mask_line_points_init(lv_draw_mask_line_param_t * param, lv_coord_t p1x, lv_coord_t p1y, lv_coord_t p2x,lv_draw_mask_line_points_init286,11576
void lv_draw_mask_line_angle_init(lv_draw_mask_line_param_t * param, lv_coord_t p1x, lv_coord_t py, int16_t angle,lv_draw_mask_line_angle_init380,14574
void lv_draw_mask_angle_init(lv_draw_mask_angle_param_t * param, lv_coord_t vertex_x, lv_coord_t vertex_y,lv_draw_mask_angle_init406,15650
void lv_draw_mask_radius_init(lv_draw_mask_radius_param_t * param, const lv_area_t * rect, lv_coord_t radius, bool inv)lv_draw_mask_radius_init470,17867
void lv_draw_mask_fade_init(lv_draw_mask_fade_param_t * param, const lv_area_t * coords, lv_opa_t opa_top,lv_draw_mask_fade_init536,20132
void lv_draw_mask_map_init(lv_draw_mask_map_param_t * param, const lv_area_t * coords, const lv_opa_t * map)lv_draw_mask_map_init555,20864
LV_ATTRIBUTE_FAST_MEM static lv_draw_mask_res_t lv_draw_mask_line(lv_opa_t * mask_buf, lv_coord_t abs_x,lv_draw_mask_line567,21225
LV_ATTRIBUTE_FAST_MEM static lv_draw_mask_res_t line_mask_flat(lv_opa_t * mask_buf, lv_coord_t abs_x, lv_coord_t abs_y,line_mask_flat627,23735
LV_ATTRIBUTE_FAST_MEM static lv_draw_mask_res_t line_mask_steep(lv_opa_t * mask_buf, lv_coord_t abs_x, lv_coord_t abs_y,line_mask_steep743,26750
LV_ATTRIBUTE_FAST_MEM static lv_draw_mask_res_t lv_draw_mask_angle(lv_opa_t * mask_buf, lv_coord_t abs_x,lv_draw_mask_angle885,30872
LV_ATTRIBUTE_FAST_MEM static lv_draw_mask_res_t lv_draw_mask_radius(lv_opa_t * mask_buf, lv_coord_t abs_x,lv_draw_mask_radius1024,37433
LV_ATTRIBUTE_FAST_MEM static lv_draw_mask_res_t lv_draw_mask_fade(lv_opa_t * mask_buf, lv_coord_t abs_x,lv_draw_mask_fade1141,41697
LV_ATTRIBUTE_FAST_MEM static lv_draw_mask_res_t lv_draw_mask_map(lv_opa_t * mask_buf, lv_coord_t abs_x,lv_draw_mask_map1187,43392
static void circ_init(lv_point_t * c, lv_coord_t * tmp, lv_coord_t radius)circ_init1227,44849
static bool circ_cont(lv_point_t * c)circ_cont1239,45116
static void circ_next(lv_point_t * c, lv_coord_t * tmp)circ_next1249,45343
static void circ_calc_aa4(_lv_draw_mask_radius_circle_dsc_t * c, lv_coord_t radius)circ_calc_aa41262,45629
static lv_opa_t * get_next_line(_lv_draw_mask_radius_circle_dsc_t * c, lv_coord_t y, lv_coord_t * len,get_next_line1410,50287
LV_ATTRIBUTE_FAST_MEM static inline lv_opa_t mask_mix(lv_opa_t mask_act, lv_opa_t mask_new)mask_mix1419,50591

lib/lvgl/src/draw/lv_draw_line.c,622
LV_ATTRIBUTE_FAST_MEM void lv_draw_line_dsc_init(lv_draw_line_dsc_t * dsc)lv_draw_line_dsc_init49,1413
LV_ATTRIBUTE_FAST_MEM void lv_draw_line(const lv_point_t * point1, const lv_point_t * point2, const lv_area_t * clip,lv_draw_line64,1860
LV_ATTRIBUTE_FAST_MEM static void draw_line_hor(const lv_point_t * point1, const lv_point_t * point2,draw_line_hor120,3810
LV_ATTRIBUTE_FAST_MEM static void draw_line_ver(const lv_point_t * point1, const lv_point_t * point2,draw_line_ver222,7643
LV_ATTRIBUTE_FAST_MEM static void draw_line_skew(const lv_point_t * point1, const lv_point_t * point2,draw_line_skew317,11108

lib/lvgl/src/draw/lv_draw_mask.h,4766
#define LV_DRAW_MASK_HLV_DRAW_MASK_H7,59
#define LV_MASK_ID_INV LV_MASK_ID_INV25,361
# define _LV_MASK_MAX_NUM _LV_MASK_MAX_NUM27,410
#  define _LV_MASK_BUF_MAX_SIZE _LV_MASK_BUF_MAX_SIZE29,474
# define _LV_MASK_MAX_NUM _LV_MASK_MAX_NUM32,567
    LV_DRAW_MASK_RES_TRANSP,LV_DRAW_MASK_RES_TRANSP40,681
    LV_DRAW_MASK_RES_FULL_COVER,LV_DRAW_MASK_RES_FULL_COVER41,710
    LV_DRAW_MASK_RES_CHANGED,LV_DRAW_MASK_RES_CHANGED42,743
    LV_DRAW_MASK_RES_UNKNOWNLV_DRAW_MASK_RES_UNKNOWN43,773
typedef uint8_t lv_draw_mask_res_t;lv_draw_mask_res_t46,806
    void * param;param49,860
    void * custom_id;custom_id50,878
} _lv_draw_mask_saved_t;_lv_draw_mask_saved_t51,900
typedef _lv_draw_mask_saved_t _lv_draw_mask_saved_arr_t[_LV_MASK_MAX_NUM];_lv_draw_mask_saved_arr_t53,926
static inline  uint8_t lv_draw_mask_get_cnt(void)lv_draw_mask_get_cnt58,1029
static inline bool lv_draw_mask_is_any(const lv_area_t * a)lv_draw_mask_is_any63,1098
    LV_DRAW_MASK_TYPE_LINE,LV_DRAW_MASK_TYPE_LINE74,1235
    LV_DRAW_MASK_TYPE_ANGLE,LV_DRAW_MASK_TYPE_ANGLE75,1263
    LV_DRAW_MASK_TYPE_RADIUS,LV_DRAW_MASK_TYPE_RADIUS76,1292
    LV_DRAW_MASK_TYPE_FADE,LV_DRAW_MASK_TYPE_FADE77,1322
    LV_DRAW_MASK_TYPE_MAP,LV_DRAW_MASK_TYPE_MAP78,1350
typedef uint8_t lv_draw_mask_type_t;lv_draw_mask_type_t81,1381
    LV_DRAW_MASK_LINE_SIDE_LEFT = 0,LV_DRAW_MASK_LINE_SIDE_LEFT84,1426
    LV_DRAW_MASK_LINE_SIDE_RIGHT,LV_DRAW_MASK_LINE_SIDE_RIGHT85,1463
    LV_DRAW_MASK_LINE_SIDE_TOP,LV_DRAW_MASK_LINE_SIDE_TOP86,1497
    LV_DRAW_MASK_LINE_SIDE_BOTTOM,LV_DRAW_MASK_LINE_SIDE_BOTTOM87,1529
typedef lv_draw_mask_res_t (*lv_draw_mask_xcb_t)(lv_opa_t * mask_buf, lv_coord_t abs_x, lv_coord_t abs_y,lv_draw_mask_xcb_t94,1658
typedef uint8_t lv_draw_mask_line_side_t;lv_draw_mask_line_side_t98,1890
    lv_draw_mask_xcb_t cb;cb101,1950
    lv_draw_mask_type_t type;type102,1977
} _lv_draw_mask_common_dsc_t;_lv_draw_mask_common_dsc_t103,2007
    _lv_draw_mask_common_dsc_t dsc;dsc107,2111
        lv_point_t p1;p1111,2185
        lv_point_t p2;p2114,2234
        lv_draw_mask_line_side_t side : 2;side117,2290
    } cfg;cfg118,2333
    lv_point_t origo;origo121,2373
    int32_t xy_steep;xy_steep124,2484
    int32_t yx_steep;yx_steep127,2595
    int32_t steep;steep130,2710
    int32_t spx;spx133,2798
    uint8_t flat : 1;flat136,2866
    uint8_t inv: 1;inv140,2999
} lv_draw_mask_line_param_t;lv_draw_mask_line_param_t141,3019
    _lv_draw_mask_common_dsc_t dsc;dsc145,3122
        lv_point_t vertex_p;vertex_p148,3172
        lv_coord_t start_angle;start_angle149,3201
        lv_coord_t end_angle;end_angle150,3233
    } cfg;cfg151,3263
    lv_draw_mask_line_param_t start_line;start_line153,3275
    lv_draw_mask_line_param_t end_line;end_line154,3317
    uint16_t delta_deg;delta_deg155,3357
} lv_draw_mask_angle_param_t;lv_draw_mask_angle_param_t156,3381
    uint8_t * buf;buf159,3430
    lv_opa_t * cir_opa;         /*Opacity of values on the circumference of an 1/4 circle*/cir_opa160,3449
    uint16_t * x_start_on_y;        /*The x coordinate of the circle for each y value*/x_start_on_y161,3541
    uint16_t * opa_start_on_y;      /*The index of `cir_opa` for each y value*/opa_start_on_y162,3629
    int32_t life;               /*How many times the entry way used*/life163,3709
    uint32_t used_cnt;          /*Like a semaphore to count the referencing masks*/used_cnt164,3779
    lv_coord_t radius;          /*The radius of the entry*/radius165,3863
} _lv_draw_mask_radius_circle_dsc_t;_lv_draw_mask_radius_circle_dsc_t166,3923
typedef _lv_draw_mask_radius_circle_dsc_t _lv_draw_mask_radius_circle_dsc_arr_t[LV_CIRCLE_CACHE_SIZE];_lv_draw_mask_radius_circle_dsc_arr_t168,3961
    _lv_draw_mask_common_dsc_t dsc;dsc172,4138
        lv_area_t rect;rect175,4188
        lv_coord_t radius;radius176,4212
        uint8_t outer: 1;outer178,4295
    } cfg;cfg179,4321
    _lv_draw_mask_radius_circle_dsc_t * circle;circle181,4333
} lv_draw_mask_radius_param_t;lv_draw_mask_radius_param_t182,4381
    _lv_draw_mask_common_dsc_t dsc;dsc187,4487
        lv_area_t coords;coords190,4537
        lv_coord_t y_top;y_top191,4563
        lv_coord_t y_bottom;y_bottom192,4589
        lv_opa_t opa_top;opa_top193,4618
        lv_opa_t opa_bottom;opa_bottom194,4644
    } cfg;cfg195,4673
} lv_draw_mask_fade_param_t;lv_draw_mask_fade_param_t197,4685
typedef struct _lv_draw_mask_map_param_t {_lv_draw_mask_map_param_t200,4716
    _lv_draw_mask_common_dsc_t dsc;dsc202,4815
        lv_area_t coords;coords205,4865
        const lv_opa_t * map;map206,4891
    } cfg;cfg207,4921
} lv_draw_mask_map_param_t;lv_draw_mask_map_param_t208,4932

lib/lvgl/src/draw/lv_draw_img.c,982
void lv_draw_img_dsc_init(lv_draw_img_dsc_t * dsc)lv_draw_img_dsc_init59,1656
void lv_draw_img(const lv_area_t * coords, const lv_area_t * mask, const void * src, const lv_draw_img_dsc_t * dsc)lv_draw_img76,2225
uint8_t lv_img_cf_get_px_size(lv_img_cf_t cf)lv_img_cf_get_px_size102,2900
bool lv_img_cf_is_chroma_keyed(lv_img_cf_t cf)lv_img_cf_is_chroma_keyed147,4062
bool lv_img_cf_has_alpha(lv_img_cf_t cf)lv_img_cf_has_alpha174,4743
lv_img_src_t lv_img_src_get_type(const void * src)lv_img_src_get_type207,5690
LV_ATTRIBUTE_FAST_MEM static lv_res_t lv_img_draw_core(const lv_area_t * coords, const lv_area_t * clip_area,lv_img_draw_core237,6543
LV_ATTRIBUTE_FAST_MEM static void lv_draw_map(const lv_area_t * map_area, const lv_area_t * clip_area,lv_draw_map341,10671
static void show_error(const lv_area_t * coords, const lv_area_t * clip_area, const char * msg)show_error646,23887
static void draw_cleanup(_lv_img_cache_entry_t * cache)draw_cleanup658,24286

lib/lvgl/src/draw/lv_draw_img.h,441
#define LV_DRAW_IMG_HLV_DRAW_IMG_H7,57
    uint16_t angle;angle34,478
    uint16_t zoom;zoom35,498
    lv_point_t pivot;pivot36,517
    lv_color_t recolor;recolor38,540
    lv_opa_t recolor_opa;recolor_opa39,564
    lv_opa_t opa;opa41,591
    lv_blend_mode_t blend_mode : 4;blend_mode42,609
    int32_t frame_id;frame_id44,646
    uint8_t antialias       : 1;antialias45,668
} lv_draw_img_dsc_t;lv_draw_img_dsc_t46,701

lib/lvgl/src/draw/lv_draw_arc.c,1467
#define SPLIT_RADIUS_LIMIT SPLIT_RADIUS_LIMIT19,325
#define SPLIT_ANGLE_GAP_LIMIT SPLIT_ANGLE_GAP_LIMIT20,468
    lv_coord_t center_x;center_x26,679
    lv_coord_t center_y;center_y27,704
    lv_coord_t radius;radius28,729
    uint16_t start_angle;start_angle29,752
    uint16_t end_angle;end_angle30,778
    uint16_t start_quarter;start_quarter31,802
    uint16_t end_quarter;end_quarter32,830
    lv_coord_t width;width33,856
    lv_draw_rect_dsc_t * draw_dsc;draw_dsc34,878
    const lv_area_t * draw_area;draw_area35,913
    const lv_area_t * clip_area;clip_area36,946
} quarter_draw_dsc_t;quarter_draw_dsc_t37,979
LV_ATTRIBUTE_FAST_MEM void lv_draw_arc_dsc_init(lv_draw_arc_dsc_t * dsc)lv_draw_arc_dsc_init62,1662
void lv_draw_arc(lv_coord_t center_x, lv_coord_t center_y, uint16_t radius,  uint16_t start_angle, uint16_t end_angle,lv_draw_arc70,1874
void lv_draw_arc_get_area(lv_coord_t x, lv_coord_t y, uint16_t radius,  uint16_t start_angle, uint16_t end_angle,lv_draw_arc_get_area221,7202
static void draw_quarter_0(quarter_draw_dsc_t * q)draw_quarter_0319,11912
static void draw_quarter_1(quarter_draw_dsc_t * q)draw_quarter_1372,14571
static void draw_quarter_2(quarter_draw_dsc_t * q)draw_quarter_2425,17242
static void draw_quarter_3(quarter_draw_dsc_t * q)draw_quarter_3478,19919
static void get_rounded_area(int16_t angle, lv_coord_t radius, uint8_t thickness, lv_area_t * res_area)get_rounded_area531,22590

lib/lvgl/src/draw/lv_draw_rect.h,1697
#define LV_DRAW_RECT_HLV_DRAW_RECT_H7,59
#define LV_RADIUS_CIRCLE LV_RADIUS_CIRCLE22,307
LV_EXPORT_CONST_INT(LV_RADIUS_CIRCLE);LV_RADIUS_CIRCLE23,389
    lv_coord_t radius;radius31,514
    lv_blend_mode_t blend_mode;blend_mode32,537
    lv_color_t bg_color;bg_color35,589
    lv_color_t bg_grad_color;bg_grad_color36,614
    uint8_t bg_main_color_stop;bg_main_color_stop37,644
    uint8_t bg_grad_color_stop;bg_grad_color_stop38,676
    lv_opa_t bg_opa;bg_opa39,708
    lv_grad_dir_t bg_grad_dir : 3;bg_grad_dir40,729
    const void * bg_img_src;bg_img_src43,788
    const void * bg_img_symbol_font;bg_img_symbol_font44,817
    lv_color_t bg_img_recolor;bg_img_recolor45,854
    lv_opa_t bg_img_opa;bg_img_opa46,885
    lv_opa_t bg_img_recolor_opa;bg_img_recolor_opa47,910
    uint8_t bg_img_tiled;bg_img_tiled48,943
    lv_color_t border_color;border_color51,985
    lv_coord_t border_width;border_width52,1014
    lv_opa_t border_opa;border_opa53,1043
    uint8_t border_post : 1;        /*There is a border it will be drawn later.*/border_post54,1068
    lv_border_side_t border_side : 5;border_side55,1150
    lv_color_t outline_color;outline_color58,1205
    lv_coord_t outline_width;outline_width59,1235
    lv_coord_t outline_pad;outline_pad60,1265
    lv_opa_t outline_opa;outline_opa61,1293
    lv_color_t shadow_color;shadow_color64,1335
    lv_coord_t shadow_width;shadow_width65,1364
    lv_coord_t shadow_ofs_x;shadow_ofs_x66,1393
    lv_coord_t shadow_ofs_y;shadow_ofs_y67,1422
    lv_coord_t shadow_spread;shadow_spread68,1451
    lv_opa_t shadow_opa;shadow_opa69,1481
} lv_draw_rect_dsc_t;lv_draw_rect_dsc_t70,1506

lib/lvgl/src/draw/lv_img_cache.h,201
#define LV_IMG_CACHE_HLV_IMG_CACHE_H7,59
    lv_img_decoder_dsc_t dec_dsc; /**< Image information*/dec_dsc32,533
    int32_t life;life37,802
} _lv_img_cache_entry_t;_lv_img_cache_entry_t38,820

lib/lvgl/src/draw/lv_draw_blend.c,1725
#define GPU_SIZE_LIMIT GPU_SIZE_LIMIT26,523
#define FILL_NORMAL_MASK_PX(FILL_NORMAL_MASK_PX80,3107
#define FILL_NORMAL_MASK_PX(FILL_NORMAL_MASK_PX87,3474
#define MAP_NORMAL_MASK_PX(MAP_NORMAL_MASK_PX95,4009
#define MAP_NORMAL_MASK_PX_SCR_TRANSP(MAP_NORMAL_MASK_PX_SCR_TRANSP102,4474
LV_ATTRIBUTE_FAST_MEM void _lv_blend_fill(const lv_area_t * clip_area, const lv_area_t * fill_area,_lv_blend_fill129,6045
LV_ATTRIBUTE_FAST_MEM void _lv_blend_map(const lv_area_t * clip_area, const lv_area_t * map_area,_lv_blend_map186,8560
static void fill_set_px(const lv_area_t * disp_area, lv_color_t * disp_buf,  const lv_area_t * draw_area,fill_set_px239,10608
LV_ATTRIBUTE_FAST_MEM static void fill_normal(const lv_area_t * disp_area, lv_color_t * disp_buf,fill_normal294,12901
static void fill_blended(const lv_area_t * disp_area, lv_color_t * disp_buf,  const lv_area_t * draw_area,fill_blended504,21707
static void map_set_px(const lv_area_t * disp_area, lv_color_t * disp_buf,  const lv_area_t * draw_area,map_set_px585,25025
LV_ATTRIBUTE_FAST_MEM static void map_normal(const lv_area_t * disp_area, lv_color_t * disp_buf,map_normal649,27844
static void map_blended(const lv_area_t * disp_area, lv_color_t * disp_buf,  const lv_area_t * draw_area,map_blended883,37458
static inline lv_color_t color_blend_true_color_additive(lv_color_t fg, lv_color_t bg, lv_opa_t opa)color_blend_true_color_additive959,40508
static inline lv_color_t color_blend_true_color_subtractive(lv_color_t fg, lv_color_t bg, lv_opa_t opa)color_blend_true_color_subtractive1012,41803
static inline lv_color_t color_blend_true_color_multiply(lv_color_t fg, lv_color_t bg, lv_opa_t opa)color_blend_true_color_multiply1038,42465

lib/lvgl/src/draw/lv_img_buf.h,7707
#define LV_IMG_BUF_HLV_IMG_BUF_H7,55
#define LV_IMG_PX_SIZE_ALPHA_BYTE LV_IMG_PX_SIZE_ALPHA_BYTE25,448
#define LV_IMG_PX_SIZE_ALPHA_BYTE LV_IMG_PX_SIZE_ALPHA_BYTE27,511
#define LV_IMG_PX_SIZE_ALPHA_BYTE LV_IMG_PX_SIZE_ALPHA_BYTE29,574
#define LV_IMG_BUF_SIZE_TRUE_COLOR(LV_IMG_BUF_SIZE_TRUE_COLOR32,618
#define LV_IMG_BUF_SIZE_TRUE_COLOR_CHROMA_KEYED(LV_IMG_BUF_SIZE_TRUE_COLOR_CHROMA_KEYED33,689
#define LV_IMG_BUF_SIZE_TRUE_COLOR_ALPHA(LV_IMG_BUF_SIZE_TRUE_COLOR_ALPHA34,773
#define LV_IMG_BUF_SIZE_ALPHA_1BIT(LV_IMG_BUF_SIZE_ALPHA_1BIT37,895
#define LV_IMG_BUF_SIZE_ALPHA_2BIT(LV_IMG_BUF_SIZE_ALPHA_2BIT38,958
#define LV_IMG_BUF_SIZE_ALPHA_4BIT(LV_IMG_BUF_SIZE_ALPHA_4BIT39,1021
#define LV_IMG_BUF_SIZE_ALPHA_8BIT(LV_IMG_BUF_SIZE_ALPHA_8BIT40,1084
#define LV_IMG_BUF_SIZE_INDEXED_1BIT(LV_IMG_BUF_SIZE_INDEXED_1BIT43,1159
#define LV_IMG_BUF_SIZE_INDEXED_2BIT(LV_IMG_BUF_SIZE_INDEXED_2BIT44,1245
#define LV_IMG_BUF_SIZE_INDEXED_4BIT(LV_IMG_BUF_SIZE_INDEXED_4BIT45,1331
#define LV_IMG_BUF_SIZE_INDEXED_8BIT(LV_IMG_BUF_SIZE_INDEXED_8BIT46,1418
#define _LV_TRANSFORM_TRIGO_SHIFT _LV_TRANSFORM_TRIGO_SHIFT48,1507
#define _LV_ZOOM_INV_UPSCALE _LV_ZOOM_INV_UPSCALE49,1544
    LV_IMG_CF_UNKNOWN = 0,LV_IMG_CF_UNKNOWN57,1673
    LV_IMG_CF_RAW,              /**< Contains the file as it is. Needs custom decoder function*/LV_IMG_CF_RAW59,1701
    LV_IMG_CF_RAW_ALPHA,        /**< Contains the file as it is. The image has alpha. Needs custom decoderLV_IMG_CF_RAW_ALPHA60,1798
    LV_IMG_CF_RAW_CHROMA_KEYED, /**< Contains the file as it is. The image is chroma keyed. NeedsLV_IMG_CF_RAW_CHROMA_KEYED62,1951
    LV_IMG_CF_TRUE_COLOR,              /**< Color format and depth should match with LV_COLOR settings*/LV_IMG_CF_TRUE_COLOR65,2111
    LV_IMG_CF_TRUE_COLOR_ALPHA,        /**< Same as `LV_IMG_CF_TRUE_COLOR` but every pixel has an alpha byte*/LV_IMG_CF_TRUE_COLOR_ALPHA66,2216
    LV_IMG_CF_TRUE_COLOR_CHROMA_KEYED, /**< Same as `LV_IMG_CF_TRUE_COLOR` but LV_COLOR_TRANSP pixelsLV_IMG_CF_TRUE_COLOR_CHROMA_KEYED67,2327
    LV_IMG_CF_INDEXED_1BIT, /**< Can have 2 different colors in a palette (always chroma keyed)*/LV_IMG_CF_INDEXED_1BIT70,2494
    LV_IMG_CF_INDEXED_2BIT, /**< Can have 4 different colors in a palette (always chroma keyed)*/LV_IMG_CF_INDEXED_2BIT71,2592
    LV_IMG_CF_INDEXED_4BIT, /**< Can have 16 different colors in a palette (always chroma keyed)*/LV_IMG_CF_INDEXED_4BIT72,2690
    LV_IMG_CF_INDEXED_8BIT, /**< Can have 256 different colors in a palette (always chroma keyed)*/LV_IMG_CF_INDEXED_8BIT73,2789
    LV_IMG_CF_ALPHA_1BIT, /**< Can have one color and it can be drawn or not*/LV_IMG_CF_ALPHA_1BIT75,2890
    LV_IMG_CF_ALPHA_2BIT, /**< Can have one color but 4 different alpha value*/LV_IMG_CF_ALPHA_2BIT76,2969
    LV_IMG_CF_ALPHA_4BIT, /**< Can have one color but 16 different alpha value*/LV_IMG_CF_ALPHA_4BIT77,3049
    LV_IMG_CF_ALPHA_8BIT, /**< Can have one color but 256 different alpha value*/LV_IMG_CF_ALPHA_8BIT78,3130
    LV_IMG_CF_RESERVED_15,              /**< Reserved for further use.*/LV_IMG_CF_RESERVED_1580,3213
    LV_IMG_CF_RESERVED_16,              /**< Reserved for further use.*/LV_IMG_CF_RESERVED_1681,3286
    LV_IMG_CF_RESERVED_17,              /**< Reserved for further use.*/LV_IMG_CF_RESERVED_1782,3359
    LV_IMG_CF_RESERVED_18,              /**< Reserved for further use.*/LV_IMG_CF_RESERVED_1883,3432
    LV_IMG_CF_RESERVED_19,              /**< Reserved for further use.*/LV_IMG_CF_RESERVED_1984,3505
    LV_IMG_CF_RESERVED_20,              /**< Reserved for further use.*/LV_IMG_CF_RESERVED_2085,3578
    LV_IMG_CF_RESERVED_21,              /**< Reserved for further use.*/LV_IMG_CF_RESERVED_2186,3651
    LV_IMG_CF_RESERVED_22,              /**< Reserved for further use.*/LV_IMG_CF_RESERVED_2287,3724
    LV_IMG_CF_RESERVED_23,              /**< Reserved for further use.*/LV_IMG_CF_RESERVED_2388,3797
    LV_IMG_CF_USER_ENCODED_0,          /**< User holder encoding format.*/LV_IMG_CF_USER_ENCODED_090,3871
    LV_IMG_CF_USER_ENCODED_1,          /**< User holder encoding format.*/LV_IMG_CF_USER_ENCODED_191,3946
    LV_IMG_CF_USER_ENCODED_2,          /**< User holder encoding format.*/LV_IMG_CF_USER_ENCODED_292,4021
    LV_IMG_CF_USER_ENCODED_3,          /**< User holder encoding format.*/LV_IMG_CF_USER_ENCODED_393,4096
    LV_IMG_CF_USER_ENCODED_4,          /**< User holder encoding format.*/LV_IMG_CF_USER_ENCODED_494,4171
    LV_IMG_CF_USER_ENCODED_5,          /**< User holder encoding format.*/LV_IMG_CF_USER_ENCODED_595,4246
    LV_IMG_CF_USER_ENCODED_6,          /**< User holder encoding format.*/LV_IMG_CF_USER_ENCODED_696,4321
    LV_IMG_CF_USER_ENCODED_7,          /**< User holder encoding format.*/LV_IMG_CF_USER_ENCODED_797,4396
typedef uint8_t lv_img_cf_t;lv_img_cf_t99,4474
    uint32_t h : 11; /*Height of the image map*/h111,4799
    uint32_t w : 11; /*Width of the image map*/w112,4848
    uint32_t reserved : 2; /*Reserved to be used later*/reserved113,4896
    uint32_t always_zero : 3; /*It the upper bits of the first byte. Always zero to look like aalways_zero114,4953
    uint32_t cf : 5;          /*Color format: See `lv_img_color_format_t`*/cf116,5108
} lv_img_header_t;lv_img_header_t118,5185
    uint32_t cf : 5;          /*Color format: See `lv_img_color_format_t`*/cf122,5228
    uint32_t always_zero : 3; /*It the upper bits of the first byte. Always zero to look like aalways_zero123,5304
    uint32_t reserved : 2; /*Reserved to be used later*/reserved126,5460
    uint32_t w : 11; /*Width of the image map*/w128,5518
    uint32_t h : 11; /*Height of the image map*/h129,5566
} lv_img_header_t;lv_img_header_t130,5615
    lv_img_header_t header; /**< A header describing the basics of the image*/header136,5743
    uint32_t data_size;     /**< Size of the image in bytes*/data_size137,5822
    const uint8_t * data;   /**< Pointer to the data of the image*/data138,5884
} lv_img_dsc_t;lv_img_dsc_t139,5952
        const void * src;           /*image source (array of pixels)*/src143,5999
        lv_coord_t src_w;           /*width of the image source*/src_w144,6070
        lv_coord_t src_h;           /*height of the image source*/src_h145,6136
        lv_coord_t pivot_x;         /*pivot x*/pivot_x146,6203
        lv_coord_t pivot_y;         /*pivot y*/pivot_y147,6251
        int16_t angle;              /*angle to rotate*/angle148,6299
        uint16_t zoom;              /*256 no zoom, 128 half size, 512 double size*/zoom149,6355
        lv_color_t color;           /*a color used for `LV_IMG_CF_INDEXED_1/2/4/8BIT` color formats*/color150,6439
        lv_img_cf_t cf;             /*color format of the image to rotate*/cf151,6541
        bool antialias;antialias152,6617
    } cfg;cfg153,6641
        lv_color_t color;color156,6666
        lv_opa_t opa;opa157,6692
    } res;res158,6714
        lv_img_dsc_t img_dsc;img_dsc161,6739
        int32_t pivot_x_256;pivot_x_256162,6769
        int32_t pivot_y_256;pivot_y_256163,6798
        int32_t sinma;sinma164,6827
        int32_t cosma;cosma165,6850
        uint8_t chroma_keyed : 1;chroma_keyed167,6874
        uint8_t has_alpha : 1;has_alpha168,6908
        uint8_t native_color : 1;native_color169,6939
        uint32_t zoom_inv;zoom_inv171,6974
        lv_coord_t xs;xs174,7027
        lv_coord_t ys;ys175,7050
        lv_coord_t xs_int;xs_int176,7073
        lv_coord_t ys_int;ys_int177,7100
        uint32_t pxi;pxi178,7127
        uint8_t px_size;px_size179,7149
    } tmp;tmp180,7174
} lv_img_transform_dsc_t;lv_img_transform_dsc_t181,7185

lib/lvgl/src/draw/lv_img_decoder.h,1915
#define LV_IMG_DECODER_HLV_IMG_DECODER_H7,63
    LV_IMG_SRC_VARIABLE, /** Binary/C variable*/LV_IMG_SRC_VARIABLE35,522
    LV_IMG_SRC_FILE, /** File in filesystem*/LV_IMG_SRC_FILE36,571
    LV_IMG_SRC_SYMBOL, /** Symbol (@ref lv_symbol_def.h)*/LV_IMG_SRC_SYMBOL37,617
    LV_IMG_SRC_UNKNOWN, /** Unknown source*/LV_IMG_SRC_UNKNOWN38,676
typedef uint8_t lv_img_src_t;lv_img_src_t41,725
typedef lv_res_t (*lv_img_decoder_info_f_t)(struct _lv_img_decoder_t * decoder, const void * src,lv_img_decoder_info_f_t54,1138
typedef lv_res_t (*lv_img_decoder_open_f_t)(struct _lv_img_decoder_t * decoder, struct _lv_img_decoder_dsc_t * dsc);lv_img_decoder_open_f_t62,1554
typedef lv_res_t (*lv_img_decoder_read_line_f_t)(struct _lv_img_decoder_t * decoder, struct _lv_img_decoder_dsc_t * dsc,lv_img_decoder_read_line_f_t75,2175
typedef void (*lv_img_decoder_close_f_t)(struct _lv_img_decoder_t * decoder, struct _lv_img_decoder_dsc_t * dsc);lv_img_decoder_close_f_t83,2579
typedef struct _lv_img_decoder_t {_lv_img_decoder_t86,2695
    lv_img_decoder_info_f_t info_cb;info_cb87,2730
    lv_img_decoder_open_f_t open_cb;open_cb88,2767
    lv_img_decoder_read_line_f_t read_line_cb;read_line_cb89,2804
    lv_img_decoder_close_f_t close_cb;close_cb90,2851
    void * user_data;user_data93,2912
} lv_img_decoder_t;lv_img_decoder_t95,2941
typedef struct _lv_img_decoder_dsc_t {_lv_img_decoder_dsc_t99,3035
    lv_img_decoder_t * decoder;decoder101,3135
    const void * src;src104,3268
    lv_color_t color;color107,3368
    int32_t frame_id;frame_id110,3447
    lv_img_src_t src_type;src_type113,3559
    lv_img_header_t header;header116,3681
    const uint8_t * img_data;img_data120,3850
    uint32_t time_to_open;time_to_open124,4013
    const char * error_msg;error_msg128,4171
    void * user_data;user_data131,4248
} lv_img_decoder_dsc_t;lv_img_decoder_dsc_t132,4270

lib/lvgl/src/draw/lv_img_cache.c,620
#define LV_IMG_CACHE_AGING LV_IMG_CACHE_AGING20,382
#define LV_IMG_CACHE_LIFE_GAIN LV_IMG_CACHE_LIFE_GAIN23,482
#define LV_IMG_CACHE_LIFE_LIMIT LV_IMG_CACHE_LIFE_LIMIT27,638
    static uint16_t entry_cnt;entry_cnt44,1018
_lv_img_cache_entry_t * _lv_img_cache_open(const void * src, lv_color_t color, int32_t frame_id)_lv_img_cache_open63,1704
void lv_img_cache_set_size(uint16_t new_entry_cnt)lv_img_cache_set_size149,4861
void lv_img_cache_invalidate_src(const void * src)lv_img_cache_invalidate_src180,5930
static bool lv_img_cache_match(const void * src1, const void * src2)lv_img_cache_match204,6538

lib/lvgl/src/draw/lv_draw_triangle.h,51
#define LV_DRAW_TRIANGLE_HLV_DRAW_TRIANGLE_H7,67

lib/lvgl/src/draw/lv_draw_line.h,556
#define LV_DRAW_LINE_HLV_DRAW_LINE_H7,59
    lv_color_t color;color26,362
    lv_coord_t width;width27,384
    lv_coord_t dash_width;dash_width28,406
    lv_coord_t dash_gap;dash_gap29,433
    lv_opa_t opa;opa30,458
    lv_blend_mode_t blend_mode  : 2;blend_mode31,476
    uint8_t round_start : 1;round_start32,513
    uint8_t round_end   : 1;round_end33,542
    uint8_t raw_end     : 1;    /*Do not bother with perpendicular line ending if it's not visible for any reason*/raw_end34,571
} lv_draw_line_dsc_t;lv_draw_line_dsc_t35,687

lib/lvgl/src/draw/lv_draw_arc.h,322
#define LV_DRAW_ARC_HLV_DRAW_ARC_H7,57
    lv_color_t color;color26,358
    lv_coord_t width;width27,380
    const void * img_src;img_src28,402
    lv_opa_t opa;opa29,428
    lv_blend_mode_t blend_mode  : 2;blend_mode30,446
    uint8_t rounded : 1;rounded31,483
} lv_draw_arc_dsc_t;lv_draw_arc_dsc_t32,508

lib/lvgl/src/draw/lv_draw.h,33
#define LV_DRAW_HLV_DRAW_H7,49

lib/lvgl/src/draw/lv_draw.mk,0

lib/lvgl/src/draw/lv_draw_triangle.c,260
void lv_draw_triangle(const lv_point_t points[], const lv_area_t * clip_area, const lv_draw_rect_dsc_t * draw_dsc)lv_draw_triangle43,821
void lv_draw_polygon(const lv_point_t points[], uint16_t point_cnt, const lv_area_t * clip_area,lv_draw_polygon62,1457

lib/lvgl/src/draw/lv_img_decoder.c,2567
#define CF_BUILT_IN_FIRST CF_BUILT_IN_FIRST18,312
#define CF_BUILT_IN_LAST CF_BUILT_IN_LAST19,359
    lv_fs_file_t f;f26,490
    lv_color_t * palette;palette27,510
    lv_opa_t * opa;opa28,536
} lv_img_decoder_built_in_data_t;lv_img_decoder_built_in_data_t29,556
void _lv_img_decoder_init(void)_lv_img_decoder_init56,1502
lv_res_t lv_img_decoder_get_info(const void * src, lv_img_header_t * header)lv_img_decoder_get_info83,2514
lv_res_t lv_img_decoder_open(lv_img_decoder_dsc_t * dsc, const void * src, lv_color_t color, int32_t frame_id)lv_img_decoder_open107,3143
lv_res_t lv_img_decoder_read_line(lv_img_decoder_dsc_t * dsc, lv_coord_t x, lv_coord_t y, lv_coord_t len, uint8_t * buf)lv_img_decoder_read_line176,5239
void lv_img_decoder_close(lv_img_decoder_dsc_t * dsc)lv_img_decoder_close188,5631
lv_img_decoder_t * lv_img_decoder_create(void)lv_img_decoder_create204,6009
void lv_img_decoder_delete(lv_img_decoder_t * decoder)lv_img_decoder_delete220,6381
void lv_img_decoder_set_info_cb(lv_img_decoder_t * decoder, lv_img_decoder_info_f_t info_cb)lv_img_decoder_set_info_cb231,6730
void lv_img_decoder_set_open_cb(lv_img_decoder_t * decoder, lv_img_decoder_open_f_t open_cb)lv_img_decoder_set_open_cb241,6995
void lv_img_decoder_set_read_line_cb(lv_img_decoder_t * decoder, lv_img_decoder_read_line_f_t read_line_cb)lv_img_decoder_set_read_line_cb251,7288
void lv_img_decoder_set_close_cb(lv_img_decoder_t * decoder, lv_img_decoder_close_f_t close_cb)lv_img_decoder_set_close_cb261,7645
lv_res_t lv_img_decoder_built_in_info(lv_img_decoder_t * decoder, const void * src, lv_img_header_t * header)lv_img_decoder_built_in_info273,8129
lv_res_t lv_img_decoder_built_in_open(lv_img_decoder_t * decoder, lv_img_decoder_dsc_t * dsc)lv_img_decoder_built_in_open326,10240
lv_res_t lv_img_decoder_built_in_read_line(lv_img_decoder_t * decoder, lv_img_decoder_dsc_t * dsc, lv_coord_t x,lv_img_decoder_built_in_read_line454,15628
void lv_img_decoder_built_in_close(lv_img_decoder_t * decoder, lv_img_decoder_dsc_t * dsc)lv_img_decoder_built_in_close490,17199
static lv_res_t lv_img_decoder_built_in_line_true_color(lv_img_decoder_dsc_t * dsc, lv_coord_t x, lv_coord_t y,lv_img_decoder_built_in_line_true_color511,17775
static lv_res_t lv_img_decoder_built_in_line_alpha(lv_img_decoder_dsc_t * dsc, lv_coord_t x, lv_coord_t y,lv_img_decoder_built_in_line_alpha536,18675
static lv_res_t lv_img_decoder_built_in_line_indexed(lv_img_decoder_dsc_t * dsc, lv_coord_t x, lv_coord_t y,lv_img_decoder_built_in_line_indexed627,22251

lib/lvgl/src/draw/lv_draw_label.c,1620
#define LABEL_RECOLOR_PAR_LENGTH LABEL_RECOLOR_PAR_LENGTH22,403
#define LV_LABEL_HINT_UPDATE_TH LV_LABEL_HINT_UPDATE_TH23,438
    CMD_STATE_WAIT,CMD_STATE_WAIT29,628
    CMD_STATE_PAR,CMD_STATE_PAR30,648
    CMD_STATE_IN,CMD_STATE_IN31,667
typedef uint8_t cmd_state_t;cmd_state_t33,688
const uint8_t _lv_bpp1_opa_table[2]  = {0, 255};          /*Opacity mapping with bpp = 1 (Just for compatibility)*/_lv_bpp1_opa_table60,1703
const uint8_t _lv_bpp2_opa_table[4]  = {0, 85, 170, 255}; /*Opacity mapping with bpp = 2*/_lv_bpp2_opa_table61,1819
const uint8_t _lv_bpp3_opa_table[8]  = {0, 36,  73, 109,   /*Opacity mapping with bpp = 3*/_lv_bpp3_opa_table63,1911
const uint8_t _lv_bpp4_opa_table[16] = {0,  17, 34,  51,  /*Opacity mapping with bpp = 4*/_lv_bpp4_opa_table67,2106
const uint8_t _lv_bpp8_opa_table[256] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,_lv_bpp8_opa_table73,2417
LV_ATTRIBUTE_FAST_MEM void lv_draw_label_dsc_init(lv_draw_label_dsc_t * dsc)lv_draw_label_dsc_init99,4423
LV_ATTRIBUTE_FAST_MEM void lv_draw_label(const lv_area_t * coords, const lv_area_t * mask,lv_draw_label121,5243
LV_ATTRIBUTE_FAST_MEM void lv_draw_letter(const lv_point_t * pos_p, const lv_area_t * clip_area,lv_draw_letter412,15677
LV_ATTRIBUTE_FAST_MEM static void draw_letter_normal(lv_coord_t pos_x, lv_coord_t pos_y, lv_font_glyph_dsc_t * g,draw_letter_normal470,17750
static void draw_letter_subpx(lv_coord_t pos_x, lv_coord_t pos_y, lv_font_glyph_dsc_t * g, const lv_area_t * clip_area,draw_letter_subpx630,23108
static uint8_t hex_char_to_num(char hex)hex_char_to_num841,30921

lib/lvgl/src/gpu/lv_gpu_sdl.h,39
#define LV_GPU_SDL_HLV_GPU_SDL_H7,55

lib/lvgl/src/gpu/lv_gpu_nxp_pxp_osa.c,476
    static SemaphoreHandle_t s_pxpIdle;s_pxpIdle67,1971
    static volatile bool s_pxpIdle;s_pxpIdle69,2017
void PXP_IRQHandler(void)PXP_IRQHandler83,2281
static lv_res_t _lv_gpu_nxp_pxp_interrupt_init(void)_lv_gpu_nxp_pxp_interrupt_init108,2804
static void _lv_gpu_nxp_pxp_interrupt_deinit(void)_lv_gpu_nxp_pxp_interrupt_deinit129,3237
static void _lv_gpu_nxp_pxp_run(void)_lv_gpu_nxp_pxp_run140,3488
lv_nxp_pxp_cfg_t pxp_default_cfg = {pxp_default_cfg160,3930

lib/lvgl/src/gpu/lv_gpu_nxp_pxp.c,1522
    #define PXP_OUT_PIXEL_FORMAT PXP_OUT_PIXEL_FORMAT55,1657
    #define PXP_AS_PIXEL_FORMAT PXP_AS_PIXEL_FORMAT56,1719
    #define PXP_PS_PIXEL_FORMAT PXP_PS_PIXEL_FORMAT57,1776
static bool colorKeyEnabled = false;colorKeyEnabled79,2481
static uint32_t colorKey = 0x0;colorKey80,2518
static bool recolorEnabled = false;recolorEnabled82,2551
static lv_color_t recolor = {.full = 0x0};recolor83,2587
static lv_opa_t recolorOpa = 0x0;recolorOpa84,2630
static lv_nxp_pxp_cfg_t pxp_cfg;pxp_cfg86,2665
lv_res_t lv_gpu_nxp_pxp_init(lv_nxp_pxp_cfg_t * cfg)lv_gpu_nxp_pxp_init102,3048
void lv_gpu_nxp_pxp_deinit(void)lv_gpu_nxp_pxp_deinit128,3833
void lv_gpu_nxp_pxp_fill(lv_color_t * dest_buf, lv_coord_t dest_width, const lv_area_t * fill_area, lv_color_t color,lv_gpu_nxp_pxp_fill144,4277
void lv_gpu_nxp_pxp_blit(lv_color_t * dest, lv_coord_t dest_width, const lv_color_t * src, lv_coord_t src_width,lv_gpu_nxp_pxp_blit222,8255
void lv_gpu_nxp_pxp_enable_color_key(void)lv_gpu_nxp_pxp_enable_color_key295,11437
void lv_gpu_nxp_pxp_disable_color_key(void)lv_gpu_nxp_pxp_disable_color_key304,11601
void lv_gpu_nxp_pxp_enable_recolor(lv_color_t color, lv_opa_t opa)lv_gpu_nxp_pxp_enable_recolor315,11836
void lv_gpu_nxp_pxp_disable_recolor(void)lv_gpu_nxp_pxp_disable_recolor326,12067
static void lv_gpu_nxp_pxp_run(void)lv_gpu_nxp_pxp_run341,12359
static void lv_gpu_nxp_pxp_blit_recolor(lv_color_t * dest, lv_coord_t dest_width, const lv_color_t * src,lv_gpu_nxp_pxp_blit_recolor367,13303

lib/lvgl/src/gpu/lv_gpu_nxp_vglite.h,1941
#define LV_SRC_LV_GPU_LV_GPU_NXP_VGLITE_H_LV_SRC_LV_GPU_LV_GPU_NXP_VGLITE_H_31,1243
#define LV_GPU_NXP_VG_LITE_FEATURE_DISABLED LV_GPU_NXP_VG_LITE_FEATURE_DISABLED47,1584
#define LV_GPU_NXP_VG_LITE_STRIDE_ALIGN_PX LV_GPU_NXP_VG_LITE_STRIDE_ALIGN_PX50,1706
#define LV_GPU_NXP_VG_LITE_FILL_SIZE_LIMIT LV_GPU_NXP_VG_LITE_FILL_SIZE_LIMIT54,1870
#define LV_GPU_NXP_VG_LITE_FILL_OPA_SIZE_LIMIT LV_GPU_NXP_VG_LITE_FILL_OPA_SIZE_LIMIT59,2044
#define LV_GPU_NXP_VG_LITE_BLIT_SIZE_LIMIT LV_GPU_NXP_VG_LITE_BLIT_SIZE_LIMIT64,2234
#define LV_GPU_NXP_VG_LITE_BUFF_SYNC_BLIT_SIZE_LIMIT LV_GPU_NXP_VG_LITE_BUFF_SYNC_BLIT_SIZE_LIMIT69,2434
#define LV_GPU_NXP_VG_LITE_BLIT_OPA_SIZE_LIMIT LV_GPU_NXP_VG_LITE_BLIT_OPA_SIZE_LIMIT74,2634
#define LV_GPU_NXP_VG_LITE_LOG_ERRORS LV_GPU_NXP_VG_LITE_LOG_ERRORS79,2789
    const lv_color_t * src;  /**< Source buffer pointer (must be aligned on 32 bytes)*/src91,2975
    lv_area_t src_area;      /**< Area to be copied from source*/src_area92,3063
    lv_coord_t src_width;    /**< Source buffer width*/src_width93,3129
    lv_coord_t src_height;   /**< Source buffer height*/src_height94,3185
    uint32_t src_stride;     /**< Source buffer stride in bytes (must be aligned on 16 px)*/src_stride95,3242
    const lv_color_t * dst;  /**< Destination buffer pointer (must be aligned on 32 bytes)*/dst97,3336
    lv_area_t dst_area;      /**< Target area in destination buffer (must be the same as src_area)*/dst_area98,3429
    lv_coord_t dst_width;    /**< Destination buffer width*/dst_width99,3530
    lv_coord_t dst_height;   /**< Destination buffer height*/dst_height100,3591
    uint32_t dst_stride;     /**< Destination buffer stride in bytes (must be aligned on 16 px)*/dst_stride101,3653
    lv_opa_t opa;            /**< Opacity - alpha mix (0 = source not copied, 255 = 100% opaque)*/opa103,3752
} lv_gpu_nxp_vglite_blit_info_t;lv_gpu_nxp_vglite_blit_info_t105,3852

lib/lvgl/src/gpu/lv_gpu.mk,0

lib/lvgl/src/gpu/sdl/lv_gpu_sdl_texture_cache.h,1375
#define LV_GPU_SDL_TEXTURE_CACHE_HLV_GPU_SDL_TEXTURE_CACHE_H7,83
#define LV_GPU_SDL_DEC_DSC_TEXTURE_HEAD LV_GPU_SDL_DEC_DSC_TEXTURE_HEAD28,458
    char head[8];head35,595
    SDL_Texture * texture;texture36,613
} lv_gpu_sdl_dec_dsc_userdata_t;lv_gpu_sdl_dec_dsc_userdata_t37,640
    LV_GPU_CACHE_KEY_MAGIC_ARC = 0x01,LV_GPU_CACHE_KEY_MAGIC_ARC40,689
    LV_GPU_CACHE_KEY_MAGIC_IMG = 0x11,LV_GPU_CACHE_KEY_MAGIC_IMG41,728
    LV_GPU_CACHE_KEY_MAGIC_LINE = 0x21,LV_GPU_CACHE_KEY_MAGIC_LINE42,767
    LV_GPU_CACHE_KEY_MAGIC_RECT_BG = 0x31,LV_GPU_CACHE_KEY_MAGIC_RECT_BG43,807
    LV_GPU_CACHE_KEY_MAGIC_RECT_SHADOW = 0x32,LV_GPU_CACHE_KEY_MAGIC_RECT_SHADOW44,850
    LV_GPU_CACHE_KEY_MAGIC_RECT_BORDER = 0x33,LV_GPU_CACHE_KEY_MAGIC_RECT_BORDER45,897
    LV_GPU_CACHE_KEY_MAGIC_FONT = 0x41,LV_GPU_CACHE_KEY_MAGIC_FONT46,944
    LV_GPU_CACHE_KEY_TEMP = 0xFF,LV_GPU_CACHE_KEY_TEMP47,984
} lv_gpu_cache_key_magic_t;lv_gpu_cache_key_magic_t48,1018
    LV_GPU_SDL_CACHE_FLAG_NONE = 0,LV_GPU_SDL_CACHE_FLAG_NONE51,1062
    LV_GPU_SDL_CACHE_FLAG_MANAGED = 1,LV_GPU_SDL_CACHE_FLAG_MANAGED52,1098
} lv_gpu_sdl_cache_flag_t;lv_gpu_sdl_cache_flag_t53,1137
    lv_gpu_cache_key_magic_t magic;magic56,1182
    lv_img_src_t type;type57,1218
    int32_t frame_id;frame_id58,1241
} lv_gpu_sdl_cache_key_head_img_t;lv_gpu_sdl_cache_key_head_img_t59,1263

lib/lvgl/src/gpu/sdl/lv_gpu_sdl_utils.h,51
#define LV_GPU_SDL_UTILS_HLV_GPU_SDL_UTILS_H6,66

lib/lvgl/src/gpu/sdl/lv_gpu_sdl_draw_blend.c,216
void _lv_blend_fill(const lv_area_t * clip_area, const lv_area_t * fill_area, lv_color_t color,_lv_blend_fill46,780
void _lv_blend_map(const lv_area_t * clip_area, const lv_area_t * map_area,_lv_blend_map84,2608

lib/lvgl/src/gpu/sdl/lv_gpu_sdl_draw_arc.c,374
    lv_gpu_cache_key_magic_t magic;magic37,661
    uint16_t radius;radius38,697
    uint16_t angle;angle39,718
    lv_coord_t width;width40,738
    uint8_t rounded;rounded41,760
} lv_draw_arc_key_t;lv_draw_arc_key_t42,781
void lv_draw_arc2(lv_coord_t center_x, lv_coord_t center_y, uint16_t radius, uint16_t start_angle, uint16_t end_angle,lv_draw_arc256,1011

lib/lvgl/src/gpu/sdl/lv_gpu_sdl_utils.c,1288
static SDL_Palette * lv_sdl_palette_grayscale1 = NULL;lv_sdl_palette_grayscale133,505
static SDL_Palette * lv_sdl_palette_grayscale2 = NULL;lv_sdl_palette_grayscale234,560
static SDL_Palette * lv_sdl_palette_grayscale3 = NULL;lv_sdl_palette_grayscale335,615
static SDL_Palette * lv_sdl_palette_grayscale4 = NULL;lv_sdl_palette_grayscale436,670
static SDL_Palette * lv_sdl_palette_grayscale8 = NULL;lv_sdl_palette_grayscale837,725
void _lv_gpu_sdl_utils_init()_lv_gpu_sdl_utils_init47,918
void _lv_gpu_sdl_utils_deinit()_lv_gpu_sdl_utils_deinit56,1378
void lv_area_to_sdl_rect(const lv_area_t * in, SDL_Rect * out)lv_area_to_sdl_rect65,1655
void lv_color_to_sdl_color(const lv_color_t * in, SDL_Color * out)lv_color_to_sdl_color73,1833
void lv_area_zoom_to_sdl_rect(const lv_area_t * in, SDL_Rect * out, uint16_t zoom, const lv_point_t * pivot)lv_area_zoom_to_sdl_rect83,2139
double lv_sdl_round(double d)lv_sdl_round99,2590
SDL_Palette * lv_sdl_alloc_palette_for_bpp(const uint8_t * mapping, uint8_t bpp)lv_sdl_alloc_palette_for_bpp104,2687
SDL_Palette * lv_sdl_get_grayscale_palette(uint8_t bpp)lv_sdl_get_grayscale_palette118,3156
void lv_sdl_to_8bpp(uint8_t * dest, const uint8_t * src, int width, int height, int stride, uint8_t bpp)lv_sdl_to_8bpp135,3568

lib/lvgl/src/gpu/sdl/lv_gpu_sdl_mask.c,691
SDL_Surface * lv_sdl_create_mask_surface(lv_opa_t * pixels, lv_coord_t width, lv_coord_t height, lv_coord_t stride)lv_sdl_create_mask_surface44,701
SDL_Texture * lv_sdl_create_mask_texture(SDL_Renderer * renderer, lv_opa_t * pixels, lv_coord_t width,lv_sdl_create_mask_texture53,1137
lv_opa_t * lv_draw_mask_dump(const lv_area_t * coords, const int16_t * ids, int16_t ids_count)lv_draw_mask_dump62,1538
SDL_Surface * lv_sdl_apply_mask_surface(const lv_area_t * coords, const int16_t * ids, int16_t ids_count)lv_sdl_apply_mask_surface86,2444
SDL_Texture * lv_sdl_gen_mask_texture(SDL_Renderer * renderer, const lv_area_t * coords, const int16_t * ids,lv_sdl_gen_mask_texture95,2795

lib/lvgl/src/gpu/sdl/lv_gpu_sdl_draw_label.c,1116
typedef struct lv_sdl_font_atlas_t {lv_sdl_font_atlas_t33,574
    SDL_Rect * pos;pos34,611
} lv_sdl_font_atlas_t;lv_sdl_font_atlas_t35,631
    lv_gpu_cache_key_magic_t magic;magic38,672
    const lv_font_t * font_p;font_p39,708
    uint32_t cmap_index;cmap_index40,738
} lv_font_key_t;lv_font_key_t41,763
void lv_draw_letter(const lv_point_t * pos_p, const lv_area_t * clip_area,lv_draw_letter74,1816
static void draw_letter_masked(SDL_Renderer * renderer, SDL_Texture * atlas, SDL_Rect * src, SDL_Rect * dst,draw_letter_masked154,4806
SDL_Texture * font_atlas_bake(SDL_Renderer * renderer, const lv_font_t * font_p, uint32_t cmap_idx,font_atlas_bake195,6721
static void font_atlas_free(lv_sdl_font_atlas_t * atlas)font_atlas_free266,9479
static bool font_cmap_find_index(const lv_font_fmt_txt_dsc_t * dsc, uint32_t letter, uint32_t * cmap_index,font_cmap_find_index274,9619
static int32_t unicode_list_compare(const void * ref, const void * element)unicode_list_compare316,11226
static lv_font_key_t font_key_create(const lv_font_t * font_p, uint32_t cmap_index)font_key_create321,11387

lib/lvgl/src/gpu/sdl/lv_gpu_sdl_texture_cache.c,1640
    SDL_Texture * texture;texture29,463
    void * userdata;userdata30,490
    lv_lru_free_t * userdata_free;userdata_free31,511
    lv_gpu_sdl_cache_flag_t flags;flags32,546
} draw_cache_value_t;draw_cache_value_t33,581
    lv_gpu_cache_key_magic_t magic;magic36,621
} temp_texture_key_t;temp_texture_key_t37,657
    lv_coord_t width, height;width40,697
    lv_coord_t width, height;height40,697
} temp_texture_userdata_t;temp_texture_userdata_t41,727
static lv_lru_t * lv_sdl_texture_cache;lv_sdl_texture_cache53,956
void _lv_gpu_sdl_texture_cache_init()_lv_gpu_sdl_texture_cache_init63,1134
void _lv_gpu_sdl_texture_cache_deinit()_lv_gpu_sdl_texture_cache_deinit69,1325
SDL_Texture * lv_gpu_draw_cache_get(const void * key, size_t key_length, bool * found)lv_gpu_draw_cache_get74,1409
SDL_Texture * lv_gpu_draw_cache_get_with_userdata(const void * key, size_t key_length, bool * found, void ** userdata)lv_gpu_draw_cache_get_with_userdata79,1579
void lv_gpu_draw_cache_put(const void * key, size_t key_length, SDL_Texture * texture)lv_gpu_draw_cache_put100,2080
void lv_gpu_draw_cache_put_advanced(const void * key, size_t key_length, SDL_Texture * texture, void * userdata,lv_gpu_draw_cache_put_advanced105,2249
SDL_Texture * lv_gpu_temp_texture_obtain(SDL_Renderer * renderer, lv_coord_t width, lv_coord_t height)lv_gpu_temp_texture_obtain132,3436
lv_gpu_sdl_cache_key_head_img_t * lv_gpu_sdl_img_cache_key_create(const void * src, int32_t frame_id, size_t * size)lv_gpu_sdl_img_cache_key_create150,4250
static void draw_cache_free_value(draw_cache_value_t * value)draw_cache_free_value183,5485

lib/lvgl/src/gpu/sdl/lv_gpu_sdl_draw_rect.c,2981
    lv_gpu_cache_key_magic_t magic;magic32,579
    lv_coord_t radius;radius33,615
    lv_coord_t size;size34,638
} lv_draw_rect_bg_key_t;lv_draw_rect_bg_key_t35,659
    lv_gpu_cache_key_magic_t magic;magic38,702
    lv_coord_t radius;radius39,738
    lv_coord_t size;size40,761
    lv_coord_t blur;blur41,782
} lv_draw_rect_shadow_key_t;lv_draw_rect_shadow_key_t42,803
    lv_gpu_cache_key_magic_t magic;magic45,850
    lv_coord_t rout, rin;rout46,886
    lv_coord_t rout, rin;rin46,886
    lv_coord_t thickness;thickness47,912
    lv_coord_t size;size48,938
    lv_border_side_t side;side49,959
} lv_draw_rect_border_key_t;lv_draw_rect_border_key_t50,986
#define SKIP_BORDER(SKIP_BORDER101,3330
#define SKIP_SHADOW(SKIP_SHADOW102,3484
#define SKIP_IMAGE(SKIP_IMAGE103,3686
#define SKIP_OUTLINE(SKIP_OUTLINE104,3773
void lv_draw_rect(const lv_area_t * coords, const lv_area_t * clip, const lv_draw_rect_dsc_t * dsc)lv_draw_rect110,3936
static void draw_bg_color(SDL_Renderer * renderer, const lv_area_t * coords, const lv_draw_rect_dsc_t * dsc)draw_bg_color141,4877
static void draw_bg_img(const lv_area_t * coords, const lv_area_t * clip, const lv_draw_rect_dsc_t * dsc)draw_bg_img184,7058
static void draw_shadow(SDL_Renderer * renderer, const lv_area_t * coords, const lv_area_t * clip,draw_shadow256,9956
static void draw_border(SDL_Renderer * renderer, const lv_area_t * coords, const lv_draw_rect_dsc_t * dsc)draw_border332,13354
static void draw_outline(const lv_area_t * coords, const lv_area_t * clip, const lv_draw_rect_dsc_t * dsc)draw_outline380,15664
static void draw_border_generic(const lv_area_t * outer_area, const lv_area_t * inner_area, lv_coord_t rout,draw_border_generic422,17030
static void draw_border_simple(const lv_area_t * outer_area, const lv_area_t * inner_area, lv_color_t color,draw_border_simple484,19726
static void frag_render_corners(SDL_Renderer * renderer, SDL_Texture * frag, lv_coord_t frag_size,frag_render_corners521,21050
static void frag_render_borders(SDL_Renderer * renderer, SDL_Texture * frag, lv_coord_t frag_size,frag_render_borders544,22281
frag_render_center(SDL_Renderer * renderer, SDL_Texture * frag, lv_coord_t frag_size, const lv_area_t * coords)frag_render_center599,24289
static void draw_rect_masked(const lv_area_t * coords, const lv_area_t * clip, const lv_draw_rect_dsc_t * dsc)draw_rect_masked610,24794
static void draw_rect_masked_simple(const lv_area_t * coords, const lv_area_t * mask, const lv_draw_rect_dsc_t * dsc)draw_rect_masked_simple671,27426
static lv_draw_rect_bg_key_t rect_bg_key_create(lv_coord_t radius, lv_coord_t size)rect_bg_key_create697,28389
static lv_draw_rect_shadow_key_t rect_shadow_key_create(lv_coord_t radius, lv_coord_t size, lv_coord_t blur)rect_shadow_key_create707,28657
static lv_draw_rect_border_key_t rect_border_key_create(lv_coord_t rout, lv_coord_t rin, lv_coord_t thickness,rect_border_key_create718,28979

lib/lvgl/src/gpu/sdl/lv_gpu_sdl_stack_blur.h,61
#define LV_GPU_SDL_STACK_BLUR_HLV_GPU_SDL_STACK_BLUR_H6,76

lib/lvgl/src/gpu/sdl/lv_gpu_sdl_draw_img.c,364
void lv_draw_img(const lv_area_t * coords, const lv_area_t * mask, const void * src,lv_draw_img48,905
static SDL_Texture * upload_img_texture(SDL_Renderer * renderer, lv_img_decoder_dsc_t * dsc)upload_img_texture125,4071
static SDL_Texture * upload_img_texture_fallback(SDL_Renderer * renderer, lv_img_decoder_dsc_t * dsc)upload_img_texture_fallback149,5011

lib/lvgl/src/gpu/sdl/lv_gpu_sdl_stack_blur.c,397
static unsigned short const stackblur_mul[255] = {stackblur_mul34,747
static unsigned char const stackblur_shr[255] = {stackblur_shr53,2140
void lv_stack_blur_grayscale(lv_opa_t * buf, uint16_t w, uint16_t h, uint16_t r)lv_stack_blur_grayscale80,3413
static void stack_blur_job(lv_opa_t * src, unsigned int w, unsigned int h, unsigned int radius, int cores, int core,stack_blur_job90,3657

lib/lvgl/src/gpu/sdl/lv_gpu_sdl.mk,0

lib/lvgl/src/gpu/sdl/lv_gpu_sdl_lru.h,1272
#define LV_LRU_HLV_LRU_H7,55
    LV_LRU_NO_ERROR = 0,LV_LRU_NO_ERROR34,435
    LV_LRU_MISSING_CACHE,LV_LRU_MISSING_CACHE35,460
    LV_LRU_MISSING_KEY,LV_LRU_MISSING_KEY36,486
    LV_LRU_MISSING_VALUE,LV_LRU_MISSING_VALUE37,510
    LV_LRU_LOCK_ERROR,LV_LRU_LOCK_ERROR38,536
    LV_LRU_VALUE_TOO_LARGELV_LRU_VALUE_TOO_LARGE39,559
} lruc_error;lruc_error40,586
typedef void (lv_lru_free_t)(void * v);lv_lru_free_t42,601
typedef struct lruc_item {lruc_item44,642
    void * value;value45,669
    void * key;key46,687
    size_t value_length;value_length47,703
    size_t key_length;key_length48,728
    uint64_t access_count;access_count49,751
    struct lruc_item * next;next50,778
} lruc_item;lruc_item51,807
    lruc_item ** items;items54,838
    uint64_t access_count;access_count55,862
    uint64_t free_memory;free_memory56,889
    uint64_t total_memory;total_memory57,915
    uint64_t average_item_length;average_item_length58,942
    uint32_t hash_table_size;hash_table_size59,976
    time_t seed;seed60,1006
    lv_lru_free_t * value_free;value_free61,1023
    lv_lru_free_t * key_free;key_free62,1055
    lruc_item * free_items;free_items63,1085
    SDL_mutex * mutex;mutex64,1113
} lv_lru_t;lv_lru_t65,1136

lib/lvgl/src/gpu/sdl/lv_gpu_sdl_mask.h,49
#define LV_GPU_SDL_MASK_HLV_GPU_SDL_MASK_H7,65

lib/lvgl/src/gpu/sdl/lv_gpu_sdl_draw_line.c,404
    lv_gpu_cache_key_magic_t magic;magic36,624
    lv_coord_t length;length37,660
    lv_coord_t thickness;thickness38,683
} lv_draw_line_key_t;lv_draw_line_key_t39,709
void lv_draw_line2(const lv_point_t * point1, const lv_point_t * point2, const lv_area_t * clip,lv_draw_line255,1025
static lv_draw_line_key_t line_key_create(lv_coord_t length, lv_coord_t thickness)line_key_create146,5059

lib/lvgl/src/gpu/sdl/lv_gpu_sdl_lru.c,1423
#define error_for(error_for63,1446
#define test_for_missing_cache(test_for_missing_cache64,1515
#define test_for_missing_key(test_for_missing_key65,1593
#define test_for_missing_value(test_for_missing_value66,1667
#define test_for_value_too_large(test_for_value_too_large67,1766
#define lock_cache(lock_cache70,1894
#define unlock_cache(unlock_cache75,2058
lv_lru_t * lv_lru_new(uint64_t cache_size, uint32_t average_length, lv_lru_free_t * value_free,lv_lru_new85,2298
lruc_error lv_lru_free(lv_lru_t * cache)lv_lru_free122,3556
lruc_error lv_lru_set(lv_lru_t * cache, const void * key, size_t key_length, void * value, size_t value_length)lv_lru_set163,4535
lruc_error lv_lru_get(lv_lru_t * cache, const void * key, size_t key_size, void ** value)lv_lru_get218,6144
lruc_error lv_lru_delete(lv_lru_t * cache, const void * key, size_t key_size)lv_lru_delete243,6779
static uint32_t lv_lru_hash(lv_lru_t * cache, const void * key, uint32_t key_length)lv_lru_hash271,7471
static int lv_lru_cmp_keys(lruc_item * item, const void * key, uint32_t key_length)lv_lru_cmp_keys306,8185
static void lv_lru_remove_item(lv_lru_t * cache, lruc_item * prev, lruc_item * item, uint32_t hash_index)lv_lru_remove_item314,8391
static void lv_lru_remove_lru_item(lv_lru_t * cache)lv_lru_remove_lru_item332,8939
static lruc_item * lv_lru_pop_or_create_item(lv_lru_t * cache)lv_lru_pop_or_create_item359,9689

lib/lvgl/src/gpu/lv_gpu_nxp_pxp.h,851
#define LV_SRC_LV_GPU_LV_GPU_NXP_PXP_H_LV_SRC_LV_GPU_LV_GPU_NXP_PXP_H_31,1237
#define LV_GPU_NXP_PXP_ID LV_GPU_NXP_PXP_ID49,1540
#define LV_GPU_NXP_PXP_IRQ_ID LV_GPU_NXP_PXP_IRQ_ID52,1598
#define LV_GPU_NXP_PXP_BLIT_SIZE_LIMIT LV_GPU_NXP_PXP_BLIT_SIZE_LIMIT56,1762
#define LV_GPU_NXP_PXP_BLIT_OPA_SIZE_LIMIT LV_GPU_NXP_PXP_BLIT_OPA_SIZE_LIMIT61,1940
#define LV_GPU_NXP_PXP_BUFF_SYNC_BLIT_SIZE_LIMIT LV_GPU_NXP_PXP_BUFF_SYNC_BLIT_SIZE_LIMIT66,2132
#define LV_GPU_NXP_PXP_FILL_SIZE_LIMIT LV_GPU_NXP_PXP_FILL_SIZE_LIMIT71,2300
#define LV_GPU_NXP_PXP_FILL_OPA_SIZE_LIMIT LV_GPU_NXP_PXP_FILL_OPA_SIZE_LIMIT76,2462
    lv_res_t (*pxp_interrupt_init)(void);pxp_interrupt_init88,2744
    void (*pxp_interrupt_deinit)(void);pxp_interrupt_deinit91,2842
    void (*pxp_run)(void);pxp_run94,2956
} lv_nxp_pxp_cfg_t;lv_nxp_pxp_cfg_t95,2983

lib/lvgl/src/gpu/lv_gpu_stm32_dma2d.c,976
    #define LV_DMA2D_COLOR_FORMAT LV_DMA2D_COLOR_FORMAT31,603
    #define LV_DMA2D_COLOR_FORMAT LV_DMA2D_COLOR_FORMAT33,680
void lv_gpu_stm32_dma2d_init(void)lv_gpu_stm32_dma2d_init63,1294
void lv_gpu_stm32_dma2d_fill(lv_color_t * buf, lv_coord_t buf_w, lv_color_t color, lv_coord_t fill_w, lv_coord_t fill_h)lv_gpu_stm32_dma2d_fill94,2157
void lv_gpu_stm32_dma2d_fill_mask(lv_color_t * buf, lv_coord_t buf_w, lv_color_t color, const lv_opa_t * mask,lv_gpu_stm32_dma2d_fill_mask122,3257
void lv_gpu_stm32_dma2d_copy(lv_color_t * buf, lv_coord_t buf_w, const lv_color_t * map, lv_coord_t map_w,lv_gpu_stm32_dma2d_copy167,5008
void lv_gpu_stm32_dma2d_blend(lv_color_t * buf, lv_coord_t buf_w, const lv_color_t * map, lv_opa_t opa,lv_gpu_stm32_dma2d_blend197,6125
void lv_gpu_stm32_dma2d_wait_cb(lv_disp_drv_t * drv)lv_gpu_stm32_dma2d_wait_cb224,7051
static void invalidate_cache(void)invalidate_cache240,7370
static void wait_finish(void)wait_finish252,7686

lib/lvgl/src/gpu/lv_gpu_nxp_vglite.c,1604
    #define VGLITE_PX_FMT VGLITE_PX_FMT50,1567
#define RT595_BLIT_WRKRND_ENABLED RT595_BLIT_WRKRND_ENABLED56,1755
#define RT595_BLIT_WRKRND_THR RT595_BLIT_WRKRND_THR59,1885
#define BLIT_DBG_VERBOSE BLIT_DBG_VERBOSE62,1986
#define BLIT_DBG_AREAS BLIT_DBG_AREAS65,2054
#define PRINT PRINT68,2117
    #define PRINT_BLT PRINT_BLT72,2186
    #define PRINT_BLT(PRINT_BLT74,2221
#define _BLIT_SPLIT_ENABLED _BLIT_SPLIT_ENABLED82,2561
#define _BLIT_SPLIT_ENABLED _BLIT_SPLIT_ENABLED84,2597
#define LV_GPU_NXP_VG_LITE_BLIT_SPLIT_THR LV_GPU_NXP_VG_LITE_BLIT_SPLIT_THR90,2792
#define CHECK(CHECK124,3880
lv_res_t lv_gpu_nxp_vglite_fill(lv_color_t * dest_buf, lv_coord_t dest_width, lv_coord_t dest_height,lv_gpu_nxp_vglite_fill147,4762
lv_res_t lv_gpu_nxp_vglite_blit(lv_gpu_nxp_vglite_blit_info_t * blit)lv_gpu_nxp_vglite_blit268,9107
static lv_res_t _lv_gpu_nxp_vglite_blit_single(lv_gpu_nxp_vglite_blit_info_t * blit)_lv_gpu_nxp_vglite_blit_single446,17104
static lv_res_t _init_vg_buf(vg_lite_buffer_t * dst, uint32_t width, uint32_t height, uint32_t stride,_init_vg_buf540,20264
static void _sw_blit(lv_gpu_nxp_vglite_blit_info_t * blit)_sw_blit586,21705
static lv_res_t _lv_gpu_nxp_vglite_check_blit(lv_gpu_nxp_vglite_blit_info_t * blit)_lv_gpu_nxp_vglite_check_blit624,22862
static void _align_x(lv_area_t * area, lv_color_t ** buf)_align_x685,25349
static void _align_y(lv_area_t * area, lv_color_t ** buf, uint32_t stridePx)_align_y702,25900
static void _draw_rectangle(lv_color_t * dest_buf, lv_coord_t dest_width, lv_coord_t dest_height,_draw_rectangle732,27059

lib/lvgl/src/gpu/lv_gpu_stm32_dma2d.h,307
#define LV_GPU_STM32_DMA2D_HLV_GPU_STM32_DMA2D_H7,71
#define LV_DMA2D_ARGB8888 LV_DMA2D_ARGB888824,361
#define LV_DMA2D_RGB888 LV_DMA2D_RGB88825,389
#define LV_DMA2D_RGB565 LV_DMA2D_RGB56526,415
#define LV_DMA2D_ARGB1555 LV_DMA2D_ARGB155527,441
#define LV_DMA2D_ARGB4444 LV_DMA2D_ARGB444428,469

lib/lvgl/src/gpu/lv_gpu_nxp_pxp_osa.h,88
#define LV_SRC_LV_GPU_LV_GPU_NXP_PXP_OSA_H_LV_SRC_LV_GPU_LV_GPU_NXP_PXP_OSA_H_31,1245

lib/lvgl/src/gpu/lv_gpu_sdl.c,96
void lv_gpu_sdl_init()lv_gpu_sdl_init43,666
void lv_gpu_sdl_deinit()lv_gpu_sdl_deinit49,762

lib/lvgl/src/hal/lv_hal.h,103
#define LV_HAL_HLV_HAL_H7,47
#define _LV_DPX_CALC(_LV_DPX_CALC29,582
#define LV_DPX(LV_DPX30,689

lib/lvgl/src/hal/lv_hal_tick.h,101
#define LV_HAL_TICK_HLV_HAL_TICK_H7,121
#define LV_ATTRIBUTE_TICK_INCLV_ATTRIBUTE_TICK_INC25,417

lib/lvgl/src/hal/lv_hal_disp.c,2975
static lv_disp_t * disp_def;disp_def58,1888
void lv_disp_drv_init(lv_disp_drv_t * driver)lv_disp_drv_init74,2285
void lv_disp_draw_buf_init(lv_disp_draw_buf_t * draw_buf, void * buf1, void * buf2, uint32_t size_in_px_cnt)lv_disp_draw_buf_init105,3681
lv_disp_t * lv_disp_drv_register(lv_disp_drv_t * driver)lv_disp_drv_register121,4244
void lv_disp_drv_update(lv_disp_t * disp, lv_disp_drv_t * new_drv)lv_disp_drv_update191,6772
void lv_disp_remove(lv_disp_t * disp)lv_disp_remove232,8300
void lv_disp_set_default(lv_disp_t * disp)lv_disp_set_default272,9354
lv_disp_t * lv_disp_get_default(void)lv_disp_get_default281,9500
lv_coord_t lv_disp_get_hor_res(lv_disp_t * disp)lv_disp_get_hor_res291,9740
lv_coord_t lv_disp_get_ver_res(lv_disp_t * disp)lv_disp_get_ver_res314,10312
lv_coord_t lv_disp_get_physical_hor_res(lv_disp_t * disp)lv_disp_get_physical_hor_res337,10920
lv_coord_t lv_disp_get_physical_ver_res(lv_disp_t * disp)lv_disp_get_physical_ver_res360,11673
lv_coord_t lv_disp_get_offset_x(lv_disp_t * disp)lv_disp_get_offset_x383,12428
lv_coord_t lv_disp_get_offset_y(lv_disp_t * disp)lv_disp_get_offset_y409,13237
bool lv_disp_get_antialiasing(lv_disp_t * disp)lv_disp_get_antialiasing435,14035
lv_coord_t lv_disp_get_dpi(const lv_disp_t * disp)lv_disp_get_dpi448,14367
LV_ATTRIBUTE_FLUSH_READY void lv_disp_flush_ready(lv_disp_drv_t * disp_drv)lv_disp_flush_ready459,14774
LV_ATTRIBUTE_FLUSH_READY bool lv_disp_flush_is_last(lv_disp_drv_t * disp_drv)lv_disp_flush_is_last478,15522
lv_disp_t * lv_disp_get_next(lv_disp_t * disp)lv_disp_get_next488,15849
lv_disp_draw_buf_t * lv_disp_get_draw_buf(lv_disp_t * disp)lv_disp_get_draw_buf501,16180
void lv_disp_set_rotation(lv_disp_t * disp, lv_disp_rot_t rotation)lv_disp_set_rotation511,16429
lv_disp_rot_t lv_disp_get_rotation(lv_disp_t * disp)lv_disp_get_rotation525,16814
void lv_disp_drv_use_generic_set_px_cb(lv_disp_drv_t * disp_drv, lv_img_cf_t cf)lv_disp_drv_use_generic_set_px_cb532,17003
static lv_obj_tree_walk_res_t invalidate_layout_cb(lv_obj_t * obj, void * user_data)invalidate_layout_cb559,17784
static void set_px_cb_alpha1(lv_disp_drv_t * disp_drv, uint8_t * buf, lv_coord_t buf_w, lv_coord_t x, lv_coord_t y,set_px_cb_alpha1566,17972
static void set_px_cb_alpha2(lv_disp_drv_t * disp_drv, uint8_t * buf, lv_coord_t buf_w, lv_coord_t x, lv_coord_t y,set_px_cb_alpha2580,18372
static void set_px_cb_alpha4(lv_disp_drv_t * disp_drv, uint8_t * buf, lv_coord_t buf_w, lv_coord_t x, lv_coord_t y,set_px_cb_alpha4594,18772
static void set_px_cb_alpha8(lv_disp_drv_t * disp_drv, uint8_t * buf, lv_coord_t buf_w, lv_coord_t x, lv_coord_t y,set_px_cb_alpha8608,19172
static void set_px_alpha_generic(lv_img_dsc_t * d, lv_coord_t x, lv_coord_t y, lv_color_t color, lv_opa_t opa)set_px_alpha_generic622,19572
static void set_px_true_color_alpha(lv_disp_drv_t * disp_drv, uint8_t * buf, lv_coord_t buf_w, lv_coord_t x,set_px_true_color_alpha636,20010

lib/lvgl/src/hal/lv_hal_tick.c,298
static uint32_t sys_time = 0;sys_time32,570
static volatile uint8_t tick_irq_flag;tick_irq_flag33,600
LV_ATTRIBUTE_TICK_INC void lv_tick_inc(uint32_t tick_period)lv_tick_inc49,930
uint32_t lv_tick_get(void)lv_tick_get60,1146
uint32_t lv_tick_elaps(uint32_t prev_tick)lv_tick_elaps86,1947

lib/lvgl/src/hal/lv_hal_disp.h,5402
#define LV_HAL_DISP_HLV_HAL_DISP_H9,117
#define LV_INV_BUF_SIZE LV_INV_BUF_SIZE31,541
#define LV_ATTRIBUTE_FLUSH_READYLV_ATTRIBUTE_FLUSH_READY35,643
typedef struct _lv_disp_draw_buf_t {_lv_disp_draw_buf_t50,893
    void * buf1; /**< First display buffer.*/buf151,930
    void * buf2; /**< Second display buffer.*/buf252,976
    void * buf_act;buf_act55,1062
    uint32_t size; /*In pixel count*/size56,1082
    lv_area_t area;area57,1120
    volatile int flushing;flushing59,1273
    volatile int flushing_last;flushing_last61,1440
    volatile uint32_t last_area         : 1; /*1: the last area is being rendered*/last_area62,1472
    volatile uint32_t last_part         : 1; /*1: the last part of the current area is being rendered*/last_part63,1556
} lv_disp_draw_buf_t;lv_disp_draw_buf_t64,1660
    LV_DISP_ROT_NONE = 0,LV_DISP_ROT_NONE67,1698
    LV_DISP_ROT_90,LV_DISP_ROT_9068,1724
    LV_DISP_ROT_180,LV_DISP_ROT_18069,1744
    LV_DISP_ROT_270LV_DISP_ROT_27070,1765
} lv_disp_rot_t;lv_disp_rot_t71,1785
typedef struct _lv_disp_drv_t {_lv_disp_drv_t78,2000
    lv_coord_t hor_res;         /**< Horizontal resolution.*/hor_res80,2033
    lv_coord_t ver_res;         /**< Vertical resolution.*/ver_res81,2095
    lv_coord_t physical_hor_res;     /**< Horizontal resolution of the full / physical display. Set to -1 for fullscreen mode.*/physical_hor_res83,2156
    lv_coord_t physical_ver_res;     /**< Vertical resolution of the full / physical display. Set to -1 for fullscreen mode.*/physical_ver_res84,2285
    lv_coord_t offset_x;             /**< Horizontal offset from the full / physical display. Set to 0 for fullscreen mode.*/offset_x85,2412
    lv_coord_t offset_y;             /**< Vertical offset from the full / physical display. Set to 0 for fullscreen mode.*/offset_y86,2538
    lv_disp_draw_buf_t * draw_buf;draw_buf90,2802
    uint32_t direct_mode : 1;        /**< 1: Use screen-sized buffers and draw to absolute coordinates*/direct_mode92,2838
    uint32_t full_refresh : 1;       /**< 1: Always make the whole screen redrawn*/full_refresh93,2943
    uint32_t sw_rotate : 1;          /**< 1: use software rotation (slower)*/sw_rotate94,3027
    uint32_t antialiasing : 1;       /**< 1: anti-aliasing is enabled on this display.*/antialiasing95,3105
    uint32_t rotated : 2;            /**< 1: turn the display by 90 degree. @warning Does not update coordinates for you!*/rotated96,3194
    uint32_t screen_transp : 1;      /**Handle if the screen doesn't have a solid (opa == LV_OPA_COVER) background.screen_transp97,3318
    uint32_t dpi : 10;              /** DPI (dot per inch) of the display. Default value is `LV_DPI_DEF`.*/dpi100,3520
    void (*flush_cb)(struct _lv_disp_drv_t * disp_drv, const lv_area_t * area, lv_color_t * color_p);flush_cb104,3765
    void (*rounder_cb)(struct _lv_disp_drv_t * disp_drv, lv_area_t * area);rounder_cb108,4024
    void (*set_px_cb)(struct _lv_disp_drv_t * disp_drv, uint8_t * buf, lv_coord_t buf_w, lv_coord_t x, lv_coord_t y,set_px_cb113,4358
    void (*monitor_cb)(struct _lv_disp_drv_t * disp_drv, uint32_t time, uint32_t px);monitor_cb118,4662
    void (*wait_cb)(struct _lv_disp_drv_t * disp_drv);wait_cb123,4937
    void (*clean_dcache_cb)(struct _lv_disp_drv_t * disp_drv);clean_dcache_cb126,5087
    void (*gpu_wait_cb)(struct _lv_disp_drv_t * disp_drv);gpu_wait_cb129,5211
    void (*drv_update_cb)(struct _lv_disp_drv_t * disp_drv);drv_update_cb132,5334
    void (*gpu_fill_cb)(struct _lv_disp_drv_t * disp_drv, lv_color_t * dest_buf, lv_coord_t dest_width,gpu_fill_cb135,5454
    lv_color_t color_chroma_key;color_chroma_key140,5749
    void * user_data; /**< Custom display driver user data*/user_data143,5804
} lv_disp_drv_t;lv_disp_drv_t146,5873
typedef struct _lv_disp_t {_lv_disp_t152,5991
    struct _lv_disp_drv_t * driver;driver154,6052
    lv_timer_t * refr_timer;refr_timer157,6169
    struct _lv_theme_t * theme;theme160,6243
    struct _lv_obj_t ** screens;    /**< Array of screen objects.*/screens163,6309
    struct _lv_obj_t * act_scr;     /**< Currently active screen on this display*/act_scr164,6377
    struct _lv_obj_t * prev_scr;    /**< Previous screen. Used during screen animations*/prev_scr165,6460
    struct _lv_obj_t * scr_to_load; /**< The screen prepared to load in lv_scr_load_anim*/scr_to_load166,6550
    struct _lv_obj_t * top_layer;   /**< @see lv_disp_get_layer_top*/top_layer167,6641
    struct _lv_obj_t * sys_layer;   /**< @see lv_disp_get_layer_sys*/sys_layer168,6711
    uint32_t screen_cnt;screen_cnt169,6781
uint8_t del_prev  :del_prev170,6806
    lv_opa_t bg_opa;                /**<Opacity of the background color or wallpaper*/bg_opa173,6934
    lv_color_t bg_color;            /**< Default display color when screens are transparent*/bg_color174,7021
    const void * bg_img;            /**< An image source to display as wallpaper*/bg_img175,7115
    void (*bg_fn)(lv_area_t*);/**< A function to handle drawing*/bg_fn176,7198
    lv_area_t inv_areas[LV_INV_BUF_SIZE];inv_areas179,7312
    uint8_t inv_area_joined[LV_INV_BUF_SIZE];inv_area_joined180,7354
    uint16_t inv_p;inv_p181,7400
    uint32_t last_activity_time;        /**< Last time when there was activity on this display*/last_activity_time184,7448
} lv_disp_t;lv_disp_t185,7545

lib/lvgl/src/hal/lv_hal_indev.c,518
    #define INDEV_TRACE(INDEV_TRACE42,754
    #define INDEV_TRACE(INDEV_TRACE44,815
void lv_indev_drv_init(lv_indev_drv_t * driver)lv_indev_drv_init57,1160
lv_indev_t * lv_indev_drv_register(lv_indev_drv_t * driver)lv_indev_drv_register76,1982
void lv_indev_drv_update(lv_indev_t * indev, lv_indev_drv_t * new_drv)lv_indev_drv_update107,2860
lv_indev_t * lv_indev_get_next(lv_indev_t * indev)lv_indev_get_next118,3187
void _lv_indev_read(lv_indev_t * indev, lv_indev_data_t * data)_lv_indev_read131,3538

lib/lvgl/src/hal/lv_hal.mk,0

lib/lvgl/src/hal/lv_hal_indev.h,5291
#define LV_HAL_INDEV_HLV_HAL_INDEV_H9,123
#define LV_INDEV_DEF_SCROLL_LIMIT LV_INDEV_DEF_SCROLL_LIMIT30,479
#define LV_INDEV_DEF_SCROLL_THROW LV_INDEV_DEF_SCROLL_THROW33,592
#define LV_INDEV_DEF_LONG_PRESS_TIME LV_INDEV_DEF_LONG_PRESS_TIME37,716
#define LV_INDEV_DEF_LONG_PRESS_REP_TIME LV_INDEV_DEF_LONG_PRESS_REP_TIME41,855
#define LV_INDEV_DEF_GESTURE_LIMIT LV_INDEV_DEF_GESTURE_LIMIT45,935
#define LV_INDEV_DEF_GESTURE_MIN_VELOCITY LV_INDEV_DEF_GESTURE_MIN_VELOCITY48,1039
    LV_INDEV_TYPE_NONE,    /**< Uninitialized state*/LV_INDEV_TYPE_NONE63,1303
    LV_INDEV_TYPE_POINTER, /**< Touch pad, mouse, external button*/LV_INDEV_TYPE_POINTER64,1357
    LV_INDEV_TYPE_KEYPAD,  /**< Keypad or keyboard*/LV_INDEV_TYPE_KEYPAD65,1425
    LV_INDEV_TYPE_BUTTON,  /**< External (hardware button) which is assigned to a specific point of the screen*/LV_INDEV_TYPE_BUTTON66,1478
    LV_INDEV_TYPE_ENCODER, /**< Encoder with only Left, Right turn and a Button*/LV_INDEV_TYPE_ENCODER67,1591
} lv_indev_type_t;lv_indev_type_t68,1673
    LV_INDEV_STATE_RELEASED = 0,LV_INDEV_STATE_RELEASED72,1739
    LV_INDEV_STATE_PRESSEDLV_INDEV_STATE_PRESSED73,1772
} lv_indev_state_t;lv_indev_state_t74,1799
    lv_point_t point; /**< For LV_INDEV_TYPE_POINTER the currently pressed point*/point78,1892
    uint32_t key;     /**< For LV_INDEV_TYPE_KEYPAD the currently pressed key*/key79,1975
    uint32_t btn_id;  /**< For LV_INDEV_TYPE_BUTTON the currently pressed button*/btn_id80,2055
    int16_t enc_diff; /**< For LV_INDEV_TYPE_ENCODER number of steps since the previous read*/enc_diff81,2138
    lv_indev_state_t state; /**< LV_INDEV_STATE_REL or LV_INDEV_STATE_PR*/state83,2234
    bool continue_reading;  /**< If set to true, the read callback is invoked again*/continue_reading84,2309
} lv_indev_data_t;lv_indev_data_t85,2395
typedef struct _lv_indev_drv_t {_lv_indev_drv_t88,2480
    lv_indev_type_t type;type91,2543
    void (*read_cb)(struct _lv_indev_drv_t * indev_drv, lv_indev_data_t * data);read_cb94,2625
    void (*feedback_cb)(struct _lv_indev_drv_t *, uint8_t);feedback_cb98,2828
    void * user_data;user_data101,2910
    struct _lv_disp_t * disp;disp105,2983
    lv_timer_t * read_timer;read_timer108,3069
    uint8_t scroll_limit;scroll_limit111,3168
    uint8_t scroll_throw;scroll_throw114,3272
    uint8_t gesture_min_velocity;gesture_min_velocity117,3387
    uint8_t gesture_limit;gesture_limit120,3486
    uint16_t long_press_time;long_press_time123,3557
    uint16_t long_press_repeat_time;long_press_repeat_time126,3642
} lv_indev_drv_t;lv_indev_drv_t127,3679
typedef struct _lv_indev_proc_t {_lv_indev_proc_t132,3805
    lv_indev_state_t state; /**< Current state of the input device.*/state133,3839
    uint8_t long_pr_sent : 1;long_pr_sent135,3923
    uint8_t reset_query : 1;reset_query136,3953
    uint8_t disabled : 1;disabled137,3982
    uint8_t wait_until_release : 1;wait_until_release138,4008
            lv_point_t act_point; /**< Current point of input device.*/act_point143,4114
            lv_point_t last_point; /**< Last point of input device.*/last_point144,4186
            lv_point_t last_raw_point; /**< Last point read from read_cb. */last_raw_point145,4256
            lv_point_t vect; /**< Difference between `act_point` and `last_point`.*/vect146,4333
            lv_point_t scroll_sum; /*Count the dragged pixels to check LV_INDEV_DEF_SCROLL_LIMIT*/scroll_sum147,4418
            lv_point_t scroll_throw_vect;scroll_throw_vect148,4517
            lv_point_t scroll_throw_vect_ori;scroll_throw_vect_ori149,4559
            struct _lv_obj_t * act_obj;      /*The object being pressed*/act_obj150,4605
            struct _lv_obj_t * last_obj;     /*The last object which was pressed*/last_obj151,4679
            struct _lv_obj_t * scroll_obj;   /*The object being scrolled*/scroll_obj152,4762
            struct _lv_obj_t * last_pressed; /*The lastly pressed object*/last_pressed153,4837
            lv_area_t scroll_area;scroll_area154,4912
            lv_point_t gesture_sum; /*Count the gesture pixels to check LV_INDEV_DEF_GESTURE_LIMIT*/gesture_sum156,4948
            lv_dir_t scroll_dir : 4;scroll_dir158,5071
            lv_dir_t gesture_dir : 4;gesture_dir159,5108
            uint8_t gesture_sent : 1;gesture_sent160,5146
        } pointer;pointer161,5184
            lv_indev_state_t last_state;last_state164,5248
            uint32_t last_key;last_key165,5289
        } keypad;keypad166,5320
    } types;types167,5338
    uint32_t pr_timestamp;         /**< Pressed time stamp*/pr_timestamp169,5352
    uint32_t longpr_rep_timestamp; /**< Long press repeat time stamp*/longpr_rep_timestamp170,5413
} _lv_indev_proc_t;_lv_indev_proc_t171,5484
typedef struct _lv_indev_t {_lv_indev_t175,5614
    struct _lv_indev_drv_t * driver;driver176,5643
    _lv_indev_proc_t proc;proc177,5680
    struct _lv_obj_t * cursor;     /**< Cursor for LV_INPUT_TYPE_POINTER*/cursor178,5707
    struct _lv_group_t * group;    /**< Keypad destination group*/group179,5782
    const lv_point_t * btn_points; /**< Array points assigned to the button ()screen will be pressedbtn_points180,5849
} lv_indev_t;lv_indev_t182,6010

lib/lvgl/src/lv_conf_kconfig.h,2344
#define LV_CONF_KCONFIG_HLV_CONF_KCONFIG_H4,128
#    define LV_CONF_INCLUDE_SIMPLELV_CONF_INCLUDE_SIMPLE22,450
#  define CONFIG_LV_COLOR_CHROMA_KEY CONFIG_LV_COLOR_CHROMA_KEY33,680
#  define CONFIG_LV_MEM_SIZE CONFIG_LV_MEM_SIZE41,865
#  define CONFIG_LV_FONT_DEFAULT CONFIG_LV_FONT_DEFAULT58,1266
#  define CONFIG_LV_FONT_DEFAULT CONFIG_LV_FONT_DEFAULT60,1373
#  define CONFIG_LV_FONT_DEFAULT CONFIG_LV_FONT_DEFAULT62,1481
#  define CONFIG_LV_FONT_DEFAULT CONFIG_LV_FONT_DEFAULT64,1589
#  define CONFIG_LV_FONT_DEFAULT CONFIG_LV_FONT_DEFAULT66,1697
#  define CONFIG_LV_FONT_DEFAULT CONFIG_LV_FONT_DEFAULT68,1805
#  define CONFIG_LV_FONT_DEFAULT CONFIG_LV_FONT_DEFAULT70,1913
#  define CONFIG_LV_FONT_DEFAULT CONFIG_LV_FONT_DEFAULT72,2021
#  define CONFIG_LV_FONT_DEFAULT CONFIG_LV_FONT_DEFAULT74,2129
#  define CONFIG_LV_FONT_DEFAULT CONFIG_LV_FONT_DEFAULT76,2237
#  define CONFIG_LV_FONT_DEFAULT CONFIG_LV_FONT_DEFAULT78,2345
#  define CONFIG_LV_FONT_DEFAULT CONFIG_LV_FONT_DEFAULT80,2453
#  define CONFIG_LV_FONT_DEFAULT CONFIG_LV_FONT_DEFAULT82,2561
#  define CONFIG_LV_FONT_DEFAULT CONFIG_LV_FONT_DEFAULT84,2669
#  define CONFIG_LV_FONT_DEFAULT CONFIG_LV_FONT_DEFAULT86,2777
#  define CONFIG_LV_FONT_DEFAULT CONFIG_LV_FONT_DEFAULT88,2885
#  define CONFIG_LV_FONT_DEFAULT CONFIG_LV_FONT_DEFAULT90,2993
#  define CONFIG_LV_FONT_DEFAULT CONFIG_LV_FONT_DEFAULT92,3101
#  define CONFIG_LV_FONT_DEFAULT CONFIG_LV_FONT_DEFAULT94,3209
#  define CONFIG_LV_FONT_DEFAULT CONFIG_LV_FONT_DEFAULT96,3317
#  define CONFIG_LV_FONT_DEFAULT CONFIG_LV_FONT_DEFAULT98,3425
#  define CONFIG_LV_FONT_DEFAULT CONFIG_LV_FONT_DEFAULT100,3539
#  define CONFIG_LV_FONT_DEFAULT CONFIG_LV_FONT_DEFAULT102,3664
#  define CONFIG_LV_FONT_DEFAULT CONFIG_LV_FONT_DEFAULT104,3794
#  define CONFIG_LV_FONT_DEFAULT CONFIG_LV_FONT_DEFAULT106,3913
#  define CONFIG_LV_FONT_DEFAULT CONFIG_LV_FONT_DEFAULT108,4016
#  define CONFIG_LV_FONT_DEFAULT CONFIG_LV_FONT_DEFAULT110,4115
#  define CONFIG_LV_TXT_ENC CONFIG_LV_TXT_ENC117,4265
#  define CONFIG_LV_TXT_ENC CONFIG_LV_TXT_ENC119,4348
#  define CONFIG_LV_BIDI_BASE_DIR_DEF CONFIG_LV_BIDI_BASE_DIR_DEF127,4493
#  define CONFIG_LV_BIDI_BASE_DIR_DEF CONFIG_LV_BIDI_BASE_DIR_DEF129,4585
#  define CONFIG_LV_BIDI_BASE_DIR_DEF CONFIG_LV_BIDI_BASE_DIR_DEF131,4678

lib/lvgl/src/lv_api_map.h,627
#define LV_API_MAP_HLV_API_MAP_H7,55
#define LV_NO_TASK_READY LV_NO_TASK_READY22,267
#define LV_INDEV_STATE_REL LV_INDEV_STATE_REL23,317
#define LV_INDEV_STATE_PR LV_INDEV_STATE_PR24,373
#define LV_OBJ_FLAG_SNAPABLE LV_OBJ_FLAG_SNAPABLE25,428
static inline LV_ATTRIBUTE_TIMER_HANDLER uint32_t lv_task_handler(void)lv_task_handler35,638
static inline void lv_obj_move_foreground(lv_obj_t * obj)lv_obj_move_foreground55,1092
static inline void lv_obj_move_background(lv_obj_t * obj)lv_obj_move_background67,1487
static inline uint32_t lv_obj_get_child_id(const struct _lv_obj_t * obj)lv_obj_get_child_id78,1660

lib/lvgl/src/lvgl.h,36
#define LVGL_SRC_HLVGL_SRC_H7,119

lib/lvgl/src/lv_conf_internal.h,26279
#define LV_CONF_INTERNAL_HLV_CONF_INTERNAL_H8,162
#    define LV_CONF_SKIPLV_CONF_SKIP17,357
#      define LV_CONF_INCLUDE_SIMPLELV_CONF_INCLUDE_SIMPLE25,551
#    define __LV_TO_STR_AUX(__LV_TO_STR_AUX33,780
#    define __LV_TO_STR(__LV_TO_STR34,814
#    undef __LV_TO_STR_AUX__LV_TO_STR_AUX36,899
#    undef __LV_TO_STR__LV_TO_STR37,926
#  define _LV_KCONFIG_PRESENT_LV_KCONFIG_PRESENT46,1218
#    define LV_COLOR_DEPTH LV_COLOR_DEPTH62,1589
#    define LV_COLOR_DEPTH LV_COLOR_DEPTH64,1646
#    define LV_COLOR_16_SWAP LV_COLOR_16_SWAP71,1845
#    define LV_COLOR_16_SWAP LV_COLOR_16_SWAP73,1906
#    define LV_COLOR_SCREEN_TRANSP LV_COLOR_SCREEN_TRANSP82,2285
#    define LV_COLOR_SCREEN_TRANSP LV_COLOR_SCREEN_TRANSP84,2358
#    define LV_COLOR_MIX_ROUND_OFS LV_COLOR_MIX_ROUND_OFS92,2686
#    define LV_COLOR_MIX_ROUND_OFS LV_COLOR_MIX_ROUND_OFS94,2759
#    define LV_COLOR_CHROMA_KEY LV_COLOR_CHROMA_KEY101,2985
#    define LV_COLOR_CHROMA_KEY LV_COLOR_CHROMA_KEY103,3052
#    define LV_MEM_CUSTOM LV_MEM_CUSTOM114,3365
#    define LV_MEM_CUSTOM LV_MEM_CUSTOM116,3420
#    define LV_MEM_SIZE LV_MEM_SIZE123,3607
#    define LV_MEM_SIZE LV_MEM_SIZE125,3658
#    define LV_MEM_ADR LV_MEM_ADR132,3892
#    define LV_MEM_ADR LV_MEM_ADR134,3941
#    define LV_MEM_CUSTOM_INCLUDE LV_MEM_CUSTOM_INCLUDE146,4434
#    define LV_MEM_CUSTOM_INCLUDE LV_MEM_CUSTOM_INCLUDE148,4505
#    define LV_MEM_CUSTOM_ALLOC LV_MEM_CUSTOM_ALLOC153,4675
#    define LV_MEM_CUSTOM_ALLOC LV_MEM_CUSTOM_ALLOC155,4742
#    define LV_MEM_CUSTOM_FREE LV_MEM_CUSTOM_FREE160,4861
#    define LV_MEM_CUSTOM_FREE LV_MEM_CUSTOM_FREE162,4926
#    define LV_MEM_CUSTOM_REALLOC LV_MEM_CUSTOM_REALLOC167,5049
#    define LV_MEM_CUSTOM_REALLOC LV_MEM_CUSTOM_REALLOC169,5120
#    define LV_MEM_BUF_MAX_NUM LV_MEM_BUF_MAX_NUM178,5448
#    define LV_MEM_BUF_MAX_NUM LV_MEM_BUF_MAX_NUM180,5513
#    define LV_MEMCPY_MEMSET_STD LV_MEMCPY_MEMSET_STD187,5738
#    define LV_MEMCPY_MEMSET_STD LV_MEMCPY_MEMSET_STD189,5807
#    define LV_DISP_DEF_REFR_PERIOD LV_DISP_DEF_REFR_PERIOD200,6084
#    define LV_DISP_DEF_REFR_PERIOD LV_DISP_DEF_REFR_PERIOD202,6159
#    define LV_INDEV_DEF_READ_PERIOD LV_INDEV_DEF_READ_PERIOD209,6348
#    define LV_INDEV_DEF_READ_PERIOD LV_INDEV_DEF_READ_PERIOD211,6425
#    define LV_TICK_CUSTOM LV_TICK_CUSTOM219,6695
#    define LV_TICK_CUSTOM LV_TICK_CUSTOM221,6752
#    define LV_TICK_CUSTOM_INCLUDE LV_TICK_CUSTOM_INCLUDE227,6886
#    define LV_TICK_CUSTOM_INCLUDE LV_TICK_CUSTOM_INCLUDE229,6959
#    define LV_TICK_CUSTOM_SYS_TIME_EXPR LV_TICK_CUSTOM_SYS_TIME_EXPR234,7152
#    define LV_TICK_CUSTOM_SYS_TIME_EXPR LV_TICK_CUSTOM_SYS_TIME_EXPR236,7237
#    define LV_DPI_DEF LV_DPI_DEF245,7611
#    define LV_DPI_DEF LV_DPI_DEF247,7660
#      define LV_DRAW_COMPLEX LV_DRAW_COMPLEX264,8080
#      define LV_DRAW_COMPLEX LV_DRAW_COMPLEX266,8143
#    define LV_DRAW_COMPLEX LV_DRAW_COMPLEX269,8194
#    define LV_SHADOW_CACHE_SIZE LV_SHADOW_CACHE_SIZE279,8526
#    define LV_SHADOW_CACHE_SIZE LV_SHADOW_CACHE_SIZE281,8595
#    define LV_CIRCLE_CACHE_SIZE LV_CIRCLE_CACHE_SIZE291,8932
#    define LV_CIRCLE_CACHE_SIZE LV_CIRCLE_CACHE_SIZE293,9001
#    define LV_IMG_CACHE_DEF_SIZE LV_IMG_CACHE_DEF_SIZE306,9528
#    define LV_IMG_CACHE_DEF_SIZE LV_IMG_CACHE_DEF_SIZE308,9599
#    define LV_DISP_ROT_MAX_BUF LV_DISP_ROT_MAX_BUF315,9831
#    define LV_DISP_ROT_MAX_BUF LV_DISP_ROT_MAX_BUF317,9898
#    define LV_USE_GPU_STM32_DMA2D LV_USE_GPU_STM32_DMA2D328,10109
#    define LV_USE_GPU_STM32_DMA2D LV_USE_GPU_STM32_DMA2D330,10182
#    define LV_GPU_DMA2D_CMSIS_INCLUDE LV_GPU_DMA2D_CMSIS_INCLUDE338,10452
#    define LV_GPU_DMA2D_CMSIS_INCLUDELV_GPU_DMA2D_CMSIS_INCLUDE340,10533
#    define LV_USE_GPU_NXP_PXP LV_USE_GPU_NXP_PXP348,10700
#    define LV_USE_GPU_NXP_PXP LV_USE_GPU_NXP_PXP350,10765
#    define LV_USE_GPU_NXP_PXP_AUTO_INIT LV_USE_GPU_NXP_PXP_AUTO_INIT361,11297
#    define LV_USE_GPU_NXP_PXP_AUTO_INIT LV_USE_GPU_NXP_PXP_AUTO_INIT363,11382
#    define LV_USE_GPU_NXP_VG_LITE LV_USE_GPU_NXP_VG_LITE371,11565
#    define LV_USE_GPU_NXP_VG_LITE LV_USE_GPU_NXP_VG_LITE373,11638
#    define LV_USE_EXTERNAL_RENDERER LV_USE_EXTERNAL_RENDERER380,11793
#    define LV_USE_EXTERNAL_RENDERER LV_USE_EXTERNAL_RENDERER382,11870
#    define LV_USE_GPU_SDL LV_USE_GPU_SDL389,12040
#    define LV_USE_GPU_SDL LV_USE_GPU_SDL391,12097
#    define LV_GPU_SDL_INCLUDE_PATH LV_GPU_SDL_INCLUDE_PATH397,12233
#    define LV_GPU_SDL_INCLUDE_PATH LV_GPU_SDL_INCLUDE_PATH399,12308
#    define LV_USE_LOG LV_USE_LOG411,12497
#    define LV_USE_LOG LV_USE_LOG413,12546
#    define LV_LOG_LEVEL LV_LOG_LEVEL427,13074
#    define LV_LOG_LEVEL LV_LOG_LEVEL429,13127
#    define LV_LOG_PRINTF LV_LOG_PRINTF437,13347
#    define LV_LOG_PRINTF LV_LOG_PRINTF439,13402
#      define LV_LOG_TRACE_MEM LV_LOG_TRACE_MEM447,13615
#      define LV_LOG_TRACE_MEM LV_LOG_TRACE_MEM449,13680
#    define LV_LOG_TRACE_MEM LV_LOG_TRACE_MEM452,13732
#      define LV_LOG_TRACE_TIMER LV_LOG_TRACE_TIMER458,13879
#      define LV_LOG_TRACE_TIMER LV_LOG_TRACE_TIMER460,13948
#    define LV_LOG_TRACE_TIMER LV_LOG_TRACE_TIMER463,14002
#      define LV_LOG_TRACE_INDEV LV_LOG_TRACE_INDEV469,14149
#      define LV_LOG_TRACE_INDEV LV_LOG_TRACE_INDEV471,14218
#    define LV_LOG_TRACE_INDEV LV_LOG_TRACE_INDEV474,14272
#      define LV_LOG_TRACE_DISP_REFR LV_LOG_TRACE_DISP_REFR480,14427
#      define LV_LOG_TRACE_DISP_REFR LV_LOG_TRACE_DISP_REFR482,14504
#    define LV_LOG_TRACE_DISP_REFR LV_LOG_TRACE_DISP_REFR485,14562
#      define LV_LOG_TRACE_EVENT LV_LOG_TRACE_EVENT491,14709
#      define LV_LOG_TRACE_EVENT LV_LOG_TRACE_EVENT493,14778
#    define LV_LOG_TRACE_EVENT LV_LOG_TRACE_EVENT496,14832
#      define LV_LOG_TRACE_OBJ_CREATE LV_LOG_TRACE_OBJ_CREATE502,14989
#      define LV_LOG_TRACE_OBJ_CREATE LV_LOG_TRACE_OBJ_CREATE504,15068
#    define LV_LOG_TRACE_OBJ_CREATE LV_LOG_TRACE_OBJ_CREATE507,15127
#      define LV_LOG_TRACE_LAYOUT LV_LOG_TRACE_LAYOUT513,15276
#      define LV_LOG_TRACE_LAYOUT LV_LOG_TRACE_LAYOUT515,15347
#    define LV_LOG_TRACE_LAYOUT LV_LOG_TRACE_LAYOUT518,15402
#      define LV_LOG_TRACE_ANIM LV_LOG_TRACE_ANIM524,15547
#      define LV_LOG_TRACE_ANIM LV_LOG_TRACE_ANIM526,15614
#    define LV_LOG_TRACE_ANIM LV_LOG_TRACE_ANIM529,15667
#    define LV_USE_ASSERT_NULL LV_USE_ASSERT_NULL543,15997
#    define LV_USE_ASSERT_NULL LV_USE_ASSERT_NULL545,16062
#    define LV_USE_ASSERT_MALLOC LV_USE_ASSERT_MALLOC550,16249
#    define LV_USE_ASSERT_MALLOC LV_USE_ASSERT_MALLOC552,16318
#    define LV_USE_ASSERT_STYLE LV_USE_ASSERT_STYLE557,16525
#    define LV_USE_ASSERT_STYLE LV_USE_ASSERT_STYLE559,16592
#    define LV_USE_ASSERT_MEM_INTEGRITY LV_USE_ASSERT_MEM_INTEGRITY564,16807
#    define LV_USE_ASSERT_MEM_INTEGRITY LV_USE_ASSERT_MEM_INTEGRITY566,16890
#    define LV_USE_ASSERT_OBJ LV_USE_ASSERT_OBJ571,17080
#    define LV_USE_ASSERT_OBJ LV_USE_ASSERT_OBJ573,17143
#    define LV_ASSERT_HANDLER_INCLUDE LV_ASSERT_HANDLER_INCLUDE580,17418
#    define LV_ASSERT_HANDLER_INCLUDE LV_ASSERT_HANDLER_INCLUDE582,17497
#    define LV_ASSERT_HANDLER LV_ASSERT_HANDLER587,17622
#    define LV_ASSERT_HANDLER LV_ASSERT_HANDLER589,17685
#    define LV_USE_PERF_MONITOR LV_USE_PERF_MONITOR600,17934
#    define LV_USE_PERF_MONITOR LV_USE_PERF_MONITOR602,18001
#    define LV_USE_PERF_MONITOR_POS LV_USE_PERF_MONITOR_POS608,18147
#    define LV_USE_PERF_MONITOR_POS LV_USE_PERF_MONITOR_POS610,18222
#    define LV_USE_MEM_MONITOR LV_USE_MEM_MONITOR619,18479
#    define LV_USE_MEM_MONITOR LV_USE_MEM_MONITOR621,18544
#    define LV_USE_MEM_MONITOR_POS LV_USE_MEM_MONITOR_POS627,18687
#    define LV_USE_MEM_MONITOR_POS LV_USE_MEM_MONITOR_POS629,18760
#    define LV_USE_REFR_DEBUG LV_USE_REFR_DEBUG637,18961
#    define LV_USE_REFR_DEBUG LV_USE_REFR_DEBUG639,19024
#    define LV_SPRINTF_CUSTOM LV_SPRINTF_CUSTOM646,19179
#    define LV_SPRINTF_CUSTOM LV_SPRINTF_CUSTOM648,19242
#    define LV_SPRINTF_INCLUDE LV_SPRINTF_INCLUDE654,19374
#    define LV_SPRINTF_INCLUDE LV_SPRINTF_INCLUDE656,19439
#    define lv_snprintf lv_snprintf661,19544
#    define lv_snprintf lv_snprintf663,19595
#    define lv_vsnprintf lv_vsnprintf668,19695
#    define lv_vsnprintf lv_vsnprintf670,19748
#    define LV_SPRINTF_USE_FLOAT LV_SPRINTF_USE_FLOAT676,19895
#    define LV_SPRINTF_USE_FLOAT LV_SPRINTF_USE_FLOAT678,19964
#      define LV_USE_USER_DATA LV_USE_USER_DATA686,20135
#      define LV_USE_USER_DATA LV_USE_USER_DATA688,20200
#    define LV_USE_USER_DATA LV_USE_USER_DATA691,20252
#    define LV_ENABLE_GC LV_ENABLE_GC699,20473
#    define LV_ENABLE_GC LV_ENABLE_GC701,20526
#    define LV_GC_INCLUDE LV_GC_INCLUDE707,20643
#    define LV_GC_INCLUDE LV_GC_INCLUDE709,20698
#    define LV_BIG_ENDIAN_SYSTEM LV_BIG_ENDIAN_SYSTEM721,21017
#    define LV_BIG_ENDIAN_SYSTEM LV_BIG_ENDIAN_SYSTEM723,21086
#    define LV_ATTRIBUTE_TICK_INC LV_ATTRIBUTE_TICK_INC730,21262
#    define LV_ATTRIBUTE_TICK_INCLV_ATTRIBUTE_TICK_INC732,21333
#    define LV_ATTRIBUTE_TIMER_HANDLER LV_ATTRIBUTE_TIMER_HANDLER739,21523
#    define LV_ATTRIBUTE_TIMER_HANDLERLV_ATTRIBUTE_TIMER_HANDLER741,21604
#    define LV_ATTRIBUTE_FLUSH_READY LV_ATTRIBUTE_FLUSH_READY748,21798
#    define LV_ATTRIBUTE_FLUSH_READYLV_ATTRIBUTE_FLUSH_READY750,21875
#      define LV_ATTRIBUTE_MEM_ALIGN_SIZE LV_ATTRIBUTE_MEM_ALIGN_SIZE758,22080
#      define LV_ATTRIBUTE_MEM_ALIGN_SIZE LV_ATTRIBUTE_MEM_ALIGN_SIZE760,22167
#    define LV_ATTRIBUTE_MEM_ALIGN_SIZE LV_ATTRIBUTE_MEM_ALIGN_SIZE763,22230
#    define LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_MEM_ALIGN771,22509
#    define LV_ATTRIBUTE_MEM_ALIGNLV_ATTRIBUTE_MEM_ALIGN773,22582
#    define LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_LARGE_CONST780,22779
#    define LV_ATTRIBUTE_LARGE_CONSTLV_ATTRIBUTE_LARGE_CONST782,22856
#    define LV_ATTRIBUTE_LARGE_RAM_ARRAY LV_ATTRIBUTE_LARGE_RAM_ARRAY789,23047
#    define LV_ATTRIBUTE_LARGE_RAM_ARRAYLV_ATTRIBUTE_LARGE_RAM_ARRAY791,23132
#    define LV_ATTRIBUTE_FAST_MEM LV_ATTRIBUTE_FAST_MEM798,23330
#    define LV_ATTRIBUTE_FAST_MEMLV_ATTRIBUTE_FAST_MEM800,23401
#    define LV_ATTRIBUTE_DMA LV_ATTRIBUTE_DMA807,23646
#    define LV_ATTRIBUTE_DMALV_ATTRIBUTE_DMA809,23707
#    define LV_EXPORT_CONST_INT LV_EXPORT_CONST_INT817,23984
#    define LV_EXPORT_CONST_INT(LV_EXPORT_CONST_INT819,24051
#    define LV_USE_LARGE_COORD LV_USE_LARGE_COORD826,24362
#    define LV_USE_LARGE_COORD LV_USE_LARGE_COORD828,24427
#    define LV_FONT_MONTSERRAT_8 LV_FONT_MONTSERRAT_8840,24721
#    define LV_FONT_MONTSERRAT_8 LV_FONT_MONTSERRAT_8842,24790
#    define LV_FONT_MONTSERRAT_10 LV_FONT_MONTSERRAT_10847,24910
#    define LV_FONT_MONTSERRAT_10 LV_FONT_MONTSERRAT_10849,24981
#    define LV_FONT_MONTSERRAT_12 LV_FONT_MONTSERRAT_12854,25101
#    define LV_FONT_MONTSERRAT_12 LV_FONT_MONTSERRAT_12856,25172
#      define LV_FONT_MONTSERRAT_14 LV_FONT_MONTSERRAT_14862,25323
#      define LV_FONT_MONTSERRAT_14 LV_FONT_MONTSERRAT_14864,25398
#    define LV_FONT_MONTSERRAT_14 LV_FONT_MONTSERRAT_14867,25455
#    define LV_FONT_MONTSERRAT_16 LV_FONT_MONTSERRAT_16872,25575
#    define LV_FONT_MONTSERRAT_16 LV_FONT_MONTSERRAT_16874,25646
#    define LV_FONT_MONTSERRAT_18 LV_FONT_MONTSERRAT_18879,25766
#    define LV_FONT_MONTSERRAT_18 LV_FONT_MONTSERRAT_18881,25837
#    define LV_FONT_MONTSERRAT_20 LV_FONT_MONTSERRAT_20886,25957
#    define LV_FONT_MONTSERRAT_20 LV_FONT_MONTSERRAT_20888,26028
#    define LV_FONT_MONTSERRAT_22 LV_FONT_MONTSERRAT_22893,26148
#    define LV_FONT_MONTSERRAT_22 LV_FONT_MONTSERRAT_22895,26219
#    define LV_FONT_MONTSERRAT_24 LV_FONT_MONTSERRAT_24900,26339
#    define LV_FONT_MONTSERRAT_24 LV_FONT_MONTSERRAT_24902,26410
#    define LV_FONT_MONTSERRAT_26 LV_FONT_MONTSERRAT_26907,26530
#    define LV_FONT_MONTSERRAT_26 LV_FONT_MONTSERRAT_26909,26601
#    define LV_FONT_MONTSERRAT_28 LV_FONT_MONTSERRAT_28914,26721
#    define LV_FONT_MONTSERRAT_28 LV_FONT_MONTSERRAT_28916,26792
#    define LV_FONT_MONTSERRAT_30 LV_FONT_MONTSERRAT_30921,26912
#    define LV_FONT_MONTSERRAT_30 LV_FONT_MONTSERRAT_30923,26983
#    define LV_FONT_MONTSERRAT_32 LV_FONT_MONTSERRAT_32928,27103
#    define LV_FONT_MONTSERRAT_32 LV_FONT_MONTSERRAT_32930,27174
#    define LV_FONT_MONTSERRAT_34 LV_FONT_MONTSERRAT_34935,27294
#    define LV_FONT_MONTSERRAT_34 LV_FONT_MONTSERRAT_34937,27365
#    define LV_FONT_MONTSERRAT_36 LV_FONT_MONTSERRAT_36942,27485
#    define LV_FONT_MONTSERRAT_36 LV_FONT_MONTSERRAT_36944,27556
#    define LV_FONT_MONTSERRAT_38 LV_FONT_MONTSERRAT_38949,27676
#    define LV_FONT_MONTSERRAT_38 LV_FONT_MONTSERRAT_38951,27747
#    define LV_FONT_MONTSERRAT_40 LV_FONT_MONTSERRAT_40956,27867
#    define LV_FONT_MONTSERRAT_40 LV_FONT_MONTSERRAT_40958,27938
#    define LV_FONT_MONTSERRAT_42 LV_FONT_MONTSERRAT_42963,28058
#    define LV_FONT_MONTSERRAT_42 LV_FONT_MONTSERRAT_42965,28129
#    define LV_FONT_MONTSERRAT_44 LV_FONT_MONTSERRAT_44970,28249
#    define LV_FONT_MONTSERRAT_44 LV_FONT_MONTSERRAT_44972,28320
#    define LV_FONT_MONTSERRAT_46 LV_FONT_MONTSERRAT_46977,28440
#    define LV_FONT_MONTSERRAT_46 LV_FONT_MONTSERRAT_46979,28511
#    define LV_FONT_MONTSERRAT_48 LV_FONT_MONTSERRAT_48984,28631
#    define LV_FONT_MONTSERRAT_48 LV_FONT_MONTSERRAT_48986,28702
#    define LV_FONT_MONTSERRAT_12_SUBPX LV_FONT_MONTSERRAT_12_SUBPX993,28868
#    define LV_FONT_MONTSERRAT_12_SUBPX LV_FONT_MONTSERRAT_12_SUBPX995,28951
#    define LV_FONT_MONTSERRAT_28_COMPRESSED LV_FONT_MONTSERRAT_28_COMPRESSED1000,29104
#    define LV_FONT_MONTSERRAT_28_COMPRESSED LV_FONT_MONTSERRAT_28_COMPRESSED1002,29197
#    define LV_FONT_DEJAVU_16_PERSIAN_HEBREW LV_FONT_DEJAVU_16_PERSIAN_HEBREW1007,29363
#    define LV_FONT_DEJAVU_16_PERSIAN_HEBREW LV_FONT_DEJAVU_16_PERSIAN_HEBREW1009,29456
#    define LV_FONT_SIMSUN_16_CJK LV_FONT_SIMSUN_16_CJK1014,29644
#    define LV_FONT_SIMSUN_16_CJK LV_FONT_SIMSUN_16_CJK1016,29715
#    define LV_FONT_UNSCII_8 LV_FONT_UNSCII_81023,29906
#    define LV_FONT_UNSCII_8 LV_FONT_UNSCII_81025,29967
#    define LV_FONT_UNSCII_16 LV_FONT_UNSCII_161030,30075
#    define LV_FONT_UNSCII_16 LV_FONT_UNSCII_161032,30138
#    define LV_FONT_CUSTOM_DECLARE LV_FONT_CUSTOM_DECLARE1041,30476
#    define LV_FONT_CUSTOM_DECLARELV_FONT_CUSTOM_DECLARE1043,30549
#    define LV_FONT_DEFAULT LV_FONT_DEFAULT1050,30687
#    define LV_FONT_DEFAULT LV_FONT_DEFAULT1052,30746
#    define LV_FONT_FMT_TXT_LARGE LV_FONT_FMT_TXT_LARGE1061,31064
#    define LV_FONT_FMT_TXT_LARGE LV_FONT_FMT_TXT_LARGE1063,31135
#    define LV_USE_FONT_COMPRESSED LV_USE_FONT_COMPRESSED1070,31309
#    define LV_USE_FONT_COMPRESSED LV_USE_FONT_COMPRESSED1072,31382
#    define LV_USE_FONT_SUBPX LV_USE_FONT_SUBPX1079,31526
#    define LV_USE_FONT_SUBPX LV_USE_FONT_SUBPX1081,31589
#    define LV_FONT_SUBPX_BGR LV_FONT_SUBPX_BGR1088,31827
#    define LV_FONT_SUBPX_BGR LV_FONT_SUBPX_BGR1090,31890
#    define LV_TXT_ENC LV_TXT_ENC1107,32235
#    define LV_TXT_ENC LV_TXT_ENC1109,32284
#    define LV_TXT_BREAK_CHARS LV_TXT_BREAK_CHARS1116,32445
#    define LV_TXT_BREAK_CHARS LV_TXT_BREAK_CHARS1118,32510
#    define LV_TXT_LINE_BREAK_LONG_LEN LV_TXT_LINE_BREAK_LONG_LEN1126,32749
#    define LV_TXT_LINE_BREAK_LONG_LEN LV_TXT_LINE_BREAK_LONG_LEN1128,32830
#    define LV_TXT_LINE_BREAK_LONG_PRE_MIN_LEN LV_TXT_LINE_BREAK_LONG_PRE_MIN_LEN1136,33104
#    define LV_TXT_LINE_BREAK_LONG_PRE_MIN_LEN LV_TXT_LINE_BREAK_LONG_PRE_MIN_LEN1138,33201
#    define LV_TXT_LINE_BREAK_LONG_POST_MIN_LEN LV_TXT_LINE_BREAK_LONG_POST_MIN_LEN1146,33484
#    define LV_TXT_LINE_BREAK_LONG_POST_MIN_LEN LV_TXT_LINE_BREAK_LONG_POST_MIN_LEN1148,33583
#    define LV_TXT_COLOR_CMD LV_TXT_COLOR_CMD1155,33773
#    define LV_TXT_COLOR_CMD LV_TXT_COLOR_CMD1157,33834
#    define LV_USE_BIDI LV_USE_BIDI1166,34176
#    define LV_USE_BIDI LV_USE_BIDI1168,34227
#    define LV_BIDI_BASE_DIR_DEF LV_BIDI_BASE_DIR_DEF1178,34517
#    define LV_BIDI_BASE_DIR_DEF LV_BIDI_BASE_DIR_DEF1180,34586
#    define LV_USE_ARABIC_PERSIAN_CHARS LV_USE_ARABIC_PERSIAN_CHARS1189,34883
#    define LV_USE_ARABIC_PERSIAN_CHARS LV_USE_ARABIC_PERSIAN_CHARS1191,34966
#      define LV_USE_ARC LV_USE_ARC1204,35252
#      define LV_USE_ARC LV_USE_ARC1206,35305
#    define LV_USE_ARC LV_USE_ARC1209,35351
#      define LV_USE_ANIMIMG LV_USE_ANIMIMG1216,35485
#      define LV_USE_ANIMIMG LV_USE_ANIMIMG1218,35546
#    define LV_USE_ANIMIMG LV_USE_ANIMIMG1221,35596
#      define LV_USE_BAR LV_USE_BAR1228,35722
#      define LV_USE_BAR LV_USE_BAR1230,35775
#    define LV_USE_BAR LV_USE_BAR1233,35821
#      define LV_USE_BTN LV_USE_BTN1240,35947
#      define LV_USE_BTN LV_USE_BTN1242,36000
#    define LV_USE_BTN LV_USE_BTN1245,36046
#      define LV_USE_BTNMATRIX LV_USE_BTNMATRIX1252,36184
#      define LV_USE_BTNMATRIX LV_USE_BTNMATRIX1254,36249
#    define LV_USE_BTNMATRIX LV_USE_BTNMATRIX1257,36301
#      define LV_USE_CANVAS LV_USE_CANVAS1264,36433
#      define LV_USE_CANVAS LV_USE_CANVAS1266,36492
#    define LV_USE_CANVAS LV_USE_CANVAS1269,36541
#      define LV_USE_CHECKBOX LV_USE_CHECKBOX1276,36677
#      define LV_USE_CHECKBOX LV_USE_CHECKBOX1278,36740
#    define LV_USE_CHECKBOX LV_USE_CHECKBOX1281,36791
#    define LV_USE_DROPDOWN LV_USE_DROPDOWN1287,36896
#    define LV_USE_DROPDOWN LV_USE_DROPDOWN1289,36955
#    define LV_USE_IMG LV_USE_IMG1295,37075
#    define LV_USE_IMG LV_USE_IMG1297,37124
#      define LV_USE_LABEL LV_USE_LABEL1304,37279
#      define LV_USE_LABEL LV_USE_LABEL1306,37336
#    define LV_USE_LABEL LV_USE_LABEL1309,37384
#    define LV_LABEL_TEXT_SELECTION LV_LABEL_TEXT_SELECTION1315,37521
#    define LV_LABEL_TEXT_SELECTION LV_LABEL_TEXT_SELECTION1317,37596
#    define LV_LABEL_LONG_TXT_HINT LV_LABEL_LONG_TXT_HINT1322,37759
#    define LV_LABEL_LONG_TXT_HINT LV_LABEL_LONG_TXT_HINT1324,37832
#      define LV_USE_LINE LV_USE_LINE1332,38048
#      define LV_USE_LINE LV_USE_LINE1334,38103
#    define LV_USE_LINE LV_USE_LINE1337,38150
#    define LV_USE_ROLLER LV_USE_ROLLER1343,38251
#    define LV_USE_ROLLER LV_USE_ROLLER1345,38306
#    define LV_ROLLER_INF_PAGES LV_ROLLER_INF_PAGES1351,38461
#    define LV_ROLLER_INF_PAGES LV_ROLLER_INF_PAGES1353,38528
#    define LV_USE_SLIDER LV_USE_SLIDER1360,38694
#    define LV_USE_SLIDER LV_USE_SLIDER1362,38749
#      define LV_USE_SWITCH LV_USE_SWITCH1369,38904
#      define LV_USE_SWITCH LV_USE_SWITCH1371,38963
#    define LV_USE_SWITCH LV_USE_SWITCH1374,39012
#    define LV_USE_TEXTAREA LV_USE_TEXTAREA1380,39117
#    define LV_USE_TEXTAREA LV_USE_TEXTAREA1382,39176
#    define LV_TEXTAREA_DEF_PWD_SHOW_TIME LV_TEXTAREA_DEF_PWD_SHOW_TIME1388,39358
#    define LV_TEXTAREA_DEF_PWD_SHOW_TIME LV_TEXTAREA_DEF_PWD_SHOW_TIME1390,39445
#      define LV_USE_TABLE LV_USE_TABLE1398,39607
#      define LV_USE_TABLE LV_USE_TABLE1400,39664
#    define LV_USE_TABLE LV_USE_TABLE1403,39712
#      define LV_USE_CALENDAR LV_USE_CALENDAR1417,39953
#      define LV_USE_CALENDAR LV_USE_CALENDAR1419,40016
#    define LV_USE_CALENDAR LV_USE_CALENDAR1422,40067
#    define LV_CALENDAR_WEEK_STARTS_MONDAY LV_CALENDAR_WEEK_STARTS_MONDAY1428,40221
#    define LV_CALENDAR_WEEK_STARTS_MONDAY LV_CALENDAR_WEEK_STARTS_MONDAY1430,40310
#    define LV_CALENDAR_DEFAULT_DAY_NAMES LV_CALENDAR_DEFAULT_DAY_NAMES1436,40491
#    define LV_CALENDAR_DEFAULT_DAY_NAMES LV_CALENDAR_DEFAULT_DAY_NAMES1438,40578
#    define LV_CALENDAR_DEFAULT_DAY_NAMES LV_CALENDAR_DEFAULT_DAY_NAMES1444,40770
#    define LV_CALENDAR_DEFAULT_DAY_NAMES LV_CALENDAR_DEFAULT_DAY_NAMES1446,40857
#    define LV_CALENDAR_DEFAULT_MONTH_NAMES LV_CALENDAR_DEFAULT_MONTH_NAMES1453,41055
#    define LV_CALENDAR_DEFAULT_MONTH_NAMES LV_CALENDAR_DEFAULT_MONTH_NAMES1455,41146
#      define LV_USE_CALENDAR_HEADER_ARROW LV_USE_CALENDAR_HEADER_ARROW1461,41444
#      define LV_USE_CALENDAR_HEADER_ARROW LV_USE_CALENDAR_HEADER_ARROW1463,41533
#    define LV_USE_CALENDAR_HEADER_ARROW LV_USE_CALENDAR_HEADER_ARROW1466,41597
#      define LV_USE_CALENDAR_HEADER_DROPDOWN LV_USE_CALENDAR_HEADER_DROPDOWN1472,41775
#      define LV_USE_CALENDAR_HEADER_DROPDOWN LV_USE_CALENDAR_HEADER_DROPDOWN1474,41870
#    define LV_USE_CALENDAR_HEADER_DROPDOWN LV_USE_CALENDAR_HEADER_DROPDOWN1477,41937
#      define LV_USE_CHART LV_USE_CHART1485,42109
#      define LV_USE_CHART LV_USE_CHART1487,42166
#    define LV_USE_CHART LV_USE_CHART1490,42214
#      define LV_USE_COLORWHEEL LV_USE_COLORWHEEL1497,42354
#      define LV_USE_COLORWHEEL LV_USE_COLORWHEEL1499,42421
#    define LV_USE_COLORWHEEL LV_USE_COLORWHEEL1502,42474
#      define LV_USE_IMGBTN LV_USE_IMGBTN1509,42606
#      define LV_USE_IMGBTN LV_USE_IMGBTN1511,42665
#    define LV_USE_IMGBTN LV_USE_IMGBTN1514,42714
#      define LV_USE_KEYBOARD LV_USE_KEYBOARD1521,42850
#      define LV_USE_KEYBOARD LV_USE_KEYBOARD1523,42913
#    define LV_USE_KEYBOARD LV_USE_KEYBOARD1526,42964
#      define LV_USE_LED LV_USE_LED1533,43090
#      define LV_USE_LED LV_USE_LED1535,43143
#    define LV_USE_LED LV_USE_LED1538,43189
#      define LV_USE_LIST LV_USE_LIST1545,43317
#      define LV_USE_LIST LV_USE_LIST1547,43372
#    define LV_USE_LIST LV_USE_LIST1550,43419
#      define LV_USE_METER LV_USE_METER1557,43549
#      define LV_USE_METER LV_USE_METER1559,43606
#    define LV_USE_METER LV_USE_METER1562,43654
#      define LV_USE_MSGBOX LV_USE_MSGBOX1569,43786
#      define LV_USE_MSGBOX LV_USE_MSGBOX1571,43845
#    define LV_USE_MSGBOX LV_USE_MSGBOX1574,43894
#      define LV_USE_SPINBOX LV_USE_SPINBOX1581,44028
#      define LV_USE_SPINBOX LV_USE_SPINBOX1583,44089
#    define LV_USE_SPINBOX LV_USE_SPINBOX1586,44139
#      define LV_USE_SPINNER LV_USE_SPINNER1593,44273
#      define LV_USE_SPINNER LV_USE_SPINNER1595,44334
#    define LV_USE_SPINNER LV_USE_SPINNER1598,44384
#      define LV_USE_TABVIEW LV_USE_TABVIEW1605,44518
#      define LV_USE_TABVIEW LV_USE_TABVIEW1607,44579
#    define LV_USE_TABVIEW LV_USE_TABVIEW1610,44629
#      define LV_USE_TILEVIEW LV_USE_TILEVIEW1617,44765
#      define LV_USE_TILEVIEW LV_USE_TILEVIEW1619,44828
#    define LV_USE_TILEVIEW LV_USE_TILEVIEW1622,44879
#      define LV_USE_WIN LV_USE_WIN1629,45005
#      define LV_USE_WIN LV_USE_WIN1631,45058
#    define LV_USE_WIN LV_USE_WIN1634,45104
#      define LV_USE_SPAN LV_USE_SPAN1641,45232
#      define LV_USE_SPAN LV_USE_SPAN1643,45287
#    define LV_USE_SPAN LV_USE_SPAN1646,45334
#    define LV_SPAN_SNIPPET_STACK_SIZE LV_SPAN_SNIPPET_STACK_SIZE1653,45536
#    define LV_SPAN_SNIPPET_STACK_SIZE LV_SPAN_SNIPPET_STACK_SIZE1655,45617
#      define LV_USE_THEME_DEFAULT LV_USE_THEME_DEFAULT1668,45869
#      define LV_USE_THEME_DEFAULT LV_USE_THEME_DEFAULT1670,45942
#    define LV_USE_THEME_DEFAULT LV_USE_THEME_DEFAULT1673,45998
#    define LV_THEME_DEFAULT_DARK LV_THEME_DEFAULT_DARK1681,46175
#    define LV_THEME_DEFAULT_DARK LV_THEME_DEFAULT_DARK1683,46246
#      define LV_THEME_DEFAULT_GROW LV_THEME_DEFAULT_GROW1691,46426
#      define LV_THEME_DEFAULT_GROW LV_THEME_DEFAULT_GROW1693,46501
#    define LV_THEME_DEFAULT_GROW LV_THEME_DEFAULT_GROW1696,46558
#    define LV_THEME_DEFAULT_TRANSITION_TIME LV_THEME_DEFAULT_TRANSITION_TIME1703,46737
#    define LV_THEME_DEFAULT_TRANSITION_TIME LV_THEME_DEFAULT_TRANSITION_TIME1705,46830
#      define LV_USE_THEME_BASIC LV_USE_THEME_BASIC1714,47093
#      define LV_USE_THEME_BASIC LV_USE_THEME_BASIC1716,47162
#    define LV_USE_THEME_BASIC LV_USE_THEME_BASIC1719,47216
#      define LV_USE_THEME_MONO LV_USE_THEME_MONO1727,47402
#      define LV_USE_THEME_MONO LV_USE_THEME_MONO1729,47469
#    define LV_USE_THEME_MONO LV_USE_THEME_MONO1732,47522
#      define LV_USE_FLEX LV_USE_FLEX1744,47731
#      define LV_USE_FLEX LV_USE_FLEX1746,47786
#    define LV_USE_FLEX LV_USE_FLEX1749,47833
#      define LV_USE_GRID LV_USE_GRID1757,47992
#      define LV_USE_GRID LV_USE_GRID1759,48047
#    define LV_USE_GRID LV_USE_GRID1762,48094
#    define LV_USE_FS_STDIO LV_USE_FS_STDIO1774,48354
#    define LV_USE_FS_STDIO LV_USE_FS_STDIO1776,48413
#    define LV_USE_FS_POSIX LV_USE_FS_POSIX1783,48658
#    define LV_USE_FS_POSIX LV_USE_FS_POSIX1785,48717
#    define LV_USE_FS_WIN32 LV_USE_FS_WIN321792,48960
#    define LV_USE_FS_WIN32 LV_USE_FS_WIN321794,49019
#    define LV_USE_FS_FATFS LV_USE_FS_FATFS1801,49279
#    define LV_USE_FS_FATFS LV_USE_FS_FATFS1803,49338
#    define LV_USE_PNG LV_USE_PNG1810,49494
#    define LV_USE_PNG LV_USE_PNG1812,49543
#    define LV_USE_BMP LV_USE_BMP1819,49655
#    define LV_USE_BMP LV_USE_BMP1821,49704
#    define LV_USE_SJPG LV_USE_SJPG1829,49897
#    define LV_USE_SJPG LV_USE_SJPG1831,49948
#    define LV_USE_GIF LV_USE_GIF1838,50061
#    define LV_USE_GIF LV_USE_GIF1840,50110
#    define LV_USE_QRCODE LV_USE_QRCODE1847,50224
#    define LV_USE_QRCODE LV_USE_QRCODE1849,50279
#    define LV_USE_FREETYPE LV_USE_FREETYPE1856,50401
#    define LV_USE_FREETYPE LV_USE_FREETYPE1858,50460
#    define LV_FREETYPE_CACHE_SIZE LV_FREETYPE_CACHE_SIZE1865,50669
#    define LV_FREETYPE_CACHE_SIZE LV_FREETYPE_CACHE_SIZE1867,50742
#    define LV_USE_RLOTTIE LV_USE_RLOTTIE1875,50887
#    define LV_USE_RLOTTIE LV_USE_RLOTTIE1877,50944
#      define LV_USE_SNAPSHOT LV_USE_SNAPSHOT1889,51163
#      define LV_USE_SNAPSHOT LV_USE_SNAPSHOT1891,51226
#    define LV_USE_SNAPSHOT LV_USE_SNAPSHOT1894,51277
#      define LV_BUILD_EXAMPLES LV_BUILD_EXAMPLES1907,51524
#      define LV_BUILD_EXAMPLES LV_BUILD_EXAMPLES1909,51591
#    define LV_BUILD_EXAMPLES LV_BUILD_EXAMPLES1912,51644
LV_EXPORT_CONST_INT(LV_DPI_DEF);LV_DPI_DEF1922,51809
#undef _LV_KCONFIG_PRESENT_LV_KCONFIG_PRESENT1924,51843
#    define _CRT_SECURE_NO_WARNINGS_CRT_SECURE_NO_WARNINGS1929,52058

lib/lvgl/src/core/lv_obj_scroll.h,953
#define LV_OBJ_SCROLL_HLV_OBJ_SCROLL_H7,61
    LV_SCROLLBAR_MODE_OFF,      /**< Never show scrollbars*/LV_SCROLLBAR_MODE_OFF32,537
    LV_SCROLLBAR_MODE_ON,       /**< Always show scrollbars*/LV_SCROLLBAR_MODE_ON33,598
    LV_SCROLLBAR_MODE_ACTIVE,   /**< Show scroll bars when object is being scrolled*/LV_SCROLLBAR_MODE_ACTIVE34,660
    LV_SCROLLBAR_MODE_AUTO,     /**< Show scroll bars when the content is large enough to be scrolled*/LV_SCROLLBAR_MODE_AUTO35,746
typedef uint8_t lv_scrollbar_mode_t;lv_scrollbar_mode_t37,853
    LV_SCROLL_SNAP_NONE,    /**< Do not align, leave where it is*/LV_SCROLL_SNAP_NONE42,995
    LV_SCROLL_SNAP_START,   /**< Align to the left/top*/LV_SCROLL_SNAP_START43,1062
    LV_SCROLL_SNAP_END,     /**< Align to the right/bottom*/LV_SCROLL_SNAP_END44,1119
    LV_SCROLL_SNAP_CENTER   /**< Align to the center*/LV_SCROLL_SNAP_CENTER45,1180
typedef uint8_t lv_scroll_snap_t;lv_scroll_snap_t47,1238

lib/lvgl/src/core/lv_obj_style_gen.h,12317
static inline lv_coord_t lv_obj_get_style_width(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_width1,0
static inline lv_coord_t lv_obj_get_style_min_width(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_min_width7,203
static inline lv_coord_t lv_obj_get_style_max_width(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_max_width13,414
static inline lv_coord_t lv_obj_get_style_height(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_height19,625
static inline lv_coord_t lv_obj_get_style_min_height(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_min_height25,830
static inline lv_coord_t lv_obj_get_style_max_height(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_max_height31,1043
static inline lv_coord_t lv_obj_get_style_x(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_x37,1256
static inline lv_coord_t lv_obj_get_style_y(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_y43,1451
static inline lv_align_t lv_obj_get_style_align(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_align49,1646
static inline lv_coord_t lv_obj_get_style_transform_width(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_transform_width55,1849
static inline lv_coord_t lv_obj_get_style_transform_height(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_transform_height61,2072
static inline lv_coord_t lv_obj_get_style_translate_x(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_translate_x67,2297
static inline lv_coord_t lv_obj_get_style_translate_y(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_translate_y73,2512
static inline lv_coord_t lv_obj_get_style_transform_zoom(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_transform_zoom79,2727
static inline lv_coord_t lv_obj_get_style_transform_angle(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_transform_angle85,2948
static inline lv_coord_t lv_obj_get_style_pad_top(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_pad_top91,3171
static inline lv_coord_t lv_obj_get_style_pad_bottom(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_pad_bottom97,3378
static inline lv_coord_t lv_obj_get_style_pad_left(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_pad_left103,3591
static inline lv_coord_t lv_obj_get_style_pad_right(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_pad_right109,3800
static inline lv_coord_t lv_obj_get_style_pad_row(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_pad_row115,4011
static inline lv_coord_t lv_obj_get_style_pad_column(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_pad_column121,4218
static inline lv_coord_t lv_obj_get_style_radius(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_radius127,4431
static inline bool lv_obj_get_style_clip_corner(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_clip_corner133,4636
static inline lv_opa_t lv_obj_get_style_opa(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_opa139,4839
static inline const lv_color_filter_dsc_t * lv_obj_get_style_color_filter_dsc(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_color_filter_dsc145,5034
static inline lv_opa_t lv_obj_get_style_color_filter_opa(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_color_filter_opa151,5297
static inline uint32_t lv_obj_get_style_anim_time(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_anim_time157,5518
static inline uint32_t lv_obj_get_style_anim_speed(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_anim_speed163,5725
static inline const lv_style_transition_dsc_t * lv_obj_get_style_transition(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_transition169,5934
static inline lv_blend_mode_t lv_obj_get_style_blend_mode(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_blend_mode175,6193
static inline uint16_t lv_obj_get_style_layout(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_layout181,6416
static inline lv_base_dir_t lv_obj_get_style_base_dir(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_base_dir187,6617
static inline lv_color_t lv_obj_get_style_bg_color(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_bg_color193,6832
static inline lv_color_t lv_obj_get_style_bg_color_filtered(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_bg_color_filtered199,7031
static inline lv_opa_t lv_obj_get_style_bg_opa(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_bg_opa205,7248
static inline lv_color_t lv_obj_get_style_bg_grad_color(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_bg_grad_color211,7449
static inline lv_color_t lv_obj_get_style_bg_grad_color_filtered(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_bg_grad_color_filtered217,7658
static inline lv_grad_dir_t lv_obj_get_style_bg_grad_dir(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_bg_grad_dir223,7885
static inline lv_coord_t lv_obj_get_style_bg_main_stop(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_bg_main_stop229,8106
static inline lv_coord_t lv_obj_get_style_bg_grad_stop(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_bg_grad_stop235,8323
static inline const void * lv_obj_get_style_bg_img_src(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_bg_img_src241,8540
static inline lv_opa_t lv_obj_get_style_bg_img_opa(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_bg_img_opa247,8757
static inline lv_color_t lv_obj_get_style_bg_img_recolor(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_bg_img_recolor253,8966
static inline lv_color_t lv_obj_get_style_bg_img_recolor_filtered(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_bg_img_recolor_filtered259,9177
static inline lv_opa_t lv_obj_get_style_bg_img_recolor_opa(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_bg_img_recolor_opa265,9406
static inline bool lv_obj_get_style_bg_img_tiled(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_bg_img_tiled271,9631
static inline lv_color_t lv_obj_get_style_border_color(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_border_color277,9836
static inline lv_color_t lv_obj_get_style_border_color_filtered(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_border_color_filtered283,10043
static inline lv_opa_t lv_obj_get_style_border_opa(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_border_opa289,10268
static inline lv_coord_t lv_obj_get_style_border_width(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_border_width295,10477
static inline lv_border_side_t lv_obj_get_style_border_side(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_border_side301,10694
static inline bool lv_obj_get_style_border_post(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_border_post307,10921
static inline lv_color_t lv_obj_get_style_text_color(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_text_color313,11124
static inline lv_color_t lv_obj_get_style_text_color_filtered(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_text_color_filtered319,11327
static inline lv_opa_t lv_obj_get_style_text_opa(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_text_opa325,11548
static inline const lv_font_t * lv_obj_get_style_text_font(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_text_font331,11753
static inline lv_coord_t lv_obj_get_style_text_letter_space(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_text_letter_space337,11978
static inline lv_coord_t lv_obj_get_style_text_line_space(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_text_line_space343,12205
static inline lv_text_decor_t lv_obj_get_style_text_decor(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_text_decor349,12428
static inline lv_text_align_t lv_obj_get_style_text_align(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_text_align355,12651
static inline lv_opa_t lv_obj_get_style_img_opa(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_img_opa361,12874
static inline lv_color_t lv_obj_get_style_img_recolor(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_img_recolor367,13077
static inline lv_color_t lv_obj_get_style_img_recolor_filtered(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_img_recolor_filtered373,13282
static inline lv_opa_t lv_obj_get_style_img_recolor_opa(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_img_recolor_opa379,13505
static inline lv_coord_t lv_obj_get_style_outline_width(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_outline_width385,13724
static inline lv_color_t lv_obj_get_style_outline_color(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_outline_color391,13943
static inline lv_color_t lv_obj_get_style_outline_color_filtered(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_outline_color_filtered397,14152
static inline lv_opa_t lv_obj_get_style_outline_opa(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_outline_opa403,14379
static inline lv_coord_t lv_obj_get_style_outline_pad(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_outline_pad409,14590
static inline lv_coord_t lv_obj_get_style_shadow_width(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_shadow_width415,14805
static inline lv_coord_t lv_obj_get_style_shadow_ofs_x(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_shadow_ofs_x421,15022
static inline lv_coord_t lv_obj_get_style_shadow_ofs_y(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_shadow_ofs_y427,15239
static inline lv_coord_t lv_obj_get_style_shadow_spread(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_shadow_spread433,15456
static inline lv_color_t lv_obj_get_style_shadow_color(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_shadow_color439,15675
static inline lv_color_t lv_obj_get_style_shadow_color_filtered(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_shadow_color_filtered445,15882
static inline lv_opa_t lv_obj_get_style_shadow_opa(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_shadow_opa451,16107
static inline lv_coord_t lv_obj_get_style_line_width(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_line_width457,16316
static inline lv_coord_t lv_obj_get_style_line_dash_width(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_line_dash_width463,16529
static inline lv_coord_t lv_obj_get_style_line_dash_gap(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_line_dash_gap469,16752
static inline bool lv_obj_get_style_line_rounded(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_line_rounded475,16971
static inline lv_color_t lv_obj_get_style_line_color(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_line_color481,17176
static inline lv_color_t lv_obj_get_style_line_color_filtered(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_line_color_filtered487,17379
static inline lv_opa_t lv_obj_get_style_line_opa(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_line_opa493,17600
static inline lv_coord_t lv_obj_get_style_arc_width(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_arc_width499,17805
static inline bool lv_obj_get_style_arc_rounded(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_arc_rounded505,18016
static inline lv_color_t lv_obj_get_style_arc_color(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_arc_color511,18219
static inline lv_color_t lv_obj_get_style_arc_color_filtered(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_arc_color_filtered517,18420
static inline lv_opa_t lv_obj_get_style_arc_opa(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_arc_opa523,18639
static inline const void * lv_obj_get_style_arc_img_src(const struct _lv_obj_t * obj, uint32_t part)lv_obj_get_style_arc_img_src529,18842

lib/lvgl/src/core/lv_group.c,2150
static lv_group_t * default_group;default_group35,755
void _lv_group_init(void)_lv_group_init45,928
lv_group_t * lv_group_create(void)lv_group_create50,1023
void lv_group_del(lv_group_t * group)lv_group_del71,1546
void lv_group_set_default(lv_group_t * group)lv_group_set_default90,2088
lv_group_t * lv_group_get_default(void)lv_group_get_default95,2166
void lv_group_add_obj(lv_group_t * group, lv_obj_t * obj)lv_group_add_obj100,2237
void lv_group_swap_obj(lv_obj_t * obj1, lv_obj_t * obj2)lv_group_swap_obj142,3426
void lv_group_remove_obj(lv_obj_t * obj)lv_group_remove_obj161,3954
void lv_group_remove_all_objs(lv_group_t * group)lv_group_remove_all_objs202,5259
void lv_group_focus_obj(lv_obj_t * obj)lv_group_focus_obj220,5769
void lv_group_focus_next(lv_group_t * group)lv_group_focus_next253,6790
void lv_group_focus_prev(lv_group_t * group)lv_group_focus_prev258,6902
void lv_group_focus_freeze(lv_group_t * group, bool en)lv_group_focus_freeze263,7014
lv_res_t lv_group_send_data(lv_group_t * group, uint32_t c)lv_group_send_data269,7142
void lv_group_set_focus_cb(lv_group_t * group, lv_group_focus_cb_t focus_cb)lv_group_set_focus_cb276,7344
void lv_group_set_editing(lv_group_t * group, bool edit)lv_group_set_editing281,7458
void lv_group_set_refocus_policy(lv_group_t * group, lv_group_refocus_policy_t policy)lv_group_set_refocus_policy299,7942
void lv_group_set_wrap(lv_group_t * group, bool en)lv_group_set_wrap304,8077
lv_obj_t * lv_group_get_focused(const lv_group_t * group)lv_group_get_focused309,8164
lv_group_focus_cb_t lv_group_get_focus_cb(const lv_group_t * group)lv_group_get_focus_cb317,8332
bool lv_group_get_editing(const lv_group_t * group)lv_group_get_editing323,8461
bool lv_group_get_wrap(lv_group_t * group)lv_group_get_wrap329,8589
uint32_t lv_group_get_obj_count(lv_group_t * group)lv_group_get_obj_count335,8705
static void lv_group_refocus(lv_group_t * g)lv_group_refocus343,8876
static void focus_next_core(lv_group_t * group, void * (*begin)(const lv_ll_t *),focus_next_core357,9293
static lv_indev_t * get_indev(const lv_group_t * g)get_indev437,11911

lib/lvgl/src/core/lv_event.c,2881
#define MY_CLASS MY_CLASS15,202
typedef struct _lv_event_dsc_t {_lv_event_dsc_t20,300
    lv_event_cb_t cb;cb21,333
    void * user_data;user_data22,355
    lv_event_code_t filter : 8;filter23,377
} lv_event_dsc_t;lv_event_dsc_t24,409
static lv_event_t * event_head;event_head37,747
    #define EVENT_TRACE(EVENT_TRACE43,867
    #define EVENT_TRACE(EVENT_TRACE45,928
lv_res_t lv_event_send(lv_obj_t * obj, lv_event_code_t event_code, void * param)lv_event_send52,1037
lv_res_t lv_obj_event_base(const lv_obj_class_t * class_p, lv_event_t * e)lv_obj_event_base83,1733
lv_obj_t * lv_event_get_target(lv_event_t * e)lv_event_get_target107,2390
lv_obj_t * lv_event_get_current_target(lv_event_t * e)lv_event_get_current_target112,2464
lv_event_code_t lv_event_get_code(lv_event_t * e)lv_event_get_code117,2554
void * lv_event_get_param(lv_event_t * e)lv_event_get_param122,2629
void * lv_event_get_user_data(lv_event_t * e)lv_event_get_user_data127,2697
uint32_t lv_event_register_id(void)lv_event_register_id133,2774
void _lv_event_mark_deleted(lv_obj_t * obj)_lv_event_mark_deleted140,2897
struct _lv_event_dsc_t * lv_obj_add_event_cb(lv_obj_t * obj, lv_event_cb_t event_cb, lv_event_code_t filter,lv_obj_add_event_cb151,3096
bool lv_obj_remove_event_cb(lv_obj_t * obj, lv_event_cb_t event_cb)lv_obj_remove_event_cb169,3934
bool lv_obj_remove_event_cb_with_user_data(lv_obj_t * obj, lv_event_cb_t event_cb, const void * user_data)lv_obj_remove_event_cb_with_user_data193,4848
bool lv_obj_remove_event_dsc(lv_obj_t * obj, struct _lv_event_dsc_t * event_dsc)lv_obj_remove_event_dsc219,5858
lv_indev_t * lv_event_get_indev(lv_event_t * e)lv_event_get_indev243,6764
lv_obj_draw_part_dsc_t * lv_event_get_draw_part_dsc(lv_event_t * e)lv_event_get_draw_part_dsc270,7600
const lv_area_t * lv_event_get_clip_area(lv_event_t * e)lv_event_get_clip_area282,7906
const lv_area_t * lv_event_get_old_size(lv_event_t * e)lv_event_get_old_size298,8371
uint32_t lv_event_get_key(lv_event_t * e)lv_event_get_key309,8618
lv_anim_t * lv_event_get_scroll_anim(lv_event_t * e)lv_event_get_scroll_anim322,8895
void lv_event_set_ext_draw_size(lv_event_t * e, lv_coord_t size)lv_event_set_ext_draw_size333,9136
lv_point_t * lv_event_get_self_size_info(lv_event_t * e)lv_event_get_self_size_info344,9439
lv_hit_test_info_t * lv_event_get_hit_test_info(lv_event_t * e)lv_event_get_hit_test_info355,9685
const lv_area_t * lv_event_get_cover_area(lv_event_t * e)lv_event_get_cover_area366,9933
void lv_event_set_cover_res(lv_event_t * e, lv_cover_res_t res)lv_event_set_cover_res378,10226
static lv_event_dsc_t * lv_obj_get_event_dsc(const lv_obj_t * obj, uint32_t id)lv_obj_get_event_dsc393,10625
static lv_res_t event_send_core(lv_event_t * e)event_send_core403,10883
static bool event_is_bubbled(lv_event_t * e)event_is_bubbled442,12107

lib/lvgl/src/core/lv_disp.c,1650
lv_obj_t * lv_disp_get_scr_act(lv_disp_t * disp)lv_disp_get_scr_act49,1057
lv_obj_t * lv_disp_get_scr_prev(lv_disp_t * disp)lv_disp_get_scr_prev66,1570
void lv_disp_load_scr(lv_obj_t * scr)lv_disp_load_scr81,1879
lv_obj_t * lv_disp_get_layer_top(lv_disp_t * disp)lv_disp_get_layer_top104,2686
lv_obj_t * lv_disp_get_layer_sys(lv_disp_t * disp)lv_disp_get_layer_sys121,3238
void lv_disp_set_theme(lv_disp_t * disp, lv_theme_t * th)lv_disp_set_theme136,3566
lv_theme_t * lv_disp_get_theme(lv_disp_t * disp)lv_disp_get_theme153,4063
void lv_disp_set_bg_color(lv_disp_t * disp, lv_color_t color)lv_disp_set_bg_color164,4317
void lv_disp_set_bg_image(lv_disp_t * disp, const void  * img_src)lv_disp_set_bg_image185,4834
void lv_disp_set_bg_opa(lv_disp_t * disp, lv_opa_t opa)lv_disp_set_bg_opa205,5306
void lv_scr_load_anim(lv_obj_t * new_scr, lv_scr_load_anim_t anim_type, uint32_t time, uint32_t delay, bool auto_del)lv_scr_load_anim228,5989
uint32_t lv_disp_get_inactive_time(const lv_disp_t * disp)lv_disp_get_inactive_time350,10361
void lv_disp_trig_activity(lv_disp_t * disp)lv_disp_trig_activity370,10861
void lv_disp_clean_dcache(lv_disp_t * disp)lv_disp_clean_dcache385,11242
lv_timer_t * _lv_disp_get_refr_timer(lv_disp_t * disp)_lv_disp_get_refr_timer403,11750
static void scr_load_anim_start(lv_anim_t * a)scr_load_anim_start418,12069
static void opa_scale_anim(void * obj, int32_t v)opa_scale_anim428,12290
static void set_x_anim(void * obj, int32_t v)set_x_anim433,12382
static void set_y_anim(void * obj, int32_t v)set_y_anim438,12459
static void scr_anim_ready(lv_anim_t * a)scr_anim_ready443,12536

lib/lvgl/src/core/lv_core.mk,0

lib/lvgl/src/core/lv_obj_pos.h,346
#define LV_OBJ_POS_HLV_OBJ_POS_H7,55
typedef void (*lv_layout_update_cb_t)(struct _lv_obj_t *, void * user_data);lv_layout_update_cb_t27,360
    lv_layout_update_cb_t cb;cb29,454
    void * user_data;user_data30,484
} lv_layout_dsc_t;lv_layout_dsc_t31,506
static inline void lv_obj_center(struct _lv_obj_t * obj)lv_obj_center187,6678

lib/lvgl/src/core/lv_theme.c,875
lv_theme_t  * lv_theme_get_from_obj(lv_obj_t * obj)lv_theme_get_from_obj36,590
void lv_theme_apply(lv_obj_t * obj)lv_theme_apply47,915
void lv_theme_set_parent(lv_theme_t * new_theme, lv_theme_t * base)lv_theme_set_parent64,1450
void lv_theme_set_apply_cb(lv_theme_t * theme, lv_theme_apply_cb_t apply_cb)lv_theme_set_apply_cb75,1750
const lv_font_t * lv_theme_get_font_small(lv_obj_t * obj)lv_theme_get_font_small80,1864
const lv_font_t * lv_theme_get_font_normal(lv_obj_t * obj)lv_theme_get_font_normal86,2027
const lv_font_t * lv_theme_get_font_large(lv_obj_t * obj)lv_theme_get_font_large92,2192
lv_color_t lv_theme_get_color_primary(lv_obj_t * obj)lv_theme_get_color_primary98,2355
lv_color_t lv_theme_get_color_secondary(lv_obj_t * obj)lv_theme_get_color_secondary104,2539
static void apply_theme(lv_theme_t * th, lv_obj_t * obj)apply_theme114,2794

lib/lvgl/src/core/lv_obj_draw.h,2657
#define LV_OBJ_DRAW_HLV_OBJ_DRAW_H7,57
    LV_COVER_RES_COVER      = 0,LV_COVER_RES_COVER31,430
    LV_COVER_RES_NOT_COVER  = 1,LV_COVER_RES_NOT_COVER32,463
    LV_COVER_RES_MASKED     = 2,LV_COVER_RES_MASKED33,496
} lv_cover_res_t;lv_cover_res_t34,529
    const lv_area_t * clip_area;        /**< The current clip area, required if you need to draw something in the event*/clip_area37,565
    const struct _lv_obj_class_t * class_p;     /**< The class that sent the event */class_p38,687
    uint32_t type;                      /**< The type if part being draw. Element of `lv_<name>_draw_part_type_t` */type39,773
    lv_area_t * draw_area;              /**< The area of the part being drawn*/draw_area40,890
    rect_dsc;      /**< A draw descriptor that can be modified to changed what LVGL will draw. Set only for rectangle-like parts*/rect_dsc42,995
    label_dsc;    /**< A draw descriptor that can be modified to changed what LVGL will draw. Set only for text-like parts*/label_dsc44,1152
    line_dsc;      /**< A draw descriptor that can be modified to changed what LVGL will draw. Set only for line-like parts*/line_dsc46,1302
    img_dsc;       /**< A draw descriptor that can be modified to changed what LVGL will draw. Set only for image-like parts*/img_dsc48,1453
    arc_dsc;       /**< A draw descriptor that can be modified to changed what LVGL will draw. Set only for arc-like parts*/arc_dsc50,1605
    p1;              /**< A point calculated during drawing. E.g. a point of chart or the center of an arc.*/p152,1753
    const lv_point_t * p2;              /**< A point calculated during drawing. E.g. a point of chart.*/p253,1863
    char * text;                  /**< A text calculated during drawing. Can be modified. E.g. tick labels on a chart axis.*/text54,1968
    uint32_t text_length;               /**< Size of the text buffer containing null-terminated text string calculated during drawing.*/text_length55,2094
    uint32_t part;                      /**< The current part for which the event is sent*/part56,2231
    uint32_t id;                        /**< The index of the part. E.g. a button's index on button matrix or table cell index.*/id57,2323
    lv_coord_t radius;                  /**< E.g. the radius of an arc (not the corner radius).*/radius58,2453
    int32_t value;                      /**< A value calculated during drawing. E.g. Chart's tick line value.*/value59,2551
    const void * sub_part_ptr;          /**< A pointer the identifies something in the part. E.g. chart series. */sub_part_ptr60,2663
} lv_obj_draw_part_dsc_t;lv_obj_draw_part_dsc_t61,2778

lib/lvgl/src/core/lv_obj_style.h,2274
#define LV_OBJ_STYLE_HLV_OBJ_STYLE_H7,59
    _LV_STYLE_STATE_CMP_SAME,           /*The style properties in the 2 states are identical*/_LV_STYLE_STATE_CMP_SAME31,486
    _LV_STYLE_STATE_CMP_DIFF_REDRAW,    /*The differences can be shown with a simple redraw*/_LV_STYLE_STATE_CMP_DIFF_REDRAW32,581
    _LV_STYLE_STATE_CMP_DIFF_DRAW_PAD,  /*The differences can be shown with a simple redraw*/_LV_STYLE_STATE_CMP_DIFF_DRAW_PAD33,675
    _LV_STYLE_STATE_CMP_DIFF_LAYOUT,    /*The differences can be shown with a simple redraw*/_LV_STYLE_STATE_CMP_DIFF_LAYOUT34,769
} _lv_style_state_cmp_t;_lv_style_state_cmp_t35,863
typedef uint32_t lv_style_selector_t;lv_style_selector_t37,889
    lv_style_t * style;style40,945
    uint32_t selector : 24;selector41,969
    uint32_t is_local : 1;is_local42,997
    uint32_t is_trans : 1;is_trans43,1024
} _lv_obj_style_t;_lv_obj_style_t44,1051
    uint16_t time;time47,1088
    uint16_t delay;delay48,1107
    lv_style_selector_t selector;selector49,1127
    lv_style_prop_t prop;prop50,1161
    lv_anim_path_cb_t path_cb;path_cb51,1187
    void * user_data;user_data53,1239
} _lv_obj_style_transition_dsc_t;_lv_obj_style_transition_dsc_t55,1268
static inline void lv_obj_remove_style_all(struct _lv_obj_t * obj)lv_obj_remove_style_all92,2810
static inline void lv_obj_set_style_pad_all(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)lv_obj_set_style_pad_all199,7147
static inline void lv_obj_set_style_pad_hor(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)lv_obj_set_style_pad_hor207,7482
static inline void lv_obj_set_style_pad_ver(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)lv_obj_set_style_pad_ver213,7710
static inline void lv_obj_set_style_pad_gap(struct _lv_obj_t * obj,  lv_coord_t value, lv_style_selector_t selector)lv_obj_set_style_pad_gap219,7938
static inline void lv_obj_set_style_size(struct _lv_obj_t * obj,  lv_coord_t value, lv_style_selector_t selector)lv_obj_set_style_size225,8167
static inline lv_coord_t lv_obj_get_x_aligned(const struct _lv_obj_t * obj)lv_obj_get_x_aligned233,8503
static inline lv_coord_t lv_obj_get_y_aligned(const struct _lv_obj_t * obj)lv_obj_get_y_aligned238,8634

lib/lvgl/src/core/lv_indev_scroll.c,1374
#define ELASTIC_SLOWNESS_FACTOR ELASTIC_SLOWNESS_FACTOR15,218
void _lv_indev_scroll_handler(_lv_indev_proc_t * proc)_lv_indev_scroll_handler46,1387
void _lv_indev_scroll_throw_handler(_lv_indev_proc_t * proc)_lv_indev_scroll_throw_handler95,3336
lv_coord_t lv_indev_scroll_throw_predict(lv_indev_t * indev, lv_dir_t dir)lv_indev_scroll_throw_predict207,8128
void lv_indev_scroll_get_snap_dist(lv_obj_t * obj, lv_point_t * p)lv_indev_scroll_get_snap_dist232,8727
static lv_obj_t * find_scroll_obj(_lv_indev_proc_t * proc)find_scroll_obj242,9011
static void init_scroll_limits(_lv_indev_proc_t * proc)init_scroll_limits344,13598
static lv_coord_t find_snap_point_x(const lv_obj_t * obj, lv_coord_t min, lv_coord_t max, lv_coord_t ofs)find_snap_point_x412,17383
static lv_coord_t find_snap_point_y(const lv_obj_t * obj, lv_coord_t min, lv_coord_t max, lv_coord_t ofs)find_snap_point_y467,19623
static void scroll_limit_diff(_lv_indev_proc_t * proc, lv_coord_t * diff_x, lv_coord_t * diff_y)scroll_limit_diff513,21404
static lv_coord_t scroll_throw_predict_y(_lv_indev_proc_t * proc)scroll_throw_predict_y538,22345
static lv_coord_t scroll_throw_predict_x(_lv_indev_proc_t * proc)scroll_throw_predict_x554,22719
static lv_coord_t elastic_diff(lv_obj_t * scroll_obj, lv_coord_t diff, lv_coord_t scroll_start, lv_coord_t scroll_end,elastic_diff569,23092

lib/lvgl/src/core/lv_obj_style.c,3711
#define MY_CLASS MY_CLASS16,232
    lv_obj_t * obj;obj23,348
    lv_style_prop_t prop;prop24,368
    lv_style_selector_t selector;selector25,394
    lv_style_value_t start_value;start_value26,428
    lv_style_value_t end_value;end_value27,462
} trans_t;trans_t28,494
    CACHE_ZERO = 0,CACHE_ZERO31,521
    CACHE_TRUE = 1,CACHE_TRUE32,541
    CACHE_UNSET = 2,CACHE_UNSET33,561
    CACHE_255 = 3,CACHE_25534,582
    CACHE_NEED_CHECK = 4,CACHE_NEED_CHECK35,601
} cache_t;cache_t36,627
static bool style_refr = true;style_refr61,1678
void _lv_obj_style_init(void)_lv_obj_style_init71,1847
void lv_obj_add_style(lv_obj_t * obj, lv_style_t * style, lv_style_selector_t selector)lv_obj_add_style76,1953
void lv_obj_remove_style(lv_obj_t * obj, lv_style_t * style, lv_style_selector_t selector)lv_obj_remove_style106,2909
void lv_obj_report_style_change(lv_style_t * style)lv_obj_report_style_change153,4636
void lv_obj_refresh_style(lv_obj_t * obj, lv_style_selector_t selector, lv_style_prop_t prop)lv_obj_refresh_style167,4955
void lv_obj_enable_style_refresh(bool en)lv_obj_enable_style_refresh205,6280
lv_style_value_t lv_obj_get_style_prop(const lv_obj_t * obj, lv_part_t part, lv_style_prop_t prop)lv_obj_get_style_prop210,6348
void lv_obj_set_local_style_prop(lv_obj_t * obj, lv_style_prop_t prop, lv_style_value_t value,lv_obj_set_local_style_prop257,7786
lv_res_t lv_obj_get_local_style_prop(lv_obj_t * obj, lv_style_prop_t prop, lv_style_value_t * value,lv_obj_get_local_style_prop266,8097
bool lv_obj_remove_local_style_prop(lv_obj_t * obj, lv_style_prop_t prop, lv_style_selector_t selector)lv_obj_remove_local_style_prop280,8530
void _lv_obj_style_create_transition(lv_obj_t * obj, lv_part_t part, lv_state_t prev_state, lv_state_t new_state,_lv_obj_style_create_transition299,9014
_lv_style_state_cmp_t _lv_obj_style_state_compare(lv_obj_t * obj, lv_state_t state1, lv_state_t state2)_lv_obj_style_state_compare358,11155
void lv_obj_fade_in(lv_obj_t * obj, uint32_t time, uint32_t delay)lv_obj_fade_in420,15402
void lv_obj_fade_out(lv_obj_t * obj, uint32_t time, uint32_t delay)lv_obj_fade_out433,15782
lv_state_t lv_obj_style_get_selector_state(lv_style_selector_t selector)lv_obj_style_get_selector_state445,16113
lv_part_t lv_obj_style_get_selector_part(lv_style_selector_t selector)lv_obj_style_get_selector_part450,16221
lv_text_align_t lv_obj_calculate_style_text_align(const struct _lv_obj_t * obj, lv_part_t part, const char * txt)lv_obj_calculate_style_text_align456,16330
static lv_style_t * get_local_style(lv_obj_t * obj,  lv_style_selector_t selector)get_local_style476,17077
static _lv_obj_style_t * get_trans_style(lv_obj_t * obj,  lv_style_selector_t selector)get_trans_style513,18458
static bool get_prop_core(const lv_obj_t * obj, lv_part_t part, lv_style_prop_t prop, lv_style_value_t * v)get_prop_core539,19273
static lv_style_value_t apply_color_filter(const lv_obj_t * obj, uint32_t part, lv_style_value_t v)apply_color_filter601,21286
static void report_style_change_core(void * style, lv_obj_t * obj)report_style_change_core617,21852
static void refresh_children_style(lv_obj_t * obj)refresh_children_style638,22507
static bool trans_del(lv_obj_t * obj, lv_part_t part, lv_style_prop_t prop, trans_t * tr_limit)trans_del661,23364
static void trans_anim_cb(void * _tr, int32_t v)trans_anim_cb693,24594
static void trans_anim_start_cb(lv_anim_t * a)trans_anim_start_cb756,27124
static void trans_anim_ready_cb(lv_anim_t * a)trans_anim_ready_cb777,27819
static void fade_anim_cb(void * obj, int32_t v)fade_anim_cb815,29024
static void fade_in_anim_ready(lv_anim_t * a)fade_in_anim_ready820,29114

lib/lvgl/src/core/lv_obj.c,2525
#define MY_CLASS MY_CLASS45,929
#define LV_OBJ_DEF_WIDTH LV_OBJ_DEF_WIDTH46,960
#define LV_OBJ_DEF_HEIGHT LV_OBJ_DEF_HEIGHT47,1002
#define GRID_DEBUG GRID_DEBUG48,1043
#define STYLE_TRANSITION_MAX STYLE_TRANSITION_MAX49,1109
static bool lv_initialized = false;lv_initialized70,1933
const lv_obj_class_t lv_obj_class = {lv_obj_class71,1969
bool lv_is_initialized(void)lv_is_initialized91,2476
void lv_init(void)lv_init96,2537
void lv_deinit(void)lv_deinit189,5008
lv_obj_t * lv_obj_create(lv_obj_t * parent)lv_obj_create208,5294
void lv_obj_add_flag(lv_obj_t * obj, lv_obj_flag_t f)lv_obj_add_flag224,5610
void lv_obj_clear_flag(lv_obj_t * obj, lv_obj_flag_t f)lv_obj_clear_flag250,6339
void lv_obj_add_state(lv_obj_t * obj, lv_state_t state)lv_obj_add_state276,7138
void lv_obj_clear_state(lv_obj_t * obj, lv_state_t state)lv_obj_clear_state286,7363
bool lv_obj_has_flag(const lv_obj_t * obj, lv_obj_flag_t f)lv_obj_has_flag300,7667
bool lv_obj_has_flag_any(const lv_obj_t * obj, lv_obj_flag_t f)lv_obj_has_flag_any307,7817
lv_state_t lv_obj_get_state(const lv_obj_t * obj)lv_obj_get_state314,7965
bool lv_obj_has_state(const lv_obj_t * obj, lv_state_t state)lv_obj_has_state321,8078
void * lv_obj_get_group(const lv_obj_t * obj)lv_obj_get_group328,8226
void lv_obj_allocate_spec_attr(lv_obj_t * obj)lv_obj_allocate_spec_attr340,8454
bool lv_obj_check_type(const lv_obj_t * obj, const lv_obj_class_t * class_p)lv_obj_check_type358,8960
bool lv_obj_has_class(const lv_obj_t * obj, const lv_obj_class_t * class_p)lv_obj_has_class364,9127
const lv_obj_class_t * lv_obj_get_class(const lv_obj_t * obj)lv_obj_get_class375,9398
bool lv_obj_is_valid(const lv_obj_t * obj)lv_obj_is_valid380,9490
static void lv_obj_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)lv_obj_constructor401,9971
static void lv_obj_destructor(const lv_obj_class_t * class_p, lv_obj_t * obj)lv_obj_destructor431,11065
static void lv_obj_draw(lv_event_t * e)lv_obj_draw464,12002
static void draw_scrollbar(lv_obj_t * obj, const lv_area_t * clip_area)draw_scrollbar605,17298
static lv_res_t scrollbar_init_draw_dsc(lv_obj_t * obj, lv_draw_rect_dsc_t * dsc)scrollbar_init_draw_dsc645,18717
static void lv_obj_event(const lv_obj_class_t * class_p, lv_event_t * e)lv_obj_event697,20584
static void lv_obj_set_state(lv_obj_t * obj, lv_state_t new_state)lv_obj_set_state853,27413
static bool obj_valid_child(const lv_obj_t * parent, const lv_obj_t * obj_to_find)obj_valid_child926,30301

lib/lvgl/src/core/lv_obj_class.c,591
#define MY_CLASS MY_CLASS15,206
lv_obj_t * lv_obj_class_create_obj(const lv_obj_class_t * class_p, lv_obj_t * parent)lv_obj_class_create_obj43,770
void lv_obj_class_init_obj(lv_obj_t * obj)lv_obj_class_init_obj103,2906
void _lv_obj_destruct(lv_obj_t * obj)_lv_obj_destruct133,3785
bool lv_obj_is_editable(lv_obj_t * obj)lv_obj_is_editable146,4170
bool lv_obj_is_group_def(lv_obj_t * obj)lv_obj_is_group_def158,4531
static void lv_obj_construct(lv_obj_t * obj)lv_obj_construct174,4970
static uint32_t get_instance_size(const lv_obj_class_t * class_p)get_instance_size192,5487

lib/lvgl/src/core/lv_group.h,1923
#define LV_GROUP_HLV_GROUP_H7,51
    LV_KEY_UP        = 17,  /*0x11*/LV_KEY_UP30,458
    LV_KEY_DOWN      = 18,  /*0x12*/LV_KEY_DOWN31,495
    LV_KEY_RIGHT     = 19,  /*0x13*/LV_KEY_RIGHT32,532
    LV_KEY_LEFT      = 20,  /*0x14*/LV_KEY_LEFT33,569
    LV_KEY_ESC       = 27,  /*0x1B*/LV_KEY_ESC34,606
    LV_KEY_DEL       = 127, /*0x7F*/LV_KEY_DEL35,643
    LV_KEY_BACKSPACE = 8,   /*0x08*/LV_KEY_BACKSPACE36,680
    LV_KEY_ENTER     = 10,  /*0x0A, '\n'*/LV_KEY_ENTER37,717
    LV_KEY_NEXT      = 9,   /*0x09, '\t'*/LV_KEY_NEXT38,760
    LV_KEY_PREV      = 11,  /*0x0B, '*/LV_KEY_PREV39,803
    LV_KEY_HOME      = 2,   /*0x02, STX*/LV_KEY_HOME40,843
    LV_KEY_END       = 3,   /*0x03, ETX*/LV_KEY_END41,885
typedef uint8_t lv_key_t;lv_key_t43,930
typedef void (*lv_group_focus_cb_t)(struct _lv_group_t *);lv_group_focus_cb_t52,1063
typedef struct _lv_group_t {_lv_group_t58,1296
    lv_ll_t obj_ll;        /**< Linked list to store the objects in the group*/obj_ll59,1325
    struct _lv_obj_t ** obj_focus; /**< The object in focus*/obj_focus60,1405
    lv_group_focus_cb_t focus_cb;              /**< A function to call when a new object is focused (optional)*/focus_cb62,1468
    void * user_data;user_data64,1602
    uint8_t frozen : 1;         /**< 1: can't focus to new object*/frozen67,1632
    uint8_t editing : 1;        /**< 1: Edit mode, 0: Navigate mode*/editing68,1700
    uint8_t refocus_policy : 1; /**< 1: Focus prev if focused on deletion. 0: Focus next if focused onrefocus_policy69,1770
    uint8_t wrap : 1;           /**< 1: Focus next/prev can wrap at end of list. 0: Focus next/prev stops at endwrap71,1920
} lv_group_t;lv_group_t73,2079
    LV_GROUP_REFOCUS_POLICY_NEXT = 0,LV_GROUP_REFOCUS_POLICY_NEXT77,2110
    LV_GROUP_REFOCUS_POLICY_PREV = 1LV_GROUP_REFOCUS_POLICY_PREV78,2148
} lv_group_refocus_policy_t;lv_group_refocus_policy_t79,2185

lib/lvgl/src/core/lv_obj_scroll.c,3200
#define MY_CLASS MY_CLASS18,284
#define SCROLL_ANIM_TIME_MIN SCROLL_ANIM_TIME_MIN19,315
#define SCROLL_ANIM_TIME_MAX SCROLL_ANIM_TIME_MAX20,361
#define SCROLLBAR_MIN_SIZE SCROLLBAR_MIN_SIZE21,407
void lv_obj_set_scrollbar_mode(lv_obj_t * obj, lv_scrollbar_mode_t mode)lv_obj_set_scrollbar_mode57,1326
void lv_obj_set_scroll_dir(lv_obj_t * obj, lv_dir_t dir)lv_obj_set_scroll_dir68,1602
void lv_obj_set_scroll_snap_x(lv_obj_t * obj, lv_scroll_snap_t align)lv_obj_set_scroll_snap_x77,1793
void lv_obj_set_scroll_snap_y(lv_obj_t * obj, lv_scroll_snap_t align)lv_obj_set_scroll_snap_y83,1947
lv_scrollbar_mode_t lv_obj_get_scrollbar_mode(const lv_obj_t * obj)lv_obj_get_scrollbar_mode93,2171
lv_dir_t lv_obj_get_scroll_dir(const lv_obj_t * obj)lv_obj_get_scroll_dir99,2346
lv_scroll_snap_t lv_obj_get_scroll_snap_x(const lv_obj_t * obj)lv_obj_get_scroll_snap_x105,2490
lv_scroll_snap_t lv_obj_get_scroll_snap_y(const lv_obj_t * obj)lv_obj_get_scroll_snap_y111,2657
lv_coord_t lv_obj_get_scroll_x(const lv_obj_t * obj)lv_obj_get_scroll_x117,2824
lv_coord_t lv_obj_get_scroll_y(const lv_obj_t * obj)lv_obj_get_scroll_y123,2961
lv_coord_t lv_obj_get_scroll_top(lv_obj_t * obj)lv_obj_get_scroll_top129,3098
lv_coord_t lv_obj_get_scroll_bottom(lv_obj_t * obj)lv_obj_get_scroll_bottom135,3231
lv_coord_t lv_obj_get_scroll_left(lv_obj_t * obj)lv_obj_get_scroll_left162,4240
lv_coord_t lv_obj_get_scroll_right(lv_obj_t * obj)lv_obj_get_scroll_right205,5717
void lv_obj_get_scroll_end(struct _lv_obj_t  * obj, lv_point_t * end)lv_obj_get_scroll_end241,7143
void lv_obj_scroll_by(lv_obj_t * obj, lv_coord_t x, lv_coord_t y, lv_anim_enable_t anim_en)lv_obj_scroll_by255,7507
void lv_obj_scroll_to(lv_obj_t * obj, lv_coord_t x, lv_coord_t y, lv_anim_enable_t anim_en)lv_obj_scroll_to310,9561
void lv_obj_scroll_to_x(lv_obj_t * obj, lv_coord_t x, lv_anim_enable_t anim_en)lv_obj_scroll_to_x316,9740
void lv_obj_scroll_to_y(lv_obj_t * obj, lv_coord_t y, lv_anim_enable_t anim_en)lv_obj_scroll_to_y346,10673
void lv_obj_scroll_to_view(lv_obj_t * obj, lv_anim_enable_t anim_en)lv_obj_scroll_to_view364,11235
void lv_obj_scroll_to_view_recursive(lv_obj_t * obj, lv_anim_enable_t anim_en)lv_obj_scroll_to_view_recursive373,11473
bool lv_obj_is_scrolling(const lv_obj_t * obj)lv_obj_is_scrolling388,11899
void lv_obj_update_snap(lv_obj_t * obj, lv_anim_enable_t anim_en)lv_obj_update_snap399,12150
void lv_obj_get_scrollbar_area(lv_obj_t * obj, lv_area_t * hor_area, lv_area_t * ver_area)lv_obj_get_scrollbar_area407,12360
void lv_obj_scrollbar_invalidate(lv_obj_t * obj)lv_obj_scrollbar_invalidate566,19231
void lv_obj_readjust_scroll(lv_obj_t * obj, lv_anim_enable_t anim_en)lv_obj_readjust_scroll578,19638
static void scroll_by_raw(lv_obj_t * obj, lv_coord_t x, lv_coord_t y)scroll_by_raw615,20906
static void scroll_x_anim(void * obj, int32_t v)scroll_x_anim630,21292
static void scroll_y_anim(void * obj, int32_t v)scroll_y_anim635,21403
static void scroll_anim_ready_cb(lv_anim_t * a)scroll_anim_ready_cb640,21514
static void scroll_area_into_view(const lv_area_t * area, lv_obj_t * child, lv_point_t * scroll_value,scroll_area_into_view645,21621

lib/lvgl/src/core/lv_obj_tree.c,1458
#define MY_CLASS MY_CLASS20,312
void lv_obj_del(lv_obj_t * obj)lv_obj_del45,879
void lv_obj_clean(lv_obj_t * obj)lv_obj_clean84,1958
void lv_obj_del_delayed(lv_obj_t * obj, uint32_t delay_ms)lv_obj_del_delayed108,2547
void lv_obj_del_anim_ready_cb(lv_anim_t * a)lv_obj_del_anim_ready_cb120,2860
void lv_obj_del_async(lv_obj_t * obj)lv_obj_del_async125,2934
void lv_obj_set_parent(lv_obj_t * obj, lv_obj_t * parent)lv_obj_set_parent131,3056
void lv_obj_move_to_index(lv_obj_t * obj, int32_t index)lv_obj_move_to_index187,4999
void lv_obj_swap(lv_obj_t * obj1, lv_obj_t * obj2)lv_obj_swap218,5809
lv_obj_t * lv_obj_get_screen(const lv_obj_t * obj)lv_obj_get_screen248,6721
lv_disp_t * lv_obj_get_disp(const lv_obj_t * obj)lv_obj_get_disp263,7008
lv_obj_t * lv_obj_get_parent(const lv_obj_t * obj)lv_obj_get_parent284,7504
lv_obj_t * lv_obj_get_child(const lv_obj_t * obj, int32_t id)lv_obj_get_child292,7652
uint32_t lv_obj_get_child_cnt(const lv_obj_t * obj)lv_obj_get_child_cnt312,8082
uint32_t lv_obj_get_index(const lv_obj_t * obj)lv_obj_get_index319,8252
void lv_obj_tree_walk(lv_obj_t * start_obj, lv_obj_tree_walk_cb_t cb, void * user_data)lv_obj_tree_walk334,8606
static void lv_obj_del_async_cb(void * obj)lv_obj_del_async_cb343,8812
static void obj_del_core(lv_obj_t * obj)obj_del_core350,8917
static lv_obj_tree_walk_res_t walk_core(lv_obj_t * obj, lv_obj_tree_walk_cb_t cb, void * user_data)walk_core417,11218

lib/lvgl/src/core/lv_obj_class.h,1746
#define LV_OBJ_CLASS_HLV_OBJ_CLASS_H7,59
    LV_OBJ_CLASS_EDITABLE_INHERIT,      /**< Check the base class. Must have 0 value to let zero initialized class inherit*/LV_OBJ_CLASS_EDITABLE_INHERIT33,439
    LV_OBJ_CLASS_EDITABLE_TRUE,LV_OBJ_CLASS_EDITABLE_TRUE34,564
    LV_OBJ_CLASS_EDITABLE_FALSE,LV_OBJ_CLASS_EDITABLE_FALSE35,596
} lv_obj_class_editable_t;lv_obj_class_editable_t36,629
    LV_OBJ_CLASS_GROUP_DEF_INHERIT,      /**< Check the base class. Must have 0 value to let zero initialized class inherit*/LV_OBJ_CLASS_GROUP_DEF_INHERIT39,672
    LV_OBJ_CLASS_GROUP_DEF_TRUE,LV_OBJ_CLASS_GROUP_DEF_TRUE40,798
    LV_OBJ_CLASS_GROUP_DEF_FALSE,LV_OBJ_CLASS_GROUP_DEF_FALSE41,831
} lv_obj_class_group_def_t;lv_obj_class_group_def_t42,865
typedef void (*lv_obj_class_event_cb_t)(struct _lv_obj_class_t * class_p, struct _lv_event_t * e);lv_obj_class_event_cb_t44,894
typedef struct _lv_obj_class_t {_lv_obj_class_t49,1076
    const struct _lv_obj_class_t * base_class;base_class50,1109
    void (*constructor_cb)(const struct _lv_obj_class_t * class_p, struct _lv_obj_t * obj);constructor_cb51,1156
    void (*destructor_cb)(const struct _lv_obj_class_t * class_p, struct _lv_obj_t * obj);destructor_cb52,1248
    void * user_data;user_data54,1360
    void (*event_cb)(const struct _lv_obj_class_t * class_p,event_cb56,1389
    lv_coord_t width_def;width_def58,1540
    lv_coord_t height_def;height_def59,1566
    uint32_t editable : 2;             /**< Value from ::lv_obj_class_editable_t*/editable60,1593
    uint32_t group_def : 2;            /**< Value from ::lv_obj_class_group_def_t*/group_def61,1676
    uint32_t instance_size : 16;instance_size62,1760
} lv_obj_class_t;lv_obj_class_t63,1793

lib/lvgl/src/core/lv_obj.h,8414
#define LV_OBJ_HLV_OBJ_H7,47
    LV_STATE_DEFAULT     =  0x0000,LV_STATE_DEFAULT42,648
    LV_STATE_CHECKED     =  0x0001,LV_STATE_CHECKED43,684
    LV_STATE_FOCUSED     =  0x0002,LV_STATE_FOCUSED44,720
    LV_STATE_FOCUS_KEY   =  0x0004,LV_STATE_FOCUS_KEY45,756
    LV_STATE_EDITED      =  0x0008,LV_STATE_EDITED46,792
    LV_STATE_HOVERED     =  0x0010,LV_STATE_HOVERED47,828
    LV_STATE_PRESSED     =  0x0020,LV_STATE_PRESSED48,864
    LV_STATE_SCROLLED    =  0x0040,LV_STATE_SCROLLED49,900
    LV_STATE_DISABLED    =  0x0080,LV_STATE_DISABLED50,936
    LV_STATE_USER_1      =  0x1000,LV_STATE_USER_152,973
    LV_STATE_USER_2      =  0x2000,LV_STATE_USER_253,1009
    LV_STATE_USER_3      =  0x4000,LV_STATE_USER_354,1045
    LV_STATE_USER_4      =  0x8000,LV_STATE_USER_455,1081
    LV_STATE_ANY = 0xFFFF,    /**< Special value can be used in some functions to target all states*/LV_STATE_ANY57,1118
typedef uint16_t lv_state_t;lv_state_t60,1224
    LV_PART_MAIN         = 0x000000,   /**< A background like rectangle*/LV_PART_MAIN69,1471
    LV_PART_SCROLLBAR    = 0x010000,   /**< The scrollbar(s)*/LV_PART_SCROLLBAR70,1545
    LV_PART_INDICATOR    = 0x020000,   /**< Indicator, e.g. for slider, bar, switch, or the tick box of the checkbox*/LV_PART_INDICATOR71,1608
    LV_PART_KNOB         = 0x030000,   /**< Like handle to grab to adjust the value*/LV_PART_KNOB72,1727
    LV_PART_SELECTED     = 0x040000,   /**< Indicate the currently selected option or section*/LV_PART_SELECTED73,1813
    LV_PART_ITEMS        = 0x050000,   /**< Used if the widget has multiple similar elements (e.g. table cells)*/LV_PART_ITEMS74,1909
    LV_PART_TICKS        = 0x060000,   /**< Ticks on scale e.g. for a chart or meter*/LV_PART_TICKS75,2023
    LV_PART_CURSOR       = 0x070000,   /**< Mark a specific place e.g. for text area's cursor or on a chart*/LV_PART_CURSOR76,2110
    LV_PART_CUSTOM_FIRST = 0x080000,    /**< Extension point for custom widgets*/LV_PART_CUSTOM_FIRST78,2221
    LV_PART_ANY          = 0x0F0000,    /**< Special value can be used in some functions to target all parts*/LV_PART_ANY80,2304
typedef uint32_t lv_part_t;lv_part_t83,2419
    LV_OBJ_FLAG_HIDDEN          = (1L << 0),  /**< Make the object hidden. (Like it wasn't there at all)*/LV_OBJ_FLAG_HIDDEN90,2546
    LV_OBJ_FLAG_CLICKABLE       = (1L << 1),  /**< Make the object clickable by the input devices*/LV_OBJ_FLAG_CLICKABLE91,2653
    LV_OBJ_FLAG_CLICK_FOCUSABLE = (1L << 2),  /**< Add focused state to the object when clicked*/LV_OBJ_FLAG_CLICK_FOCUSABLE92,2753
    LV_OBJ_FLAG_CHECKABLE       = (1L << 3),  /**< Toggle checked state when the object is clicked*/LV_OBJ_FLAG_CHECKABLE93,2851
    LV_OBJ_FLAG_SCROLLABLE      = (1L << 4),  /**< Make the object scrollable*/LV_OBJ_FLAG_SCROLLABLE94,2952
    LV_OBJ_FLAG_SCROLL_ELASTIC  = (1L << 5),  /**< Allow scrolling inside but with slower speed*/LV_OBJ_FLAG_SCROLL_ELASTIC95,3032
    LV_OBJ_FLAG_SCROLL_MOMENTUM = (1L << 6),  /**< Make the object scroll further when "thrown"*/LV_OBJ_FLAG_SCROLL_MOMENTUM96,3130
    LV_OBJ_FLAG_SCROLL_ONE      = (1L << 7),  /**< Allow scrolling only one snappable children*/LV_OBJ_FLAG_SCROLL_ONE97,3228
    LV_OBJ_FLAG_SCROLL_CHAIN    = (1L << 8),  /**< Allow propagating the scroll to a parent*/LV_OBJ_FLAG_SCROLL_CHAIN98,3325
    LV_OBJ_FLAG_SCROLL_ON_FOCUS = (1L << 9),  /**< Automatically scroll object to make it visible when focused*/LV_OBJ_FLAG_SCROLL_ON_FOCUS99,3419
    LV_OBJ_FLAG_SNAPPABLE       = (1L << 10), /**< If scroll snap is enabled on the parent it can snap to this object*/LV_OBJ_FLAG_SNAPPABLE100,3532
    LV_OBJ_FLAG_PRESS_LOCK      = (1L << 11), /**< Keep the object pressed even if the press slid from the object*/LV_OBJ_FLAG_PRESS_LOCK101,3652
    LV_OBJ_FLAG_EVENT_BUBBLE    = (1L << 12), /**< Propagate the events to the parent too*/LV_OBJ_FLAG_EVENT_BUBBLE102,3768
    LV_OBJ_FLAG_GESTURE_BUBBLE  = (1L << 13), /**< Propagate the gestures to the parent*/LV_OBJ_FLAG_GESTURE_BUBBLE103,3860
    LV_OBJ_FLAG_ADV_HITTEST     = (1L << 14), /**< Allow performing more accurate hit (click) test. E.g. consider rounded corners.*/LV_OBJ_FLAG_ADV_HITTEST104,3950
    LV_OBJ_FLAG_IGNORE_LAYOUT   = (1L << 15), /**< Make the object position-able by the layouts*/LV_OBJ_FLAG_IGNORE_LAYOUT105,4083
    LV_OBJ_FLAG_FLOATING        = (1L << 16), /**< Do not scroll the object when the parent scrolls and ignore layout*/LV_OBJ_FLAG_FLOATING106,4181
    LV_OBJ_FLAG_LAYOUT_1        = (1L << 23), /**< Custom flag, free to use by layouts*/LV_OBJ_FLAG_LAYOUT_1108,4302
    LV_OBJ_FLAG_LAYOUT_2        = (1L << 24), /**< Custom flag, free to use by layouts*/LV_OBJ_FLAG_LAYOUT_2109,4391
    LV_OBJ_FLAG_WIDGET_1        = (1L << 25), /**< Custom flag, free to use by widget*/LV_OBJ_FLAG_WIDGET_1111,4481
    LV_OBJ_FLAG_WIDGET_2        = (1L << 26), /**< Custom flag, free to use by widget*/LV_OBJ_FLAG_WIDGET_2112,4569
    LV_OBJ_FLAG_USER_1          = (1L << 27), /**< Custom flag, free to use by user*/LV_OBJ_FLAG_USER_1113,4657
    LV_OBJ_FLAG_USER_2          = (1L << 28), /**< Custom flag, free to use by user*/LV_OBJ_FLAG_USER_2114,4743
    LV_OBJ_FLAG_USER_3          = (1L << 29), /**< Custom flag, free to use by user*/LV_OBJ_FLAG_USER_3115,4829
    LV_OBJ_FLAG_USER_4          = (1L << 30), /**< Custom flag, free to use by user*/LV_OBJ_FLAG_USER_4116,4915
typedef uint32_t lv_obj_flag_t;lv_obj_flag_t118,5004
    LV_OBJ_DRAW_PART_RECTANGLE,  /**< The main rectangle*/LV_OBJ_DRAW_PART_RECTANGLE125,5199
    LV_OBJ_DRAW_PART_BORDER_POST,/**< The border if style_border_post = true*/LV_OBJ_DRAW_PART_BORDER_POST126,5258
    LV_OBJ_DRAW_PART_SCROLLBAR,  /**< The scrollbar*/LV_OBJ_DRAW_PART_SCROLLBAR127,5337
} lv_obj_draw_part_type_t;lv_obj_draw_part_type_t128,5391
    struct _lv_obj_t ** children;       /**< Store the pointer of the children in an array.*/children149,5841
    uint32_t child_cnt;                 /**< Number of children*/child_cnt150,5935
    lv_group_t * group_p;group_p151,6001
    struct _lv_event_dsc_t * event_dsc; /**< Dynamically allocated event callback and user data array*/event_dsc153,6028
    lv_point_t scroll;                  /**< The current X/Y scroll offset*/scroll154,6132
    lv_coord_t ext_click_pad;           /**< Extra click padding in all direction*/ext_click_pad156,6210
    lv_coord_t ext_draw_size;           /**< EXTend the size in every direction for drawing.*/ext_draw_size157,6294
    lv_scrollbar_mode_t scrollbar_mode : 2; /**< How to display scrollbars*/scrollbar_mode159,6390
    lv_scroll_snap_t scroll_snap_x : 2;     /**< Where to align the snappable children horizontally*/scroll_snap_x160,6467
    lv_scroll_snap_t scroll_snap_y : 2;     /**< Where to align the snappable children vertically*/scroll_snap_y161,6569
    lv_dir_t scroll_dir : 4;                /**< The allowed scroll direction(s)*/scroll_dir162,6669
    uint8_t event_dsc_cnt;                  /**< Number of event callbacks stored in `event_dsc` array*/event_dsc_cnt163,6752
} _lv_obj_spec_attr_t;_lv_obj_spec_attr_t164,6857
typedef struct _lv_obj_t {_lv_obj_t166,6881
    const lv_obj_class_t * class_p;class_p167,6908
    struct _lv_obj_t * parent;parent168,6944
    _lv_obj_spec_attr_t * spec_attr;spec_attr169,6975
    _lv_obj_style_t * styles;styles170,7012
    void * user_data;user_data172,7063
    lv_area_t coords;coords174,7092
    lv_obj_flag_t flags;flags175,7114
    lv_state_t state;state176,7139
    uint16_t layout_inv : 1;layout_inv177,7161
    uint16_t scr_layout_inv : 1;scr_layout_inv178,7190
    uint16_t skip_trans : 1;skip_trans179,7223
    uint16_t style_cnt  : 6;style_cnt180,7252
    uint16_t h_layout   : 1;h_layout181,7281
    uint16_t w_layout   : 1;w_layout182,7310
} lv_obj_t;lv_obj_t183,7339
static inline void lv_obj_set_user_data(lv_obj_t * obj, void * user_data)lv_obj_set_user_data260,9437
static inline void * lv_obj_get_user_data(lv_obj_t * obj)lv_obj_get_user_data314,11102
static inline lv_coord_t lv_obj_dpx(const lv_obj_t * obj, lv_coord_t n)lv_obj_dpx370,12794
#  define LV_ASSERT_OBJ(LV_ASSERT_OBJ380,13025
# define LV_ASSERT_OBJ(LV_ASSERT_OBJ386,13378
#  define LV_TRACE_OBJ_CREATE(LV_TRACE_OBJ_CREATE390,13482
#  define LV_TRACE_OBJ_CREATE(LV_TRACE_OBJ_CREATE392,13549

lib/lvgl/src/core/lv_refr.h,85
#define LV_REFR_HLV_REFR_H7,49
#define LV_REFR_TASK_PRIO LV_REFR_TASK_PRIO23,278

lib/lvgl/src/core/lv_event.h,6434
#define LV_EVENT_HLV_EVENT_H7,51
    LV_EVENT_ALL = 0,LV_EVENT_ALL33,437
    LV_EVENT_PRESSED,             /**< The object has been pressed*/LV_EVENT_PRESSED36,490
    LV_EVENT_PRESSING,            /**< The object is being pressed (called continuously while pressing)*/LV_EVENT_PRESSING37,559
    LV_EVENT_PRESS_LOST,          /**< The object is still being pressed but slid cursor/finger off of the object */LV_EVENT_PRESS_LOST38,665
    LV_EVENT_SHORT_CLICKED,       /**< The object was pressed for a short period of time, then released it. Not called if scrolled.*/LV_EVENT_SHORT_CLICKED39,782
    LV_EVENT_LONG_PRESSED,        /**< Object has been pressed for at least `long_press_time`.  Not called if scrolled.*/LV_EVENT_LONG_PRESSED40,916
    LV_EVENT_LONG_PRESSED_REPEAT, /**< Called after `long_press_time` in every `long_press_repeat_time` ms.  Not called if scrolled.*/LV_EVENT_LONG_PRESSED_REPEAT41,1038
    LV_EVENT_CLICKED,             /**< Called on release if not scrolled (regardless to long press)*/LV_EVENT_CLICKED42,1173
    LV_EVENT_RELEASED,            /**< Called in every cases when the object has been released*/LV_EVENT_RELEASED43,1275
    LV_EVENT_SCROLL_BEGIN,        /**< Scrolling begins*/LV_EVENT_SCROLL_BEGIN44,1372
    LV_EVENT_SCROLL_END,          /**< Scrolling ends*/LV_EVENT_SCROLL_END45,1430
    LV_EVENT_SCROLL,              /**< Scrolling*/LV_EVENT_SCROLL46,1486
    LV_EVENT_GESTURE,             /**< A gesture is detected. Get the gesture with `lv_indev_get_gesture_dir(lv_indev_get_act());` */LV_EVENT_GESTURE47,1537
    LV_EVENT_KEY,                 /**< A key is sent to the object. Get the key with `lv_indev_get_key(lv_indev_get_act());`*/LV_EVENT_KEY48,1671
    LV_EVENT_FOCUSED,             /**< The object is focused*/LV_EVENT_FOCUSED49,1798
    LV_EVENT_DEFOCUSED,           /**< The object is defocused*/LV_EVENT_DEFOCUSED50,1861
    LV_EVENT_LEAVE,               /**< The object is defocused but still selected*/LV_EVENT_LEAVE51,1926
    LV_EVENT_HIT_TEST,            /**< Perform advanced hit-testing*/LV_EVENT_HIT_TEST52,2010
    LV_EVENT_COVER_CHECK,        /**< Check if the object fully covers an area. The event parameter is `lv_cover_check_info_t *`.*/LV_EVENT_COVER_CHECK55,2106
    LV_EVENT_REFR_EXT_DRAW_SIZE, /**< Get the required extra draw area around the object (e.g. for shadow). The event parameter is `lv_coord_t *` to store the size.*/LV_EVENT_REFR_EXT_DRAW_SIZE56,2238
    LV_EVENT_DRAW_MAIN_BEGIN,    /**< Starting the main drawing phase*/LV_EVENT_DRAW_MAIN_BEGIN57,2405
    LV_EVENT_DRAW_MAIN,          /**< Perform the main drawing*/LV_EVENT_DRAW_MAIN58,2477
    LV_EVENT_DRAW_MAIN_END,      /**< Finishing the main drawing phase*/LV_EVENT_DRAW_MAIN_END59,2542
    LV_EVENT_DRAW_POST_BEGIN,    /**< Starting the post draw phase (when all children are drawn)*/LV_EVENT_DRAW_POST_BEGIN60,2615
    LV_EVENT_DRAW_POST,          /**< Perform the post draw phase (when all children are drawn)*/LV_EVENT_DRAW_POST61,2714
    LV_EVENT_DRAW_POST_END,      /**< Finishing the post draw phase (when all children are drawn)*/LV_EVENT_DRAW_POST_END62,2812
    LV_EVENT_DRAW_PART_BEGIN,    /**< Starting to draw a part. The event parameter is `lv_obj_draw_dsc_t *`. */LV_EVENT_DRAW_PART_BEGIN63,2912
    LV_EVENT_DRAW_PART_END,      /**< Finishing to draw a part. The event parameter is `lv_obj_draw_dsc_t *`. */LV_EVENT_DRAW_PART_END64,3024
    LV_EVENT_VALUE_CHANGED,       /**< The object's value has changed (i.e. slider moved)*/LV_EVENT_VALUE_CHANGED67,3163
    LV_EVENT_INSERT,              /**< A text is inserted to the object. The event data is `char *` being inserted.*/LV_EVENT_INSERT68,3255
    LV_EVENT_REFRESH,             /**< Notify the object to refresh something on it (for the user)*/LV_EVENT_REFRESH69,3373
    LV_EVENT_READY,               /**< A process has finished*/LV_EVENT_READY70,3474
    LV_EVENT_CANCEL,              /**< A process has been cancelled */LV_EVENT_CANCEL71,3538
    LV_EVENT_DELETE,              /**< Object is being deleted*/LV_EVENT_DELETE74,3633
    LV_EVENT_CHILD_CHANGED,       /**< Child was removed, added, or its size, position were changed */LV_EVENT_CHILD_CHANGED75,3698
    LV_EVENT_CHILD_CREATED,       /**< Child was created, always bubbles up to all parents*/LV_EVENT_CHILD_CREATED76,3801
    LV_EVENT_CHILD_DELETED,       /**< Child was deleted, always bubbles up to all parents*/LV_EVENT_CHILD_DELETED77,3894
    LV_EVENT_SCREEN_UNLOAD_START, /**< A screen unload started, fired immediately when scr_load is called*/LV_EVENT_SCREEN_UNLOAD_START78,3987
    LV_EVENT_SCREEN_LOAD_START,   /**< A screen load started, fired when the screen change delay is expired*/LV_EVENT_SCREEN_LOAD_START79,4095
    LV_EVENT_SCREEN_LOADED,       /**< A screen was loaded*/LV_EVENT_SCREEN_LOADED80,4205
    LV_EVENT_SCREEN_UNLOADED,     /**< A screen was unloaded*/LV_EVENT_SCREEN_UNLOADED81,4266
    LV_EVENT_SIZE_CHANGED,        /**< Object coordinates/size have changed*/LV_EVENT_SIZE_CHANGED82,4329
    LV_EVENT_STYLE_CHANGED,       /**< Object's style has changed*/LV_EVENT_STYLE_CHANGED83,4407
    LV_EVENT_LAYOUT_CHANGED,      /**< The children position has changed due to a layout recalculation*/LV_EVENT_LAYOUT_CHANGED84,4475
    LV_EVENT_GET_SELF_SIZE,       /**< Get the internal size of a widget*/LV_EVENT_GET_SELF_SIZE85,4580
    _LV_EVENT_LAST                /** Number of default events*/_LV_EVENT_LAST87,4656
} lv_event_code_t;lv_event_code_t88,4721
typedef struct _lv_event_t {_lv_event_t90,4741
    struct _lv_obj_t * target;target91,4770
    struct _lv_obj_t * current_target;current_target92,4801
    lv_event_code_t code;code93,4840
    void * user_data;user_data94,4866
    void * param;param95,4888
    struct _lv_event_t * prev;prev96,4906
    uint8_t deleted : 1;deleted97,4937
} lv_event_t;lv_event_t98,4962
typedef void (*lv_event_cb_t)(lv_event_t * e);lv_event_cb_t105,5125
    const lv_point_t * point;   /**< A point relative to screen to check if it can click the object or not*/point115,5669
    bool res;                   /**< true: `point` can click the object; false: it cannot*/res116,5778
} lv_hit_test_info_t;lv_hit_test_info_t117,5870
    lv_cover_res_t res;res125,6186
    const lv_area_t * area;area126,6210
} lv_cover_check_info_t;lv_cover_check_info_t127,6238

lib/lvgl/src/core/lv_disp.h,1235
#define LV_DISP_HLV_DISP_H7,49
    LV_SCR_LOAD_ANIM_NONE,LV_SCR_LOAD_ANIM_NONE29,388
    LV_SCR_LOAD_ANIM_OVER_LEFT,LV_SCR_LOAD_ANIM_OVER_LEFT30,415
    LV_SCR_LOAD_ANIM_OVER_RIGHT,LV_SCR_LOAD_ANIM_OVER_RIGHT31,447
    LV_SCR_LOAD_ANIM_OVER_TOP,LV_SCR_LOAD_ANIM_OVER_TOP32,480
    LV_SCR_LOAD_ANIM_OVER_BOTTOM,LV_SCR_LOAD_ANIM_OVER_BOTTOM33,511
    LV_SCR_LOAD_ANIM_MOVE_LEFT,LV_SCR_LOAD_ANIM_MOVE_LEFT34,545
    LV_SCR_LOAD_ANIM_MOVE_RIGHT,LV_SCR_LOAD_ANIM_MOVE_RIGHT35,577
    LV_SCR_LOAD_ANIM_MOVE_TOP,LV_SCR_LOAD_ANIM_MOVE_TOP36,610
    LV_SCR_LOAD_ANIM_MOVE_BOTTOM,LV_SCR_LOAD_ANIM_MOVE_BOTTOM37,641
    LV_SCR_LOAD_ANIM_FADE_ON,LV_SCR_LOAD_ANIM_FADE_ON38,675
} lv_scr_load_anim_t;lv_scr_load_anim_t39,705
static inline lv_obj_t * lv_scr_act(void)lv_scr_act162,4723
static inline lv_obj_t * lv_layer_top(void)lv_layer_top171,4914
static inline lv_obj_t * lv_layer_sys(void)lv_layer_sys180,5113
static inline void lv_scr_load(lv_obj_t * scr)lv_scr_load185,5219
#define LV_HOR_RES LV_HOR_RES203,5638
#define LV_VER_RES LV_VER_RES210,5795
static inline lv_coord_t lv_dpx(lv_coord_t n)lv_dpx221,6203
static inline lv_coord_t lv_disp_dpx(const lv_disp_t * disp, lv_coord_t n)lv_disp_dpx235,6669

lib/lvgl/src/core/lv_indev_scroll.h,49
#define LV_INDEV_SCROLL_HLV_INDEV_SCROLL_H7,65

lib/lvgl/src/core/lv_indev.h,35
#define LV_INDEV_HLV_INDEV_H7,51

lib/lvgl/src/core/lv_obj_style_gen.c,12952
void lv_obj_set_style_width(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)lv_obj_set_style_width2,20
void lv_obj_set_style_min_width(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)lv_obj_set_style_min_width10,256
void lv_obj_set_style_max_width(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)lv_obj_set_style_max_width18,500
void lv_obj_set_style_height(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)lv_obj_set_style_height26,744
void lv_obj_set_style_min_height(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)lv_obj_set_style_min_height34,982
void lv_obj_set_style_max_height(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)lv_obj_set_style_max_height42,1228
void lv_obj_set_style_x(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)lv_obj_set_style_x50,1474
void lv_obj_set_style_y(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)lv_obj_set_style_y58,1702
void lv_obj_set_style_align(struct _lv_obj_t * obj, lv_align_t value, lv_style_selector_t selector)lv_obj_set_style_align66,1930
void lv_obj_set_style_transform_width(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)lv_obj_set_style_transform_width74,2166
void lv_obj_set_style_transform_height(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)lv_obj_set_style_transform_height82,2422
void lv_obj_set_style_translate_x(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)lv_obj_set_style_translate_x90,2680
void lv_obj_set_style_translate_y(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)lv_obj_set_style_translate_y98,2928
void lv_obj_set_style_transform_zoom(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)lv_obj_set_style_transform_zoom106,3176
void lv_obj_set_style_transform_angle(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)lv_obj_set_style_transform_angle114,3430
void lv_obj_set_style_pad_top(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)lv_obj_set_style_pad_top122,3686
void lv_obj_set_style_pad_bottom(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)lv_obj_set_style_pad_bottom130,3926
void lv_obj_set_style_pad_left(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)lv_obj_set_style_pad_left138,4172
void lv_obj_set_style_pad_right(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)lv_obj_set_style_pad_right146,4414
void lv_obj_set_style_pad_row(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)lv_obj_set_style_pad_row154,4658
void lv_obj_set_style_pad_column(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)lv_obj_set_style_pad_column162,4898
void lv_obj_set_style_radius(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)lv_obj_set_style_radius170,5144
void lv_obj_set_style_clip_corner(struct _lv_obj_t * obj, bool value, lv_style_selector_t selector)lv_obj_set_style_clip_corner178,5382
void lv_obj_set_style_opa(struct _lv_obj_t * obj, lv_opa_t value, lv_style_selector_t selector)lv_obj_set_style_opa186,5624
void lv_obj_set_style_color_filter_dsc(struct _lv_obj_t * obj, const lv_color_filter_dsc_t * value, lv_style_selector_t selector)lv_obj_set_style_color_filter_dsc194,5854
void lv_obj_set_style_color_filter_opa(struct _lv_obj_t * obj, lv_opa_t value, lv_style_selector_t selector)lv_obj_set_style_color_filter_opa202,6122
void lv_obj_set_style_anim_time(struct _lv_obj_t * obj, uint32_t value, lv_style_selector_t selector)lv_obj_set_style_anim_time210,6378
void lv_obj_set_style_anim_speed(struct _lv_obj_t * obj, uint32_t value, lv_style_selector_t selector)lv_obj_set_style_anim_speed218,6620
void lv_obj_set_style_transition(struct _lv_obj_t * obj, const lv_style_transition_dsc_t * value, lv_style_selector_t selector)lv_obj_set_style_transition226,6864
void lv_obj_set_style_blend_mode(struct _lv_obj_t * obj, lv_blend_mode_t value, lv_style_selector_t selector)lv_obj_set_style_blend_mode234,7124
void lv_obj_set_style_layout(struct _lv_obj_t * obj, uint16_t value, lv_style_selector_t selector)lv_obj_set_style_layout242,7375
void lv_obj_set_style_base_dir(struct _lv_obj_t * obj, lv_base_dir_t value, lv_style_selector_t selector)lv_obj_set_style_base_dir250,7611
void lv_obj_set_style_bg_color(struct _lv_obj_t * obj, lv_color_t value, lv_style_selector_t selector)lv_obj_set_style_bg_color258,7856
void lv_obj_set_style_bg_color_filtered(struct _lv_obj_t * obj, lv_color_t value, lv_style_selector_t selector)lv_obj_set_style_bg_color_filtered266,8091
void lv_obj_set_style_bg_opa(struct _lv_obj_t * obj, lv_opa_t value, lv_style_selector_t selector)lv_obj_set_style_bg_opa274,8344
void lv_obj_set_style_bg_grad_color(struct _lv_obj_t * obj, lv_color_t value, lv_style_selector_t selector)lv_obj_set_style_bg_grad_color282,8580
void lv_obj_set_style_bg_grad_color_filtered(struct _lv_obj_t * obj, lv_color_t value, lv_style_selector_t selector)lv_obj_set_style_bg_grad_color_filtered290,8825
void lv_obj_set_style_bg_grad_dir(struct _lv_obj_t * obj, lv_grad_dir_t value, lv_style_selector_t selector)lv_obj_set_style_bg_grad_dir298,9088
void lv_obj_set_style_bg_main_stop(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)lv_obj_set_style_bg_main_stop306,9339
void lv_obj_set_style_bg_grad_stop(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)lv_obj_set_style_bg_grad_stop314,9589
void lv_obj_set_style_bg_img_src(struct _lv_obj_t * obj, const void * value, lv_style_selector_t selector)lv_obj_set_style_bg_img_src322,9839
void lv_obj_set_style_bg_img_opa(struct _lv_obj_t * obj, lv_opa_t value, lv_style_selector_t selector)lv_obj_set_style_bg_img_opa330,10078
void lv_obj_set_style_bg_img_recolor(struct _lv_obj_t * obj, lv_color_t value, lv_style_selector_t selector)lv_obj_set_style_bg_img_recolor338,10322
void lv_obj_set_style_bg_img_recolor_filtered(struct _lv_obj_t * obj, lv_color_t value, lv_style_selector_t selector)lv_obj_set_style_bg_img_recolor_filtered346,10569
void lv_obj_set_style_bg_img_recolor_opa(struct _lv_obj_t * obj, lv_opa_t value, lv_style_selector_t selector)lv_obj_set_style_bg_img_recolor_opa354,10834
void lv_obj_set_style_bg_img_tiled(struct _lv_obj_t * obj, bool value, lv_style_selector_t selector)lv_obj_set_style_bg_img_tiled362,11094
void lv_obj_set_style_border_color(struct _lv_obj_t * obj, lv_color_t value, lv_style_selector_t selector)lv_obj_set_style_border_color370,11338
void lv_obj_set_style_border_color_filtered(struct _lv_obj_t * obj, lv_color_t value, lv_style_selector_t selector)lv_obj_set_style_border_color_filtered378,11581
void lv_obj_set_style_border_opa(struct _lv_obj_t * obj, lv_opa_t value, lv_style_selector_t selector)lv_obj_set_style_border_opa386,11842
void lv_obj_set_style_border_width(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)lv_obj_set_style_border_width394,12086
void lv_obj_set_style_border_side(struct _lv_obj_t * obj, lv_border_side_t value, lv_style_selector_t selector)lv_obj_set_style_border_side402,12336
void lv_obj_set_style_border_post(struct _lv_obj_t * obj, bool value, lv_style_selector_t selector)lv_obj_set_style_border_post410,12590
void lv_obj_set_style_text_color(struct _lv_obj_t * obj, lv_color_t value, lv_style_selector_t selector)lv_obj_set_style_text_color418,12832
void lv_obj_set_style_text_color_filtered(struct _lv_obj_t * obj, lv_color_t value, lv_style_selector_t selector)lv_obj_set_style_text_color_filtered426,13071
void lv_obj_set_style_text_opa(struct _lv_obj_t * obj, lv_opa_t value, lv_style_selector_t selector)lv_obj_set_style_text_opa434,13328
void lv_obj_set_style_text_font(struct _lv_obj_t * obj, const lv_font_t * value, lv_style_selector_t selector)lv_obj_set_style_text_font442,13568
void lv_obj_set_style_text_letter_space(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)lv_obj_set_style_text_letter_space450,13810
void lv_obj_set_style_text_line_space(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)lv_obj_set_style_text_line_space458,14070
void lv_obj_set_style_text_decor(struct _lv_obj_t * obj, lv_text_decor_t value, lv_style_selector_t selector)lv_obj_set_style_text_decor466,14326
void lv_obj_set_style_text_align(struct _lv_obj_t * obj, lv_text_align_t value, lv_style_selector_t selector)lv_obj_set_style_text_align474,14577
void lv_obj_set_style_img_opa(struct _lv_obj_t * obj, lv_opa_t value, lv_style_selector_t selector)lv_obj_set_style_img_opa482,14828
void lv_obj_set_style_img_recolor(struct _lv_obj_t * obj, lv_color_t value, lv_style_selector_t selector)lv_obj_set_style_img_recolor490,15066
void lv_obj_set_style_img_recolor_filtered(struct _lv_obj_t * obj, lv_color_t value, lv_style_selector_t selector)lv_obj_set_style_img_recolor_filtered498,15307
void lv_obj_set_style_img_recolor_opa(struct _lv_obj_t * obj, lv_opa_t value, lv_style_selector_t selector)lv_obj_set_style_img_recolor_opa506,15566
void lv_obj_set_style_outline_width(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)lv_obj_set_style_outline_width514,15820
void lv_obj_set_style_outline_color(struct _lv_obj_t * obj, lv_color_t value, lv_style_selector_t selector)lv_obj_set_style_outline_color522,16072
void lv_obj_set_style_outline_color_filtered(struct _lv_obj_t * obj, lv_color_t value, lv_style_selector_t selector)lv_obj_set_style_outline_color_filtered530,16317
void lv_obj_set_style_outline_opa(struct _lv_obj_t * obj, lv_opa_t value, lv_style_selector_t selector)lv_obj_set_style_outline_opa538,16580
void lv_obj_set_style_outline_pad(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)lv_obj_set_style_outline_pad546,16826
void lv_obj_set_style_shadow_width(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)lv_obj_set_style_shadow_width554,17074
void lv_obj_set_style_shadow_ofs_x(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)lv_obj_set_style_shadow_ofs_x562,17324
void lv_obj_set_style_shadow_ofs_y(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)lv_obj_set_style_shadow_ofs_y570,17574
void lv_obj_set_style_shadow_spread(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)lv_obj_set_style_shadow_spread578,17824
void lv_obj_set_style_shadow_color(struct _lv_obj_t * obj, lv_color_t value, lv_style_selector_t selector)lv_obj_set_style_shadow_color586,18076
void lv_obj_set_style_shadow_color_filtered(struct _lv_obj_t * obj, lv_color_t value, lv_style_selector_t selector)lv_obj_set_style_shadow_color_filtered594,18319
void lv_obj_set_style_shadow_opa(struct _lv_obj_t * obj, lv_opa_t value, lv_style_selector_t selector)lv_obj_set_style_shadow_opa602,18580
void lv_obj_set_style_line_width(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)lv_obj_set_style_line_width610,18824
void lv_obj_set_style_line_dash_width(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)lv_obj_set_style_line_dash_width618,19070
void lv_obj_set_style_line_dash_gap(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)lv_obj_set_style_line_dash_gap626,19326
void lv_obj_set_style_line_rounded(struct _lv_obj_t * obj, bool value, lv_style_selector_t selector)lv_obj_set_style_line_rounded634,19578
void lv_obj_set_style_line_color(struct _lv_obj_t * obj, lv_color_t value, lv_style_selector_t selector)lv_obj_set_style_line_color642,19822
void lv_obj_set_style_line_color_filtered(struct _lv_obj_t * obj, lv_color_t value, lv_style_selector_t selector)lv_obj_set_style_line_color_filtered650,20061
void lv_obj_set_style_line_opa(struct _lv_obj_t * obj, lv_opa_t value, lv_style_selector_t selector)lv_obj_set_style_line_opa658,20318
void lv_obj_set_style_arc_width(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)lv_obj_set_style_arc_width666,20558
void lv_obj_set_style_arc_rounded(struct _lv_obj_t * obj, bool value, lv_style_selector_t selector)lv_obj_set_style_arc_rounded674,20802
void lv_obj_set_style_arc_color(struct _lv_obj_t * obj, lv_color_t value, lv_style_selector_t selector)lv_obj_set_style_arc_color682,21044
void lv_obj_set_style_arc_color_filtered(struct _lv_obj_t * obj, lv_color_t value, lv_style_selector_t selector)lv_obj_set_style_arc_color_filtered690,21281
void lv_obj_set_style_arc_opa(struct _lv_obj_t * obj, lv_opa_t value, lv_style_selector_t selector)lv_obj_set_style_arc_opa698,21536
void lv_obj_set_style_arc_img_src(struct _lv_obj_t * obj, const void * value, lv_style_selector_t selector)lv_obj_set_style_arc_img_src706,21774

lib/lvgl/src/core/lv_indev.c,2755
static lv_indev_t * indev_act;indev_act48,1322
static lv_obj_t * indev_obj_act = NULL;indev_obj_act49,1353
    #define INDEV_TRACE(INDEV_TRACE55,1481
    #define INDEV_TRACE(INDEV_TRACE57,1542
void lv_indev_read_timer_cb(lv_timer_t * timer)lv_indev_read_timer_cb64,1651
void lv_indev_enable(lv_indev_t * indev, bool en)lv_indev_enable122,3545
lv_indev_t * lv_indev_get_act(void)lv_indev_get_act129,3663
lv_indev_type_t lv_indev_get_type(const lv_indev_t * indev)lv_indev_get_type134,3726
void lv_indev_reset(lv_indev_t * indev, lv_obj_t * obj)lv_indev_reset141,3873
void lv_indev_reset_long_press(lv_indev_t * indev)lv_indev_reset_long_press179,5391
void lv_indev_set_cursor(lv_indev_t * indev, lv_obj_t * cur_obj)lv_indev_set_cursor186,5597
void lv_indev_set_group(lv_indev_t * indev, lv_group_t * group)lv_indev_set_group197,6100
void lv_indev_set_button_points(lv_indev_t * indev, const lv_point_t points[])lv_indev_set_button_points204,6307
void lv_indev_get_point(const lv_indev_t * indev, lv_point_t * point)lv_indev_get_point211,6487
lv_dir_t lv_indev_get_gesture_dir(const lv_indev_t * indev)lv_indev_get_gesture_dir228,6939
uint32_t lv_indev_get_key(const lv_indev_t * indev)lv_indev_get_key233,7054
lv_dir_t lv_indev_get_scroll_dir(const lv_indev_t * indev)lv_indev_get_scroll_dir241,7240
lv_obj_t * lv_indev_get_scroll_obj(const lv_indev_t * indev)lv_indev_get_scroll_obj248,7503
void lv_indev_get_vect(const lv_indev_t * indev, lv_point_t * point)lv_indev_get_vect255,7766
void lv_indev_wait_release(lv_indev_t * indev)lv_indev_wait_release268,8122
lv_obj_t * lv_indev_get_obj_act(void)lv_indev_get_obj_act274,8243
lv_timer_t * lv_indev_get_read_timer(lv_disp_t * indev)lv_indev_get_read_timer279,8312
lv_obj_t * lv_indev_search_obj(lv_obj_t * obj, lv_point_t * point)lv_indev_search_obj289,8512
static void indev_pointer_proc(lv_indev_t * i, lv_indev_data_t * data)indev_pointer_proc330,9934
static void indev_keypad_proc(lv_indev_t * i, lv_indev_data_t * data)indev_keypad_proc380,12190
static void indev_encoder_proc(lv_indev_t * i, lv_indev_data_t * data)indev_encoder_proc524,18118
static void indev_button_proc(lv_indev_t * i, lv_indev_data_t * data)indev_button_proc731,26565
static void indev_proc_press(_lv_indev_proc_t * proc)indev_proc_press780,28192
static void indev_proc_release(_lv_indev_proc_t * proc)indev_proc_release916,34898
static void indev_proc_reset_query_handler(lv_indev_t * indev)indev_proc_reset_query_handler968,36706
static void indev_click_focus(_lv_indev_proc_t * proc)indev_click_focus993,37810
void indev_gesture(_lv_indev_proc_t * proc)indev_gesture1063,40488
static bool indev_reset_check(_lv_indev_proc_t * proc)indev_reset_check1116,42505

lib/lvgl/src/core/lv_obj_tree.h,395
#define LV_OBJ_TREE_HLV_OBJ_TREE_H7,65
    LV_OBJ_TREE_WALK_NEXT,LV_OBJ_TREE_WALK_NEXT32,424
    LV_OBJ_TREE_WALK_SKIP_CHILDREN,LV_OBJ_TREE_WALK_SKIP_CHILDREN33,451
    LV_OBJ_TREE_WALK_END,LV_OBJ_TREE_WALK_END34,487
} lv_obj_tree_walk_res_t;lv_obj_tree_walk_res_t35,513
typedef lv_obj_tree_walk_res_t (*lv_obj_tree_walk_cb_t)(struct _lv_obj_t *, void *);lv_obj_tree_walk_cb_t37,540

lib/lvgl/src/core/lv_obj_pos.c,4110
#define MY_CLASS MY_CLASS17,251
static uint32_t layout_cnt;layout_cnt33,649
void lv_obj_set_pos(lv_obj_t * obj, lv_coord_t x, lv_coord_t y)lv_obj_set_pos43,815
void lv_obj_set_x(lv_obj_t * obj, lv_coord_t x)lv_obj_set_x51,971
void lv_obj_set_y(lv_obj_t * obj, lv_coord_t y)lv_obj_set_y65,1289
bool lv_obj_refr_size(lv_obj_t * obj)lv_obj_refr_size79,1607
void lv_obj_set_size(lv_obj_t * obj, lv_coord_t w, lv_coord_t h)lv_obj_set_size212,6533
void lv_obj_set_width(lv_obj_t * obj, lv_coord_t w)lv_obj_set_width220,6699
void lv_obj_set_height(lv_obj_t * obj, lv_coord_t h)lv_obj_set_height233,7028
void lv_obj_set_content_width(lv_obj_t * obj, lv_coord_t w)lv_obj_set_content_width246,7360
void lv_obj_set_content_height(lv_obj_t * obj, lv_coord_t h)lv_obj_set_content_height255,7712
void lv_obj_set_layout(lv_obj_t * obj, uint32_t layout)lv_obj_set_layout264,8066
bool lv_obj_is_layout_positioned(const lv_obj_t * obj)lv_obj_is_layout_positioned273,8246
void lv_obj_mark_layout_as_dirty(lv_obj_t * obj)lv_obj_mark_layout_as_dirty285,8631
void lv_obj_update_layout(const lv_obj_t * obj)lv_obj_update_layout298,8996
uint32_t lv_layout_register(lv_layout_update_cb_t cb, void * user_data)lv_layout_register320,9501
void lv_obj_set_align(lv_obj_t * obj, lv_align_t align)lv_obj_set_align331,9945
void lv_obj_align(lv_obj_t * obj, lv_align_t align, lv_coord_t x_ofs, lv_coord_t y_ofs)lv_obj_align336,10049
void lv_obj_align_to(lv_obj_t * obj, const lv_obj_t * base, lv_align_t align, lv_coord_t x_ofs, lv_coord_t y_ofs)lv_obj_align_to342,10224
void lv_obj_get_coords(const lv_obj_t * obj, lv_area_t * coords)lv_obj_get_coords484,15186
lv_coord_t lv_obj_get_x(const lv_obj_t * obj)lv_obj_get_x491,15331
lv_coord_t lv_obj_get_x2(const lv_obj_t * obj)lv_obj_get_x2509,15812
lv_coord_t lv_obj_get_y(const lv_obj_t * obj)lv_obj_get_y516,15953
lv_coord_t lv_obj_get_y2(const lv_obj_t * obj)lv_obj_get_y2534,16432
lv_coord_t lv_obj_get_width(const lv_obj_t * obj)lv_obj_get_width541,16574
lv_coord_t lv_obj_get_height(const lv_obj_t * obj)lv_obj_get_height548,16708
lv_coord_t lv_obj_get_content_width(const lv_obj_t * obj)lv_obj_get_content_width555,16844
lv_coord_t lv_obj_get_content_height(const lv_obj_t * obj)lv_obj_get_content_height566,17229
void lv_obj_get_content_coords(const lv_obj_t * obj, lv_area_t * area)lv_obj_get_content_coords577,17617
lv_coord_t lv_obj_get_self_width(const lv_obj_t * obj)lv_obj_get_self_width591,18151
lv_coord_t lv_obj_get_self_height(const lv_obj_t * obj)lv_obj_get_self_height598,18329
bool lv_obj_refresh_self_size(lv_obj_t * obj)lv_obj_refresh_self_size605,18508
void lv_obj_refr_pos(lv_obj_t * obj)lv_obj_refr_pos615,18823
void lv_obj_move_to(lv_obj_t * obj, lv_coord_t x, lv_coord_t y)lv_obj_move_to694,21255
void lv_obj_move_children_by(lv_obj_t * obj, lv_coord_t x_diff, lv_coord_t y_diff, bool ignore_floating)lv_obj_move_children_by767,23690
void lv_obj_invalidate_area(const lv_obj_t * obj, const lv_area_t * area)lv_obj_invalidate_area784,24262
void lv_obj_invalidate(const lv_obj_t * obj)lv_obj_invalidate795,24558
bool lv_obj_area_is_visible(const lv_obj_t * obj, lv_area_t * area)lv_obj_area_is_visible812,24984
bool lv_obj_is_visible(const lv_obj_t * obj)lv_obj_is_visible854,26464
void lv_obj_set_ext_click_area(lv_obj_t * obj, lv_coord_t size)lv_obj_set_ext_click_area870,26857
void lv_obj_get_click_area(const lv_obj_t * obj, lv_area_t * area)lv_obj_get_click_area878,27039
bool lv_obj_hit_test(lv_obj_t * obj, const lv_point_t * point)lv_obj_hit_test889,27384
lv_coord_t lv_clamp_width(lv_coord_t width, lv_coord_t min_width, lv_coord_t max_width, lv_coord_t ref_width)lv_clamp_width907,27856
lv_coord_t lv_clamp_height(lv_coord_t height, lv_coord_t min_height, lv_coord_t max_height, lv_coord_t ref_height)lv_clamp_height914,28213
static lv_coord_t calc_content_width(lv_obj_t * obj)calc_content_width927,28660
static lv_coord_t calc_content_height(lv_obj_t * obj)calc_content_height1009,32162
static void layout_update_core(lv_obj_t * obj)layout_update_core1060,34020

lib/lvgl/src/core/lv_refr.c,2170
static uint32_t px_num;px_num49,1307
static lv_disp_t * disp_refr; /*Display being refreshed*/disp_refr50,1331
    static uint32_t fps_sum_cnt;fps_sum_cnt52,1413
    static uint32_t fps_sum_all;fps_sum_all53,1446
    #define REFR_TRACE(REFR_TRACE60,1578
    #define REFR_TRACE(REFR_TRACE62,1638
void _lv_refr_init(void)_lv_refr_init72,1797
void lv_refr_now(lv_disp_t * disp)lv_refr_now84,2254
void _lv_inv_area(lv_disp_t * disp, const lv_area_t * area_p)_lv_inv_area107,2851
lv_disp_t * _lv_refr_get_disp_refreshing(void)_lv_refr_get_disp_refreshing162,4418
void _lv_refr_set_disp_refreshing(lv_disp_t * disp)_lv_refr_set_disp_refreshing173,4712
void _lv_disp_refr_timer(lv_timer_t * tmr)_lv_disp_refr_timer182,4889
uint32_t lv_refr_get_fps_avg(void)lv_refr_get_fps_avg320,9476
static void lv_refr_join_area(void)lv_refr_join_area333,9686
static void lv_refr_areas(void)lv_refr_areas370,11087
static void lv_refr_area(const lv_area_t * area_p)lv_refr_area406,12027
static void lv_refr_area_part(const lv_area_t * area_p)lv_refr_area_part505,15609
static lv_obj_t * lv_refr_get_top_obj(const lv_area_t * area_p, lv_obj_t * obj)lv_refr_get_top_obj594,18792
static void lv_refr_obj_and_children(lv_obj_t * top_p, const lv_area_t * mask_p)lv_refr_obj_and_children634,20111
static void lv_refr_obj(lv_obj_t * obj, const lv_area_t * mask_ori_p)lv_refr_obj685,21903
static void draw_buf_rotate_180(lv_disp_drv_t * drv, lv_area_t * area, lv_color_t * color_p)draw_buf_rotate_180757,25001
static LV_ATTRIBUTE_FAST_MEM void draw_buf_rotate_90(bool invert_i, lv_coord_t area_w, lv_coord_t area_h,draw_buf_rotate_90781,25725
static inline void draw_buf_rotate4(lv_color_t * a, lv_color_t * b, lv_color_t * c, lv_color_t * d)draw_buf_rotate4804,26494
static void draw_buf_rotate_90_sqr(bool is_270, lv_coord_t w, lv_color_t * color_p)draw_buf_rotate_90_sqr818,26802
static void draw_buf_rotate(lv_area_t * area, lv_color_t * color_p)draw_buf_rotate848,27698
static void draw_buf_flush(void)draw_buf_flush937,31389
static void call_flush_cb(lv_disp_drv_t * drv, const lv_area_t * area, lv_color_t * color_p)call_flush_cb976,32794

lib/lvgl/src/core/lv_obj_draw.c,1232
#define MY_CLASS MY_CLASS17,251
void lv_obj_init_draw_rect_dsc(lv_obj_t * obj, uint32_t part, lv_draw_rect_dsc_t * draw_dsc)lv_obj_init_draw_rect_dsc39,630
void lv_obj_init_draw_label_dsc(lv_obj_t * obj, uint32_t part, lv_draw_label_dsc_t * draw_dsc)lv_obj_init_draw_label_dsc185,7264
void lv_obj_init_draw_img_dsc(lv_obj_t * obj, uint32_t part, lv_draw_img_dsc_t * draw_dsc)lv_obj_init_draw_img_dsc213,8263
void lv_obj_init_draw_line_dsc(lv_obj_t * obj, uint32_t part, lv_draw_line_dsc_t * draw_dsc)lv_obj_init_draw_line_dsc238,9158
void lv_obj_init_draw_arc_dsc(lv_obj_t * obj, uint32_t part, lv_draw_arc_dsc_t * draw_dsc)lv_obj_init_draw_arc_dsc267,10131
lv_coord_t lv_obj_calculate_ext_draw_size(lv_obj_t * obj, uint32_t part)lv_obj_calculate_ext_draw_size291,10928
void lv_obj_draw_dsc_init(lv_obj_draw_part_dsc_t * dsc, const lv_area_t * clip_area)lv_obj_draw_dsc_init325,12197
bool lv_obj_draw_part_check_type(lv_obj_draw_part_dsc_t * dsc, const lv_obj_class_t * class_p, uint32_t type)lv_obj_draw_part_check_type331,12374
void lv_obj_refresh_ext_draw_size(lv_obj_t * obj)lv_obj_refresh_ext_draw_size337,12578
lv_coord_t _lv_obj_get_ext_draw_size(const lv_obj_t * obj)_lv_obj_get_ext_draw_size361,13298

lib/lvgl/src/core/lv_theme.h,806
#define LV_THEME_HLV_THEME_H7,50
typedef void (*lv_theme_apply_cb_t)(struct _lv_theme_t *, lv_obj_t *);lv_theme_apply_cb_t29,368
typedef struct _lv_theme_t {_lv_theme_t31,440
    lv_theme_apply_cb_t apply_cb;apply_cb32,469
    struct _lv_theme_t * parent;    /**< Apply the current theme's style on top of this theme.*/parent33,503
    void * user_data;user_data34,600
    struct _lv_disp_t * disp;disp35,622
    lv_color_t color_primary;color_primary36,652
    lv_color_t color_secondary;color_secondary37,682
    const lv_font_t * font_small;font_small38,714
    const lv_font_t * font_normal;font_normal39,748
    const lv_font_t * font_large;font_large40,783
    uint32_t flags;                 /*Any custom flag used by the theme*/flags41,817
} lv_theme_t;lv_theme_t42,891

lib/lvgl/src/widgets/lv_btn.h,88
#define LV_BTN_HLV_BTN_H7,47
    lv_obj_t obj;obj30,400
} lv_btn_t;lv_btn_t31,418

lib/lvgl/src/widgets/lv_img.h,1226
#define LV_IMG_HLV_IMG_H7,47
    lv_obj_t obj;obj36,482
    const void * src; /*Image source: Pointer to an array or a file or a symbol*/src37,500
    lv_point_t offset;offset38,582
    lv_coord_t w;          /*Width of the image (Handled by the library)*/w39,605
    lv_coord_t h;          /*Height of the image (Handled by the library)*/h40,680
    uint16_t angle;    /*rotation angle of the image*/angle41,756
    lv_point_t pivot;     /*rotation center of the image*/pivot42,811
    uint16_t zoom;         /*256 means no zoom, 512 double size, 128 half size*/zoom43,870
    uint8_t src_type : 2;  /*See: lv_img_src_t*/src_type44,951
    uint8_t cf : 5;        /*Color format from `lv_img_color_format_t`*/cf45,1000
    uint8_t antialias : 1; /*Apply anti-aliasing in transformations (rotate, zoom)*/antialias46,1073
    uint8_t obj_size_mode: 2; /*Image size mode when image size and object size is different.*/obj_size_mode47,1158
} lv_img_t;lv_img_t48,1254
    LV_IMG_SIZE_MODE_VIRTUAL = 0,LV_IMG_SIZE_MODE_VIRTUAL59,1570
    LV_IMG_SIZE_MODE_REAL,LV_IMG_SIZE_MODE_REAL64,1830
typedef uint8_t lv_img_size_mode_t;lv_img_size_mode_t67,1861
#define LV_IMG_DECLARE(LV_IMG_DECLARE219,6460

lib/lvgl/src/widgets/lv_table.h,1182
#define LV_TABLE_HLV_TABLE_H7,51
#define LV_TABLE_CELL_NONE LV_TABLE_CELL_NONE31,485
LV_EXPORT_CONST_INT(LV_TABLE_CELL_NONE);LV_TABLE_CELL_NONE32,519
    LV_TABLE_CELL_CTRL_MERGE_RIGHT = 1 << 0,LV_TABLE_CELL_CTRL_MERGE_RIGHT39,635
    LV_TABLE_CELL_CTRL_TEXT_CROP   = 1 << 1,LV_TABLE_CELL_CTRL_TEXT_CROP40,680
    LV_TABLE_CELL_CTRL_CUSTOM_1    = 1 << 4,LV_TABLE_CELL_CTRL_CUSTOM_141,725
    LV_TABLE_CELL_CTRL_CUSTOM_2    = 1 << 5,LV_TABLE_CELL_CTRL_CUSTOM_242,770
    LV_TABLE_CELL_CTRL_CUSTOM_3    = 1 << 6,LV_TABLE_CELL_CTRL_CUSTOM_343,815
    LV_TABLE_CELL_CTRL_CUSTOM_4    = 1 << 7,LV_TABLE_CELL_CTRL_CUSTOM_444,860
typedef uint8_t  lv_table_cell_ctrl_t;lv_table_cell_ctrl_t47,909
    lv_obj_t obj;obj51,984
    uint16_t col_cnt;col_cnt52,1002
    uint16_t row_cnt;row_cnt53,1024
    char ** cell_data;cell_data54,1046
    lv_coord_t * row_h;row_h55,1069
    lv_coord_t * col_w;col_w56,1093
    uint16_t col_act;col_act57,1117
    uint16_t row_act;row_act58,1139
} lv_table_t;lv_table_t59,1161
    LV_TABLE_DRAW_PART_CELL,       /**< A cell*/LV_TABLE_DRAW_PART_CELL68,1385
} lv_table_draw_part_type_t;lv_table_draw_part_type_t69,1434

lib/lvgl/src/widgets/lv_dropdown.c,3908
#define MY_CLASS MY_CLASS27,535
#define MY_CLASS_LIST MY_CLASS_LIST28,571
#define LV_DROPDOWN_PR_NONE LV_DROPDOWN_PR_NONE30,617
const lv_obj_class_t lv_dropdown_class = {lv_dropdown_class62,2072
const lv_obj_class_t lv_dropdownlist_class = {lv_dropdownlist_class74,2476
lv_obj_t * lv_dropdown_create(lv_obj_t * parent)lv_dropdown_create91,2886
void lv_dropdown_set_text(lv_obj_t * obj, const char * txt)lv_dropdown_set_text103,3158
void lv_dropdown_set_options(lv_obj_t * obj, const char * options)lv_dropdown_set_options114,3404
void lv_dropdown_set_options_static(lv_obj_t * obj, const char * options)lv_dropdown_set_options_static161,4695
void lv_dropdown_add_option(lv_obj_t * obj, const char * option, uint32_t pos)lv_dropdown_add_option190,5534
void lv_dropdown_clear_options(lv_obj_t * obj)lv_dropdown_clear_options261,7935
void lv_dropdown_set_selected(lv_obj_t * obj, uint16_t sel_opt)lv_dropdown_set_selected278,8369
void lv_dropdown_set_dir(lv_obj_t * obj, lv_dir_t dir)lv_dropdown_set_dir291,8759
void lv_dropdown_set_symbol(lv_obj_t * obj, const void * symbol)lv_dropdown_set_symbol303,8999
void lv_dropdown_set_selected_highlight(lv_obj_t * obj, bool en)lv_dropdown_set_selected_highlight312,9216
lv_obj_t * lv_dropdown_get_list(lv_obj_t * obj)lv_dropdown_get_list325,9541
const char * lv_dropdown_get_text(lv_obj_t * obj)lv_dropdown_get_text334,9710
const char * lv_dropdown_get_options(const lv_obj_t * obj)lv_dropdown_get_options342,9880
uint16_t lv_dropdown_get_selected(const lv_obj_t * obj)lv_dropdown_get_selected350,10095
uint16_t lv_dropdown_get_option_cnt(const lv_obj_t * obj)lv_dropdown_get_option_cnt359,10278
void lv_dropdown_get_selected_str(const lv_obj_t * obj, char * buf, uint32_t buf_size)lv_dropdown_get_selected_str368,10463
const char * lv_dropdown_get_symbol(lv_obj_t * obj)lv_dropdown_get_symbol394,11180
bool lv_dropdown_get_selected_highlight(lv_obj_t * obj)lv_dropdown_get_selected_highlight401,11353
lv_dir_t lv_dropdown_get_dir(const lv_obj_t * obj)lv_dropdown_get_dir408,11542
void lv_dropdown_open(lv_obj_t * dropdown_obj)lv_dropdown_open419,11780
void lv_dropdown_close(lv_obj_t * obj)lv_dropdown_close521,15832
static lv_obj_t * lv_dropdown_list_create(lv_obj_t * parent)lv_dropdown_list_create536,16195
static void lv_dropdown_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)lv_dropdown_constructor544,16413
static void lv_dropdown_destructor(const lv_obj_class_t * class_p, lv_obj_t * obj)lv_dropdown_destructor570,17228
static void lv_dropdownlist_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)lv_dropdownlist_constructor586,17605
static void lv_dropdownlist_destructor(const lv_obj_class_t * class_p, lv_obj_t * list_obj)lv_dropdownlist_destructor597,17878
static void lv_dropdown_event(const lv_obj_class_t * class_p, lv_event_t * e)lv_dropdown_event606,18198
static void lv_dropdown_list_event(const lv_obj_class_t * class_p, lv_event_t * e)lv_dropdown_list_event696,21243
static void draw_main(lv_event_t * e)draw_main732,22308
static void draw_list(lv_event_t * e)draw_list846,26543
static void draw_box(lv_obj_t * dropdown_obj, const lv_area_t * clip_area, uint16_t id, lv_state_t state)draw_box882,28348
static void draw_box_label(lv_obj_t * dropdown_obj, const lv_area_t * clip_area, uint16_t id, lv_state_t state)draw_box_label920,29683
static lv_res_t btn_release_handler(lv_obj_t * obj)btn_release_handler964,31195
static lv_res_t list_release_handler(lv_obj_t * list_obj)list_release_handler1000,32527
static void list_press_handler(lv_obj_t * list_obj)list_press_handler1036,33903
static uint16_t get_id_on_point(lv_obj_t * dropdown_obj, lv_coord_t y)get_id_on_point1051,34472
static void position_to_selected(lv_obj_t * dropdown_obj)position_to_selected1075,35258
static lv_obj_t * get_label(const lv_obj_t * obj)get_label1095,36026

lib/lvgl/src/widgets/lv_switch.h,142
#define LV_SWITCH_HLV_SWITCH_H7,49
    lv_obj_t obj;obj31,409
    int32_t anim_state;anim_state32,427
} lv_switch_t;lv_switch_t33,451

lib/lvgl/src/widgets/lv_dropdown.h,1435
#define LV_DROPDOWN_HLV_DROPDOWN_H7,57
#define LV_DROPDOWN_POS_LAST LV_DROPDOWN_POS_LAST31,484
LV_EXPORT_CONST_INT(LV_DROPDOWN_POS_LAST);LV_DROPDOWN_POS_LAST32,520
    lv_obj_t obj;obj39,648
    lv_obj_t * list;                /**< The dropped down list*/list40,666
    const char * text;              /**< Text to display on the dropdown's button*/text41,731
    const void * symbol;            /**< Arrow or other icon when the drop-down list is closed*/symbol42,815
    char * options;                 /**< Options in a a '\n' separated list*/options43,912
    uint16_t option_cnt;            /**< Number of options*/option_cnt44,990
    uint16_t sel_opt_id;            /**< Index of the currently selected option*/sel_opt_id45,1051
    uint16_t sel_opt_id_orig;       /**< Store the original index on focus*/sel_opt_id_orig46,1133
    uint16_t pr_opt_id;             /**< Index of the currently pressed option*/pr_opt_id47,1210
    lv_dir_t dir              : 4;  /**< Direction in which the list should open*/dir48,1291
    uint8_t static_txt        : 1;  /**< 1: Only a pointer is saved in `options`*/static_txt49,1374
    uint8_t selected_highlight: 1;  /**< 1: Make the selected option highlighted in the list*/selected_highlight50,1457
} lv_dropdown_t;lv_dropdown_t51,1552
    lv_obj_t obj;obj54,1587
    lv_obj_t * dropdown;dropdown55,1605
} lv_dropdown_list_t;lv_dropdown_list_t56,1630

lib/lvgl/src/widgets/lv_objx_templ.h,162
#define LV_TEMPL_HLV_TEMPL_H14,272
    lv_ANCESTOR_t ancestor; /*The ancestor widget, e.g. lv_slider_t slider*/ancestor38,650
} lv_templ_t;lv_templ_t40,758

lib/lvgl/src/widgets/lv_textarea.h,2073
#define LV_TEXTAREA_HLV_TEXTAREA_H7,51
#define LV_TEXTAREA_CURSOR_LAST LV_TEXTAREA_CURSOR_LAST31,488
LV_EXPORT_CONST_INT(LV_TEXTAREA_CURSOR_LAST);LV_TEXTAREA_CURSOR_LAST33,574
    lv_obj_t obj;obj41,727
    lv_obj_t * label;            /*Label of the text area*/label42,745
    char * placeholder_txt;      /*Place holder label. only visible if text is an empty string*/placeholder_txt43,805
    char * pwd_tmp;              /*Used to store the original text in password mode*/pwd_tmp44,902
    const char * accepted_chars; /*Only these characters will be accepted. NULL: accept all*/accepted_chars45,988
    uint32_t max_length;         /*The max. number of characters. 0: no limit*/max_length46,1082
    uint16_t pwd_show_time;      /*Time to show characters in password mode before change them to '*'*/pwd_show_time47,1162
        lv_coord_t valid_x;        /*Used when stepping up/down to a shorter line.valid_x49,1279
        uint32_t pos;              /*The current cursor positionpos51,1423
        lv_area_t area;            /*Cursor area relative to the Text Area*/area53,1576
        uint32_t txt_byte_pos;     /*Byte index of the letter after (on) the cursor*/txt_byte_pos54,1653
        uint8_t show : 1;          /*Cursor is visible now or not (Handled by the library)*/show55,1739
        uint8_t click_pos : 1;     /*1: Enable positioning the cursor by clicking the text area*/click_pos56,1832
    } cursor;cursor57,1930
    uint32_t sel_start;  /*Temporary values for text selection*/sel_start59,1972
    uint32_t sel_end;sel_end60,2037
    uint8_t text_sel_in_prog : 1; /*User is in process of selecting*/text_sel_in_prog61,2059
    uint8_t text_sel_en : 1;      /*Text can be selected on this text area*/text_sel_en62,2129
    uint8_t pwd_mode : 1; /*Replace characters with '*'*/pwd_mode64,2213
    uint8_t one_line : 1; /*One line mode (ignore line breaks)*/one_line65,2271
} lv_textarea_t;lv_textarea_t66,2336
    LV_PART_TEXTAREA_PLACEHOLDER = LV_PART_CUSTOM_FIRST,LV_PART_TEXTAREA_PLACEHOLDER71,2409

lib/lvgl/src/widgets/lv_canvas.c,2375
#define MY_CLASS MY_CLASS20,326
const lv_obj_class_t lv_canvas_class = {lv_canvas_class35,735
lv_obj_t * lv_canvas_create(lv_obj_t * parent)lv_canvas_create50,1079
void lv_canvas_set_buffer(lv_obj_t * obj, void * buf, lv_coord_t w, lv_coord_t h, lv_img_cf_t cf)lv_canvas_set_buffer62,1339
void lv_canvas_set_px_color(lv_obj_t * obj, lv_coord_t x, lv_coord_t y, lv_color_t c)lv_canvas_set_px_color77,1717
void lv_canvas_set_px_opa(lv_obj_t * obj, lv_coord_t x, lv_coord_t y, lv_opa_t opa)lv_canvas_set_px_opa87,1971
void lv_canvas_set_palette(lv_obj_t * obj, uint8_t id, lv_color_t c)lv_canvas_set_palette97,2225
lv_color_t lv_canvas_get_px(lv_obj_t * obj, lv_coord_t x, lv_coord_t y)lv_canvas_get_px111,2529
lv_img_dsc_t * lv_canvas_get_img(lv_obj_t * obj)lv_canvas_get_img121,2824
void lv_canvas_copy_buf(lv_obj_t * obj, const void * to_copy, lv_coord_t x, lv_coord_t y, lv_coord_t w, lv_coord_t h)lv_canvas_copy_buf133,3054
void lv_canvas_transform(lv_obj_t * obj, lv_img_dsc_t * img, int16_t angle, uint16_t zoom, lv_coord_t offset_x,lv_canvas_transform156,3879
void lv_canvas_blur_hor(lv_obj_t * obj, const lv_area_t * area, uint16_t r)lv_canvas_blur_hor259,8501
void lv_canvas_blur_ver(lv_obj_t * obj, const lv_area_t * area, uint16_t r)lv_canvas_blur_ver387,12397
void lv_canvas_fill_bg(lv_obj_t * canvas, lv_color_t color, lv_opa_t opa)lv_canvas_fill_bg520,16502
void lv_canvas_draw_rect(lv_obj_t * canvas, lv_coord_t x, lv_coord_t y, lv_coord_t w, lv_coord_t h,lv_canvas_draw_rect549,17463
void lv_canvas_draw_text(lv_obj_t * canvas, lv_coord_t x, lv_coord_t y, lv_coord_t max_w,lv_canvas_draw_text610,19392
void lv_canvas_draw_img(lv_obj_t * canvas, lv_coord_t x, lv_coord_t y, const void * src,lv_canvas_draw_img664,21057
void lv_canvas_draw_line(lv_obj_t * canvas, const lv_point_t points[], uint32_t point_cnt,lv_canvas_draw_line725,22908
void lv_canvas_draw_polygon(lv_obj_t * canvas, const lv_point_t points[], uint32_t point_cnt,lv_canvas_draw_polygon782,24795
void lv_canvas_draw_arc(lv_obj_t * canvas, lv_coord_t x, lv_coord_t y, lv_coord_t r, int32_t start_angle,lv_canvas_draw_arc837,26622
static void lv_canvas_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)lv_canvas_constructor907,28801
static void lv_canvas_destructor(const lv_obj_class_t * class_p, lv_obj_t * obj)lv_canvas_destructor926,29335

lib/lvgl/src/widgets/lv_arc.c,2513
#define MY_CLASS MY_CLASS21,352
#define VALUE_UNSET VALUE_UNSET23,384
const lv_obj_class_t lv_arc_class  = {lv_arc_class44,1150
lv_obj_t * lv_arc_create(lv_obj_t * parent)lv_arc_create60,1517
void lv_arc_set_start_angle(lv_obj_t * obj, uint16_t start)lv_arc_set_start_angle80,1919
void lv_arc_set_end_angle(lv_obj_t * obj, uint16_t end)lv_arc_set_end_angle100,2637
void lv_arc_set_angles(lv_obj_t * obj, uint16_t start, uint16_t end)lv_arc_set_angles119,3334
void lv_arc_set_bg_start_angle(lv_obj_t * obj, uint16_t start)lv_arc_set_bg_start_angle125,3484
void lv_arc_set_bg_end_angle(lv_obj_t * obj, uint16_t end)lv_arc_set_bg_end_angle147,4201
void lv_arc_set_bg_angles(lv_obj_t * obj, uint16_t start, uint16_t end)lv_arc_set_bg_angles169,4898
void lv_arc_set_rotation(lv_obj_t * obj, uint16_t rotation)lv_arc_set_rotation175,5057
void lv_arc_set_mode(lv_obj_t * obj, lv_arc_mode_t type)lv_arc_set_mode185,5254
void lv_arc_set_value(lv_obj_t * obj, int16_t value)lv_arc_set_value214,6134
void lv_arc_set_range(lv_obj_t * obj, int16_t min, int16_t max)lv_arc_set_range231,6556
void lv_arc_set_change_rate(lv_obj_t * obj, uint16_t rate)lv_arc_set_change_rate251,7005
uint16_t lv_arc_get_angle_start(lv_obj_t * obj)lv_arc_get_angle_start263,7238
uint16_t lv_arc_get_angle_end(lv_obj_t * obj)lv_arc_get_angle_end269,7375
uint16_t lv_arc_get_bg_angle_start(lv_obj_t * obj)lv_arc_get_bg_angle_start275,7508
uint16_t lv_arc_get_bg_angle_end(lv_obj_t * obj)lv_arc_get_bg_angle_end281,7645
int16_t lv_arc_get_value(const lv_obj_t * obj)lv_arc_get_value287,7778
int16_t lv_arc_get_min_value(const lv_obj_t * obj)lv_arc_get_min_value293,7902
int16_t lv_arc_get_max_value(const lv_obj_t * obj)lv_arc_get_max_value299,8034
lv_arc_mode_t lv_arc_get_mode(const lv_obj_t * obj)lv_arc_get_mode305,8166
static void lv_arc_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)lv_arc_constructor315,8366
static void lv_arc_event(const lv_obj_class_t * class_p, lv_event_t * e)lv_arc_event346,9207
static void lv_arc_draw(lv_event_t * e)lv_arc_draw546,16800
static void inv_arc_area(lv_obj_t * obj, uint16_t start_angle, uint16_t end_angle, lv_part_t part)inv_arc_area627,19918
static void get_center(lv_obj_t * obj, lv_point_t * center, lv_coord_t * arc_r)get_center675,21885
static void get_knob_area(lv_obj_t * obj, const lv_point_t * center, lv_coord_t r, lv_area_t * knob_area)get_knob_area693,22620
static void value_update(lv_obj_t * obj)value_update732,24273

lib/lvgl/src/widgets/lv_bar.h,1262
#define LV_BAR_HLV_BAR_H7,47
    LV_BAR_MODE_NORMAL,LV_BAR_MODE_NORMAL34,462
    LV_BAR_MODE_SYMMETRICAL,LV_BAR_MODE_SYMMETRICAL35,486
    LV_BAR_MODE_RANGELV_BAR_MODE_RANGE36,515
typedef uint8_t lv_bar_mode_t;lv_bar_mode_t38,540
    lv_obj_t * bar;bar41,589
    int32_t anim_start;anim_start42,609
    int32_t anim_end;anim_end43,633
    int32_t anim_state;anim_state44,655
} _lv_bar_anim_t;_lv_bar_anim_t45,679
    lv_obj_t obj;obj48,715
    int32_t cur_value;          /**< Current value of the bar*/cur_value49,733
    int32_t min_value;          /**< Minimum value of the bar*/min_value50,797
    int32_t max_value;          /**< Maximum value of the bar*/max_value51,861
    int32_t start_value;        /**< Start value of the bar*/start_value52,925
    lv_area_t indic_area;       /**< Save the indicator area. Might be used by derived types*/indic_area53,987
    _lv_bar_anim_t cur_value_anim;cur_value_anim54,1082
    _lv_bar_anim_t start_value_anim;start_value_anim55,1117
    lv_bar_mode_t mode : 2;     /**< Type of bar*/mode56,1154
} lv_bar_t;lv_bar_t57,1205
    LV_BAR_DRAW_PART_INDICATOR,    /**< The indicator*/LV_BAR_DRAW_PART_INDICATOR66,1423
} lv_bar_draw_part_type_t;lv_bar_draw_part_type_t67,1479

lib/lvgl/src/widgets/lv_btnmatrix.c,3833
#define MY_CLASS MY_CLASS23,425
#define BTN_EXTRA_CLICK_AREA_MAX BTN_EXTRA_CLICK_AREA_MAX25,463
#define LV_BTNMATRIX_WIDTH_MASK LV_BTNMATRIX_WIDTH_MASK26,514
static const char * lv_btnmatrix_def_map[] = {"Btn1", "Btn2", "Btn3", "\n", "Btn4", "Btn5", ""};lv_btnmatrix_def_map59,2047
const lv_obj_class_t lv_btnmatrix_class = {lv_btnmatrix_class61,2145
lv_obj_t * lv_btnmatrix_create(lv_obj_t * parent)lv_btnmatrix_create81,2690
void lv_btnmatrix_set_map(lv_obj_t * obj, const char * map[])lv_btnmatrix_set_map93,2953
void lv_btnmatrix_set_ctrl_map(lv_obj_t * obj, const lv_btnmatrix_ctrl_t ctrl_map[])lv_btnmatrix_set_ctrl_map184,6461
void lv_btnmatrix_set_selected_btn(lv_obj_t * obj, uint16_t btn_id)lv_btnmatrix_set_selected_btn194,6769
void lv_btnmatrix_set_btn_ctrl(lv_obj_t * obj, uint16_t btn_id, lv_btnmatrix_ctrl_t ctrl)lv_btnmatrix_set_btn_ctrl207,7128
void lv_btnmatrix_clear_btn_ctrl(lv_obj_t * obj, uint16_t btn_id, lv_btnmatrix_ctrl_t ctrl)lv_btnmatrix_clear_btn_ctrl227,7668
void lv_btnmatrix_set_btn_ctrl_all(lv_obj_t * obj, lv_btnmatrix_ctrl_t ctrl)lv_btnmatrix_set_btn_ctrl_all243,8069
void lv_btnmatrix_clear_btn_ctrl_all(lv_obj_t * obj, lv_btnmatrix_ctrl_t ctrl)lv_btnmatrix_clear_btn_ctrl_all254,8350
void lv_btnmatrix_set_btn_width(lv_obj_t * obj, uint16_t btn_id, uint8_t width)lv_btnmatrix_set_btn_width265,8635
void lv_btnmatrix_set_one_checked(lv_obj_t * obj, bool en)lv_btnmatrix_set_one_checked277,9017
const char ** lv_btnmatrix_get_map(const lv_obj_t * obj)lv_btnmatrix_get_map292,9378
uint16_t lv_btnmatrix_get_selected_btn(const lv_obj_t * obj)lv_btnmatrix_get_selected_btn300,9551
const char * lv_btnmatrix_get_btn_text(const lv_obj_t * obj, uint16_t btn_id)lv_btnmatrix_get_btn_text308,9733
bool lv_btnmatrix_has_btn_ctrl(lv_obj_t * obj, uint16_t btn_id, lv_btnmatrix_ctrl_t ctrl)lv_btnmatrix_has_btn_ctrl333,10341
bool lv_btnmatrix_get_one_checked(const lv_obj_t * obj)lv_btnmatrix_get_one_checked343,10640
static void lv_btnmatrix_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)lv_btnmatrix_constructor356,10889
static void lv_btnmatrix_destructor(const lv_obj_class_t * class_p, lv_obj_t * obj)lv_btnmatrix_destructor374,11419
static void lv_btnmatrix_event(const lv_obj_class_t * class_p, lv_event_t * e)lv_btnmatrix_event386,11784
static void draw_main(lv_event_t * e)draw_main652,23725
static void allocate_btn_areas_and_controls(const lv_obj_t * obj, const char ** map)allocate_btn_areas_and_controls821,30442
static uint8_t get_button_width(lv_btnmatrix_ctrl_t ctrl_bits)get_button_width865,31818
static bool button_is_hidden(lv_btnmatrix_ctrl_t ctrl_bits)button_is_hidden871,31966
static bool button_is_checked(lv_btnmatrix_ctrl_t ctrl_bits)button_is_checked876,32097
static bool button_is_repeat_disabled(lv_btnmatrix_ctrl_t ctrl_bits)button_is_repeat_disabled881,32230
static bool button_is_inactive(lv_btnmatrix_ctrl_t ctrl_bits)button_is_inactive886,32373
static bool button_is_click_trig(lv_btnmatrix_ctrl_t ctrl_bits)button_is_click_trig891,32508
static bool button_is_popover(lv_btnmatrix_ctrl_t ctrl_bits)button_is_popover896,32647
static bool button_is_checkable(lv_btnmatrix_ctrl_t ctrl_bits)button_is_checkable901,32780
static bool button_get_checked(lv_btnmatrix_ctrl_t ctrl_bits)button_get_checked906,32917
static bool button_is_recolor(lv_btnmatrix_ctrl_t ctrl_bits)button_is_recolor911,33051
static uint16_t get_button_from_point(lv_obj_t * obj, lv_point_t * p)get_button_from_point921,33398
static void invalidate_button_area(const lv_obj_t * obj, uint16_t btn_idx)invalidate_button_area974,35687
static void make_one_button_checked(lv_obj_t * obj, uint16_t btn_idx)make_one_button_checked1015,37281
static bool has_popovers_in_top_row(lv_obj_t * obj)has_popovers_in_top_row1030,37862

lib/lvgl/src/widgets/lv_roller.c,2106
#define MY_CLASS MY_CLASS21,365
#define MY_CLASS_LABEL MY_CLASS_LABEL22,399
const lv_obj_class_t lv_roller_class = {lv_roller_class48,1419
const lv_obj_class_t lv_roller_label_class  = {lv_roller_label_class59,1770
lv_obj_t * lv_roller_create(lv_obj_t * parent)lv_roller_create78,2224
void lv_roller_set_options(lv_obj_t * obj, const char * options, lv_roller_mode_t mode)lv_roller_set_options96,2712
void lv_roller_set_selected(lv_obj_t * obj, uint16_t sel_opt, lv_anim_enable_t anim)lv_roller_set_selected152,4591
void lv_roller_set_visible_row_count(lv_obj_t * obj, uint8_t row_cnt)lv_roller_set_visible_row_count188,5941
uint16_t lv_roller_get_selected(const lv_obj_t * obj)lv_roller_get_selected207,6617
void lv_roller_get_selected_str(const lv_obj_t * obj, char * buf, uint32_t buf_size)lv_roller_get_selected_str227,7199
const char * lv_roller_get_options(const lv_obj_t * obj)lv_roller_get_options260,8112
uint16_t lv_roller_get_option_cnt(const lv_obj_t * obj)lv_roller_get_option_cnt273,8382
static void lv_roller_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)lv_roller_constructor291,8763
static void lv_roller_event(const lv_obj_class_t * class_p, lv_event_t * e)lv_roller_event312,9434
static void lv_roller_label_event(const lv_obj_class_t * class_p, lv_event_t * e)lv_roller_label_event415,13222
static void draw_main(lv_event_t * e)draw_main447,14271
static void draw_label(lv_event_t * e)draw_label517,17454
static void get_sel_area(lv_obj_t * obj, lv_area_t * sel_area)get_sel_area549,18637
static void refr_position(lv_obj_t * obj, lv_anim_enable_t anim_en)refr_position573,19652
static lv_res_t release_handler(lv_obj_t * obj)release_handler628,21654
static void inf_normalize(lv_obj_t * obj)inf_normalize705,24641
static lv_obj_t * get_label(const lv_obj_t * obj)get_label733,25784
static lv_coord_t get_selected_label_width(const lv_obj_t * obj)get_selected_label_width739,25877
static void scroll_anim_ready_cb(lv_anim_t * a)scroll_anim_ready_cb752,26367
static void set_y_anim(void * obj, int32_t v)set_y_anim759,26519

lib/lvgl/src/widgets/lv_line.c,639
#define MY_CLASS MY_CLASS22,352
const lv_obj_class_t lv_line_class = {lv_line_class37,750
lv_obj_t * lv_line_create(lv_obj_t * parent)lv_line_create54,1145
void lv_line_set_points(lv_obj_t * obj, const lv_point_t points[], uint16_t point_num)lv_line_set_points66,1403
void lv_line_set_y_invert(lv_obj_t * obj, bool en)lv_line_set_y_invert79,1709
bool lv_line_get_y_invert(const lv_obj_t * obj)lv_line_get_y_invert95,2014
static void lv_line_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)lv_line_constructor108,2260
static void lv_line_event(const lv_obj_class_t * class_p, lv_event_t * e)lv_line_event124,2620

lib/lvgl/src/widgets/lv_widgets.mk,0

lib/lvgl/src/widgets/lv_bar.c,2092
#define MY_CLASS MY_CLASS20,317
#define LV_BAR_SIZE_MIN LV_BAR_SIZE_MIN23,426
#define LV_BAR_IS_ANIMATING(LV_BAR_IS_ANIMATING25,454
#define LV_BAR_GET_ANIM_VALUE(LV_BAR_GET_ANIM_VALUE26,549
#define LV_BAR_ANIM_STATE_START LV_BAR_ANIM_STATE_START29,780
#define LV_BAR_ANIM_STATE_END LV_BAR_ANIM_STATE_END32,912
#define LV_BAR_ANIM_STATE_INV LV_BAR_ANIM_STATE_INV35,988
#define LV_BAR_ANIM_STATE_NORM LV_BAR_ANIM_STATE_NORM38,1081
const lv_obj_class_t lv_bar_class = {lv_bar_class60,1953
lv_obj_t * lv_bar_create(lv_obj_t * parent)lv_bar_create78,2383
void lv_bar_set_value(lv_obj_t * obj, int32_t value, lv_anim_enable_t anim)lv_bar_set_value90,2640
void lv_bar_set_start_value(lv_obj_t * obj, int32_t value, lv_anim_enable_t anim)lv_bar_set_start_value104,3132
void lv_bar_set_range(lv_obj_t * obj, int32_t min, int32_t max)lv_bar_set_range117,3593
void lv_bar_set_mode(lv_obj_t * obj, lv_bar_mode_t mode)lv_bar_set_mode142,4206
int32_t lv_bar_get_value(const lv_obj_t * obj)lv_bar_get_value159,4552
int32_t lv_bar_get_start_value(const lv_obj_t * obj)lv_bar_get_start_value167,4748
int32_t lv_bar_get_min_value(const lv_obj_t * obj)lv_bar_get_min_value177,5017
int32_t lv_bar_get_max_value(const lv_obj_t * obj)lv_bar_get_max_value184,5172
lv_bar_mode_t lv_bar_get_mode(lv_obj_t * obj)lv_bar_get_mode192,5328
static void lv_bar_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)lv_bar_constructor204,5546
static void lv_bar_destructor(const lv_obj_class_t * class_p, lv_obj_t * obj)lv_bar_destructor226,6157
static void draw_indic(lv_event_t * e)draw_indic235,6395
static void lv_bar_event(const lv_obj_class_t * class_p, lv_event_t * e)lv_bar_event496,16513
static void lv_bar_anim(void * var, int32_t value)lv_bar_anim537,17864
static void lv_bar_anim_ready(lv_anim_t * a)lv_bar_anim_ready544,18032
static void lv_bar_set_value_with_anim(lv_obj_t * obj, int32_t new_value, int32_t * value_ptr,lv_bar_set_value_with_anim558,18438
static void lv_bar_init_anim(lv_obj_t * obj, _lv_bar_anim_t * bar_anim)lv_bar_init_anim591,19674

lib/lvgl/src/widgets/lv_btnmatrix.h,2811
#define LV_BTNMATRIX_HLV_BTNMATRIX_H7,54
#define LV_BTNMATRIX_BTN_NONE LV_BTNMATRIX_BTN_NONE25,335
LV_EXPORT_CONST_INT(LV_BTNMATRIX_BTN_NONE);LV_BTNMATRIX_BTN_NONE26,372
    _LV_BTNMATRIX_WIDTH     = 0x0007,      /**< Reserved to stire the size units*/_LV_BTNMATRIX_WIDTH35,603
    LV_BTNMATRIX_CTRL_HIDDEN     = 0x0008, /**< Button hidden*/LV_BTNMATRIX_CTRL_HIDDEN36,686
    LV_BTNMATRIX_CTRL_NO_REPEAT  = 0x0010, /**< Do not repeat press this button.*/LV_BTNMATRIX_CTRL_NO_REPEAT37,750
    LV_BTNMATRIX_CTRL_DISABLED   = 0x0020, /**< Disable this button.*/LV_BTNMATRIX_CTRL_DISABLED38,833
    LV_BTNMATRIX_CTRL_CHECKABLE  = 0x0040, /**< The button can be toggled.*/LV_BTNMATRIX_CTRL_CHECKABLE39,904
    LV_BTNMATRIX_CTRL_CHECKED    = 0x0080, /**< Button is currently toggled (e.g. checked).*/LV_BTNMATRIX_CTRL_CHECKED40,981
    LV_BTNMATRIX_CTRL_CLICK_TRIG = 0x0100, /**< 1: Send LV_EVENT_VALUE_CHANGE on CLICK, 0: Send LV_EVENT_VALUE_CHANGE on PRESS*/LV_BTNMATRIX_CTRL_CLICK_TRIG41,1075
    LV_BTNMATRIX_CTRL_POPOVER    = 0x0200, /**< Show a popover when pressing this key*/LV_BTNMATRIX_CTRL_POPOVER42,1204
    LV_BTNMATRIX_CTRL_RECOLOR    = 0x1000, /**< Enable text recoloring with `#color`*/LV_BTNMATRIX_CTRL_RECOLOR43,1292
    _LV_BTNMATRIX_CTRL_RESERVED  = 0x2000, /**< Reserved for later use*/_LV_BTNMATRIX_CTRL_RESERVED44,1379
    LV_BTNMATRIX_CTRL_CUSTOM_1   = 0x4000, /**< Custom free to use flag*/LV_BTNMATRIX_CTRL_CUSTOM_145,1452
    LV_BTNMATRIX_CTRL_CUSTOM_2   = 0x8000, /**< Custom free to use flag*/LV_BTNMATRIX_CTRL_CUSTOM_246,1526
typedef uint16_t lv_btnmatrix_ctrl_t;lv_btnmatrix_ctrl_t49,1604
typedef bool (*lv_btnmatrix_btn_draw_cb_t)(lv_obj_t * btnm, uint32_t btn_id, const lv_area_t * draw_area,lv_btnmatrix_btn_draw_cb_t51,1643
    lv_obj_t obj;obj56,1866
    const char ** map_p;                              /*Pointer to the current map*/map_p57,1884
    lv_area_t * button_areas;                         /*Array of areas of buttons*/button_areas58,1969
    lv_btnmatrix_ctrl_t * ctrl_bits;                       /*Array of control bytes*/ctrl_bits59,2053
    uint16_t btn_cnt;                                 /*Number of button in 'map_p'(Handled by the library)*/btn_cnt60,2139
    uint16_t row_cnt;                                 /*Number of rows in 'map_p'(Handled by the library)*/row_cnt61,2249
    uint16_t btn_id_sel;    /*Index of the active button (being pressed/released etc) or LV_BTNMATRIX_BTN_NONE*/btn_id_sel62,2357
    uint8_t one_check : 1;  /*Single button toggled at once*/one_check63,2470
} lv_btnmatrix_t;lv_btnmatrix_t64,2532
    LV_BTNMATRIX_DRAW_PART_BTN,    /**< The rectangle and label of buttons*/LV_BTNMATRIX_DRAW_PART_BTN73,2768
} lv_btnmatrix_draw_part_type_t;lv_btnmatrix_draw_part_type_t74,2845

lib/lvgl/src/widgets/lv_slider.h,2069
#define LV_SLIDER_HLV_SLIDER_H7,53
    LV_SLIDER_MODE_NORMAL = LV_BAR_MODE_NORMAL,LV_SLIDER_MODE_NORMAL37,557
    LV_SLIDER_MODE_SYMMETRICAL = LV_BAR_MODE_SYMMETRICAL,LV_SLIDER_MODE_SYMMETRICAL38,605
    LV_SLIDER_MODE_RANGE = LV_BAR_MODE_RANGELV_SLIDER_MODE_RANGE39,663
typedef uint8_t lv_slider_mode_t;lv_slider_mode_t41,711
    lv_bar_t bar;       /*Add the ancestor's type first*/bar44,763
    lv_area_t left_knob_area;left_knob_area45,821
    lv_area_t right_knob_area;right_knob_area46,851
    int32_t * value_to_set; /*Which bar value to set*/value_to_set47,882
    uint8_t dragging : 1;       /*1: the slider is being dragged*/dragging48,937
    uint8_t left_knob_focus : 1; /*1: with encoder now the right knob can be adjusted*/left_knob_focus49,1004
} lv_slider_t;lv_slider_t50,1092
    LV_SLIDER_DRAW_PART_KNOB,           /**< The main (right) knob's rectangle*/LV_SLIDER_DRAW_PART_KNOB59,1319
    LV_SLIDER_DRAW_PART_KNOB_LEFT,      /**< The left knob's rectangle*/LV_SLIDER_DRAW_PART_KNOB_LEFT60,1400
} lv_slider_draw_part_type_t;lv_slider_draw_part_type_t61,1473
static inline void lv_slider_set_value(lv_obj_t * obj, int32_t value, lv_anim_enable_t anim)lv_slider_set_value84,2091
static inline void lv_slider_set_left_value(lv_obj_t * obj, int32_t value, lv_anim_enable_t anim)lv_slider_set_left_value95,2470
static inline void lv_slider_set_range(lv_obj_t * obj, int32_t min, int32_t max)lv_slider_set_range106,2791
static inline void lv_slider_set_mode(lv_obj_t * obj, lv_slider_mode_t mode)lv_slider_set_mode116,3063
static inline int32_t lv_slider_get_value(const lv_obj_t * obj)lv_slider_get_value130,3424
static inline int32_t lv_slider_get_left_value(const lv_obj_t * obj)lv_slider_get_left_value140,3689
static inline int32_t lv_slider_get_min_value(const lv_obj_t * obj)lv_slider_get_min_value150,3947
static inline int32_t lv_slider_get_max_value(const lv_obj_t * obj)lv_slider_get_max_value160,4202
static inline lv_slider_mode_t lv_slider_get_mode(lv_obj_t * slider)lv_slider_get_mode177,4649

lib/lvgl/src/widgets/lv_checkbox.c,864
#define MY_CLASS MY_CLASS20,329
const lv_obj_class_t lv_checkbox_class = {lv_checkbox_class37,869
lv_obj_t * lv_checkbox_create(lv_obj_t * parent)lv_checkbox_create56,1371
void lv_checkbox_set_text(lv_obj_t * obj, const char * txt)lv_checkbox_set_text68,1633
void lv_checkbox_set_text_static(lv_obj_t * obj, const char * txt)lv_checkbox_set_text_static91,2176
const char * lv_checkbox_get_text(const lv_obj_t * obj)lv_checkbox_get_text108,2528
static void lv_checkbox_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)lv_checkbox_constructor118,2728
static void lv_checkbox_destructor(const lv_obj_class_t * class_p, lv_obj_t * obj)lv_checkbox_destructor134,3166
static void lv_checkbox_event(const lv_obj_class_t * class_p, lv_event_t * e)lv_checkbox_event147,3483
static void lv_checkbox_draw(lv_event_t * e)lv_checkbox_draw203,5752

lib/lvgl/src/widgets/lv_label.c,3050
#define MY_CLASS MY_CLASS24,475
#define LV_LABEL_DEF_SCROLL_SPEED LV_LABEL_DEF_SCROLL_SPEED26,509
#define LV_LABEL_SCROLL_DELAY LV_LABEL_SCROLL_DELAY27,589
#define LV_LABEL_DOT_END_INV LV_LABEL_DOT_END_INV28,629
#define LV_LABEL_HINT_HEIGHT_LIMIT LV_LABEL_HINT_HEIGHT_LIMIT29,669
const lv_obj_class_t lv_label_class = {lv_label_class55,1670
lv_obj_t * lv_label_create(lv_obj_t * parent)lv_label_create73,2111
void lv_label_set_text(lv_obj_t * obj, const char * text)lv_label_set_text85,2370
void lv_label_set_text_fmt(lv_obj_t * obj, const char * fmt, ...)lv_label_set_text_fmt147,4173
void lv_label_set_text_static(lv_obj_t * obj, const char * text)lv_label_set_text_static175,4829
void lv_label_set_long_mode(lv_obj_t * obj, lv_label_long_mode_t long_mode)lv_label_set_long_mode193,5235
void lv_label_set_recolor(lv_obj_t * obj, bool en)lv_label_set_recolor219,5995
void lv_label_set_text_sel_start(lv_obj_t * obj, uint32_t index)lv_label_set_text_sel_start232,6338
void lv_label_set_text_sel_end(lv_obj_t * obj, uint32_t index)lv_label_set_text_sel_end246,6656
char * lv_label_get_text(const lv_obj_t * obj)lv_label_get_text264,7040
lv_label_long_mode_t lv_label_get_long_mode(const lv_obj_t * obj)lv_label_get_long_mode271,7194
bool lv_label_get_recolor(const lv_obj_t * obj)lv_label_get_recolor278,7372
void lv_label_get_letter_pos(const lv_obj_t * obj, uint32_t char_id, lv_point_t * pos)lv_label_get_letter_pos286,7551
uint32_t lv_label_get_letter_on(const lv_obj_t * obj, lv_point_t * pos_in)lv_label_get_letter_on400,11724
bool lv_label_is_char_under_pos(const lv_obj_t * obj, lv_point_t * pos)lv_label_is_char_under_pos524,16464
uint32_t lv_label_get_text_selection_start(const lv_obj_t * obj)lv_label_get_text_selection_start607,19757
uint32_t lv_label_get_text_selection_end(const lv_obj_t * obj)lv_label_get_text_selection_end621,20048
void lv_label_ins_text(lv_obj_t * obj, uint32_t pos, const char * txt)lv_label_ins_text638,20403
void lv_label_cut_text(lv_obj_t * obj, uint32_t pos, uint32_t cnt)lv_label_cut_text666,21157
static void lv_label_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)lv_label_constructor688,21658
static void lv_label_destructor(const lv_obj_class_t * class_p, lv_obj_t * obj)lv_label_destructor724,22581
static void lv_label_event(const lv_obj_class_t * class_p, lv_event_t * e)lv_label_event734,22844
static void draw_main(lv_event_t * e)draw_main791,25030
static void lv_label_refr_text(lv_obj_t * obj)lv_label_refr_text887,29203
static void lv_label_revert_dots(lv_obj_t * obj)lv_label_revert_dots1148,39445
static bool lv_label_set_dot_tmp(lv_obj_t * obj, char * data, uint32_t len)lv_label_set_dot_tmp1178,40314
static char * lv_label_get_dot_tmp(lv_obj_t * obj)lv_label_get_dot_tmp1208,41342
static void lv_label_dot_tmp_free(lv_obj_t * obj)lv_label_dot_tmp_free1224,41700
static void set_ofs_x_anim(void * obj, int32_t v)set_ofs_x_anim1235,41967
static void set_ofs_y_anim(void * obj, int32_t v)set_ofs_y_anim1242,42122

lib/lvgl/src/widgets/lv_roller.h,730
#define LV_ROLLER_HLV_ROLLER_H7,53
    LV_ROLLER_MODE_NORMAL, /**< Normal mode (roller ends at the end of the options).*/LV_ROLLER_MODE_NORMAL33,444
    LV_ROLLER_MODE_INFINITE, /**< Infinite mode (roller can be scrolled forever).*/LV_ROLLER_MODE_INFINITE34,531
typedef uint8_t lv_roller_mode_t;lv_roller_mode_t37,619
    lv_obj_t obj;obj40,671
    uint16_t option_cnt;          /**< Number of options*/option_cnt41,689
    uint16_t sel_opt_id;          /**< Index of the current option*/sel_opt_id42,748
    uint16_t sel_opt_id_ori;      /**< Store the original index on focus*/sel_opt_id_ori43,817
    lv_roller_mode_t mode : 1;mode44,892
    uint32_t moved : 1;moved45,923
} lv_roller_t;lv_roller_t46,947

lib/lvgl/src/widgets/lv_objx_templ.c,548
#define MY_CLASS MY_CLASS25,636
const lv_obj_class_t lv_templ_class = {lv_templ_class41,1118
lv_obj_t * lv_templ_create(lv_obj_t * parent)lv_templ_create61,1647
static void lv_templ_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)lv_templ_constructor106,2436
static void lv_templ_destructor(const lv_obj_class_t * class_p, lv_obj_t * obj)lv_templ_destructor117,2700
static void lv_templ_event(const lv_obj_class_t * class_p, lv_event_t * e)lv_templ_event123,2867
typedef int keep_pedantic_happy;keep_pedantic_happy139,3260

lib/lvgl/src/widgets/lv_checkbox.h,337
#define LV_CHECKBOX_HLV_CHECKBOX_H7,51
    lv_obj_t obj;obj30,414
    char * txt;txt31,432
    uint32_t static_txt : 1;static_txt32,448
} lv_checkbox_t;lv_checkbox_t33,477
    LV_CHECKBOX_DRAW_PART_BOX,    /**< The tick box*/LV_CHECKBOX_DRAW_PART_BOX42,710
} lv_checkbox_draw_part_type_t;lv_checkbox_draw_part_type_t43,764

lib/lvgl/src/widgets/lv_img.c,1900
#define MY_CLASS MY_CLASS22,378
const lv_obj_class_t lv_img_class = {lv_img_class39,890
lv_obj_t * lv_img_create(lv_obj_t * parent)lv_img_create57,1321
void lv_img_set_src(lv_obj_t * obj, const void * src)lv_img_set_src69,1578
void lv_img_set_offset_x(lv_obj_t * obj, lv_coord_t x)lv_img_set_offset_x162,5037
void lv_img_set_offset_y(lv_obj_t * obj, lv_coord_t y)lv_img_set_offset_y174,5243
void lv_img_set_angle(lv_obj_t * obj, int16_t angle)lv_img_set_angle186,5449
void lv_img_set_pivot(lv_obj_t * obj, lv_coord_t x, lv_coord_t y)lv_img_set_pivot219,6532
void lv_img_set_zoom(lv_obj_t * obj, uint16_t zoom)lv_img_set_zoom252,7615
void lv_img_set_antialias(lv_obj_t * obj, bool antialias)lv_img_set_antialias285,8699
void lv_img_set_size_mode(lv_obj_t * obj, lv_img_size_mode_t mode)lv_img_set_size_mode294,8905
const void * lv_img_get_src(lv_obj_t * obj)lv_img_get_src308,9222
lv_coord_t lv_img_get_offset_x(lv_obj_t * obj)lv_img_get_offset_x317,9366
lv_coord_t lv_img_get_offset_y(lv_obj_t * obj)lv_img_get_offset_y326,9518
uint16_t lv_img_get_angle(lv_obj_t * obj)lv_img_get_angle335,9670
void lv_img_get_pivot(lv_obj_t * obj, lv_point_t * pivot)lv_img_get_pivot344,9814
uint16_t lv_img_get_zoom(lv_obj_t * obj)lv_img_get_zoom353,9976
bool lv_img_get_antialias(lv_obj_t * obj)lv_img_get_antialias362,10118
lv_img_size_mode_t lv_img_get_size_mode(lv_obj_t * obj)lv_img_get_size_mode371,10281
static void lv_img_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)lv_img_constructor382,10517
static void lv_img_destructor(const lv_obj_class_t * class_p, lv_obj_t * obj)lv_img_destructor409,11283
static lv_point_t lv_img_get_transformed_size(lv_obj_t * obj)lv_img_get_transformed_size420,11628
static void lv_img_event(const lv_obj_class_t * class_p, lv_event_t * e)lv_img_event438,12260
static void draw_img(lv_event_t * e)draw_img531,15807

lib/lvgl/src/widgets/lv_textarea.c,4904
#define MY_CLASS MY_CLASS25,463
    #define LV_TEXTAREA_DEF_CURSOR_BLINK_TIME LV_TEXTAREA_DEF_CURSOR_BLINK_TIME29,565
    #define LV_TEXTAREA_DEF_PWD_SHOW_TIME LV_TEXTAREA_DEF_PWD_SHOW_TIME33,668
#define LV_TEXTAREA_PWD_BULLET_UNICODE LV_TEXTAREA_PWD_BULLET_UNICODE36,730
const lv_obj_class_t lv_textarea_class = {lv_textarea_class64,1863
static const char * ta_insert_replace;ta_insert_replace75,2222
lv_obj_t * lv_textarea_create(lv_obj_t * parent)lv_textarea_create85,2399
void lv_textarea_add_char(lv_obj_t * obj, uint32_t c)lv_textarea_add_char97,2667
void lv_textarea_add_text(lv_obj_t * obj, const char * txt)lv_textarea_add_text171,5046
void lv_textarea_del_char(lv_obj_t * obj)lv_textarea_del_char233,7137
void lv_textarea_del_char_forward(lv_obj_t * obj)lv_textarea_del_char_forward277,8352
void lv_textarea_set_text(lv_obj_t * obj, const char * txt)lv_textarea_set_text290,8681
void lv_textarea_set_placeholder_text(lv_obj_t * obj, const char * txt)lv_textarea_set_placeholder_text350,10680
void lv_textarea_set_cursor_pos(lv_obj_t * obj, int32_t pos)lv_textarea_set_cursor_pos386,11651
void lv_textarea_set_cursor_click_pos(lv_obj_t * obj, bool en)lv_textarea_set_cursor_click_pos438,13256
void lv_textarea_set_password_mode(lv_obj_t * obj, bool en)lv_textarea_set_password_mode446,13445
void lv_textarea_set_one_line(lv_obj_t * obj, bool en)lv_textarea_set_one_line479,14280
void lv_textarea_set_accepted_chars(lv_obj_t * obj, const char * list)lv_textarea_set_accepted_chars503,14992
void lv_textarea_set_max_length(lv_obj_t * obj, uint32_t num)lv_textarea_set_max_length512,15182
void lv_textarea_set_insert_replace(lv_obj_t * obj, const char * txt)lv_textarea_set_insert_replace521,15358
void lv_textarea_set_text_selection(lv_obj_t * obj, bool en)lv_textarea_set_text_selection529,15517
void lv_textarea_set_password_show_time(lv_obj_t * obj, uint16_t time)lv_textarea_set_password_show_time545,15842
void lv_textarea_set_align(lv_obj_t * obj, lv_text_align_t align)lv_textarea_set_align553,16030
const char * lv_textarea_get_text(const lv_obj_t * obj)lv_textarea_get_text576,16740
const char * lv_textarea_get_placeholder_text(lv_obj_t * obj)lv_textarea_get_placeholder_text593,17045
lv_obj_t * lv_textarea_get_label(const lv_obj_t * obj)lv_textarea_get_label602,17270
uint32_t lv_textarea_get_cursor_pos(const lv_obj_t * obj)lv_textarea_get_cursor_pos610,17434
bool lv_textarea_get_cursor_click_pos(lv_obj_t * obj)lv_textarea_get_cursor_click_pos618,17606
bool lv_textarea_get_password_mode(const lv_obj_t * obj)lv_textarea_get_password_mode626,17795
bool lv_textarea_get_one_line(const lv_obj_t * obj)lv_textarea_get_one_line634,17984
const char * lv_textarea_get_accepted_chars(lv_obj_t * obj)lv_textarea_get_accepted_chars642,18168
uint32_t lv_textarea_get_max_length(lv_obj_t * obj)lv_textarea_get_max_length651,18347
bool lv_textarea_text_is_selected(const lv_obj_t * obj)lv_textarea_text_is_selected659,18513
bool lv_textarea_get_text_selection(lv_obj_t * obj)lv_textarea_get_text_selection679,18980
uint16_t lv_textarea_get_password_show_time(lv_obj_t * obj)lv_textarea_get_password_show_time692,19237
void lv_textarea_clear_selection(lv_obj_t * obj)lv_textarea_clear_selection705,19484
void lv_textarea_cursor_right(lv_obj_t * obj)lv_textarea_cursor_right722,20009
void lv_textarea_cursor_left(lv_obj_t * obj)lv_textarea_cursor_left731,20197
void lv_textarea_cursor_down(lv_obj_t * obj)lv_textarea_cursor_down742,20415
void lv_textarea_cursor_up(lv_obj_t * obj)lv_textarea_cursor_up771,21497
static void lv_textarea_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)lv_textarea_constructor799,22542
static void lv_textarea_destructor(const lv_obj_class_t * class_p, lv_obj_t * obj)lv_textarea_destructor835,23696
static void lv_textarea_event(const lv_obj_class_t * class_p, lv_event_t * e)lv_textarea_event850,24076
static void label_event_cb(lv_event_t * e)label_event_cb901,25793
static void cursor_blink_anim_cb(void * obj, int32_t show)cursor_blink_anim_cb921,26288
static void pwd_char_hider_anim(void * obj, int32_t x)pwd_char_hider_anim943,27001
static void pwd_char_hider_anim_ready(lv_anim_t * a)pwd_char_hider_anim_ready953,27212
static void pwd_char_hider(lv_obj_t * obj)pwd_char_hider963,27418
static bool char_is_accepted(lv_obj_t * obj, uint32_t c)char_is_accepted1001,28739
static void start_cursor_blink(lv_obj_t * obj)start_cursor_blink1029,29589
static void refr_cursor_area(lv_obj_t * obj)refr_cursor_area1051,30297
static void update_cursor_position_on_click(lv_event_t * e)update_cursor_position_on_click1137,33556
static lv_res_t insert_handler(lv_obj_t * obj, const char * txt)insert_handler1253,37996
static void draw_placeholder(lv_event_t * e)draw_placeholder1270,38507
static void draw_cursor(lv_event_t * e)draw_cursor1295,39555

lib/lvgl/src/widgets/lv_table.c,2278
#define MY_CLASS MY_CLASS23,414
const lv_obj_class_t lv_table_class  = {lv_table_class45,1371
lv_obj_t * lv_table_create(lv_obj_t * parent)lv_table_create64,1903
void lv_table_set_cell_value(lv_obj_t * obj, uint16_t row, uint16_t col, const char * txt)lv_table_set_cell_value76,2162
void lv_table_set_cell_value_fmt(lv_obj_t * obj, uint16_t row, uint16_t col, const char * fmt, ...)lv_table_set_cell_value_fmt114,3418
void lv_table_set_row_cnt(lv_obj_t * obj, uint16_t row_cnt)lv_table_set_row_cnt205,6367
void lv_table_set_col_cnt(lv_obj_t * obj, uint16_t col_cnt)lv_table_set_col_cnt241,7614
void lv_table_set_col_width(lv_obj_t * obj, uint16_t col_id, lv_coord_t w)lv_table_set_col_width296,9419
void lv_table_add_cell_ctrl(lv_obj_t * obj, uint16_t row, uint16_t col, lv_table_cell_ctrl_t ctrl)lv_table_add_cell_ctrl309,9726
void lv_table_clear_cell_ctrl(lv_obj_t * obj, uint16_t row, uint16_t col, lv_table_cell_ctrl_t ctrl)lv_table_clear_cell_ctrl333,10473
const char * lv_table_get_cell_value(lv_obj_t * obj, uint16_t row, uint16_t col)lv_table_get_cell_value361,11295
uint16_t lv_table_get_row_cnt(lv_obj_t * obj)lv_table_get_row_cnt377,11777
uint16_t lv_table_get_col_cnt(lv_obj_t * obj)lv_table_get_col_cnt385,11934
lv_coord_t lv_table_get_col_width(lv_obj_t * obj, uint16_t col)lv_table_get_col_width393,12091
bool lv_table_has_cell_ctrl(lv_obj_t * obj, uint16_t row, uint16_t col, lv_table_cell_ctrl_t ctrl)lv_table_has_cell_ctrl407,12421
void lv_table_get_selected_cell(lv_obj_t * obj, uint16_t * row, uint16_t * col)lv_table_get_selected_cell422,12936
static void lv_table_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)lv_table_constructor433,13191
static void lv_table_destructor(const lv_obj_class_t * class_p, lv_obj_t * obj)lv_table_destructor452,13824
static void lv_table_event(const lv_obj_class_t * class_p, lv_event_t * e)lv_table_event469,14321
static void draw_main(lv_event_t * e)draw_main588,17851
static void refr_size(lv_obj_t * obj, uint32_t strat_row)refr_size776,26161
static lv_coord_t get_row_height(lv_obj_t * obj, uint16_t row_id, const lv_font_t * font,get_row_height803,27303
static lv_res_t get_pressed_cell(lv_obj_t * obj, uint16_t * row, uint16_t * col)get_pressed_cell861,29575

lib/lvgl/src/widgets/lv_slider.c,697
#define MY_CLASS MY_CLASS23,406
#define LV_SLIDER_KNOB_COORD(LV_SLIDER_KNOB_COORD25,441
const lv_obj_class_t lv_slider_class = {lv_slider_class42,1064
lv_obj_t * lv_slider_create(lv_obj_t * parent)lv_slider_create59,1488
bool lv_slider_is_dragged(const lv_obj_t * obj)lv_slider_is_dragged67,1678
static void lv_slider_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)lv_slider_constructor79,1929
static void lv_slider_event(const lv_obj_class_t * class_p, lv_event_t * e)lv_slider_event94,2376
static void draw_knob(lv_event_t * e)draw_knob322,12400
static void position_knob(lv_obj_t * obj, lv_area_t * knob_area, lv_coord_t knob_size, bool hor)position_knob419,16092

lib/lvgl/src/widgets/lv_line.h,396
#define LV_LINE_HLV_LINE_H7,49
    lv_obj_t obj;obj32,422
    const lv_point_t * point_array;     /**< Pointer to an array with the points of the line*/point_array33,440
    uint16_t point_num;                 /**< Number of points in 'point_array'*/point_num34,535
    uint8_t y_inv : 1;                  /**< 1: y == 0 will be on the bottom*/y_inv35,616
} lv_line_t;lv_line_t36,695

lib/lvgl/src/widgets/lv_label.h,2364
#define LV_LABEL_HLV_LABEL_H7,51
#define LV_LABEL_WAIT_CHAR_COUNT LV_LABEL_WAIT_CHAR_COUNT30,465
#define LV_LABEL_DOT_NUM LV_LABEL_DOT_NUM31,507
#define LV_LABEL_POS_LAST LV_LABEL_POS_LAST32,534
#define LV_LABEL_TEXT_SELECTION_OFF LV_LABEL_TEXT_SELECTION_OFF33,567
LV_EXPORT_CONST_INT(LV_LABEL_DOT_NUM);LV_LABEL_DOT_NUM35,629
LV_EXPORT_CONST_INT(LV_LABEL_POS_LAST);LV_LABEL_POS_LAST36,668
LV_EXPORT_CONST_INT(LV_LABEL_TEXT_SELECTION_OFF);LV_LABEL_TEXT_SELECTION_OFF37,708
    LV_LABEL_LONG_WRAP,             /**< Keep the object width, wrap the too long lines and expand the object height*/LV_LABEL_LONG_WRAP45,885
    LV_LABEL_LONG_DOT,              /**< Keep the size and write dots at the end if the text is too long*/LV_LABEL_LONG_DOT46,1004
    LV_LABEL_LONG_SCROLL,           /**< Keep the size and roll the text back and forth*/LV_LABEL_LONG_SCROLL47,1111
    LV_LABEL_LONG_SCROLL_CIRCULAR,  /**< Keep the size and roll the text circularly*/LV_LABEL_LONG_SCROLL_CIRCULAR48,1201
    LV_LABEL_LONG_CLIP,             /**< Keep the size and clip the text out of it*/LV_LABEL_LONG_CLIP49,1287
typedef uint8_t lv_label_long_mode_t;lv_label_long_mode_t51,1375
    lv_obj_t obj;obj54,1431
    char * text;text55,1449
        char * tmp_ptr; /*Pointer to the allocated memory containing the character replaced by dots*/tmp_ptr57,1478
        char tmp[LV_LABEL_DOT_NUM + 1]; /*Directly store the characters if <=4 characters*/tmp58,1580
    } dot;dot59,1672
    uint32_t dot_end;  /*The real text length, used in dot mode*/dot_end60,1683
    lv_draw_label_hint_t hint;hint63,1777
    uint32_t sel_start;sel_start67,1844
    uint32_t sel_end;sel_end68,1868
    lv_point_t offset; /*Text draw position offset*/offset71,1898
    lv_label_long_mode_t long_mode : 3; /*Determinate what to do with the long texts*/long_mode72,1951
    uint8_t static_txt : 1;             /*Flag to indicate the text is static*/static_txt73,2038
    uint8_t recolor : 1;                /*Enable in-line letter re-coloring*/recolor74,2118
    uint8_t expand : 1;                 /*Ignore real width (used by the library with LV_LABEL_LONG_SROLL)*/expand75,2196
    uint8_t dot_tmp_alloc : 1; /*1: dot_tmp has been allocated;.0: dot_tmp directly holds up to 4 bytes of characters*/dot_tmp_alloc76,2305
} lv_label_t;lv_label_t77,2425

lib/lvgl/src/widgets/lv_btn.c,264
#define MY_CLASS MY_CLASS18,243
const lv_obj_class_t lv_btn_class  = {lv_btn_class32,564
lv_obj_t * lv_btn_create(lv_obj_t * parent)lv_btn_create49,972
static void lv_btn_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)lv_btn_constructor61,1231

lib/lvgl/src/widgets/lv_switch.c,1071
#define MY_CLASS MY_CLASS23,373
#define LV_SWITCH_IS_ANIMATING(LV_SWITCH_IS_ANIMATING25,408
#define LV_SWITCH_ANIM_STATE_START LV_SWITCH_ANIM_STATE_START28,597
#define LV_SWITCH_ANIM_STATE_END LV_SWITCH_ANIM_STATE_END31,738
#define LV_SWITCH_ANIM_STATE_INV LV_SWITCH_ANIM_STATE_INV34,817
const lv_obj_class_t lv_switch_class = {lv_switch_class54,1509
lv_obj_t * lv_switch_create(lv_obj_t * parent)lv_switch_create73,2013
static void lv_switch_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)lv_switch_constructor85,2275
static void lv_switch_destructor(const lv_obj_class_t * class_p, lv_obj_t * obj)lv_switch_destructor101,2707
static void lv_switch_event(const lv_obj_class_t * class_p, lv_event_t * e)lv_switch_event109,2888
static void draw_main(lv_event_t * e)draw_main146,4217
static void lv_switch_anim_exec_cb(void * var, int32_t value)lv_switch_anim_exec_cb222,6869
static void lv_switch_anim_ready(lv_anim_t * a)lv_switch_anim_ready232,7109
static void lv_switch_trigger_anim(lv_obj_t * obj)lv_switch_trigger_anim243,7417

lib/lvgl/src/widgets/lv_arc.h,1594
#define LV_ARC_HLV_ARC_H7,47
    LV_ARC_MODE_NORMAL,LV_ARC_MODE_NORMAL31,391
    LV_ARC_MODE_SYMMETRICAL,LV_ARC_MODE_SYMMETRICAL32,415
    LV_ARC_MODE_REVERSELV_ARC_MODE_REVERSE33,444
typedef uint8_t lv_arc_mode_t;lv_arc_mode_t35,471
    lv_obj_t obj;obj38,520
    uint16_t rotation;rotation39,538
    uint16_t indic_angle_start;indic_angle_start40,561
    uint16_t indic_angle_end;indic_angle_end41,593
    uint16_t bg_angle_start;bg_angle_start42,623
    uint16_t bg_angle_end;bg_angle_end43,652
    int16_t value;              /*Current value of the arc*/value44,679
    int16_t min_value;          /*Minimum value of the arc*/min_value45,740
    int16_t max_value;          /*Maximum value of the arc*/max_value46,801
    uint16_t dragging    : 1;dragging47,862
    uint16_t type        : 2;type48,892
    uint16_t min_close   : 1;   /*1: the last pressed angle was closer to minimum end*/min_close49,922
    uint16_t chg_rate;          /*Drag angle rate of change of the arc (degrees/sec)*/chg_rate50,1010
    uint32_t last_tick;         /*Last dragging event timestamp of the arc*/last_tick51,1097
    int16_t last_angle;         /*Last dragging angle of the arc*/last_angle52,1174
} lv_arc_t;lv_arc_t53,1241
    LV_ARC_DRAW_PART_BACKGROUND,    /**< The background arc*/LV_ARC_DRAW_PART_BACKGROUND62,1459
    LV_ARC_DRAW_PART_FOREGROUND,    /**< The foreground arc*/LV_ARC_DRAW_PART_FOREGROUND63,1521
    LV_ARC_DRAW_PART_KNOB,          /**< The knob*/LV_ARC_DRAW_PART_KNOB64,1583
} lv_arc_draw_part_type_t;lv_arc_draw_part_type_t65,1635

lib/lvgl/src/widgets/lv_canvas.h,1167
#define LV_CANVAS_HLV_CANVAS_H7,53
    lv_img_t img;img35,541
    lv_img_dsc_t dsc;dsc36,559
} lv_canvas_t;lv_canvas_t37,581
static inline void lv_canvas_set_px(lv_obj_t * canvas, lv_coord_t x, lv_coord_t y, lv_color_t c)lv_canvas_set_px80,1905
#define LV_CANVAS_BUF_SIZE_TRUE_COLOR(LV_CANVAS_BUF_SIZE_TRUE_COLOR258,8849
#define LV_CANVAS_BUF_SIZE_TRUE_COLOR_CHROMA_KEYED(LV_CANVAS_BUF_SIZE_TRUE_COLOR_CHROMA_KEYED259,8926
#define LV_CANVAS_BUF_SIZE_TRUE_COLOR_ALPHA(LV_CANVAS_BUF_SIZE_TRUE_COLOR_ALPHA260,9029
#define LV_CANVAS_BUF_SIZE_ALPHA_1BIT(LV_CANVAS_BUF_SIZE_ALPHA_1BIT263,9157
#define LV_CANVAS_BUF_SIZE_ALPHA_2BIT(LV_CANVAS_BUF_SIZE_ALPHA_2BIT264,9234
#define LV_CANVAS_BUF_SIZE_ALPHA_4BIT(LV_CANVAS_BUF_SIZE_ALPHA_4BIT265,9311
#define LV_CANVAS_BUF_SIZE_ALPHA_8BIT(LV_CANVAS_BUF_SIZE_ALPHA_8BIT266,9388
#define LV_CANVAS_BUF_SIZE_INDEXED_1BIT(LV_CANVAS_BUF_SIZE_INDEXED_1BIT269,9489
#define LV_CANVAS_BUF_SIZE_INDEXED_2BIT(LV_CANVAS_BUF_SIZE_INDEXED_2BIT270,9570
#define LV_CANVAS_BUF_SIZE_INDEXED_4BIT(LV_CANVAS_BUF_SIZE_INDEXED_4BIT271,9651
#define LV_CANVAS_BUF_SIZE_INDEXED_8BIT(LV_CANVAS_BUF_SIZE_INDEXED_8BIT272,9732

lib/lvgl/src/font/lv_font_montserrat_14.c,885
#define LV_FONT_MONTSERRAT_14 LV_FONT_MONTSERRAT_1414,897
static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {glyph_bitmap24,1054
static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {glyph_dsc1518,59049
static const uint16_t unicode_list_1[] = {unicode_list_11683,73626
static const lv_font_fmt_txt_cmap_t cmaps[] =cmaps1695,74248
static const uint8_t kern_left_class_mapping[] =kern_left_class_mapping1713,74806
static const uint8_t kern_right_class_mapping[] =kern_right_class_mapping1738,75527
static const int8_t kern_class_values[] =kern_class_values1763,76241
static const lv_font_fmt_txt_kern_classes_t kern_classes =kern_classes2143,87778
static  lv_font_fmt_txt_glyph_cache_t cache;cache2158,88197
static const lv_font_fmt_txt_dsc_t font_dsc = {font_dsc2159,88242
const lv_font_t lv_font_montserrat_14 = {lv_font_montserrat_142184,88758

lib/lvgl/src/font/lv_font_montserrat_12_subpx.c,919
#define LV_FONT_MONTSERRAT_12_SUBPX LV_FONT_MONTSERRAT_12_SUBPX14,915
static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {glyph_bitmap24,1084
static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {glyph_dsc3183,139723
static const uint16_t unicode_list_1[] = {unicode_list_13348,154446
static const lv_font_fmt_txt_cmap_t cmaps[] =cmaps3360,155068
static const uint8_t kern_left_class_mapping[] =kern_left_class_mapping3378,155626
static const uint8_t kern_right_class_mapping[] =kern_right_class_mapping3403,156347
static const int8_t kern_class_values[] =kern_class_values3428,157061
static const lv_font_fmt_txt_kern_classes_t kern_classes =kern_classes3808,168569
static  lv_font_fmt_txt_glyph_cache_t cache;cache3823,168988
static const lv_font_fmt_txt_dsc_t font_dsc = {font_dsc3824,169033
const lv_font_t lv_font_montserrat_12_subpx = {lv_font_montserrat_12_subpx3849,169549

lib/lvgl/src/font/lv_font.c,375
const uint8_t * lv_font_get_glyph_bitmap(const lv_font_t * font_p, uint32_t letter)lv_font_get_glyph_bitmap49,859
bool lv_font_get_glyph_dsc(const lv_font_t * font_p, lv_font_glyph_dsc_t * dsc_out, uint32_t letter,lv_font_get_glyph_dsc63,1336
uint16_t lv_font_get_glyph_width(const lv_font_t * font, uint32_t letter, uint32_t letter_next)lv_font_get_glyph_width77,1813

lib/lvgl/src/font/lv_font_montserrat_28.c,895
#define LV_FONT_MONTSERRAT_28 LV_FONT_MONTSERRAT_2814,897
static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {glyph_bitmap24,1054
static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {glyph_dsc4468,202128
static const uint16_t unicode_list_1[] = {unicode_list_14633,216925
static const lv_font_fmt_txt_cmap_t cmaps[] =cmaps4645,217547
static const uint8_t kern_left_class_mapping[] =kern_left_class_mapping4663,218105
static const uint8_t kern_right_class_mapping[] =kern_right_class_mapping4688,218826
static const int8_t kern_class_values[] =kern_class_values4713,219540
static const lv_font_fmt_txt_kern_classes_t kern_classes =kern_classes5093,231362
static  lv_font_fmt_txt_glyph_cache_t cache;cache5108,231781
static const lv_font_fmt_txt_dsc_t font_dsc = {font_dsc5109,231826
const lv_font_t lv_font_montserrat_28 = {lv_font_montserrat_285134,232342

lib/lvgl/src/font/lv_font_montserrat_34.c,895
#define LV_FONT_MONTSERRAT_34 LV_FONT_MONTSERRAT_3414,897
static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {glyph_bitmap24,1054
static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {glyph_dsc6338,292443
static const uint16_t unicode_list_1[] = {unicode_list_16503,307280
static const lv_font_fmt_txt_cmap_t cmaps[] =cmaps6515,307902
static const uint8_t kern_left_class_mapping[] =kern_left_class_mapping6533,308460
static const uint8_t kern_right_class_mapping[] =kern_right_class_mapping6558,309181
static const int8_t kern_class_values[] =kern_class_values6583,309895
static const lv_font_fmt_txt_kern_classes_t kern_classes =kern_classes6963,321837
static  lv_font_fmt_txt_glyph_cache_t cache;cache6978,322256
static const lv_font_fmt_txt_dsc_t font_dsc = {font_dsc6979,322301
const lv_font_t lv_font_montserrat_34 = {lv_font_montserrat_347004,322817

lib/lvgl/src/font/lv_font_montserrat_26.c,895
#define LV_FONT_MONTSERRAT_26 LV_FONT_MONTSERRAT_2614,897
static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {glyph_bitmap24,1054
static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {glyph_dsc3919,175790
static const uint16_t unicode_list_1[] = {unicode_list_14084,190563
static const lv_font_fmt_txt_cmap_t cmaps[] =cmaps4096,191185
static const uint8_t kern_left_class_mapping[] =kern_left_class_mapping4114,191743
static const uint8_t kern_right_class_mapping[] =kern_right_class_mapping4139,192464
static const int8_t kern_class_values[] =kern_class_values4164,193178
static const lv_font_fmt_txt_kern_classes_t kern_classes =kern_classes4544,204972
static  lv_font_fmt_txt_glyph_cache_t cache;cache4559,205391
static const lv_font_fmt_txt_dsc_t font_dsc = {font_dsc4560,205436
const lv_font_t lv_font_montserrat_26 = {lv_font_montserrat_264585,205952

lib/lvgl/src/font/lv_font_montserrat_10.c,898
    #define LV_FONT_MONTSERRAT_10 LV_FONT_MONTSERRAT_1014,905
static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {glyph_bitmap24,1066
static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {glyph_dsc981,32999
static const uint16_t unicode_list_1[] = {unicode_list_11146,47393
static const lv_font_fmt_txt_cmap_t cmaps[] = {cmaps1158,48015
static const uint8_t kern_left_class_mapping[] = {kern_left_class_mapping1175,48573
static const uint8_t kern_right_class_mapping[] = {kern_right_class_mapping1199,49294
static const int8_t kern_class_values[] = {kern_class_values1223,50008
static const lv_font_fmt_txt_kern_classes_t kern_classes = {kern_classes1602,61459
static  lv_font_fmt_txt_glyph_cache_t cache;cache1616,61878
static const lv_font_fmt_txt_dsc_t font_dsc = {font_dsc1617,61923
const lv_font_t lv_font_montserrat_10 = {lv_font_montserrat_101642,62439

lib/lvgl/src/font/lv_font_montserrat_44.c,905
#define LV_FONT_MONTSERRAT_44 LV_FONT_MONTSERRAT_4414,897
static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {glyph_bitmap24,1054
static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {glyph_dsc10243,480108
static const uint16_t unicode_list_1[] = {unicode_list_110408,494968
static const lv_font_fmt_txt_cmap_t cmaps[] =cmaps10420,495590
static const uint8_t kern_left_class_mapping[] =kern_left_class_mapping10438,496148
static const uint8_t kern_right_class_mapping[] =kern_right_class_mapping10463,496869
static const int8_t kern_class_values[] =kern_class_values10488,497583
static const lv_font_fmt_txt_kern_classes_t kern_classes =kern_classes10868,509621
static  lv_font_fmt_txt_glyph_cache_t cache;cache10883,510040
static const lv_font_fmt_txt_dsc_t font_dsc = {font_dsc10884,510085
const lv_font_t lv_font_montserrat_44 = {lv_font_montserrat_4410909,510601

lib/lvgl/src/font/lv_font_montserrat_32.c,895
#define LV_FONT_MONTSERRAT_32 LV_FONT_MONTSERRAT_3214,897
static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {glyph_bitmap24,1054
static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {glyph_dsc5539,253755
static const uint16_t unicode_list_1[] = {unicode_list_15704,268577
static const lv_font_fmt_txt_cmap_t cmaps[] =cmaps5716,269199
static const uint8_t kern_left_class_mapping[] =kern_left_class_mapping5734,269757
static const uint8_t kern_right_class_mapping[] =kern_right_class_mapping5759,270478
static const int8_t kern_class_values[] =kern_class_values5784,271192
static const lv_font_fmt_txt_kern_classes_t kern_classes =kern_classes6164,283115
static  lv_font_fmt_txt_glyph_cache_t cache;cache6179,283534
static const lv_font_fmt_txt_dsc_t font_dsc = {font_dsc6180,283579
const lv_font_t lv_font_montserrat_32 = {lv_font_montserrat_326205,284095

lib/lvgl/src/font/lv_font_montserrat_20.c,895
#define LV_FONT_MONTSERRAT_20 LV_FONT_MONTSERRAT_2014,897
static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {glyph_bitmap24,1054
static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {glyph_dsc2544,108385
static const uint16_t unicode_list_1[] = {unicode_list_12709,123103
static const lv_font_fmt_txt_cmap_t cmaps[] =cmaps2721,123725
static const uint8_t kern_left_class_mapping[] =kern_left_class_mapping2739,124283
static const uint8_t kern_right_class_mapping[] =kern_right_class_mapping2764,125004
static const int8_t kern_class_values[] =kern_class_values2789,125718
static const lv_font_fmt_txt_kern_classes_t kern_classes =kern_classes3169,137429
static  lv_font_fmt_txt_glyph_cache_t cache;cache3184,137848
static const lv_font_fmt_txt_dsc_t font_dsc = {font_dsc3185,137893
const lv_font_t lv_font_montserrat_20 = {lv_font_montserrat_203210,138409

lib/lvgl/src/font/lv_font_montserrat_18.c,894
#define LV_FONT_MONTSERRAT_18 LV_FONT_MONTSERRAT_1814,897
static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {glyph_bitmap24,1054
static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {glyph_dsc2187,91738
static const uint16_t unicode_list_1[] = {unicode_list_12352,106424
static const lv_font_fmt_txt_cmap_t cmaps[] =cmaps2364,107046
static const uint8_t kern_left_class_mapping[] =kern_left_class_mapping2382,107604
static const uint8_t kern_right_class_mapping[] =kern_right_class_mapping2407,108325
static const int8_t kern_class_values[] =kern_class_values2432,109039
static const lv_font_fmt_txt_kern_classes_t kern_classes =kern_classes2812,120679
static  lv_font_fmt_txt_glyph_cache_t cache;cache2827,121098
static const lv_font_fmt_txt_dsc_t font_dsc = {font_dsc2828,121143
const lv_font_t lv_font_montserrat_18 = {lv_font_montserrat_182853,121659

lib/lvgl/src/font/lv_font_fmt_txt.c,1927
    RLE_STATE_SINGLE = 0,RLE_STATE_SINGLE26,473
    RLE_STATE_REPEATE,RLE_STATE_REPEATE27,499
    RLE_STATE_COUNTER,RLE_STATE_COUNTER28,522
} rle_state_t;rle_state_t29,545
    static uint32_t rle_rdp;rle_rdp53,1669
    static const uint8_t * rle_in;rle_in54,1698
    static uint8_t rle_bpp;rle_bpp55,1733
    static uint8_t rle_prev_v;rle_prev_v56,1761
    static uint8_t rle_cnt;rle_cnt57,1792
    static rle_state_t rle_state;rle_state58,1820
const uint8_t * lv_font_get_bitmap_fmt_txt(const lv_font_t * font, uint32_t unicode_letter)lv_font_get_bitmap_fmt_txt79,2362
bool lv_font_get_glyph_dsc_fmt_txt(const lv_font_t * font, lv_font_glyph_dsc_t * dsc_out, uint32_t unicode_letter,lv_font_get_glyph_dsc_fmt_txt148,4889
void _lv_font_clean_up_fmt_txt(void)_lv_font_clean_up_fmt_txt194,6178
static uint32_t get_glyph_dsc_id(const lv_font_t * font, uint32_t letter)get_glyph_dsc_id208,6479
static int8_t get_kern_value(const lv_font_t * font, uint32_t gid_left, uint32_t gid_right)get_kern_value269,8812
static int32_t kern_pair_8_compare(const void * ref, const void * element)kern_pair_8_compare325,11053
static int32_t kern_pair_16_compare(const void * ref, const void * element)kern_pair_16_compare336,11425
static void decompress(const uint8_t * in, uint8_t * out, lv_coord_t w, lv_coord_t h, uint8_t bpp, bool prefilter)decompress355,12128
static inline void decompress_line(uint8_t * out, lv_coord_t w)decompress_line410,13402
static inline uint8_t get_bits(const uint8_t * in, uint32_t bit_pos, uint8_t len)get_bits425,13802
static inline void bits_write(uint8_t * out, uint32_t bit_pos, uint8_t val, uint8_t len)bits_write468,14993
static inline void rle_init(const uint8_t * in,  uint8_t bpp)rle_init509,15956
static inline uint8_t rle_next(void)rle_next519,16147
static int32_t unicode_list_compare(const void * ref, const void * element)unicode_list_compare590,18085

lib/lvgl/src/font/lv_font_montserrat_22.c,895
#define LV_FONT_MONTSERRAT_22 LV_FONT_MONTSERRAT_2214,897
static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {glyph_bitmap24,1054
static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {glyph_dsc2973,130406
static const uint16_t unicode_list_1[] = {unicode_list_13138,145145
static const lv_font_fmt_txt_cmap_t cmaps[] =cmaps3150,145767
static const uint8_t kern_left_class_mapping[] =kern_left_class_mapping3168,146325
static const uint8_t kern_right_class_mapping[] =kern_right_class_mapping3193,147046
static const int8_t kern_class_values[] =kern_class_values3218,147760
static const lv_font_fmt_txt_kern_classes_t kern_classes =kern_classes3598,159520
static  lv_font_fmt_txt_glyph_cache_t cache;cache3613,159939
static const lv_font_fmt_txt_dsc_t font_dsc = {font_dsc3614,159984
const lv_font_t lv_font_montserrat_22 = {lv_font_montserrat_223639,160500

lib/lvgl/src/font/lv_font.mk,0

lib/lvgl/src/font/lv_font.h,2128
#define LV_FONT_HLV_FONT_H7,49
    uint16_t adv_w; /**< The glyph needs this space. Draw the next glyph after this width.*/adv_w38,576
    uint16_t box_w;  /**< Width of the glyph's bounding box*/box_w39,669
    uint16_t box_h;  /**< Height of the glyph's bounding box*/box_h40,731
    int16_t ofs_x;   /**< x offset of the bounding box*/ofs_x41,794
    int16_t ofs_y;  /**< y offset of the bounding box*/ofs_y42,851
    uint8_t bpp;   /**< Bit-per-pixel: 1, 2, 4, 8*/bpp43,907
} lv_font_glyph_dsc_t;lv_font_glyph_dsc_t44,959
    LV_FONT_SUBPX_NONE,LV_FONT_SUBPX_NONE48,1062
    LV_FONT_SUBPX_HOR,LV_FONT_SUBPX_HOR49,1086
    LV_FONT_SUBPX_VER,LV_FONT_SUBPX_VER50,1109
    LV_FONT_SUBPX_BOTH,LV_FONT_SUBPX_BOTH51,1132
typedef uint8_t lv_font_subpx_t;lv_font_subpx_t54,1160
typedef struct _lv_font_t {_lv_font_t59,1254
    bool (*get_glyph_dsc)(const struct _lv_font_t *, lv_font_glyph_dsc_t *, uint32_t letter, uint32_t letter_next);get_glyph_dsc61,1329
    const uint8_t * (*get_glyph_bitmap)(const struct _lv_font_t *, uint32_t);get_glyph_bitmap64,1489
    lv_coord_t line_height;         /**< The real line height where any text fits*/line_height67,1644
    lv_coord_t base_line;           /**< Base line measured from the top of the line_height*/base_line68,1728
    uint8_t subpx  : 2;             /**< An element of `lv_font_subpx_t`*/subpx69,1822
    int8_t underline_position;      /**< Distance between the top of the underline and base line (< 0 means below the base line)*/underline_position71,1898
    int8_t underline_thickness;     /**< Thickness of the underline*/underline_thickness72,2029
    const void * dsc;                     /**< Store implementation specific or run_time data or caching here*/dsc74,2100
    void * user_data;               /**< Custom user data for font.*/user_data76,2233
} lv_font_t;lv_font_t79,2311
static inline lv_coord_t lv_font_get_line_height(const lv_font_t * font_p)lv_font_get_line_height118,3576
#define LV_FONT_DECLARE(LV_FONT_DECLARE127,3753
static inline const lv_font_t * lv_font_default(void)lv_font_default246,6091

lib/lvgl/src/font/lv_font_montserrat_46.c,905
#define LV_FONT_MONTSERRAT_46 LV_FONT_MONTSERRAT_4614,897
static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {glyph_bitmap24,1054
static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {glyph_dsc11195,526402
static const uint16_t unicode_list_1[] = {unicode_list_111360,541267
static const lv_font_fmt_txt_cmap_t cmaps[] =cmaps11372,541889
static const uint8_t kern_left_class_mapping[] =kern_left_class_mapping11390,542447
static const uint8_t kern_right_class_mapping[] =kern_right_class_mapping11415,543168
static const int8_t kern_class_values[] =kern_class_values11440,543882
static const lv_font_fmt_txt_kern_classes_t kern_classes =kern_classes11820,555961
static  lv_font_fmt_txt_glyph_cache_t cache;cache11835,556380
static const lv_font_fmt_txt_dsc_t font_dsc = {font_dsc11836,556425
const lv_font_t lv_font_montserrat_46 = {lv_font_montserrat_4611861,556941

lib/lvgl/src/font/lv_font_montserrat_48.c,905
#define LV_FONT_MONTSERRAT_48 LV_FONT_MONTSERRAT_4814,897
static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {glyph_bitmap24,1054
static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {glyph_dsc11896,560060
static const uint16_t unicode_list_1[] = {unicode_list_112061,574924
static const lv_font_fmt_txt_cmap_t cmaps[] =cmaps12073,575546
static const uint8_t kern_left_class_mapping[] =kern_left_class_mapping12091,576104
static const uint8_t kern_right_class_mapping[] =kern_right_class_mapping12116,576825
static const int8_t kern_class_values[] =kern_class_values12141,577539
static const lv_font_fmt_txt_kern_classes_t kern_classes =kern_classes12521,589619
static  lv_font_fmt_txt_glyph_cache_t cache;cache12536,590038
static const lv_font_fmt_txt_dsc_t font_dsc = {font_dsc12537,590083
const lv_font_t lv_font_montserrat_48 = {lv_font_montserrat_4812562,590599

lib/lvgl/src/font/lv_symbol_def.h,6577
#define LV_SYMBOL_DEF_HLV_SYMBOL_DEF_H2,24
#define LV_SYMBOL_AUDIO LV_SYMBOL_AUDIO23,711
#define LV_SYMBOL_VIDEO LV_SYMBOL_VIDEO24,778
#define LV_SYMBOL_LIST LV_SYMBOL_LIST25,845
#define LV_SYMBOL_OK LV_SYMBOL_OK26,912
#define LV_SYMBOL_CLOSE LV_SYMBOL_CLOSE27,979
#define LV_SYMBOL_POWER LV_SYMBOL_POWER28,1046
#define LV_SYMBOL_SETTINGS LV_SYMBOL_SETTINGS29,1113
#define LV_SYMBOL_HOME LV_SYMBOL_HOME30,1180
#define LV_SYMBOL_DOWNLOAD LV_SYMBOL_DOWNLOAD31,1247
#define LV_SYMBOL_DRIVE LV_SYMBOL_DRIVE32,1314
#define LV_SYMBOL_REFRESH LV_SYMBOL_REFRESH33,1381
#define LV_SYMBOL_MUTE LV_SYMBOL_MUTE34,1448
#define LV_SYMBOL_VOLUME_MID LV_SYMBOL_VOLUME_MID35,1515
#define LV_SYMBOL_VOLUME_MAX LV_SYMBOL_VOLUME_MAX36,1582
#define LV_SYMBOL_IMAGE LV_SYMBOL_IMAGE37,1649
#define LV_SYMBOL_ENVELOPE LV_SYMBOL_ENVELOPE38,1716
#define LV_SYMBOL_EDIT LV_SYMBOL_EDIT39,1783
#define LV_SYMBOL_TINT LV_SYMBOL_TINT40,1850
#define LV_SYMBOL_PREV LV_SYMBOL_PREV41,1917
#define LV_SYMBOL_PLAY LV_SYMBOL_PLAY42,1984
#define LV_SYMBOL_PAUSE LV_SYMBOL_PAUSE43,2051
#define LV_SYMBOL_STOP LV_SYMBOL_STOP44,2118
#define LV_SYMBOL_NEXT LV_SYMBOL_NEXT45,2185
#define LV_SYMBOL_EJECT LV_SYMBOL_EJECT46,2252
#define LV_SYMBOL_LEFT LV_SYMBOL_LEFT47,2319
#define LV_SYMBOL_RIGHT LV_SYMBOL_RIGHT48,2386
#define LV_SYMBOL_PLUS LV_SYMBOL_PLUS49,2453
#define LV_SYMBOL_MINUS LV_SYMBOL_MINUS50,2520
#define LV_SYMBOL_EYE_OPEN LV_SYMBOL_EYE_OPEN51,2587
#define LV_SYMBOL_EYE_CLOSE LV_SYMBOL_EYE_CLOSE52,2654
#define LV_SYMBOL_WARNING LV_SYMBOL_WARNING53,2721
#define LV_SYMBOL_SHUFFLE LV_SYMBOL_SHUFFLE54,2788
#define LV_SYMBOL_UP LV_SYMBOL_UP55,2855
#define LV_SYMBOL_DOWN LV_SYMBOL_DOWN56,2922
#define LV_SYMBOL_LOOP LV_SYMBOL_LOOP57,2989
#define LV_SYMBOL_DIRECTORY LV_SYMBOL_DIRECTORY58,3056
#define LV_SYMBOL_UPLOAD LV_SYMBOL_UPLOAD59,3123
#define LV_SYMBOL_CALL LV_SYMBOL_CALL60,3190
#define LV_SYMBOL_CUT LV_SYMBOL_CUT61,3257
#define LV_SYMBOL_COPY LV_SYMBOL_COPY62,3324
#define LV_SYMBOL_SAVE LV_SYMBOL_SAVE63,3391
#define LV_SYMBOL_BARS LV_SYMBOL_BARS64,3458
#define LV_SYMBOL_CHARGE LV_SYMBOL_CHARGE65,3525
#define LV_SYMBOL_PASTE LV_SYMBOL_PASTE66,3592
#define LV_SYMBOL_BELL LV_SYMBOL_BELL67,3659
#define LV_SYMBOL_KEYBOARD LV_SYMBOL_KEYBOARD68,3726
#define LV_SYMBOL_GPS LV_SYMBOL_GPS69,3793
#define LV_SYMBOL_FILE LV_SYMBOL_FILE70,3860
#define LV_SYMBOL_WIFI LV_SYMBOL_WIFI71,3927
#define LV_SYMBOL_BATTERY_FULL LV_SYMBOL_BATTERY_FULL72,3994
#define LV_SYMBOL_BATTERY_3 LV_SYMBOL_BATTERY_373,4061
#define LV_SYMBOL_BATTERY_2 LV_SYMBOL_BATTERY_274,4128
#define LV_SYMBOL_BATTERY_1 LV_SYMBOL_BATTERY_175,4195
#define LV_SYMBOL_BATTERY_EMPTY LV_SYMBOL_BATTERY_EMPTY76,4262
#define LV_SYMBOL_USB LV_SYMBOL_USB77,4329
#define LV_SYMBOL_BLUETOOTH LV_SYMBOL_BLUETOOTH78,4396
#define LV_SYMBOL_TRASH LV_SYMBOL_TRASH79,4463
#define LV_SYMBOL_BACKSPACE LV_SYMBOL_BACKSPACE80,4530
#define LV_SYMBOL_SD_CARD LV_SYMBOL_SD_CARD81,4597
#define LV_SYMBOL_NEW_LINE LV_SYMBOL_NEW_LINE82,4664
#define LV_SYMBOL_DUMMY LV_SYMBOL_DUMMY85,4831
#define LV_SYMBOL_BULLET LV_SYMBOL_BULLET90,4979
    _LV_STR_SYMBOL_AUDIO,_LV_STR_SYMBOL_AUDIO97,5201
    _LV_STR_SYMBOL_VIDEO,_LV_STR_SYMBOL_VIDEO98,5227
    _LV_STR_SYMBOL_LIST,_LV_STR_SYMBOL_LIST99,5253
    _LV_STR_SYMBOL_OK,_LV_STR_SYMBOL_OK100,5278
    _LV_STR_SYMBOL_CLOSE,_LV_STR_SYMBOL_CLOSE101,5301
    _LV_STR_SYMBOL_POWER,_LV_STR_SYMBOL_POWER102,5327
    _LV_STR_SYMBOL_SETTINGS,_LV_STR_SYMBOL_SETTINGS103,5353
    _LV_STR_SYMBOL_HOME,_LV_STR_SYMBOL_HOME104,5382
    _LV_STR_SYMBOL_DOWNLOAD,_LV_STR_SYMBOL_DOWNLOAD105,5407
    _LV_STR_SYMBOL_DRIVE,_LV_STR_SYMBOL_DRIVE106,5436
    _LV_STR_SYMBOL_REFRESH,_LV_STR_SYMBOL_REFRESH107,5462
    _LV_STR_SYMBOL_MUTE,_LV_STR_SYMBOL_MUTE108,5490
    _LV_STR_SYMBOL_VOLUME_MID,_LV_STR_SYMBOL_VOLUME_MID109,5515
    _LV_STR_SYMBOL_VOLUME_MAX,_LV_STR_SYMBOL_VOLUME_MAX110,5546
    _LV_STR_SYMBOL_IMAGE,_LV_STR_SYMBOL_IMAGE111,5577
    _LV_STR_SYMBOL_EDIT,_LV_STR_SYMBOL_EDIT112,5603
    _LV_STR_SYMBOL_PREV,_LV_STR_SYMBOL_PREV113,5628
    _LV_STR_SYMBOL_PLAY,_LV_STR_SYMBOL_PLAY114,5653
    _LV_STR_SYMBOL_PAUSE,_LV_STR_SYMBOL_PAUSE115,5678
    _LV_STR_SYMBOL_STOP,_LV_STR_SYMBOL_STOP116,5704
    _LV_STR_SYMBOL_NEXT,_LV_STR_SYMBOL_NEXT117,5729
    _LV_STR_SYMBOL_EJECT,_LV_STR_SYMBOL_EJECT118,5754
    _LV_STR_SYMBOL_LEFT,_LV_STR_SYMBOL_LEFT119,5780
    _LV_STR_SYMBOL_RIGHT,_LV_STR_SYMBOL_RIGHT120,5805
    _LV_STR_SYMBOL_PLUS,_LV_STR_SYMBOL_PLUS121,5831
    _LV_STR_SYMBOL_MINUS,_LV_STR_SYMBOL_MINUS122,5856
    _LV_STR_SYMBOL_EYE_OPEN,_LV_STR_SYMBOL_EYE_OPEN123,5882
    _LV_STR_SYMBOL_EYE_CLOSE,_LV_STR_SYMBOL_EYE_CLOSE124,5911
    _LV_STR_SYMBOL_WARNING,_LV_STR_SYMBOL_WARNING125,5941
    _LV_STR_SYMBOL_SHUFFLE,_LV_STR_SYMBOL_SHUFFLE126,5969
    _LV_STR_SYMBOL_UP,_LV_STR_SYMBOL_UP127,5997
    _LV_STR_SYMBOL_DOWN,_LV_STR_SYMBOL_DOWN128,6020
    _LV_STR_SYMBOL_LOOP,_LV_STR_SYMBOL_LOOP129,6045
    _LV_STR_SYMBOL_DIRECTORY,_LV_STR_SYMBOL_DIRECTORY130,6070
    _LV_STR_SYMBOL_UPLOAD,_LV_STR_SYMBOL_UPLOAD131,6100
    _LV_STR_SYMBOL_CALL,_LV_STR_SYMBOL_CALL132,6127
    _LV_STR_SYMBOL_CUT,_LV_STR_SYMBOL_CUT133,6152
    _LV_STR_SYMBOL_COPY,_LV_STR_SYMBOL_COPY134,6176
    _LV_STR_SYMBOL_SAVE,_LV_STR_SYMBOL_SAVE135,6201
    _LV_STR_SYMBOL_CHARGE,_LV_STR_SYMBOL_CHARGE136,6226
    _LV_STR_SYMBOL_PASTE,_LV_STR_SYMBOL_PASTE137,6253
    _LV_STR_SYMBOL_BELL,_LV_STR_SYMBOL_BELL138,6279
    _LV_STR_SYMBOL_KEYBOARD,_LV_STR_SYMBOL_KEYBOARD139,6304
    _LV_STR_SYMBOL_GPS,_LV_STR_SYMBOL_GPS140,6333
    _LV_STR_SYMBOL_FILE,_LV_STR_SYMBOL_FILE141,6357
    _LV_STR_SYMBOL_WIFI,_LV_STR_SYMBOL_WIFI142,6382
    _LV_STR_SYMBOL_BATTERY_FULL,_LV_STR_SYMBOL_BATTERY_FULL143,6407
    _LV_STR_SYMBOL_BATTERY_3,_LV_STR_SYMBOL_BATTERY_3144,6440
    _LV_STR_SYMBOL_BATTERY_2,_LV_STR_SYMBOL_BATTERY_2145,6470
    _LV_STR_SYMBOL_BATTERY_1,_LV_STR_SYMBOL_BATTERY_1146,6500
    _LV_STR_SYMBOL_BATTERY_EMPTY,_LV_STR_SYMBOL_BATTERY_EMPTY147,6530
    _LV_STR_SYMBOL_USB,_LV_STR_SYMBOL_USB148,6564
    _LV_STR_SYMBOL_BLUETOOTH,_LV_STR_SYMBOL_BLUETOOTH149,6588
    _LV_STR_SYMBOL_TRASH,_LV_STR_SYMBOL_TRASH150,6618
    _LV_STR_SYMBOL_BACKSPACE,_LV_STR_SYMBOL_BACKSPACE151,6644
    _LV_STR_SYMBOL_SD_CARD,_LV_STR_SYMBOL_SD_CARD152,6674
    _LV_STR_SYMBOL_NEW_LINE,_LV_STR_SYMBOL_NEW_LINE153,6702
    _LV_STR_SYMBOL_DUMMY,_LV_STR_SYMBOL_DUMMY154,6731
    _LV_STR_SYMBOL_BULLET,_LV_STR_SYMBOL_BULLET155,6757

lib/lvgl/src/font/lv_font_simsun_16_cjk.c,732
#define LV_FONT_SIMSUN_16_CJK LV_FONT_SIMSUN_16_CJK14,4672
static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {glyph_bitmap24,4829
static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {glyph_dsc22108,938877
static const uint16_t unicode_list_1[] = {unicode_list_123529,1071822
static const uint8_t glyph_id_ofs_list_4[] = {glyph_id_ofs_list_423534,1071943
static const uint16_t unicode_list_5[] = {unicode_list_523549,1072388
static const lv_font_fmt_txt_cmap_t cmaps[] =cmaps23699,1082385
static  lv_font_fmt_txt_glyph_cache_t cache;cache23735,1083832
static const lv_font_fmt_txt_dsc_t font_dsc = {font_dsc23736,1083877
const lv_font_t lv_font_simsun_16_cjk = {lv_font_simsun_16_cjk23761,1084383

lib/lvgl/src/font/lv_font_montserrat_38.c,895
#define LV_FONT_MONTSERRAT_38 LV_FONT_MONTSERRAT_3814,897
static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {glyph_bitmap24,1054
static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {glyph_dsc7727,359192
static const uint16_t unicode_list_1[] = {unicode_list_17892,374037
static const lv_font_fmt_txt_cmap_t cmaps[] =cmaps7904,374659
static const uint8_t kern_left_class_mapping[] =kern_left_class_mapping7922,375217
static const uint8_t kern_right_class_mapping[] =kern_right_class_mapping7947,375938
static const int8_t kern_class_values[] =kern_class_values7972,376652
static const lv_font_fmt_txt_kern_classes_t kern_classes =kern_classes8352,388647
static  lv_font_fmt_txt_glyph_cache_t cache;cache8367,389066
static const lv_font_fmt_txt_dsc_t font_dsc = {font_dsc8368,389111
const lv_font_t lv_font_montserrat_38 = {lv_font_montserrat_388393,389627

lib/lvgl/src/font/lv_font_montserrat_36.c,895
#define LV_FONT_MONTSERRAT_36 LV_FONT_MONTSERRAT_3614,897
static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {glyph_bitmap24,1054
static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {glyph_dsc6982,323459
static const uint16_t unicode_list_1[] = {unicode_list_17147,338300
static const lv_font_fmt_txt_cmap_t cmaps[] =cmaps7159,338922
static const uint8_t kern_left_class_mapping[] =kern_left_class_mapping7177,339480
static const uint8_t kern_right_class_mapping[] =kern_right_class_mapping7202,340201
static const int8_t kern_class_values[] =kern_class_values7227,340915
static const lv_font_fmt_txt_kern_classes_t kern_classes =kern_classes7607,352902
static  lv_font_fmt_txt_glyph_cache_t cache;cache7622,353321
static const lv_font_fmt_txt_dsc_t font_dsc = {font_dsc7623,353366
const lv_font_t lv_font_montserrat_36 = {lv_font_montserrat_367648,353882

lib/lvgl/src/font/lv_font_montserrat_12.c,885
#define LV_FONT_MONTSERRAT_12 LV_FONT_MONTSERRAT_1214,897
static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {glyph_bitmap24,1054
static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {glyph_dsc1242,45885
static const uint16_t unicode_list_1[] = {unicode_list_11407,60379
static const lv_font_fmt_txt_cmap_t cmaps[] =cmaps1419,61001
static const uint8_t kern_left_class_mapping[] =kern_left_class_mapping1437,61559
static const uint8_t kern_right_class_mapping[] =kern_right_class_mapping1462,62280
static const int8_t kern_class_values[] =kern_class_values1487,62994
static const lv_font_fmt_txt_kern_classes_t kern_classes =kern_classes1867,74502
static  lv_font_fmt_txt_glyph_cache_t cache;cache1882,74921
static const lv_font_fmt_txt_dsc_t font_dsc = {font_dsc1883,74966
const lv_font_t lv_font_montserrat_12 = {lv_font_montserrat_121908,75482

lib/lvgl/src/font/lv_font_montserrat_42.c,899
#define LV_FONT_MONTSERRAT_42 LV_FONT_MONTSERRAT_4214,897
static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {glyph_bitmap24,1054
static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {glyph_dsc9417,441236
static const uint16_t unicode_list_1[] = {unicode_list_19582,456095
static const lv_font_fmt_txt_cmap_t cmaps[] =cmaps9594,456717
static const uint8_t kern_left_class_mapping[] =kern_left_class_mapping9612,457275
static const uint8_t kern_right_class_mapping[] =kern_right_class_mapping9637,457996
static const int8_t kern_class_values[] =kern_class_values9662,458710
static const lv_font_fmt_txt_kern_classes_t kern_classes =kern_classes10042,470742
static  lv_font_fmt_txt_glyph_cache_t cache;cache10057,471161
static const lv_font_fmt_txt_dsc_t font_dsc = {font_dsc10058,471206
const lv_font_t lv_font_montserrat_42 = {lv_font_montserrat_4210083,471722

lib/lvgl/src/font/lv_font_dejavu_16_persian_hebrew.c,830
#define LV_FONT_DEJAVU_16_PERSIAN_HEBREW LV_FONT_DEJAVU_16_PERSIAN_HEBREW14,952
static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {glyph_bitmap24,1131
static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {glyph_dsc5872,227469
static const uint16_t unicode_list_2[] = {unicode_list_26476,282785
static const uint8_t glyph_id_ofs_list_5[] = {glyph_id_ofs_list_56480,282877
static const uint16_t unicode_list_7[] = {unicode_list_76487,283043
static const uint16_t unicode_list_9[] = {unicode_list_96500,283709
static const lv_font_fmt_txt_cmap_t cmaps[] =cmaps6508,284009
static  lv_font_fmt_txt_glyph_cache_t cache;cache6568,286675
static const lv_font_fmt_txt_dsc_t font_dsc = {font_dsc6569,286720
const lv_font_t lv_font_dejavu_16_persian_hebrew = {lv_font_dejavu_16_persian_hebrew6594,287227

lib/lvgl/src/font/lv_font_montserrat_30.c,895
#define LV_FONT_MONTSERRAT_30 LV_FONT_MONTSERRAT_3014,897
static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {glyph_bitmap24,1054
static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {glyph_dsc5050,230172
static const uint16_t unicode_list_1[] = {unicode_list_15215,244987
static const lv_font_fmt_txt_cmap_t cmaps[] =cmaps5227,245609
static const uint8_t kern_left_class_mapping[] =kern_left_class_mapping5245,246167
static const uint8_t kern_right_class_mapping[] =kern_right_class_mapping5270,246888
static const int8_t kern_class_values[] =kern_class_values5295,247602
static const lv_font_fmt_txt_kern_classes_t kern_classes =kern_classes5675,259507
static  lv_font_fmt_txt_glyph_cache_t cache;cache5690,259926
static const lv_font_fmt_txt_dsc_t font_dsc = {font_dsc5691,259971
const lv_font_t lv_font_montserrat_30 = {lv_font_montserrat_305716,260487

lib/lvgl/src/font/lv_font_fmt_txt.h,3538
#define LV_FONT_FMT_TXT_HLV_FONT_FMT_TXT_H7,65
    uint32_t bitmap_index : 20;     /**< Start index of the bitmap. A font can be max 1 MB.*/bitmap_index32,488
    uint32_t adv_w : 12;            /**< Draw the next glyph after this width. 8.4 format (real_value * 16 is stored).*/adv_w33,582
    uint8_t box_w;                  /**< Width of the glyph's bounding box*/box_w34,703
    uint8_t box_h;                  /**< Height of the glyph's bounding box*/box_h35,780
    int8_t ofs_x;                   /**< x offset of the bounding box*/ofs_x36,858
    int8_t ofs_y;                   /**< y offset of the bounding box. Measured from the top of the line*/ofs_y37,930
} lv_font_fmt_txt_glyph_dsc_t;lv_font_fmt_txt_glyph_dsc_t46,1600
    LV_FONT_FMT_TXT_CMAP_FORMAT0_FULL,LV_FONT_FMT_TXT_CMAP_FORMAT0_FULL50,1675
    LV_FONT_FMT_TXT_CMAP_SPARSE_FULL,LV_FONT_FMT_TXT_CMAP_SPARSE_FULL51,1714
    LV_FONT_FMT_TXT_CMAP_FORMAT0_TINY,LV_FONT_FMT_TXT_CMAP_FORMAT0_TINY52,1752
    LV_FONT_FMT_TXT_CMAP_SPARSE_TINY,LV_FONT_FMT_TXT_CMAP_SPARSE_TINY53,1791
typedef uint8_t lv_font_fmt_txt_cmap_type_t;lv_font_fmt_txt_cmap_type_t56,1833
    uint32_t range_start;range_start65,2120
    uint16_t range_length;range_length69,2272
    uint16_t glyph_id_start;glyph_id_start72,2369
    const uint16_t * unicode_list;unicode_list101,3279
    const void * glyph_id_ofs_list;glyph_id_ofs_list106,3463
    uint16_t list_length;list_length109,3562
    lv_font_fmt_txt_cmap_type_t type;type112,3626
} lv_font_fmt_txt_cmap_t;lv_font_fmt_txt_cmap_t113,3664
    const void * glyph_ids;glyph_ids124,4080
    const int8_t * values;values125,4108
    uint32_t pair_cnt   : 30;pair_cnt126,4135
    uint32_t glyph_ids_size : 2;    /*0: `glyph_ids` is stored as `uint8_t`; 1: as `uint16_t`*/glyph_ids_size127,4165
} lv_font_fmt_txt_kern_pair_t;lv_font_fmt_txt_kern_pair_t128,4261
    const int8_t * class_pair_values;    /*left_class_cnt * right_class_cnt value*/class_pair_values140,4828
    const uint8_t * left_class_mapping;   /*Map the glyph_ids to classes: index -> glyph_id -> class_id*/left_class_mapping141,4912
    const uint8_t * right_class_mapping;  /*Map the glyph_ids to classes: index -> glyph_id -> class_id*/right_class_mapping142,5018
    uint8_t left_class_cnt;left_class_cnt143,5124
    uint8_t right_class_cnt;right_class_cnt144,5152
} lv_font_fmt_txt_kern_classes_t;lv_font_fmt_txt_kern_classes_t145,5181
    LV_FONT_FMT_TXT_PLAIN      = 0,LV_FONT_FMT_TXT_PLAIN149,5252
    LV_FONT_FMT_TXT_COMPRESSED = 1,LV_FONT_FMT_TXT_COMPRESSED150,5288
    LV_FONT_FMT_TXT_COMPRESSED_NO_PREFILTER = 1,LV_FONT_FMT_TXT_COMPRESSED_NO_PREFILTER151,5324
} lv_font_fmt_txt_bitmap_format_t;lv_font_fmt_txt_bitmap_format_t152,5373
    uint32_t last_letter;last_letter155,5426
    uint32_t last_glyph_id;last_glyph_id156,5452
} lv_font_fmt_txt_glyph_cache_t;lv_font_fmt_txt_glyph_cache_t157,5480
    const uint8_t * glyph_bitmap;glyph_bitmap162,5610
    const lv_font_fmt_txt_glyph_dsc_t * glyph_dsc;glyph_dsc165,5673
    const lv_font_fmt_txt_cmap_t * cmaps;cmaps169,5821
    const void * kern_dsc;kern_dsc176,6029
    uint16_t kern_scale;kern_scale179,6098
    uint16_t cmap_num       : 9;cmap_num182,6154
    uint16_t bpp            : 4;bpp185,6225
    uint16_t kern_classes   : 1;kern_classes188,6286
    uint16_t bitmap_format  : 2;bitmap_format194,6417
    lv_font_fmt_txt_glyph_cache_t * cache;cache197,6497
} lv_font_fmt_txt_dsc_t;lv_font_fmt_txt_dsc_t198,6540

lib/lvgl/src/font/lv_font_montserrat_24.c,895
#define LV_FONT_MONTSERRAT_24 LV_FONT_MONTSERRAT_2414,897
static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {glyph_bitmap24,1054
static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {glyph_dsc3384,150196
static const uint16_t unicode_list_1[] = {unicode_list_13549,164954
static const lv_font_fmt_txt_cmap_t cmaps[] =cmaps3561,165576
static const uint8_t kern_left_class_mapping[] =kern_left_class_mapping3579,166134
static const uint8_t kern_right_class_mapping[] =kern_right_class_mapping3604,166855
static const int8_t kern_class_values[] =kern_class_values3629,167569
static const lv_font_fmt_txt_kern_classes_t kern_classes =kern_classes4009,179341
static  lv_font_fmt_txt_glyph_cache_t cache;cache4024,179760
static const lv_font_fmt_txt_dsc_t font_dsc = {font_dsc4025,179805
const lv_font_t lv_font_montserrat_24 = {lv_font_montserrat_244050,180321

lib/lvgl/src/font/lv_font_montserrat_8.c,890
    #define LV_FONT_MONTSERRAT_8 LV_FONT_MONTSERRAT_814,901
static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {glyph_bitmap24,1060
static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {glyph_dsc767,22967
static const uint16_t unicode_list_1[] = {unicode_list_1932,37241
static const lv_font_fmt_txt_cmap_t cmaps[] = {cmaps944,37863
static const uint8_t kern_left_class_mapping[] = {kern_left_class_mapping961,38421
static const uint8_t kern_right_class_mapping[] = {kern_right_class_mapping985,39142
static const int8_t kern_class_values[] = {kern_class_values1009,39856
static const lv_font_fmt_txt_kern_classes_t kern_classes = {kern_classes1388,51268
static  lv_font_fmt_txt_glyph_cache_t cache;cache1402,51687
static const lv_font_fmt_txt_dsc_t font_dsc = {font_dsc1403,51732
const lv_font_t lv_font_montserrat_8 = {lv_font_montserrat_81428,52248

lib/lvgl/src/font/lv_font_montserrat_28_compressed.c,939
#define LV_FONT_MONTSERRAT_28_COMPRESSED LV_FONT_MONTSERRAT_28_COMPRESSED14,890
static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {glyph_bitmap24,1069
static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {glyph_dsc2598,114207
static const uint16_t unicode_list_1[] = {unicode_list_12763,128961
static const lv_font_fmt_txt_cmap_t cmaps[] =cmaps2775,129583
static const uint8_t kern_left_class_mapping[] =kern_left_class_mapping2793,130141
static const uint8_t kern_right_class_mapping[] =kern_right_class_mapping2818,130862
static const int8_t kern_class_values[] =kern_class_values2843,131576
static const lv_font_fmt_txt_kern_classes_t kern_classes =kern_classes3223,143398
static  lv_font_fmt_txt_glyph_cache_t cache;cache3238,143817
static const lv_font_fmt_txt_dsc_t font_dsc = {font_dsc3239,143862
const lv_font_t lv_font_montserrat_28_compressed = {lv_font_montserrat_28_compressed3264,144378

lib/lvgl/src/font/lv_font_unscii_8.c,471
    #define LV_FONT_UNSCII_8 LV_FONT_UNSCII_814,457
static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {glyph_bitmap24,608
static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {glyph_dsc319,6103
static const lv_font_fmt_txt_cmap_t cmaps[] = {cmaps426,14912
static  lv_font_fmt_txt_glyph_cache_t cache;cache441,15304
static const lv_font_fmt_txt_dsc_t font_dsc = {font_dsc442,15349
const lv_font_t lv_font_unscii_8 = {lv_font_unscii_8467,15855

lib/lvgl/src/font/lv_font_montserrat_40.c,895
#define LV_FONT_MONTSERRAT_40 LV_FONT_MONTSERRAT_4014,897
static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {glyph_bitmap24,1054
static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {glyph_dsc8575,400512
static const uint16_t unicode_list_1[] = {unicode_list_18740,415367
static const lv_font_fmt_txt_cmap_t cmaps[] =cmaps8752,415989
static const uint8_t kern_left_class_mapping[] =kern_left_class_mapping8770,416547
static const uint8_t kern_right_class_mapping[] =kern_right_class_mapping8795,417268
static const int8_t kern_class_values[] =kern_class_values8820,417982
static const lv_font_fmt_txt_kern_classes_t kern_classes =kern_classes9200,430014
static  lv_font_fmt_txt_glyph_cache_t cache;cache9215,430433
static const lv_font_fmt_txt_dsc_t font_dsc = {font_dsc9216,430478
const lv_font_t lv_font_montserrat_40 = {lv_font_montserrat_409241,430994

lib/lvgl/src/font/lv_font_loader.c,2867
    lv_fs_file_t * fp;fp21,305
    int8_t bit_pos;bit_pos22,328
    uint8_t byte_value;byte_value23,348
} bit_iterator_t;bit_iterator_t24,372
typedef struct font_header_bin {font_header_bin26,391
    uint32_t version;version27,424
    uint16_t tables_count;tables_count28,446
    uint16_t font_size;font_size29,473
    uint16_t ascent;ascent30,497
    int16_t descent;descent31,518
    uint16_t typo_ascent;typo_ascent32,539
    int16_t typo_descent;typo_descent33,565
    uint16_t typo_line_gap;typo_line_gap34,591
    int16_t min_y;min_y35,619
    int16_t max_y;max_y36,638
    uint16_t default_advance_width;default_advance_width37,657
    uint16_t kerning_scale;kerning_scale38,693
    uint8_t index_to_loc_format;index_to_loc_format39,721
    uint8_t glyph_id_format;glyph_id_format40,754
    uint8_t advance_width_format;advance_width_format41,783
    uint8_t bits_per_pixel;bits_per_pixel42,817
    uint8_t xy_bits;xy_bits43,845
    uint8_t wh_bits;wh_bits44,866
    uint8_t advance_width_bits;advance_width_bits45,887
    uint8_t compression_id;compression_id46,919
    uint8_t subpixels_mode;subpixels_mode47,947
    uint8_t padding;padding48,975
    int16_t underline_position;underline_position49,996
    uint16_t underline_thickness;underline_thickness50,1028
} font_header_bin_t;font_header_bin_t51,1062
typedef struct cmap_table_bin {cmap_table_bin53,1084
    uint32_t data_offset;data_offset54,1116
    uint32_t range_start;range_start55,1142
    uint16_t range_length;range_length56,1168
    uint16_t glyph_id_start;glyph_id_start57,1195
    uint16_t data_entries_count;data_entries_count58,1224
    uint8_t format_type;format_type59,1257
    uint8_t padding;padding60,1282
} cmap_table_bin_t;cmap_table_bin_t61,1303
lv_font_t * lv_font_load(const char * font_name)lv_font_load86,2107
void lv_font_free(lv_font_t * font)lv_font_free117,3008
static bit_iterator_t init_bit_iterator(lv_fs_file_t * fp)init_bit_iterator185,5215
static unsigned int read_bits(bit_iterator_t * it, int n_bits, lv_fs_res_t * res)read_bits194,5377
static int read_bits_signed(bit_iterator_t * it, int n_bits, lv_fs_res_t * res)read_bits_signed216,5937
static int read_label(lv_fs_file_t * fp, int start, const char * label)read_label225,6169
static bool load_cmaps_tables(lv_fs_file_t * fp, lv_font_fmt_txt_dsc_t * font_dsc,load_cmaps_tables242,6582
static int32_t load_cmaps(lv_fs_file_t * fp, lv_font_fmt_txt_dsc_t * font_dsc, uint32_t cmaps_start)load_cmaps309,9311
static int32_t load_glyph(lv_fs_file_t * fp, lv_font_fmt_txt_dsc_t * font_dsc,load_glyph338,10210
static bool lvgl_load_font(lv_fs_file_t * fp, lv_font_t * font)lvgl_load_font483,14889
int32_t load_kern(lv_fs_file_t * fp, lv_font_fmt_txt_dsc_t * font_dsc, uint8_t format, uint32_t start)load_kern587,18013

lib/lvgl/src/font/lv_font_loader.h,47
#define LV_FONT_LOADER_HLV_FONT_LOADER_H7,63

lib/lvgl/src/font/lv_font_montserrat_16.c,889
#define LV_FONT_MONTSERRAT_16 LV_FONT_MONTSERRAT_1614,897
static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {glyph_bitmap24,1054
static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {glyph_dsc1787,72626
static const uint16_t unicode_list_1[] = {unicode_list_11952,87252
static const lv_font_fmt_txt_cmap_t cmaps[] =cmaps1964,87874
static const uint8_t kern_left_class_mapping[] =kern_left_class_mapping1982,88432
static const uint8_t kern_right_class_mapping[] =kern_right_class_mapping2007,89153
static const int8_t kern_class_values[] =kern_class_values2032,89867
static const lv_font_fmt_txt_kern_classes_t kern_classes =kern_classes2412,101458
static  lv_font_fmt_txt_glyph_cache_t cache;cache2427,101877
static const lv_font_fmt_txt_dsc_t font_dsc = {font_dsc2428,101922
const lv_font_t lv_font_montserrat_16 = {lv_font_montserrat_162453,102438

lib/lvgl/src/font/lv_font_unscii_16.c,476
    #define LV_FONT_UNSCII_16 LV_FONT_UNSCII_1614,461
static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {glyph_bitmap24,614
static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {glyph_dsc483,13720
static const lv_font_fmt_txt_cmap_t cmaps[] = {cmaps590,22760
static  lv_font_fmt_txt_glyph_cache_t cache;cache605,23152
static const lv_font_fmt_txt_dsc_t font_dsc = {font_dsc606,23197
const lv_font_t lv_font_unscii_16 = {lv_font_unscii_16631,23703

lib/lvgl/src/misc/lv_anim.h,5068
#define LV_ANIM_HLV_ANIM_H7,49
#define LV_ANIM_REPEAT_INFINITE LV_ANIM_REPEAT_INFINITE26,332
#define LV_ANIM_PLAYTIME_INFINITE LV_ANIM_PLAYTIME_INFINITE27,376
LV_EXPORT_CONST_INT(LV_ANIM_REPEAT_INFINITE);LV_ANIM_REPEAT_INFINITE29,425
LV_EXPORT_CONST_INT(LV_ANIM_PLAYTIME_INFINITE);LV_ANIM_PLAYTIME_INFINITE30,471
    LV_ANIM_OFF,LV_ANIM_OFF38,680
    LV_ANIM_ON,LV_ANIM_ON39,697
} lv_anim_enable_t;lv_anim_enable_t40,713
typedef int32_t (*lv_anim_path_cb_t)(const struct _lv_anim_t *);lv_anim_path_cb_t45,802
typedef void (*lv_anim_exec_xcb_t)(void *, int32_t);lv_anim_exec_xcb_t53,1193
typedef void (*lv_anim_custom_exec_cb_t)(struct _lv_anim_t *, int32_t);lv_anim_custom_exec_cb_t57,1424
typedef void (*lv_anim_ready_cb_t)(struct _lv_anim_t *);lv_anim_ready_cb_t60,1548
typedef void (*lv_anim_start_cb_t)(struct _lv_anim_t *);lv_anim_start_cb_t63,1683
typedef int32_t (*lv_anim_get_value_cb_t)(struct _lv_anim_t *);lv_anim_get_value_cb_t66,1825
typedef struct _lv_anim_t {_lv_anim_t69,1919
    void * var;                          /**<Variable to animate*/var70,1947
    lv_anim_exec_xcb_t exec_cb;          /**< Function to execute to animate*/exec_cb71,2014
    lv_anim_start_cb_t start_cb;         /**< Call it when the animation is starts (considering `delay`)*/start_cb72,2093
    lv_anim_ready_cb_t ready_cb;         /**< Call it when the animation is ready*/ready_cb73,2200
    lv_anim_get_value_cb_t get_value_cb; /**< Get the current value in relative mode*/get_value_cb74,2284
    void * user_data; /**< Custom user data*/user_data76,2392
    lv_anim_path_cb_t path_cb;         /**< Describe the path (curve) of animations*/path_cb78,2445
    int32_t start_value;               /**< Start value*/start_value79,2531
    int32_t current_value;             /**< Current value*/current_value80,2589
    int32_t end_value;                 /**< End value*/end_value81,2649
    int32_t time;                /**< Animation time in ms*/time82,2705
    int32_t act_time;            /**< Current time in animation. Set to negative to make delay.*/act_time83,2766
    uint32_t playback_delay;     /**< Wait before play back*/playback_delay84,2864
    uint32_t playback_time;      /**< Duration of playback animation*/playback_time85,2926
    uint32_t repeat_delay;       /**< Wait before repeat*/repeat_delay86,2997
    uint16_t repeat_cnt;         /**< Repeat count for the animation*/repeat_cnt87,3056
    uint8_t early_apply  : 1;    /**< 1: Apply start value immediately even is there is `delay`*/early_apply88,3127
    uint8_t playback_now : 1; /**< Play back is in progress*/playback_now91,3282
    uint8_t run_round : 1;    /**< Indicates the animation has run in this round*/run_round92,3344
    uint8_t start_cb_called : 1;    /**< Indicates that the `start_cb` was already called*/start_cb_called93,3427
} lv_anim_t;lv_anim_t94,3519
static inline void lv_anim_set_var(lv_anim_t * a, void * var)lv_anim_set_var121,4060
static inline void lv_anim_set_exec_cb(lv_anim_t * a, lv_anim_exec_xcb_t exec_cb)lv_anim_set_exec_cb133,4411
static inline void lv_anim_set_time(lv_anim_t * a, uint32_t duration)lv_anim_set_time143,4697
static inline void lv_anim_set_delay(lv_anim_t * a, uint32_t delay)lv_anim_set_delay153,4979
static inline void lv_anim_set_values(lv_anim_t * a, int32_t start, int32_t end)lv_anim_set_values164,5282
static inline void lv_anim_set_custom_exec_cb(lv_anim_t * a, lv_anim_custom_exec_cb_t exec_cb)lv_anim_set_custom_exec_cb180,5921
static inline void lv_anim_set_path_cb(lv_anim_t * a, lv_anim_path_cb_t path_cb)lv_anim_set_path_cb191,6276
static inline void lv_anim_set_start_cb(lv_anim_t * a, lv_anim_start_cb_t start_cb)lv_anim_set_start_cb201,6603
static inline void lv_anim_set_get_value_cb(lv_anim_t * a, lv_anim_get_value_cb_t get_value_cb)lv_anim_set_get_value_cb212,6997
static inline void lv_anim_set_ready_cb(lv_anim_t * a, lv_anim_ready_cb_t ready_cb)lv_anim_set_ready_cb222,7324
static inline void lv_anim_set_playback_time(lv_anim_t * a, uint32_t time)lv_anim_set_playback_time232,7686
static inline void lv_anim_set_playback_delay(lv_anim_t * a, uint32_t delay)lv_anim_set_playback_delay242,8026
static inline void lv_anim_set_repeat_count(lv_anim_t * a, uint16_t cnt)lv_anim_set_repeat_count252,8364
static inline void lv_anim_set_repeat_delay(lv_anim_t * a, uint32_t delay)lv_anim_set_repeat_delay262,8663
static inline void lv_anim_set_early_apply(lv_anim_t * a, bool en)lv_anim_set_early_apply273,9136
static inline void lv_anim_set_user_data(lv_anim_t * a, void * user_data)lv_anim_set_user_data284,9435
static inline uint32_t lv_anim_get_delay(lv_anim_t * a)lv_anim_get_delay302,9964
static inline void * lv_anim_get_user_data(lv_anim_t * a)lv_anim_get_user_data320,10427
static inline bool lv_anim_custom_del(lv_anim_t * a, lv_anim_custom_exec_cb_t exec_cb)lv_anim_custom_del359,11947
static inline lv_anim_t * lv_anim_custom_get(lv_anim_t * a, lv_anim_custom_exec_cb_t exec_cb)lv_anim_custom_get373,12596

lib/lvgl/src/misc/lv_types.h,976
#define LV_TYPES_HLV_TYPES_H7,51
#define LV_ARCH_64LV_ARCH_6424,405
#define LV_ARCH_64LV_ARCH_6427,480
#define LV_ARCH_64LV_ARCH_6431,657
    LV_RES_INV = 0, /*Typically indicates that the object is deleted (become invalid) in the actionLV_RES_INV43,788
    LV_RES_OK,      /*The object is valid (no deleted) after the action*/LV_RES_OK45,948
typedef uint8_t lv_res_t;lv_res_t47,1025
typedef uintptr_t lv_uintptr_t;lv_uintptr_t51,1186
typedef uint64_t lv_uintptr_t;lv_uintptr_t57,1290
typedef uint32_t lv_uintptr_t;lv_uintptr_t59,1327
#define LV_UNUSED(LV_UNUSED72,1510
#define _LV_CONCAT(_LV_CONCAT74,1542
#define LV_CONCAT(LV_CONCAT75,1574
#define _LV_CONCAT3(_LV_CONCAT377,1616
#define LV_CONCAT3(LV_CONCAT378,1657
#define LV_FORMAT_ATTRIBUTE(LV_FORMAT_ATTRIBUTE81,1730
#define LV_FORMAT_ATTRIBUTE(LV_FORMAT_ATTRIBUTE83,1858
#define LV_FORMAT_ATTRIBUTE(LV_FORMAT_ATTRIBUTE85,2023
#define LV_FORMAT_ATTRIBUTE(LV_FORMAT_ATTRIBUTE87,2121

lib/lvgl/src/misc/lv_anim_timeline.c,1451
    lv_anim_t anim;anim23,356
    uint32_t start_time;start_time24,376
} lv_anim_timeline_dsc_t;lv_anim_timeline_dsc_t25,401
struct _lv_anim_timeline_t {_lv_anim_timeline_t28,454
    lv_anim_timeline_dsc_t * anim_dsc;  /**< Dynamically allocated anim dsc array*/anim_dsc29,483
    uint32_t anim_dsc_cnt;              /**< The length of anim dsc array*/anim_dsc_cnt30,567
    bool reverse;                       /**< Reverse playback*/reverse31,643
lv_anim_timeline_t * lv_anim_timeline_create(void)lv_anim_timeline_create51,1060
void lv_anim_timeline_del(lv_anim_timeline_t * at)lv_anim_timeline_del62,1311
void lv_anim_timeline_add(lv_anim_timeline_t * at, uint32_t start_time, lv_anim_t * a)lv_anim_timeline_add72,1476
uint32_t lv_anim_timeline_start(lv_anim_timeline_t * at)lv_anim_timeline_start91,2144
void lv_anim_timeline_stop(lv_anim_timeline_t * at)lv_anim_timeline_stop118,2829
void lv_anim_timeline_set_reverse(lv_anim_timeline_t * at, bool reverse)lv_anim_timeline_set_reverse128,3060
void lv_anim_timeline_set_progress(lv_anim_timeline_t * at, uint16_t progress)lv_anim_timeline_set_progress134,3189
uint32_t lv_anim_timeline_get_playtime(lv_anim_timeline_t * at)lv_anim_timeline_get_playtime166,4009
bool lv_anim_timeline_get_reverse(lv_anim_timeline_t * at)lv_anim_timeline_get_reverse184,4459
static void lv_anim_timeline_virtual_exec_cb(void * var, int32_t v)lv_anim_timeline_virtual_exec_cb194,4643

lib/lvgl/src/misc/lv_timer.c,1663
#define IDLE_MEAS_PERIOD IDLE_MEAS_PERIOD18,292
#define DEF_PERIOD DEF_PERIOD19,330
static bool lv_timer_run = false;lv_timer_run34,671
static uint8_t idle_last = 0;idle_last35,705
static bool timer_deleted;timer_deleted36,735
static bool timer_created;timer_created37,762
    #define TIMER_TRACE(TIMER_TRACE43,877
    #define TIMER_TRACE(TIMER_TRACE45,938
void _lv_timer_core_init(void)_lv_timer_core_init55,1083
LV_ATTRIBUTE_TIMER_HANDLER uint32_t lv_timer_handler(void)lv_timer_handler67,1367
lv_timer_t * lv_timer_create_basic(void)lv_timer_create_basic153,4348
lv_timer_t * lv_timer_create(lv_timer_cb_t timer_xcb, uint32_t period, void * user_data)lv_timer_create167,4874
void lv_timer_set_cb(lv_timer_t * timer, lv_timer_cb_t timer_cb)lv_timer_set_cb192,5558
void lv_timer_del(lv_timer_t * timer)lv_timer_del201,5739
void lv_timer_pause(lv_timer_t * timer)lv_timer_pause213,5958
void lv_timer_resume(lv_timer_t * timer)lv_timer_resume218,6029
void lv_timer_set_period(lv_timer_t * timer, uint32_t period)lv_timer_set_period228,6213
void lv_timer_ready(lv_timer_t * timer)lv_timer_ready237,6410
void lv_timer_set_repeat_count(lv_timer_t * timer, int32_t repeat_count)lv_timer_set_repeat_count247,6679
void lv_timer_reset(lv_timer_t * timer)lv_timer_reset257,6932
void lv_timer_enable(bool en)lv_timer_enable266,7158
uint8_t lv_timer_get_idle(void)lv_timer_get_idle275,7290
lv_timer_t * lv_timer_get_next(lv_timer_t * timer)lv_timer_get_next285,7538
static bool lv_timer_exec(lv_timer_t * timer)lv_timer_exec300,7943
static uint32_t lv_timer_time_remaining(lv_timer_t * timer)lv_timer_time_remaining334,9351

lib/lvgl/src/misc/lv_timer.h,725
#define LV_TIMER_HLV_TIMER_H6,48
#define LV_ATTRIBUTE_TIMER_HANDLERLV_ATTRIBUTE_TIMER_HANDLER24,346
#define LV_NO_TIMER_READY LV_NO_TIMER_READY27,389
typedef void (*lv_timer_cb_t)(struct _lv_timer_t *);lv_timer_cb_t38,565
typedef struct _lv_timer_t {_lv_timer_t43,655
    uint32_t period; /**< How often the timer should run*/period44,684
    uint32_t last_run; /**< Last time the timer ran*/last_run45,743
    lv_timer_cb_t timer_cb; /**< Timer function*/timer_cb46,797
    void * user_data; /**< Custom user data*/user_data47,847
    int32_t repeat_count; /**< 1: One time;  -1 : infinity;  n>0: residual times*/repeat_count48,893
    uint32_t paused : 1;paused49,976
} lv_timer_t;lv_timer_t50,1001

lib/lvgl/src/misc/lv_color.h,8369
#define LV_COLOR_HLV_COLOR_H7,51
LV_EXPORT_CONST_INT(LV_COLOR_DEPTH);LV_COLOR_DEPTH39,777
LV_EXPORT_CONST_INT(LV_COLOR_16_SWAP);LV_COLOR_16_SWAP40,814
    LV_OPA_TRANSP = 0,LV_OPA_TRANSP46,893
    LV_OPA_0      = 0,LV_OPA_047,916
    LV_OPA_10     = 25,LV_OPA_1048,939
    LV_OPA_20     = 51,LV_OPA_2049,963
    LV_OPA_30     = 76,LV_OPA_3050,987
    LV_OPA_40     = 102,LV_OPA_4051,1011
    LV_OPA_50     = 127,LV_OPA_5052,1036
    LV_OPA_60     = 153,LV_OPA_6053,1061
    LV_OPA_70     = 178,LV_OPA_7054,1086
    LV_OPA_80     = 204,LV_OPA_8055,1111
    LV_OPA_90     = 229,LV_OPA_9056,1136
    LV_OPA_100    = 255,LV_OPA_10057,1161
    LV_OPA_COVER  = 255,LV_OPA_COVER58,1186
#define LV_OPA_MIN LV_OPA_MIN61,1215
#define LV_OPA_MAX LV_OPA_MAX62,1284
#define LV_COLOR_SIZE LV_COLOR_SIZE65,1375
#define LV_COLOR_SIZE LV_COLOR_SIZE67,1425
#define LV_COLOR_SIZE LV_COLOR_SIZE69,1476
#define LV_COLOR_SIZE LV_COLOR_SIZE71,1528
#define _LV_COLOR_HAS_MODERN_CPP _LV_COLOR_HAS_MODERN_CPP84,2003
#define _LV_COLOR_HAS_MODERN_CPP _LV_COLOR_HAS_MODERN_CPP88,2078
#define _LV_COLOR_HAS_MODERN_CPP _LV_COLOR_HAS_MODERN_CPP94,2184
#define _LV_COLOR_MAKE_TYPE_HELPER _LV_COLOR_MAKE_TYPE_HELPER99,2306
#define _LV_COLOR_MAKE_TYPE_HELPER _LV_COLOR_MAKE_TYPE_HELPER101,2358
# define LV_COLOR_SET_R1(LV_COLOR_SET_R1108,2586
# define LV_COLOR_SET_G1(LV_COLOR_SET_G1109,2651
# define LV_COLOR_SET_B1(LV_COLOR_SET_B1110,2718
# define LV_COLOR_SET_A1(LV_COLOR_SET_A1111,2784
# define LV_COLOR_GET_R1(LV_COLOR_GET_R1113,2831
# define LV_COLOR_GET_G1(LV_COLOR_GET_G1114,2870
# define LV_COLOR_GET_B1(LV_COLOR_GET_B1115,2911
# define LV_COLOR_GET_A1(LV_COLOR_GET_A1116,2951
# define _LV_COLOR_ZERO_INITIALIZER1 _LV_COLOR_ZERO_INITIALIZER1118,2985
# define LV_COLOR_MAKE1(LV_COLOR_MAKE1119,3029
# define LV_COLOR_SET_R8(LV_COLOR_SET_R8121,3114
# define LV_COLOR_SET_G8(LV_COLOR_SET_G8122,3180
# define LV_COLOR_SET_B8(LV_COLOR_SET_B8123,3248
# define LV_COLOR_SET_A8(LV_COLOR_SET_A8124,3315
# define LV_COLOR_GET_R8(LV_COLOR_GET_R8126,3362
# define LV_COLOR_GET_G8(LV_COLOR_GET_G8127,3401
# define LV_COLOR_GET_B8(LV_COLOR_GET_B8128,3442
# define LV_COLOR_GET_A8(LV_COLOR_GET_A8129,3482
# define _LV_COLOR_ZERO_INITIALIZER8 _LV_COLOR_ZERO_INITIALIZER8131,3516
# define LV_COLOR_MAKE8(LV_COLOR_MAKE8132,3574
# define LV_COLOR_SET_R16(LV_COLOR_SET_R16134,3701
# define LV_COLOR_SET_G16(LV_COLOR_SET_G16136,3795
# define LV_COLOR_SET_G16(LV_COLOR_SET_G16138,3871
# define LV_COLOR_SET_B16(LV_COLOR_SET_B16140,3997
# define LV_COLOR_SET_A16(LV_COLOR_SET_A16141,4066
# define LV_COLOR_GET_R16(LV_COLOR_GET_R16143,4114
# define LV_COLOR_GET_G16(LV_COLOR_GET_G16145,4180
# define LV_COLOR_GET_G16(LV_COLOR_GET_G16147,4228
# define LV_COLOR_GET_B16(LV_COLOR_GET_B16149,4305
# define LV_COLOR_GET_A16(LV_COLOR_GET_A16150,4346
# define _LV_COLOR_ZERO_INITIALIZER16 _LV_COLOR_ZERO_INITIALIZER16153,4407
# define LV_COLOR_MAKE16(LV_COLOR_MAKE16154,4467
# define _LV_COLOR_ZERO_INITIALIZER16 _LV_COLOR_ZERO_INITIALIZER16156,4603
# define LV_COLOR_MAKE16(LV_COLOR_MAKE16157,4668
# define LV_COLOR_SET_R32(LV_COLOR_SET_R32160,4834
# define LV_COLOR_SET_G32(LV_COLOR_SET_G32161,4901
# define LV_COLOR_SET_B32(LV_COLOR_SET_B32162,4970
# define LV_COLOR_SET_A32(LV_COLOR_SET_A32163,5038
# define LV_COLOR_GET_R32(LV_COLOR_GET_R32165,5108
# define LV_COLOR_GET_G32(LV_COLOR_GET_G32166,5148
# define LV_COLOR_GET_B32(LV_COLOR_GET_B32167,5190
# define LV_COLOR_GET_A32(LV_COLOR_GET_A32168,5231
# define _LV_COLOR_ZERO_INITIALIZER32 _LV_COLOR_ZERO_INITIALIZER32170,5274
# define LV_COLOR_MAKE32(LV_COLOR_MAKE32171,5340
#define LV_COLOR_SET_R(LV_COLOR_SET_R177,5588
#define LV_COLOR_SET_G(LV_COLOR_SET_G178,5665
#define LV_COLOR_SET_B(LV_COLOR_SET_B179,5742
#define LV_COLOR_SET_A(LV_COLOR_SET_A180,5819
#define LV_COLOR_GET_R(LV_COLOR_GET_R182,5897
#define LV_COLOR_GET_G(LV_COLOR_GET_G183,5968
#define LV_COLOR_GET_B(LV_COLOR_GET_B184,6039
#define LV_COLOR_GET_A(LV_COLOR_GET_A185,6110
#define _LV_COLOR_ZERO_INITIALIZER _LV_COLOR_ZERO_INITIALIZER187,6182
#define LV_COLOR_MAKE(LV_COLOR_MAKE188,6271
    uint8_t full; /*must be declared first to set all bits of byte via initializer list*/full195,6442
    } ch;ch200,6622
} lv_color1_t;lv_color1_t201,6632
        uint8_t blue : 2;blue205,6677
        uint8_t green : 3;green206,6703
        uint8_t red : 3;red207,6730
    } ch;ch208,6755
    uint8_t full;full209,6765
} lv_color8_t;lv_color8_t210,6783
        uint16_t blue : 5;blue215,6854
        uint16_t green : 6;green216,6881
        uint16_t red : 5;red217,6909
    } ch;ch224,7061
    uint16_t full;full225,7071
} lv_color16_t;lv_color16_t226,7090
        uint8_t blue;blue230,7136
        uint8_t green;green231,7158
        uint8_t red;red232,7181
        uint8_t alpha;alpha233,7202
    } ch;ch234,7225
    uint32_t full;full235,7235
} lv_color32_t;lv_color32_t236,7254
typedef LV_CONCAT3(uint, LV_COLOR_SIZE, _t) lv_color_int_t;lv_color_int_t238,7271
typedef LV_CONCAT3(lv_color, LV_COLOR_DEPTH, _t) lv_color_t;lv_color_t239,7331
    uint16_t h;h242,7410
    uint8_t s;s243,7426
    uint8_t v;v244,7441
} lv_color_hsv_t;lv_color_hsv_t245,7456
typedef uint8_t lv_opa_t;lv_opa_t249,7579
typedef lv_color_t (*lv_color_filter_cb_t)(const struct _lv_color_filter_dsc_t *, lv_color_t, lv_opa_t);lv_color_filter_cb_t254,7651
typedef struct _lv_color_filter_dsc_t {_lv_color_filter_dsc_t256,7757
    lv_color_filter_cb_t filter_cb;filter_cb257,7797
    void * user_data;user_data258,7833
} lv_color_filter_dsc_t;lv_color_filter_dsc_t259,7855
    LV_PALETTE_RED,LV_PALETTE_RED263,7897
    LV_PALETTE_PINK,LV_PALETTE_PINK264,7917
    LV_PALETTE_PURPLE,LV_PALETTE_PURPLE265,7938
    LV_PALETTE_DEEP_PURPLE,LV_PALETTE_DEEP_PURPLE266,7961
    LV_PALETTE_INDIGO,LV_PALETTE_INDIGO267,7989
    LV_PALETTE_BLUE,LV_PALETTE_BLUE268,8012
    LV_PALETTE_LIGHT_BLUE,LV_PALETTE_LIGHT_BLUE269,8033
    LV_PALETTE_CYAN,LV_PALETTE_CYAN270,8060
    LV_PALETTE_TEAL,LV_PALETTE_TEAL271,8081
    LV_PALETTE_GREEN,LV_PALETTE_GREEN272,8102
    LV_PALETTE_LIGHT_GREEN,LV_PALETTE_LIGHT_GREEN273,8124
    LV_PALETTE_LIME,LV_PALETTE_LIME274,8152
    LV_PALETTE_YELLOW,LV_PALETTE_YELLOW275,8173
    LV_PALETTE_AMBER,LV_PALETTE_AMBER276,8196
    LV_PALETTE_ORANGE,LV_PALETTE_ORANGE277,8218
    LV_PALETTE_DEEP_ORANGE,LV_PALETTE_DEEP_ORANGE278,8241
    LV_PALETTE_BROWN,LV_PALETTE_BROWN279,8269
    LV_PALETTE_BLUE_GREY,LV_PALETTE_BLUE_GREY280,8291
    LV_PALETTE_GREY,LV_PALETTE_GREY281,8317
    _LV_PALETTE_LAST,_LV_PALETTE_LAST282,8338
    LV_PALETTE_NONE = 0xff,LV_PALETTE_NONE283,8360
} lv_palette_t;lv_palette_t284,8388
static inline uint8_t lv_color_to1(lv_color_t color)lv_color_to1303,8952
static inline uint8_t lv_color_to8(lv_color_t color)lv_color_to8331,9645
static inline uint16_t lv_color_to16(lv_color_t color)lv_color_to16355,10407
static inline uint32_t lv_color_to32(lv_color_t color)lv_color_to32379,11242
LV_ATTRIBUTE_FAST_MEM static inline lv_color_t lv_color_mix(lv_color_t c1, lv_color_t c2, uint8_t mix)lv_color_mix443,13830
LV_ATTRIBUTE_FAST_MEM static inline void lv_color_premult(lv_color_t c, uint8_t mix, uint16_t * out)lv_color_premult472,15159
LV_ATTRIBUTE_FAST_MEM static inline lv_color_t lv_color_mix_premult(uint16_t * premult_c1, lv_color_t c2, uint8_t mix)lv_color_mix_premult497,16110
LV_ATTRIBUTE_FAST_MEM static inline void lv_color_mix_with_alpha(lv_color_t bg_color, lv_opa_t bg_opa,lv_color_mix_with_alpha528,17224
static inline uint8_t lv_color_brightness(lv_color_t color)lv_color_brightness584,19589
static inline lv_color_t lv_color_make(uint8_t r, uint8_t g, uint8_t b)lv_color_make592,19870
static inline lv_color_t lv_color_hex(uint32_t c)lv_color_hex597,20009
static inline lv_color_t lv_color_hex3(uint32_t c)lv_color_hex3602,20168
static inline void lv_color_filter_dsc_init(lv_color_filter_dsc_t * dsc, lv_color_filter_cb_t cb)lv_color_filter_dsc_init608,20408
static inline lv_color_t lv_color_chroma_key(void)lv_color_chroma_key653,21634
static inline lv_color_t lv_color_white(void)lv_color_white664,21906
static inline lv_color_t lv_color_black(void)lv_color_black668,22000

lib/lvgl/src/misc/lv_style.h,13252
#define LV_STYLE_HLV_STYLE_H7,51
#define LV_STYLE_SENTINEL_VALUE LV_STYLE_SENTINEL_VALUE30,440
#define LV_STYLE_PROP_INHERIT LV_STYLE_PROP_INHERIT35,526
#define LV_STYLE_PROP_EXT_DRAW LV_STYLE_PROP_EXT_DRAW36,595
#define LV_STYLE_PROP_LAYOUT_REFR LV_STYLE_PROP_LAYOUT_REFR37,698
#define LV_STYLE_PROP_PARENT_LAYOUT_REFR LV_STYLE_PROP_PARENT_LAYOUT_REFR38,793
#define LV_STYLE_PROP_FILTER LV_STYLE_PROP_FILTER39,898
#define LV_IMG_ZOOM_NONE LV_IMG_ZOOM_NONE44,1004
LV_EXPORT_CONST_INT(LV_IMG_ZOOM_NONE);LV_IMG_ZOOM_NONE45,1087
#define LV_STYLE_CONST_INIT(LV_STYLE_CONST_INIT48,1151
#define LV_STYLE_CONST_INIT(LV_STYLE_CONST_INIT50,1347
    LV_BLEND_MODE_NORMAL,     /**< Simply mix according to the opacity value*/LV_BLEND_MODE_NORMAL61,1639
    LV_BLEND_MODE_ADDITIVE,   /**< Add the respective color channels*/LV_BLEND_MODE_ADDITIVE62,1718
    LV_BLEND_MODE_SUBTRACTIVE,/**< Subtract the foreground from the background*/LV_BLEND_MODE_SUBTRACTIVE63,1789
    LV_BLEND_MODE_MULTIPLY,   /**< Multiply the foreground and background*/LV_BLEND_MODE_MULTIPLY64,1870
typedef uint8_t lv_blend_mode_t;lv_blend_mode_t67,1950
    LV_TEXT_DECOR_NONE          = 0x00,LV_TEXT_DECOR_NONE74,2076
    LV_TEXT_DECOR_UNDERLINE     = 0x01,LV_TEXT_DECOR_UNDERLINE75,2116
    LV_TEXT_DECOR_STRIKETHROUGH = 0x02,LV_TEXT_DECOR_STRIKETHROUGH76,2156
typedef uint8_t lv_text_decor_t;lv_text_decor_t79,2200
    LV_BORDER_SIDE_NONE     = 0x00,LV_BORDER_SIDE_NONE86,2328
    LV_BORDER_SIDE_BOTTOM   = 0x01,LV_BORDER_SIDE_BOTTOM87,2364
    LV_BORDER_SIDE_TOP      = 0x02,LV_BORDER_SIDE_TOP88,2400
    LV_BORDER_SIDE_LEFT     = 0x04,LV_BORDER_SIDE_LEFT89,2436
    LV_BORDER_SIDE_RIGHT    = 0x08,LV_BORDER_SIDE_RIGHT90,2472
    LV_BORDER_SIDE_FULL     = 0x0F,LV_BORDER_SIDE_FULL91,2508
    LV_BORDER_SIDE_INTERNAL = 0x10, /**< FOR matrix-like objects (e.g. Button matrix)*/LV_BORDER_SIDE_INTERNAL92,2544
typedef uint8_t lv_border_side_t;lv_border_side_t94,2635
    LV_GRAD_DIR_NONE, /**< No gradient (the `grad_color` property is ignored)*/LV_GRAD_DIR_NONE100,2719
    LV_GRAD_DIR_VER,  /**< Vertical (top to bottom) gradient*/LV_GRAD_DIR_VER101,2799
    LV_GRAD_DIR_HOR,  /**< Horizontal (left to right) gradient*/LV_GRAD_DIR_HOR102,2862
typedef uint8_t lv_grad_dir_t;lv_grad_dir_t105,2931
    int32_t num;         /**< Number integer number (opacity, enums, booleans or "normal" numbers)*/num111,3054
    const void * ptr;    /**< Constant pointers  (font, cone text, etc)*/ptr112,3155
    lv_color_t color;    /**< Colors*/color113,3229
} lv_style_value_t;lv_style_value_t114,3268
    LV_STYLE_PROP_INV                = 0,LV_STYLE_PROP_INV120,3360
    LV_STYLE_WIDTH                   = 1 | LV_STYLE_PROP_LAYOUT_REFR,LV_STYLE_WIDTH123,3419
    LV_STYLE_MIN_WIDTH               = 2 | LV_STYLE_PROP_LAYOUT_REFR,LV_STYLE_MIN_WIDTH124,3489
    LV_STYLE_MAX_WIDTH               = 3 | LV_STYLE_PROP_LAYOUT_REFR,LV_STYLE_MAX_WIDTH125,3559
    LV_STYLE_HEIGHT                  = 4 | LV_STYLE_PROP_LAYOUT_REFR,LV_STYLE_HEIGHT126,3629
    LV_STYLE_MIN_HEIGHT              = 5 | LV_STYLE_PROP_LAYOUT_REFR,LV_STYLE_MIN_HEIGHT127,3699
    LV_STYLE_MAX_HEIGHT              = 6 | LV_STYLE_PROP_LAYOUT_REFR,LV_STYLE_MAX_HEIGHT128,3769
    LV_STYLE_X                       = 7 | LV_STYLE_PROP_LAYOUT_REFR,LV_STYLE_X129,3839
    LV_STYLE_Y                       = 8 | LV_STYLE_PROP_LAYOUT_REFR,LV_STYLE_Y130,3909
    LV_STYLE_ALIGN                   = 9 | LV_STYLE_PROP_LAYOUT_REFR,LV_STYLE_ALIGN131,3979
    LV_STYLE_TRANSFORM_WIDTH         = 10 | LV_STYLE_PROP_EXT_DRAW,LV_STYLE_TRANSFORM_WIDTH132,4049
    LV_STYLE_TRANSFORM_HEIGHT        = 11 | LV_STYLE_PROP_EXT_DRAW,LV_STYLE_TRANSFORM_HEIGHT133,4117
    LV_STYLE_TRANSLATE_X             = 12 | LV_STYLE_PROP_LAYOUT_REFR | LV_STYLE_PROP_PARENT_LAYOUT_REFR,LV_STYLE_TRANSLATE_X134,4185
    LV_STYLE_TRANSLATE_Y             = 13 | LV_STYLE_PROP_LAYOUT_REFR | LV_STYLE_PROP_PARENT_LAYOUT_REFR,LV_STYLE_TRANSLATE_Y135,4291
    LV_STYLE_TRANSFORM_ZOOM          = 14 | LV_STYLE_PROP_EXT_DRAW | LV_STYLE_PROP_LAYOUT_REFR | LV_STYLE_PROP_PARENT_LAYOUT_REFR,LV_STYLE_TRANSFORM_ZOOM136,4397
    LV_STYLE_TRANSFORM_ANGLE         = 15 | LV_STYLE_PROP_EXT_DRAW | LV_STYLE_PROP_LAYOUT_REFR | LV_STYLE_PROP_PARENT_LAYOUT_REFR,LV_STYLE_TRANSFORM_ANGLE137,4528
    LV_STYLE_PAD_TOP                 = 16 | LV_STYLE_PROP_EXT_DRAW | LV_STYLE_PROP_LAYOUT_REFR,LV_STYLE_PAD_TOP140,4676
    LV_STYLE_PAD_BOTTOM              = 17 | LV_STYLE_PROP_EXT_DRAW | LV_STYLE_PROP_LAYOUT_REFR,LV_STYLE_PAD_BOTTOM141,4772
    LV_STYLE_PAD_LEFT                = 18 | LV_STYLE_PROP_EXT_DRAW | LV_STYLE_PROP_LAYOUT_REFR,LV_STYLE_PAD_LEFT142,4868
    LV_STYLE_PAD_RIGHT               = 19 | LV_STYLE_PROP_EXT_DRAW | LV_STYLE_PROP_LAYOUT_REFR,LV_STYLE_PAD_RIGHT143,4964
    LV_STYLE_PAD_ROW                 = 20 | LV_STYLE_PROP_EXT_DRAW | LV_STYLE_PROP_LAYOUT_REFR,LV_STYLE_PAD_ROW144,5060
    LV_STYLE_PAD_COLUMN              = 21 | LV_STYLE_PROP_EXT_DRAW | LV_STYLE_PROP_LAYOUT_REFR,LV_STYLE_PAD_COLUMN145,5156
    LV_STYLE_BG_COLOR                = 32,LV_STYLE_BG_COLOR148,5269
    LV_STYLE_BG_COLOR_FILTERED       = 32 | LV_STYLE_PROP_FILTER,LV_STYLE_BG_COLOR_FILTERED149,5312
    LV_STYLE_BG_OPA                  = 33,LV_STYLE_BG_OPA150,5378
    LV_STYLE_BG_GRAD_COLOR           = 34,LV_STYLE_BG_GRAD_COLOR151,5421
    LV_STYLE_BG_GRAD_COLOR_FILTERED  = 34 | LV_STYLE_PROP_FILTER,LV_STYLE_BG_GRAD_COLOR_FILTERED152,5464
    LV_STYLE_BG_GRAD_DIR             = 35,LV_STYLE_BG_GRAD_DIR153,5530
    LV_STYLE_BG_MAIN_STOP            = 36,LV_STYLE_BG_MAIN_STOP154,5573
    LV_STYLE_BG_GRAD_STOP            = 37,LV_STYLE_BG_GRAD_STOP155,5616
    LV_STYLE_BG_IMG_SRC              = 38 | LV_STYLE_PROP_EXT_DRAW,LV_STYLE_BG_IMG_SRC157,5660
    LV_STYLE_BG_IMG_OPA              = 39,LV_STYLE_BG_IMG_OPA158,5728
    LV_STYLE_BG_IMG_RECOLOR          = 40,LV_STYLE_BG_IMG_RECOLOR159,5771
    LV_STYLE_BG_IMG_RECOLOR_FILTERED = 40 | LV_STYLE_PROP_FILTER,LV_STYLE_BG_IMG_RECOLOR_FILTERED160,5814
    LV_STYLE_BG_IMG_RECOLOR_OPA      = 41,LV_STYLE_BG_IMG_RECOLOR_OPA161,5880
    LV_STYLE_BG_IMG_TILED            = 42,LV_STYLE_BG_IMG_TILED162,5923
    LV_STYLE_BORDER_COLOR            = 48,LV_STYLE_BORDER_COLOR165,5983
    LV_STYLE_BORDER_COLOR_FILTERED   = 48 | LV_STYLE_PROP_FILTER,LV_STYLE_BORDER_COLOR_FILTERED166,6026
    LV_STYLE_BORDER_OPA              = 49,LV_STYLE_BORDER_OPA167,6092
    LV_STYLE_BORDER_WIDTH            = 50 | LV_STYLE_PROP_LAYOUT_REFR,LV_STYLE_BORDER_WIDTH168,6135
    LV_STYLE_BORDER_SIDE             = 51,LV_STYLE_BORDER_SIDE169,6206
    LV_STYLE_BORDER_POST             = 52,LV_STYLE_BORDER_POST170,6249
    LV_STYLE_OUTLINE_WIDTH           = 58 | LV_STYLE_PROP_EXT_DRAW,LV_STYLE_OUTLINE_WIDTH172,6293
    LV_STYLE_OUTLINE_COLOR           = 59,LV_STYLE_OUTLINE_COLOR173,6361
    LV_STYLE_OUTLINE_COLOR_FILTERED  = 59 | LV_STYLE_PROP_FILTER,LV_STYLE_OUTLINE_COLOR_FILTERED174,6404
    LV_STYLE_OUTLINE_OPA             = 60 | LV_STYLE_PROP_EXT_DRAW,LV_STYLE_OUTLINE_OPA175,6470
    LV_STYLE_OUTLINE_PAD             = 61 | LV_STYLE_PROP_EXT_DRAW,LV_STYLE_OUTLINE_PAD176,6538
    LV_STYLE_SHADOW_WIDTH            = 64 | LV_STYLE_PROP_EXT_DRAW,LV_STYLE_SHADOW_WIDTH179,6623
    LV_STYLE_SHADOW_OFS_X            = 65 | LV_STYLE_PROP_EXT_DRAW,LV_STYLE_SHADOW_OFS_X180,6691
    LV_STYLE_SHADOW_OFS_Y            = 66 | LV_STYLE_PROP_EXT_DRAW,LV_STYLE_SHADOW_OFS_Y181,6759
    LV_STYLE_SHADOW_SPREAD           = 67 | LV_STYLE_PROP_EXT_DRAW,LV_STYLE_SHADOW_SPREAD182,6827
    LV_STYLE_SHADOW_COLOR            = 68,LV_STYLE_SHADOW_COLOR183,6895
    LV_STYLE_SHADOW_COLOR_FILTERED   = 68 | LV_STYLE_PROP_FILTER,LV_STYLE_SHADOW_COLOR_FILTERED184,6938
    LV_STYLE_SHADOW_OPA              = 69 | LV_STYLE_PROP_EXT_DRAW,LV_STYLE_SHADOW_OPA185,7004
    LV_STYLE_IMG_OPA                 = 70,LV_STYLE_IMG_OPA187,7073
    LV_STYLE_IMG_RECOLOR             = 71,LV_STYLE_IMG_RECOLOR188,7116
    LV_STYLE_IMG_RECOLOR_FILTERED    = 71 | LV_STYLE_PROP_FILTER,LV_STYLE_IMG_RECOLOR_FILTERED189,7159
    LV_STYLE_IMG_RECOLOR_OPA         = 72,LV_STYLE_IMG_RECOLOR_OPA190,7225
    LV_STYLE_LINE_WIDTH              = 73 | LV_STYLE_PROP_EXT_DRAW,LV_STYLE_LINE_WIDTH192,7269
    LV_STYLE_LINE_DASH_WIDTH         = 74,LV_STYLE_LINE_DASH_WIDTH193,7337
    LV_STYLE_LINE_DASH_GAP           = 75,LV_STYLE_LINE_DASH_GAP194,7380
    LV_STYLE_LINE_ROUNDED            = 76,LV_STYLE_LINE_ROUNDED195,7423
    LV_STYLE_LINE_COLOR              = 77,LV_STYLE_LINE_COLOR196,7466
    LV_STYLE_LINE_COLOR_FILTERED     = 77 | LV_STYLE_PROP_FILTER,LV_STYLE_LINE_COLOR_FILTERED197,7509
    LV_STYLE_LINE_OPA                = 78,LV_STYLE_LINE_OPA198,7575
    LV_STYLE_ARC_WIDTH               = 80 | LV_STYLE_PROP_EXT_DRAW,LV_STYLE_ARC_WIDTH201,7635
    LV_STYLE_ARC_ROUNDED             = 81,LV_STYLE_ARC_ROUNDED202,7703
    LV_STYLE_ARC_COLOR               = 82,LV_STYLE_ARC_COLOR203,7746
    LV_STYLE_ARC_COLOR_FILTERED      = 82 | LV_STYLE_PROP_FILTER,LV_STYLE_ARC_COLOR_FILTERED204,7789
    LV_STYLE_ARC_OPA                 = 83,LV_STYLE_ARC_OPA205,7855
    LV_STYLE_ARC_IMG_SRC             = 84,LV_STYLE_ARC_IMG_SRC206,7898
    LV_STYLE_TEXT_COLOR              = 87 | LV_STYLE_PROP_INHERIT,LV_STYLE_TEXT_COLOR208,7942
    LV_STYLE_TEXT_COLOR_FILTERED     = 87 | LV_STYLE_PROP_INHERIT | LV_STYLE_PROP_FILTER,LV_STYLE_TEXT_COLOR_FILTERED209,8009
    LV_STYLE_TEXT_OPA                = 88 | LV_STYLE_PROP_INHERIT,LV_STYLE_TEXT_OPA210,8099
    LV_STYLE_TEXT_FONT               = 89 | LV_STYLE_PROP_INHERIT | LV_STYLE_PROP_LAYOUT_REFR,LV_STYLE_TEXT_FONT211,8166
    LV_STYLE_TEXT_LETTER_SPACE       = 90 | LV_STYLE_PROP_INHERIT | LV_STYLE_PROP_LAYOUT_REFR,LV_STYLE_TEXT_LETTER_SPACE212,8261
    LV_STYLE_TEXT_LINE_SPACE         = 91 | LV_STYLE_PROP_INHERIT | LV_STYLE_PROP_LAYOUT_REFR,LV_STYLE_TEXT_LINE_SPACE213,8356
    LV_STYLE_TEXT_DECOR              = 92 | LV_STYLE_PROP_INHERIT,LV_STYLE_TEXT_DECOR214,8451
    LV_STYLE_TEXT_ALIGN              = 93 | LV_STYLE_PROP_INHERIT | LV_STYLE_PROP_LAYOUT_REFR,LV_STYLE_TEXT_ALIGN215,8518
    LV_STYLE_RADIUS                  = 96,LV_STYLE_RADIUS218,8630
    LV_STYLE_CLIP_CORNER             = 97,LV_STYLE_CLIP_CORNER219,8673
    LV_STYLE_OPA                     = 98 | LV_STYLE_PROP_INHERIT,LV_STYLE_OPA220,8716
    LV_STYLE_COLOR_FILTER_DSC        = 99,LV_STYLE_COLOR_FILTER_DSC221,8783
    LV_STYLE_COLOR_FILTER_OPA        = 100,LV_STYLE_COLOR_FILTER_OPA222,8826
    LV_STYLE_ANIM_TIME               = 101,LV_STYLE_ANIM_TIME223,8870
    LV_STYLE_ANIM_SPEED              = 102,LV_STYLE_ANIM_SPEED224,8914
    LV_STYLE_TRANSITION              = 103,LV_STYLE_TRANSITION225,8958
    LV_STYLE_BLEND_MODE              = 104,LV_STYLE_BLEND_MODE226,9002
    LV_STYLE_LAYOUT                  = 105 | LV_STYLE_PROP_LAYOUT_REFR,LV_STYLE_LAYOUT227,9046
    LV_STYLE_BASE_DIR                = 106 | LV_STYLE_PROP_INHERIT | LV_STYLE_PROP_LAYOUT_REFR,LV_STYLE_BASE_DIR228,9118
    _LV_STYLE_LAST_BUILT_IN_PROP     = 111,_LV_STYLE_LAST_BUILT_IN_PROP230,9215
    LV_STYLE_PROP_ANY                = 0xFFFFLV_STYLE_PROP_ANY232,9260
} lv_style_prop_t;lv_style_prop_t233,9306
    const lv_style_prop_t * props; /**< An array with the properties to animate.*/props239,9387
    void * user_data;              /**< A custom user data that will be passed to the animation's user_data */user_data241,9491
    lv_anim_path_cb_t path_xcb;     /**< A path for the animation.*/path_xcb243,9609
    uint32_t time;                 /**< Duration of the transition in [ms]*/time244,9678
    uint32_t delay;                /**< Delay before the transition in [ms]*/delay245,9755
} lv_style_transition_dsc_t;lv_style_transition_dsc_t246,9833
    lv_style_prop_t prop;prop252,9932
    lv_style_value_t value;value253,9958
} lv_style_const_prop_t;lv_style_const_prop_t254,9986
    uint32_t sentinel;sentinel262,10128
        lv_style_value_t value1;value1268,10272
        uint8_t * values_and_props;values_and_props269,10305
        const lv_style_const_prop_t * const_props;const_props270,10341
    } v_p;v_p271,10392
    uint16_t prop1 : 15;prop1273,10404
    uint16_t is_const : 1;is_const274,10429
    uint8_t has_group;has_group275,10456
    uint8_t prop_cnt;prop_cnt276,10479
} lv_style_t;lv_style_t277,10501
static inline lv_res_t lv_style_get_prop_inlined(lv_style_t * style, lv_style_prop_t prop, lv_style_value_t * value)lv_style_get_prop_inlined354,13373
static inline void lv_style_set_pad_all(lv_style_t * style, lv_coord_t value)lv_style_set_pad_all428,16229
static inline void lv_style_set_pad_hor(lv_style_t * style, lv_coord_t value)lv_style_set_pad_hor436,16478
static inline void lv_style_set_pad_ver(lv_style_t * style, lv_coord_t value)lv_style_set_pad_ver442,16644
static inline void lv_style_set_pad_gap(lv_style_t * style, lv_coord_t value)lv_style_set_pad_gap448,16810
static inline void lv_style_set_size(lv_style_t * style, lv_coord_t value)lv_style_set_size454,16976
#  define LV_ASSERT_STYLE(LV_ASSERT_STYLE470,17302
# define LV_ASSERT_STYLE(LV_ASSERT_STYLE473,17516

lib/lvgl/src/misc/lv_math.c,619
static const int16_t sin0_90_table[] = {sin0_90_table26,390
LV_ATTRIBUTE_FAST_MEM int16_t lv_trigo_sin(int16_t angle)lv_trigo_sin48,1352
uint32_t lv_bezier3(uint32_t t, uint32_t u0, uint32_t u1, uint32_t u2, uint32_t u3)lv_bezier383,2380
LV_ATTRIBUTE_FAST_MEM void lv_sqrt(uint32_t x, lv_sqrt_res_t * q, uint32_t mask)lv_sqrt109,3259
uint16_t lv_atan2(int x, int y)lv_atan2132,3854
int64_t lv_pow(int64_t base, int8_t exp)lv_pow214,6722
int32_t lv_map(int32_t x, int32_t min_in, int32_t max_in, int32_t min_out, int32_t max_out)lv_map236,7219
uint32_t lv_rand(uint32_t min, uint32_t max)lv_rand254,7752

lib/lvgl/src/misc/lv_log.c,339
static lv_log_print_g_cb_t custom_print_cb;custom_print_cb36,548
void lv_log_register_print_cb(lv_log_print_g_cb_t print_cb)lv_log_register_print_cb52,1005
void _lv_log_add(lv_log_level_t level, const char * file, int line, const char * func, const char * format, ...)_lv_log_add66,1439
void lv_log(const char * buf)lv_log115,3225

lib/lvgl/src/misc/lv_templ.c,62
typedef int _keep_pedantic_happy;_keep_pedantic_happy20,331

lib/lvgl/src/misc/lv_bidi.c,2440
#define LV_BIDI_BRACKLET_DEPTH LV_BIDI_BRACKLET_DEPTH19,265
#define GET_POS(GET_POS22,386
#define IS_RTL_POS(IS_RTL_POS23,420
#define SET_RTL_POS(SET_RTL_POS24,464
    uint32_t bracklet_pos;bracklet_pos30,616
    lv_base_dir_t dir;dir31,643
} bracket_stack_t;bracket_stack_t32,666
static const uint8_t bracket_left[] = {"<({["};bracket_left57,1814
static const uint8_t bracket_right[] = {">)}]"};bracket_right58,1862
static bracket_stack_t br_stack[LV_BIDI_BRACKLET_DEPTH];br_stack59,1911
static uint8_t br_stack_p;br_stack_p60,1968
void _lv_bidi_process(const char * str_in, char * str_out, lv_base_dir_t base_dir)_lv_bidi_process77,2428
lv_base_dir_t _lv_bidi_detect_base_dir(const char * txt)_lv_bidi_detect_base_dir108,3401
uint16_t _lv_bidi_get_logical_pos(const char * str_in, char ** bidi_txt, uint32_t len, lv_base_dir_t base_dir,_lv_bidi_get_logical_pos137,4553
uint16_t _lv_bidi_get_visual_pos(const char * str_in, char ** bidi_txt, uint16_t len, lv_base_dir_t base_dir,_lv_bidi_get_visual_pos174,6058
void _lv_bidi_process_paragraph(const char * str_in, char * str_out, uint32_t len, lv_base_dir_t base_dir,_lv_bidi_process_paragraph216,7520
void lv_bidi_calculate_align(lv_text_align_t * align, lv_base_dir_t * base_dir, const char * txt)lv_bidi_calculate_align308,10678
static uint32_t lv_bidi_get_next_paragraph(const char * txt)lv_bidi_get_next_paragraph327,11234
static lv_base_dir_t lv_bidi_get_letter_dir(uint32_t letter)lv_bidi_get_letter_dir345,11609
static bool lv_bidi_letter_is_weak(uint32_t letter)lv_bidi_letter_is_weak358,12010
static bool lv_bidi_letter_is_rtl(uint32_t letter)lv_bidi_letter_is_rtl377,12417
static bool lv_bidi_letter_is_neutral(uint32_t letter)lv_bidi_letter_is_neutral395,13019
static uint32_t get_txt_len(const char * txt, uint32_t max_len)get_txt_len406,13295
static void fill_pos_conv(uint16_t * out, uint16_t len, uint16_t index)fill_pos_conv419,13529
static lv_base_dir_t get_next_run(const char * txt, lv_base_dir_t base_dir, uint32_t max_len, uint32_t * len,get_next_run428,13720
static void rtl_reverse(char * dest, const char * src, uint32_t len, uint16_t * pos_conv_out, uint16_t pos_conv_rd_base,rtl_reverse521,16735
static uint32_t char_change_to_pair(uint32_t letter)char_change_to_pair589,19544
static lv_base_dir_t bracket_process(const char * txt, uint32_t next_pos, uint32_t len, uint32_t letter,bracket_process604,19872

lib/lvgl/src/misc/lv_utils.h,35
#define LV_UTILS_HLV_UTILS_H7,51

lib/lvgl/src/misc/lv_fs.c,1494
    #undef freefree26,456
void _lv_fs_init(void)_lv_fs_init50,887
bool lv_fs_is_ready(char letter)lv_fs_is_ready55,982
lv_fs_res_t lv_fs_open(lv_fs_file_t * file_p, const char * path, lv_fs_mode_t mode)lv_fs_open66,1274
lv_fs_res_t lv_fs_close(lv_fs_file_t * file_p)lv_fs_close106,2319
lv_fs_res_t lv_fs_read(lv_fs_file_t * file_p, void * buf, uint32_t btr, uint32_t * br)lv_fs_read124,2671
lv_fs_res_t lv_fs_write(lv_fs_file_t * file_p, const void * buf, uint32_t btw, uint32_t * bw)lv_fs_write137,3078
lv_fs_res_t lv_fs_seek(lv_fs_file_t * file_p, uint32_t pos, lv_fs_whence_t whence)lv_fs_seek156,3528
lv_fs_res_t lv_fs_tell(lv_fs_file_t * file_p, uint32_t * pos)lv_fs_tell169,3844
lv_fs_res_t lv_fs_dir_open(lv_fs_dir_t * rddir_p, const char * path)lv_fs_dir_open184,4146
lv_fs_res_t lv_fs_dir_read(lv_fs_dir_t * rddir_p, char * fn)lv_fs_dir_read218,4881
lv_fs_res_t lv_fs_dir_close(lv_fs_dir_t * rddir_p)lv_fs_dir_close233,5223
void lv_fs_drv_init(lv_fs_drv_t * drv)lv_fs_drv_init251,5617
void lv_fs_drv_register(lv_fs_drv_t * drv_p)lv_fs_drv_register256,5705
lv_fs_drv_t * lv_fs_get_drv(char letter)lv_fs_get_drv267,5955
char * lv_fs_get_letters(char * buf)lv_fs_get_letters280,6174
const char * lv_fs_get_ext(const char * fn)lv_fs_get_ext295,6399
char * lv_fs_up(char * path)lv_fs_up310,6764
const char * lv_fs_get_last(const char * path)lv_fs_get_last337,7286
static const char * lv_fs_get_real_path(const char * path)lv_fs_get_real_path369,8020

lib/lvgl/src/misc/lv_math.h,887
#define LV_MATH_HLV_MATH_H7,49
#define LV_TRIGO_SIN_MAX LV_TRIGO_SIN_MAX22,289
#define LV_TRIGO_SHIFT LV_TRIGO_SHIFT23,320
#define LV_BEZIER_VAL_MAX LV_BEZIER_VAL_MAX25,386
#define LV_BEZIER_VAL_SHIFT LV_BEZIER_VAL_SHIFT26,482
    uint16_t i;i33,665
    uint16_t f;f34,681
} lv_sqrt_res_t;lv_sqrt_res_t35,697
static inline LV_ATTRIBUTE_FAST_MEM int16_t lv_trigo_cos(int16_t angle)lv_trigo_cos49,994
#define LV_MIN(LV_MIN121,3225
#define LV_MIN3(LV_MIN3122,3270
#define LV_MIN4(LV_MIN4123,3320
#define LV_MAX(LV_MAX125,3384
#define LV_MAX3(LV_MAX3126,3429
#define LV_MAX4(LV_MAX4127,3479
#define LV_CLAMP(LV_CLAMP129,3543
#define LV_ABS(LV_ABS131,3610
#define LV_UDIV255(LV_UDIV255132,3653
#define LV_IS_SIGNED(LV_IS_SIGNED134,3702
#define LV_UMAX_OF(LV_UMAX_OF135,3747
#define LV_SMAX_OF(LV_SMAX_OF136,3862
#define LV_MAX_OF(LV_MAX_OF137,3977

lib/lvgl/src/misc/lv_style_gen.c,9201
void lv_style_set_width(lv_style_t * style, lv_coord_t value)lv_style_set_width3,43
void lv_style_set_min_width(lv_style_t * style, lv_coord_t value)lv_style_set_min_width11,223
void lv_style_set_max_width(lv_style_t * style, lv_coord_t value)lv_style_set_max_width19,411
void lv_style_set_height(lv_style_t * style, lv_coord_t value)lv_style_set_height27,599
void lv_style_set_min_height(lv_style_t * style, lv_coord_t value)lv_style_set_min_height35,781
void lv_style_set_max_height(lv_style_t * style, lv_coord_t value)lv_style_set_max_height43,971
void lv_style_set_x(lv_style_t * style, lv_coord_t value)lv_style_set_x51,1161
void lv_style_set_y(lv_style_t * style, lv_coord_t value)lv_style_set_y59,1333
void lv_style_set_align(lv_style_t * style, lv_align_t value)lv_style_set_align67,1505
void lv_style_set_transform_width(lv_style_t * style, lv_coord_t value)lv_style_set_transform_width75,1685
void lv_style_set_transform_height(lv_style_t * style, lv_coord_t value)lv_style_set_transform_height83,1885
void lv_style_set_translate_x(lv_style_t * style, lv_coord_t value)lv_style_set_translate_x91,2087
void lv_style_set_translate_y(lv_style_t * style, lv_coord_t value)lv_style_set_translate_y99,2279
void lv_style_set_transform_zoom(lv_style_t * style, lv_coord_t value)lv_style_set_transform_zoom107,2471
void lv_style_set_transform_angle(lv_style_t * style, lv_coord_t value)lv_style_set_transform_angle115,2669
void lv_style_set_pad_top(lv_style_t * style, lv_coord_t value)lv_style_set_pad_top123,2869
void lv_style_set_pad_bottom(lv_style_t * style, lv_coord_t value)lv_style_set_pad_bottom131,3053
void lv_style_set_pad_left(lv_style_t * style, lv_coord_t value)lv_style_set_pad_left139,3243
void lv_style_set_pad_right(lv_style_t * style, lv_coord_t value)lv_style_set_pad_right147,3429
void lv_style_set_pad_row(lv_style_t * style, lv_coord_t value)lv_style_set_pad_row155,3617
void lv_style_set_pad_column(lv_style_t * style, lv_coord_t value)lv_style_set_pad_column163,3801
void lv_style_set_radius(lv_style_t * style, lv_coord_t value)lv_style_set_radius171,3991
void lv_style_set_clip_corner(lv_style_t * style, bool value)lv_style_set_clip_corner179,4173
void lv_style_set_opa(lv_style_t * style, lv_opa_t value)lv_style_set_opa187,4359
void lv_style_set_color_filter_dsc(lv_style_t * style, const lv_color_filter_dsc_t * value)lv_style_set_color_filter_dsc195,4533
void lv_style_set_color_filter_opa(lv_style_t * style, lv_opa_t value)lv_style_set_color_filter_opa203,4745
void lv_style_set_anim_time(lv_style_t * style, uint32_t value)lv_style_set_anim_time211,4945
void lv_style_set_anim_speed(lv_style_t * style, uint32_t value)lv_style_set_anim_speed219,5131
void lv_style_set_transition(lv_style_t * style, const lv_style_transition_dsc_t * value)lv_style_set_transition227,5319
void lv_style_set_blend_mode(lv_style_t * style, lv_blend_mode_t value)lv_style_set_blend_mode235,5523
void lv_style_set_layout(lv_style_t * style, uint16_t value)lv_style_set_layout243,5718
void lv_style_set_base_dir(lv_style_t * style, lv_base_dir_t value)lv_style_set_base_dir251,5898
void lv_style_set_bg_color(lv_style_t * style, lv_color_t value)lv_style_set_bg_color259,6087
void lv_style_set_bg_color_filtered(lv_style_t * style, lv_color_t value)lv_style_set_bg_color_filtered267,6266
void lv_style_set_bg_opa(lv_style_t * style, lv_opa_t value)lv_style_set_bg_opa275,6463
void lv_style_set_bg_grad_color(lv_style_t * style, lv_color_t value)lv_style_set_bg_grad_color283,6643
void lv_style_set_bg_grad_color_filtered(lv_style_t * style, lv_color_t value)lv_style_set_bg_grad_color_filtered291,6832
void lv_style_set_bg_grad_dir(lv_style_t * style, lv_grad_dir_t value)lv_style_set_bg_grad_dir299,7039
void lv_style_set_bg_main_stop(lv_style_t * style, lv_coord_t value)lv_style_set_bg_main_stop307,7234
void lv_style_set_bg_grad_stop(lv_style_t * style, lv_coord_t value)lv_style_set_bg_grad_stop315,7428
void lv_style_set_bg_img_src(lv_style_t * style, const void * value)lv_style_set_bg_img_src323,7622
void lv_style_set_bg_img_opa(lv_style_t * style, lv_opa_t value)lv_style_set_bg_img_opa331,7805
void lv_style_set_bg_img_recolor(lv_style_t * style, lv_color_t value)lv_style_set_bg_img_recolor339,7993
void lv_style_set_bg_img_recolor_filtered(lv_style_t * style, lv_color_t value)lv_style_set_bg_img_recolor_filtered347,8184
void lv_style_set_bg_img_recolor_opa(lv_style_t * style, lv_opa_t value)lv_style_set_bg_img_recolor_opa355,8393
void lv_style_set_bg_img_tiled(lv_style_t * style, bool value)lv_style_set_bg_img_tiled363,8597
void lv_style_set_border_color(lv_style_t * style, lv_color_t value)lv_style_set_border_color371,8785
void lv_style_set_border_color_filtered(lv_style_t * style, lv_color_t value)lv_style_set_border_color_filtered379,8972
void lv_style_set_border_opa(lv_style_t * style, lv_opa_t value)lv_style_set_border_opa387,9177
void lv_style_set_border_width(lv_style_t * style, lv_coord_t value)lv_style_set_border_width395,9365
void lv_style_set_border_side(lv_style_t * style, lv_border_side_t value)lv_style_set_border_side403,9559
void lv_style_set_border_post(lv_style_t * style, bool value)lv_style_set_border_post411,9757
void lv_style_set_text_color(lv_style_t * style, lv_color_t value)lv_style_set_text_color419,9943
void lv_style_set_text_color_filtered(lv_style_t * style, lv_color_t value)lv_style_set_text_color_filtered427,10126
void lv_style_set_text_opa(lv_style_t * style, lv_opa_t value)lv_style_set_text_opa435,10327
void lv_style_set_text_font(lv_style_t * style, const lv_font_t * value)lv_style_set_text_font443,10511
void lv_style_set_text_letter_space(lv_style_t * style, lv_coord_t value)lv_style_set_text_letter_space451,10697
void lv_style_set_text_line_space(lv_style_t * style, lv_coord_t value)lv_style_set_text_line_space459,10901
void lv_style_set_text_decor(lv_style_t * style, lv_text_decor_t value)lv_style_set_text_decor467,11101
void lv_style_set_text_align(lv_style_t * style, lv_text_align_t value)lv_style_set_text_align475,11296
void lv_style_set_img_opa(lv_style_t * style, lv_opa_t value)lv_style_set_img_opa483,11491
void lv_style_set_img_recolor(lv_style_t * style, lv_color_t value)lv_style_set_img_recolor491,11673
void lv_style_set_img_recolor_filtered(lv_style_t * style, lv_color_t value)lv_style_set_img_recolor_filtered499,11858
void lv_style_set_img_recolor_opa(lv_style_t * style, lv_opa_t value)lv_style_set_img_recolor_opa507,12061
void lv_style_set_outline_width(lv_style_t * style, lv_coord_t value)lv_style_set_outline_width515,12259
void lv_style_set_outline_color(lv_style_t * style, lv_color_t value)lv_style_set_outline_color523,12455
void lv_style_set_outline_color_filtered(lv_style_t * style, lv_color_t value)lv_style_set_outline_color_filtered531,12644
void lv_style_set_outline_opa(lv_style_t * style, lv_opa_t value)lv_style_set_outline_opa539,12851
void lv_style_set_outline_pad(lv_style_t * style, lv_coord_t value)lv_style_set_outline_pad547,13041
void lv_style_set_shadow_width(lv_style_t * style, lv_coord_t value)lv_style_set_shadow_width555,13233
void lv_style_set_shadow_ofs_x(lv_style_t * style, lv_coord_t value)lv_style_set_shadow_ofs_x563,13427
void lv_style_set_shadow_ofs_y(lv_style_t * style, lv_coord_t value)lv_style_set_shadow_ofs_y571,13621
void lv_style_set_shadow_spread(lv_style_t * style, lv_coord_t value)lv_style_set_shadow_spread579,13815
void lv_style_set_shadow_color(lv_style_t * style, lv_color_t value)lv_style_set_shadow_color587,14011
void lv_style_set_shadow_color_filtered(lv_style_t * style, lv_color_t value)lv_style_set_shadow_color_filtered595,14198
void lv_style_set_shadow_opa(lv_style_t * style, lv_opa_t value)lv_style_set_shadow_opa603,14403
void lv_style_set_line_width(lv_style_t * style, lv_coord_t value)lv_style_set_line_width611,14591
void lv_style_set_line_dash_width(lv_style_t * style, lv_coord_t value)lv_style_set_line_dash_width619,14781
void lv_style_set_line_dash_gap(lv_style_t * style, lv_coord_t value)lv_style_set_line_dash_gap627,14981
void lv_style_set_line_rounded(lv_style_t * style, bool value)lv_style_set_line_rounded635,15177
void lv_style_set_line_color(lv_style_t * style, lv_color_t value)lv_style_set_line_color643,15365
void lv_style_set_line_color_filtered(lv_style_t * style, lv_color_t value)lv_style_set_line_color_filtered651,15548
void lv_style_set_line_opa(lv_style_t * style, lv_opa_t value)lv_style_set_line_opa659,15749
void lv_style_set_arc_width(lv_style_t * style, lv_coord_t value)lv_style_set_arc_width667,15933
void lv_style_set_arc_rounded(lv_style_t * style, bool value)lv_style_set_arc_rounded675,16121
void lv_style_set_arc_color(lv_style_t * style, lv_color_t value)lv_style_set_arc_color683,16307
void lv_style_set_arc_color_filtered(lv_style_t * style, lv_color_t value)lv_style_set_arc_color_filtered691,16488
void lv_style_set_arc_opa(lv_style_t * style, lv_opa_t value)lv_style_set_arc_opa699,16687
void lv_style_set_arc_img_src(lv_style_t * style, const void * value)lv_style_set_arc_img_src707,16869

lib/lvgl/src/misc/lv_style.c,933
void lv_style_init(lv_style_t * style)lv_style_init40,629
void lv_style_reset(lv_style_t * style)lv_style_reset54,989
lv_style_prop_t lv_style_register_prop(void)lv_style_register_prop71,1356
bool lv_style_remove_prop(lv_style_t * style, lv_style_prop_t prop)lv_style_remove_prop78,1508
void lv_style_set_prop(lv_style_t * style, lv_style_prop_t prop, lv_style_value_t value)lv_style_set_prop139,3635
lv_res_t lv_style_get_prop(lv_style_t * style, lv_style_prop_t prop, lv_style_value_t * value)lv_style_get_prop212,6327
void lv_style_transition_dsc_init(lv_style_transition_dsc_t * tr, const lv_style_prop_t props[],lv_style_transition_dsc_init217,6485
lv_style_value_t lv_style_prop_get_default(lv_style_prop_t prop)lv_style_prop_get_default232,6980
bool lv_style_is_empty(const lv_style_t * style)lv_style_is_empty285,8501
uint8_t _lv_style_get_prop_group(lv_style_prop_t prop)_lv_style_get_prop_group292,8632

lib/lvgl/src/misc/lv_assert.h,461
#define LV_ASSERT_HLV_ASSERT_H7,53
#define LV_ASSERT(LV_ASSERT37,554
#define LV_ASSERT_MSG(LV_ASSERT_MSG45,960
#   define LV_ASSERT_NULL(LV_ASSERT_NULL58,1503
#   define LV_ASSERT_NULL(LV_ASSERT_NULL60,1580
#   define LV_ASSERT_MALLOC(LV_ASSERT_MALLOC64,1642
#   define LV_ASSERT_MALLOC(LV_ASSERT_MALLOC66,1722
#   define LV_ASSERT_MEM_INTEGRITY(LV_ASSERT_MEM_INTEGRITY70,1793
#   define LV_ASSERT_MEM_INTEGRITY(LV_ASSERT_MEM_INTEGRITY72,1905

lib/lvgl/src/misc/lv_area.c,1593
void lv_area_set(lv_area_t * area_p, lv_coord_t x1, lv_coord_t y1, lv_coord_t x2, lv_coord_t y2)lv_area_set48,898
void lv_area_set_width(lv_area_t * area_p, lv_coord_t w)lv_area_set_width61,1218
void lv_area_set_height(lv_area_t * area_p, lv_coord_t h)lv_area_set_height71,1453
void _lv_area_set_pos(lv_area_t * area_p, lv_coord_t x, lv_coord_t y)_lv_area_set_pos82,1750
uint32_t lv_area_get_size(const lv_area_t * area_p)lv_area_get_size97,2138
void lv_area_increase(lv_area_t * area, lv_coord_t w_extra, lv_coord_t h_extra)lv_area_increase106,2317
void lv_area_move(lv_area_t * area, lv_coord_t x_ofs, lv_coord_t y_ofs)lv_area_move114,2502
bool _lv_area_intersect(lv_area_t * res_p, const lv_area_t * a1_p, const lv_area_t * a2_p)_lv_area_intersect129,2935
void _lv_area_join(lv_area_t * a_res_p, const lv_area_t * a1_p, const lv_area_t * a2_p)_lv_area_join152,3691
bool _lv_area_is_point_on(const lv_area_t * a_p, const lv_point_t * p_p, lv_coord_t radius)_lv_area_is_point_on167,4183
bool _lv_area_is_on(const lv_area_t * a1_p, const lv_area_t * a2_p)_lv_area_is_on233,6307
bool _lv_area_is_in(const lv_area_t * ain_p, const lv_area_t * aholder_p, lv_coord_t radius)_lv_area_is_in250,6859
bool _lv_area_is_out(const lv_area_t * aout_p, const lv_area_t * aholder_p, lv_coord_t radius)_lv_area_is_out291,8089
void lv_area_align(const lv_area_t * base, lv_area_t * to_align, lv_align_t align, lv_coord_t ofs_x, lv_coord_t ofs_y)lv_area_align329,9165
static bool lv_point_within_circle(const lv_area_t * area, const lv_point_t * p)lv_point_within_circle458,13178

lib/lvgl/src/misc/lv_ll.c,1432
#define LL_NODE_META_SIZE LL_NODE_META_SIZE16,280
#define LL_PREV_P_OFFSET(LL_PREV_P_OFFSET17,356
#define LL_NEXT_P_OFFSET(LL_NEXT_P_OFFSET18,402
void _lv_ll_init(lv_ll_t * ll_p, uint32_t node_size)_lv_ll_init47,1114
void * _lv_ll_ins_head(lv_ll_t * ll_p)_lv_ll_ins_head67,1542
void * _lv_ll_ins_prev(lv_ll_t * ll_p, void * n_act)_lv_ll_ins_prev96,2387
void * _lv_ll_ins_tail(lv_ll_t * ll_p)_lv_ll_ins_tail126,3157
void _lv_ll_remove(lv_ll_t * ll_p, void * node_p)_lv_ll_remove154,4072
void _lv_ll_clear(lv_ll_t * ll_p)_lv_ll_clear191,5147
void _lv_ll_chg_list(lv_ll_t * ll_ori_p, lv_ll_t * ll_new_p, void * node, bool head)_lv_ll_chg_list217,5712
void * _lv_ll_get_head(const lv_ll_t * ll_p)_lv_ll_get_head256,6998
void * _lv_ll_get_tail(const lv_ll_t * ll_p)_lv_ll_get_tail267,7236
void * _lv_ll_get_next(const lv_ll_t * ll_p, const void * n_act)_lv_ll_get_next279,7514
void * _lv_ll_get_prev(const lv_ll_t * ll_p, const void * n_act)_lv_ll_get_prev294,8002
uint32_t _lv_ll_get_len(const lv_ll_t * ll_p)_lv_ll_get_len308,8436
void _lv_ll_move_before(lv_ll_t * ll_p, void * n_act, void * n_after)_lv_ll_move_before326,8869
bool _lv_ll_is_empty(lv_ll_t * ll_p)_lv_ll_is_empty359,9960
static void node_set_prev(lv_ll_t * ll_p, lv_ll_node_t * act, lv_ll_node_t * prev)node_set_prev378,10430
static void node_set_next(lv_ll_t * ll_p, lv_ll_node_t * act, lv_ll_node_t * next)node_set_next398,11042

lib/lvgl/src/misc/lv_bidi.h,596
#define LV_BIDI_HLV_BIDI_H7,49
#define LV_BIDI_LRO LV_BIDI_LRO27,438
#define LV_BIDI_RLO LV_BIDI_RLO28,485
    LV_BASE_DIR_LTR      = 0x00,LV_BASE_DIR_LTR34,606
    LV_BASE_DIR_RTL      = 0x01,LV_BASE_DIR_RTL35,639
    LV_BASE_DIR_AUTO     = 0x02,LV_BASE_DIR_AUTO36,672
    LV_BASE_DIR_NEUTRAL  = 0x20,LV_BASE_DIR_NEUTRAL38,706
    LV_BASE_DIR_WEAK     = 0x21,LV_BASE_DIR_WEAK39,739
typedef uint8_t lv_base_dir_t;lv_base_dir_t42,776
static inline void lv_bidi_calculate_align(lv_text_align_t * align, lv_base_dir_t * base_dir, const char * txt)lv_bidi_calculate_align129,4587

lib/lvgl/src/misc/lv_printf.c,2953
#define PRINTF_DISABLE_SUPPORT_FLOAT PRINTF_DISABLE_SUPPORT_FLOAT41,1854
    #define PRINTF_NTOA_BUFFER_SIZE PRINTF_NTOA_BUFFER_SIZE47,2123
    #define PRINTF_FTOA_BUFFER_SIZE PRINTF_FTOA_BUFFER_SIZE54,2376
    #define PRINTF_SUPPORT_FLOATPRINTF_SUPPORT_FLOAT60,2527
    #define PRINTF_SUPPORT_EXPONENTIALPRINTF_SUPPORT_EXPONENTIAL66,2692
    #define PRINTF_DEFAULT_FLOAT_PRECISION PRINTF_DEFAULT_FLOAT_PRECISION72,2846
    #define PRINTF_MAX_FLOAT PRINTF_MAX_FLOAT78,2995
    #define PRINTF_SUPPORT_LONG_LONGPRINTF_SUPPORT_LONG_LONG84,3147
    #define PRINTF_SUPPORT_PTRDIFF_TPRINTF_SUPPORT_PTRDIFF_T91,3367
#define FLAGS_ZEROPAD FLAGS_ZEROPAD97,3522
#define FLAGS_LEFT FLAGS_LEFT98,3558
#define FLAGS_PLUS FLAGS_PLUS99,3594
#define FLAGS_SPACE FLAGS_SPACE100,3630
#define FLAGS_HASH FLAGS_HASH101,3666
#define FLAGS_UPPERCASE FLAGS_UPPERCASE102,3702
#define FLAGS_CHAR FLAGS_CHAR103,3738
#define FLAGS_SHORT FLAGS_SHORT104,3774
#define FLAGS_LONG FLAGS_LONG105,3810
#define FLAGS_LONG_LONG FLAGS_LONG_LONG106,3846
#define FLAGS_PRECISION FLAGS_PRECISION107,3882
#define FLAGS_ADAPT_EXP FLAGS_ADAPT_EXP108,3918
typedef void (*out_fct_type)(char character, void * buffer, size_t idx, size_t maxlen);out_fct_type116,4074
    void (*fct)(char character, void * arg);fct120,4233
    void * arg;arg121,4278
} out_fct_wrap_type;out_fct_wrap_type122,4294
static inline void _out_buffer(char character, void * buffer, size_t idx, size_t maxlen)_out_buffer125,4342
static inline void _out_null(char character, void * buffer, size_t idx, size_t maxlen)_out_null133,4532
static inline unsigned int _strnlen_s(const char * str, size_t maxsize)_strnlen_s143,4829
static inline bool _is_digit(char ch)_is_digit152,5079
static unsigned int _atoi(const char ** str)_atoi158,5213
static size_t _out_rev(out_fct_type out, char * buffer, size_t idx, size_t maxlen, const char * buf, size_t len,_out_rev168,5470
static size_t _ntoa_format(out_fct_type out, char * buffer, size_t idx, size_t maxlen, char * buf, size_t len,_ntoa_format197,6210
static size_t _ntoa_long(out_fct_type out, char * buffer, size_t idx, size_t maxlen, unsigned long value, bool negative,_ntoa_long251,7996
static size_t _ntoa_long_long(out_fct_type out, char * buffer, size_t idx, size_t maxlen, unsigned long long value,_ntoa_long_long276,8914
static size_t _ftoa(out_fct_type out, char * buffer, size_t idx, size_t maxlen, double value, unsigned int prec,_ftoa309,10213
static size_t _etoa(out_fct_type out, char * buffer, size_t idx, size_t maxlen, double value, unsigned int prec,_etoa438,14204
static int _vsnprintf(out_fct_type out, char * buffer, const size_t maxlen, const char * format, va_list va)_vsnprintf550,18264
int lv_snprintf(char * buffer, size_t count, const char * format, ...)lv_snprintf865,29855
int lv_vsnprintf(char * buffer, size_t count, const char * format, va_list va)lv_vsnprintf874,30077

lib/lvgl/src/misc/lv_tlsf.h,224
#define LV_TLSF_HLV_TLSF_H5,75
typedef void * lv_tlsf_t;lv_tlsf_t52,2194
typedef void * lv_pool_t;lv_pool_t53,2220
typedef void (*lv_tlsf_walker)(void * ptr, size_t size, int used, void * user);lv_tlsf_walker83,3283

lib/lvgl/src/misc/lv_log.h,1654
#define LV_LOG_HLV_LOG_H7,47
#define LV_LOG_LEVEL_TRACE LV_LOG_LEVEL_TRACE27,396
#define LV_LOG_LEVEL_INFO LV_LOG_LEVEL_INFO28,475
#define LV_LOG_LEVEL_WARN LV_LOG_LEVEL_WARN29,532
#define LV_LOG_LEVEL_ERROR LV_LOG_LEVEL_ERROR30,629
#define LV_LOG_LEVEL_USER LV_LOG_LEVEL_USER31,711
#define LV_LOG_LEVEL_NONE LV_LOG_LEVEL_NONE32,773
#define _LV_LOG_LEVEL_NUM _LV_LOG_LEVEL_NUM33,829
LV_EXPORT_CONST_INT(LV_LOG_LEVEL_TRACE);LV_LOG_LEVEL_TRACE35,887
LV_EXPORT_CONST_INT(LV_LOG_LEVEL_INFO);LV_LOG_LEVEL_INFO36,928
LV_EXPORT_CONST_INT(LV_LOG_LEVEL_WARN);LV_LOG_LEVEL_WARN37,968
LV_EXPORT_CONST_INT(LV_LOG_LEVEL_ERROR);LV_LOG_LEVEL_ERROR38,1008
LV_EXPORT_CONST_INT(LV_LOG_LEVEL_USER);LV_LOG_LEVEL_USER39,1049
LV_EXPORT_CONST_INT(LV_LOG_LEVEL_NONE);LV_LOG_LEVEL_NONE40,1089
typedef int8_t lv_log_level_t;lv_log_level_t42,1130
typedef void (*lv_log_print_g_cb_t)(const char * buf);lv_log_print_g_cb_t52,1311
#    define LV_LOG_TRACE(LV_LOG_TRACE90,2676
#    define LV_LOG_TRACE(LV_LOG_TRACE92,2789
#    define LV_LOG_INFO(LV_LOG_INFO98,2910
#    define LV_LOG_INFO(LV_LOG_INFO100,3021
#    define LV_LOG_WARN(LV_LOG_WARN106,3141
#    define LV_LOG_WARN(LV_LOG_WARN108,3252
#    define LV_LOG_ERROR(LV_LOG_ERROR114,3374
#    define LV_LOG_ERROR(LV_LOG_ERROR116,3487
#    define LV_LOG_USER(LV_LOG_USER122,3608
#    define LV_LOG_USER(LV_LOG_USER124,3719
#define _lv_log_add(_lv_log_add131,3834
#define LV_LOG_TRACE(LV_LOG_TRACE132,3878
#define LV_LOG_INFO(LV_LOG_INFO133,3918
#define LV_LOG_WARN(LV_LOG_WARN134,3957
#define LV_LOG_ERROR(LV_LOG_ERROR135,3996
#define LV_LOG_USER(LV_LOG_USER136,4036

lib/lvgl/src/misc/lv_mem.c,1706
    #define LV_MEM_ADD_JUNK LV_MEM_ADD_JUNK29,624
    #define MEM_UNIT MEM_UNIT33,681
    #define ALIGN_MASK ALIGN_MASK34,719
    #define MEM_UNIT MEM_UNIT36,758
    #define ALIGN_MASK ALIGN_MASK37,796
#define ZERO_MEM_SENTINEL ZERO_MEM_SENTINEL40,837
    static lv_tlsf_t tlsf;tlsf57,1217
static uint32_t zero_mem = ZERO_MEM_SENTINEL; /*Give the address of this variable if 0 byte should be allocated*/zero_mem60,1252
    #define MEM_TRACE(MEM_TRACE66,1452
    #define MEM_TRACE(MEM_TRACE68,1511
#define COPY32 COPY3271,1546
#define COPY8 COPY872,1588
#define SET32(SET3273,1625
#define SET8(SET874,1659
#define REPEAT8(REPEAT875,1690
void lv_mem_init(void)lv_mem_init84,1900
void lv_mem_deinit(void)lv_mem_deinit110,2656
void * lv_mem_alloc(size_t size)lv_mem_alloc123,2901
void lv_mem_free(void * data)lv_mem_free159,3828
void * lv_mem_realloc(void * data_p, size_t new_size)lv_mem_realloc182,4416
lv_res_t lv_mem_test(void)lv_mem_test207,5056
void lv_mem_monitor(lv_mem_monitor_t * mon_p)lv_mem_monitor234,5691
void * lv_mem_buf_get(uint32_t size)lv_mem_buf_get262,6422
void lv_mem_buf_release(void * p)lv_mem_buf_release318,8516
void lv_mem_buf_free_all(void)lv_mem_buf_free_all335,8863
LV_ATTRIBUTE_FAST_MEM void * lv_memcpy(void * dst, const void * src, size_t len)lv_memcpy354,9431
LV_ATTRIBUTE_FAST_MEM void lv_memset(void * dst, uint8_t v, size_t len)lv_memset416,10752
LV_ATTRIBUTE_FAST_MEM void lv_memset_00(void * dst, size_t len)lv_memset_00459,11653
LV_ATTRIBUTE_FAST_MEM void lv_memset_ff(void * dst, size_t len)lv_memset_ff497,12441
static void lv_mem_walker(void * ptr, size_t size, int used, void * user)lv_mem_walker537,13217

lib/lvgl/src/misc/lv_style_gen.h,6561
#define LV_STYLE_CONST_WIDTH(LV_STYLE_CONST_WIDTH90,6204
#define LV_STYLE_CONST_MIN_WIDTH(LV_STYLE_CONST_MIN_WIDTH98,6356
#define LV_STYLE_CONST_MAX_WIDTH(LV_STYLE_CONST_MAX_WIDTH106,6516
#define LV_STYLE_CONST_HEIGHT(LV_STYLE_CONST_HEIGHT114,6676
#define LV_STYLE_CONST_MIN_HEIGHT(LV_STYLE_CONST_MIN_HEIGHT122,6830
#define LV_STYLE_CONST_MAX_HEIGHT(LV_STYLE_CONST_MAX_HEIGHT130,6992
#define LV_STYLE_CONST_X(LV_STYLE_CONST_X138,7154
#define LV_STYLE_CONST_Y(LV_STYLE_CONST_Y146,7298
#define LV_STYLE_CONST_ALIGN(LV_STYLE_CONST_ALIGN154,7442
#define LV_STYLE_CONST_TRANSFORM_WIDTH(LV_STYLE_CONST_TRANSFORM_WIDTH162,7594
#define LV_STYLE_CONST_TRANSFORM_HEIGHT(LV_STYLE_CONST_TRANSFORM_HEIGHT170,7766
#define LV_STYLE_CONST_TRANSLATE_X(LV_STYLE_CONST_TRANSLATE_X178,7940
#define LV_STYLE_CONST_TRANSLATE_Y(LV_STYLE_CONST_TRANSLATE_Y186,8104
#define LV_STYLE_CONST_TRANSFORM_ZOOM(LV_STYLE_CONST_TRANSFORM_ZOOM194,8268
#define LV_STYLE_CONST_TRANSFORM_ANGLE(LV_STYLE_CONST_TRANSFORM_ANGLE202,8438
#define LV_STYLE_CONST_PAD_TOP(LV_STYLE_CONST_PAD_TOP210,8610
#define LV_STYLE_CONST_PAD_BOTTOM(LV_STYLE_CONST_PAD_BOTTOM218,8766
#define LV_STYLE_CONST_PAD_LEFT(LV_STYLE_CONST_PAD_LEFT226,8928
#define LV_STYLE_CONST_PAD_RIGHT(LV_STYLE_CONST_PAD_RIGHT234,9086
#define LV_STYLE_CONST_PAD_ROW(LV_STYLE_CONST_PAD_ROW242,9246
#define LV_STYLE_CONST_PAD_COLUMN(LV_STYLE_CONST_PAD_COLUMN250,9402
#define LV_STYLE_CONST_RADIUS(LV_STYLE_CONST_RADIUS258,9564
#define LV_STYLE_CONST_CLIP_CORNER(LV_STYLE_CONST_CLIP_CORNER266,9718
#define LV_STYLE_CONST_OPA(LV_STYLE_CONST_OPA274,9882
#define LV_STYLE_CONST_COLOR_FILTER_DSC(LV_STYLE_CONST_COLOR_FILTER_DSC282,10030
#define LV_STYLE_CONST_COLOR_FILTER_OPA(LV_STYLE_CONST_COLOR_FILTER_OPA290,10195
#define LV_STYLE_CONST_ANIM_TIME(LV_STYLE_CONST_ANIM_TIME298,10369
#define LV_STYLE_CONST_ANIM_SPEED(LV_STYLE_CONST_ANIM_SPEED306,10529
#define LV_STYLE_CONST_TRANSITION(LV_STYLE_CONST_TRANSITION314,10691
#define LV_STYLE_CONST_BLEND_MODE(LV_STYLE_CONST_BLEND_MODE322,10844
#define LV_STYLE_CONST_LAYOUT(LV_STYLE_CONST_LAYOUT330,11006
#define LV_STYLE_CONST_BASE_DIR(LV_STYLE_CONST_BASE_DIR338,11160
#define LV_STYLE_CONST_BG_COLOR(LV_STYLE_CONST_BG_COLOR346,11318
#define LV_STYLE_CONST_BG_COLOR_FILTERED(LV_STYLE_CONST_BG_COLOR_FILTERED354,11469
#define LV_STYLE_CONST_BG_OPA(LV_STYLE_CONST_BG_OPA362,11638
#define LV_STYLE_CONST_BG_GRAD_COLOR(LV_STYLE_CONST_BG_GRAD_COLOR370,11792
#define LV_STYLE_CONST_BG_GRAD_COLOR_FILTERED(LV_STYLE_CONST_BG_GRAD_COLOR_FILTERED378,11953
#define LV_STYLE_CONST_BG_GRAD_DIR(LV_STYLE_CONST_BG_GRAD_DIR386,12132
#define LV_STYLE_CONST_BG_MAIN_STOP(LV_STYLE_CONST_BG_MAIN_STOP394,12296
#define LV_STYLE_CONST_BG_GRAD_STOP(LV_STYLE_CONST_BG_GRAD_STOP402,12462
#define LV_STYLE_CONST_BG_IMG_SRC(LV_STYLE_CONST_BG_IMG_SRC410,12628
#define LV_STYLE_CONST_BG_IMG_OPA(LV_STYLE_CONST_BG_IMG_OPA418,12781
#define LV_STYLE_CONST_BG_IMG_RECOLOR(LV_STYLE_CONST_BG_IMG_RECOLOR426,12943
#define LV_STYLE_CONST_BG_IMG_RECOLOR_FILTERED(LV_STYLE_CONST_BG_IMG_RECOLOR_FILTERED434,13106
#define LV_STYLE_CONST_BG_IMG_RECOLOR_OPA(LV_STYLE_CONST_BG_IMG_RECOLOR_OPA442,13287
#define LV_STYLE_CONST_BG_IMG_TILED(LV_STYLE_CONST_BG_IMG_TILED450,13465
#define LV_STYLE_CONST_BORDER_COLOR(LV_STYLE_CONST_BORDER_COLOR458,13631
#define LV_STYLE_CONST_BORDER_COLOR_FILTERED(LV_STYLE_CONST_BORDER_COLOR_FILTERED466,13790
#define LV_STYLE_CONST_BORDER_OPA(LV_STYLE_CONST_BORDER_OPA474,13967
#define LV_STYLE_CONST_BORDER_WIDTH(LV_STYLE_CONST_BORDER_WIDTH482,14129
#define LV_STYLE_CONST_BORDER_SIDE(LV_STYLE_CONST_BORDER_SIDE490,14295
#define LV_STYLE_CONST_BORDER_POST(LV_STYLE_CONST_BORDER_POST498,14459
#define LV_STYLE_CONST_TEXT_COLOR(LV_STYLE_CONST_TEXT_COLOR506,14623
#define LV_STYLE_CONST_TEXT_COLOR_FILTERED(LV_STYLE_CONST_TEXT_COLOR_FILTERED514,14778
#define LV_STYLE_CONST_TEXT_OPA(LV_STYLE_CONST_TEXT_OPA522,14951
#define LV_STYLE_CONST_TEXT_FONT(LV_STYLE_CONST_TEXT_FONT530,15109
#define LV_STYLE_CONST_TEXT_LETTER_SPACE(LV_STYLE_CONST_TEXT_LETTER_SPACE538,15260
#define LV_STYLE_CONST_TEXT_LINE_SPACE(LV_STYLE_CONST_TEXT_LINE_SPACE546,15436
#define LV_STYLE_CONST_TEXT_DECOR(LV_STYLE_CONST_TEXT_DECOR554,15608
#define LV_STYLE_CONST_TEXT_ALIGN(LV_STYLE_CONST_TEXT_ALIGN562,15770
#define LV_STYLE_CONST_IMG_OPA(LV_STYLE_CONST_IMG_OPA570,15932
#define LV_STYLE_CONST_IMG_RECOLOR(LV_STYLE_CONST_IMG_RECOLOR578,16088
#define LV_STYLE_CONST_IMG_RECOLOR_FILTERED(LV_STYLE_CONST_IMG_RECOLOR_FILTERED586,16245
#define LV_STYLE_CONST_IMG_RECOLOR_OPA(LV_STYLE_CONST_IMG_RECOLOR_OPA594,16420
#define LV_STYLE_CONST_OUTLINE_WIDTH(LV_STYLE_CONST_OUTLINE_WIDTH602,16592
#define LV_STYLE_CONST_OUTLINE_COLOR(LV_STYLE_CONST_OUTLINE_COLOR610,16760
#define LV_STYLE_CONST_OUTLINE_COLOR_FILTERED(LV_STYLE_CONST_OUTLINE_COLOR_FILTERED618,16921
#define LV_STYLE_CONST_OUTLINE_OPA(LV_STYLE_CONST_OUTLINE_OPA626,17100
#define LV_STYLE_CONST_OUTLINE_PAD(LV_STYLE_CONST_OUTLINE_PAD634,17264
#define LV_STYLE_CONST_SHADOW_WIDTH(LV_STYLE_CONST_SHADOW_WIDTH642,17428
#define LV_STYLE_CONST_SHADOW_OFS_X(LV_STYLE_CONST_SHADOW_OFS_X650,17594
#define LV_STYLE_CONST_SHADOW_OFS_Y(LV_STYLE_CONST_SHADOW_OFS_Y658,17760
#define LV_STYLE_CONST_SHADOW_SPREAD(LV_STYLE_CONST_SHADOW_SPREAD666,17926
#define LV_STYLE_CONST_SHADOW_COLOR(LV_STYLE_CONST_SHADOW_COLOR674,18094
#define LV_STYLE_CONST_SHADOW_COLOR_FILTERED(LV_STYLE_CONST_SHADOW_COLOR_FILTERED682,18253
#define LV_STYLE_CONST_SHADOW_OPA(LV_STYLE_CONST_SHADOW_OPA690,18430
#define LV_STYLE_CONST_LINE_WIDTH(LV_STYLE_CONST_LINE_WIDTH698,18592
#define LV_STYLE_CONST_LINE_DASH_WIDTH(LV_STYLE_CONST_LINE_DASH_WIDTH706,18754
#define LV_STYLE_CONST_LINE_DASH_GAP(LV_STYLE_CONST_LINE_DASH_GAP714,18926
#define LV_STYLE_CONST_LINE_ROUNDED(LV_STYLE_CONST_LINE_ROUNDED722,19094
#define LV_STYLE_CONST_LINE_COLOR(LV_STYLE_CONST_LINE_COLOR730,19260
#define LV_STYLE_CONST_LINE_COLOR_FILTERED(LV_STYLE_CONST_LINE_COLOR_FILTERED738,19415
#define LV_STYLE_CONST_LINE_OPA(LV_STYLE_CONST_LINE_OPA746,19588
#define LV_STYLE_CONST_ARC_WIDTH(LV_STYLE_CONST_ARC_WIDTH754,19746
#define LV_STYLE_CONST_ARC_ROUNDED(LV_STYLE_CONST_ARC_ROUNDED762,19906
#define LV_STYLE_CONST_ARC_COLOR(LV_STYLE_CONST_ARC_COLOR770,20070
#define LV_STYLE_CONST_ARC_COLOR_FILTERED(LV_STYLE_CONST_ARC_COLOR_FILTERED778,20223
#define LV_STYLE_CONST_ARC_OPA(LV_STYLE_CONST_ARC_OPA786,20394
#define LV_STYLE_CONST_ARC_IMG_SRC(LV_STYLE_CONST_ARC_IMG_SRC794,20550

lib/lvgl/src/misc/lv_anim_timeline.h,132
#define LV_ANIM_TIMELINE_HLV_ANIM_TIMELINE_H7,67
typedef struct _lv_anim_timeline_t lv_anim_timeline_t;lv_anim_timeline_t28,381

lib/lvgl/src/misc/lv_templ.h,35
#define LV_TEMPL_HLV_TEMPL_H7,51

lib/lvgl/src/misc/lv_anim.c,1876
#define LV_ANIM_RESOLUTION LV_ANIM_RESOLUTION21,318
#define LV_ANIM_RES_SHIFT LV_ANIM_RES_SHIFT22,350
static uint32_t last_timer_run;last_timer_run38,721
static bool anim_list_changed;anim_list_changed39,753
static bool anim_run_round;anim_run_round40,784
static lv_timer_t * _lv_anim_tmr;_lv_anim_tmr41,812
    #define TRACE_ANIM(TRACE_ANIM47,933
    #define TRACE_ANIM(TRACE_ANIM49,993
void _lv_anim_core_init(void)_lv_anim_core_init57,1102
void lv_anim_init(lv_anim_t * a)lv_anim_init65,1371
lv_anim_t * lv_anim_start(const lv_anim_t * a)lv_anim_start76,1601
uint32_t lv_anim_get_playtime(lv_anim_t * a)lv_anim_get_playtime117,3022
bool lv_anim_del(void * var, lv_anim_exec_xcb_t exec_cb)lv_anim_del138,3539
void lv_anim_del_all(void)lv_anim_del_all162,4298
lv_anim_t * lv_anim_get(void * var, lv_anim_exec_xcb_t exec_cb)lv_anim_get168,4403
uint16_t lv_anim_count_running(void)lv_anim_count_running180,4668
uint32_t lv_anim_speed_to_time(uint32_t speed, int32_t start, int32_t end)lv_anim_speed_to_time189,4820
void lv_anim_refr_now(void)lv_anim_refr_now201,5042
int32_t lv_anim_path_linear(const lv_anim_t * a)lv_anim_path_linear206,5097
int32_t lv_anim_path_ease_in(const lv_anim_t * a)lv_anim_path_ease_in221,5547
int32_t lv_anim_path_ease_out(const lv_anim_t * a)lv_anim_path_ease_out235,5960
int32_t lv_anim_path_ease_in_out(const lv_anim_t * a)lv_anim_path_ease_in_out249,6375
int32_t lv_anim_path_overshoot(const lv_anim_t * a)lv_anim_path_overshoot263,6792
int32_t lv_anim_path_bounce(const lv_anim_t * a)lv_anim_path_bounce277,7210
int32_t lv_anim_path_step(const lv_anim_t * a)lv_anim_path_step328,8633
static void anim_timer(lv_timer_t * param)anim_timer344,8927
static void anim_ready_handler(lv_anim_t * a)anim_ready_handler412,11386
static void anim_mark_list_change(void)anim_mark_list_change456,13092

lib/lvgl/src/misc/lv_area.h,3530
#define LV_AREA_HLV_AREA_H7,49
typedef int32_t lv_coord_t;lv_coord_t25,334
typedef int16_t lv_coord_t;lv_coord_t27,368
    lv_coord_t x;x38,533
    lv_coord_t y;y39,551
} lv_point_t;lv_point_t40,569
    lv_coord_t x1;x144,641
    lv_coord_t y1;y145,660
    lv_coord_t x2;x246,679
    lv_coord_t y2;y247,698
} lv_area_t;lv_area_t48,717
    LV_ALIGN_DEFAULT = 0,LV_ALIGN_DEFAULT52,755
    LV_ALIGN_TOP_LEFT,LV_ALIGN_TOP_LEFT53,781
    LV_ALIGN_TOP_MID,LV_ALIGN_TOP_MID54,804
    LV_ALIGN_TOP_RIGHT,LV_ALIGN_TOP_RIGHT55,826
    LV_ALIGN_BOTTOM_LEFT,LV_ALIGN_BOTTOM_LEFT56,850
    LV_ALIGN_BOTTOM_MID,LV_ALIGN_BOTTOM_MID57,876
    LV_ALIGN_BOTTOM_RIGHT,LV_ALIGN_BOTTOM_RIGHT58,901
    LV_ALIGN_LEFT_MID,LV_ALIGN_LEFT_MID59,928
    LV_ALIGN_RIGHT_MID,LV_ALIGN_RIGHT_MID60,951
    LV_ALIGN_CENTER,LV_ALIGN_CENTER61,975
    LV_ALIGN_OUT_TOP_LEFT,LV_ALIGN_OUT_TOP_LEFT63,997
    LV_ALIGN_OUT_TOP_MID,LV_ALIGN_OUT_TOP_MID64,1024
    LV_ALIGN_OUT_TOP_RIGHT,LV_ALIGN_OUT_TOP_RIGHT65,1050
    LV_ALIGN_OUT_BOTTOM_LEFT,LV_ALIGN_OUT_BOTTOM_LEFT66,1078
    LV_ALIGN_OUT_BOTTOM_MID,LV_ALIGN_OUT_BOTTOM_MID67,1108
    LV_ALIGN_OUT_BOTTOM_RIGHT,LV_ALIGN_OUT_BOTTOM_RIGHT68,1137
    LV_ALIGN_OUT_LEFT_TOP,LV_ALIGN_OUT_LEFT_TOP69,1168
    LV_ALIGN_OUT_LEFT_MID,LV_ALIGN_OUT_LEFT_MID70,1195
    LV_ALIGN_OUT_LEFT_BOTTOM,LV_ALIGN_OUT_LEFT_BOTTOM71,1222
    LV_ALIGN_OUT_RIGHT_TOP,LV_ALIGN_OUT_RIGHT_TOP72,1252
    LV_ALIGN_OUT_RIGHT_MID,LV_ALIGN_OUT_RIGHT_MID73,1280
    LV_ALIGN_OUT_RIGHT_BOTTOM,LV_ALIGN_OUT_RIGHT_BOTTOM74,1308
typedef uint8_t lv_align_t;lv_align_t76,1342
    LV_DIR_NONE     = 0x00,LV_DIR_NONE79,1378
    LV_DIR_LEFT     = (1 << 0),LV_DIR_LEFT80,1406
    LV_DIR_RIGHT    = (1 << 1),LV_DIR_RIGHT81,1438
    LV_DIR_TOP      = (1 << 2),LV_DIR_TOP82,1470
    LV_DIR_BOTTOM   = (1 << 3),LV_DIR_BOTTOM83,1502
    LV_DIR_HOR      = LV_DIR_LEFT | LV_DIR_RIGHT,LV_DIR_HOR84,1534
    LV_DIR_VER      = LV_DIR_TOP | LV_DIR_BOTTOM,LV_DIR_VER85,1584
    LV_DIR_ALL      = LV_DIR_HOR | LV_DIR_VER,LV_DIR_ALL86,1634
typedef uint8_t lv_dir_t;lv_dir_t89,1685
inline static void lv_area_copy(lv_area_t * dest, const lv_area_t * src)lv_area_copy110,2226
static inline lv_coord_t lv_area_get_width(const lv_area_t * area_p)lv_area_get_width123,2532
static inline lv_coord_t lv_area_get_height(const lv_area_t * area_p)lv_area_get_height133,2795
#define _LV_COORD_TYPE_SHIFT _LV_COORD_TYPE_SHIFT237,6287
#define _LV_COORD_TYPE_SHIFT _LV_COORD_TYPE_SHIFT239,6330
#define _LV_COORD_TYPE_MASK _LV_COORD_TYPE_MASK242,6375
#define _LV_COORD_TYPE(_LV_COORD_TYPE243,6435
#define _LV_COORD_PLAIN(_LV_COORD_PLAIN244,6524
#define _LV_COORD_TYPE_PX _LV_COORD_TYPE_PX246,6613
#define _LV_COORD_TYPE_SPEC _LV_COORD_TYPE_SPEC247,6673
#define _LV_COORD_TYPE_PX_NEG _LV_COORD_TYPE_PX_NEG248,6733
#define LV_COORD_IS_PX(LV_COORD_IS_PX250,6794
#define LV_COORD_IS_SPEC(LV_COORD_IS_SPEC252,6964
#define LV_COORD_SET_SPEC(LV_COORD_SET_SPEC254,7055
#define LV_PCT(LV_PCT257,7140
#define LV_COORD_IS_PCT(LV_COORD_IS_PCT258,7235
#define LV_COORD_GET_PCT(LV_COORD_GET_PCT259,7336
#define LV_SIZE_CONTENT LV_SIZE_CONTENT260,7445
LV_EXPORT_CONST_INT(LV_SIZE_CONTENT);LV_SIZE_CONTENT262,7502
#define LV_COORD_MAX LV_COORD_MAX265,7566
#define LV_COORD_MIN LV_COORD_MIN266,7632
LV_EXPORT_CONST_INT(LV_COORD_MAX);LV_COORD_MAX268,7681
LV_EXPORT_CONST_INT(LV_COORD_MIN);LV_COORD_MIN269,7716
static inline lv_coord_t lv_pct(lv_coord_t x)lv_pct277,7944

lib/lvgl/src/misc/lv_async.c,334
typedef struct _lv_async_info_t {_lv_async_info_t22,293
    lv_async_cb_t cb;cb23,327
    void * user_data;user_data24,349
} lv_async_info_t;lv_async_info_t25,371
lv_res_t lv_async_call(lv_async_cb_t async_xcb, void * user_data)lv_async_call45,723
static void lv_async_timer_cb(lv_timer_t * timer)lv_async_timer_cb72,1325

lib/lvgl/src/misc/lv_txt_ap.h,237
#define LV_TXT_AP_HLV_TXT_AP_H7,53
#define LV_UNDEF_ARABIC_PERSIAN_CHARS LV_UNDEF_ARABIC_PERSIAN_CHARS26,350
#define LV_AP_ALPHABET_BASE_CODE LV_AP_ALPHABET_BASE_CODE27,405
#define LV_AP_END_CHARS_LIST LV_AP_END_CHARS_LIST28,454

lib/lvgl/src/misc/lv_tlsf.c,9426
#undef  printfprintf10,162
#define printf printf11,177
#define TLSF_MAX_POOL_SIZE TLSF_MAX_POOL_SIZE13,206
    #define _DEBUG _DEBUG16,267
    #define tlsf_decl tlsf_decl20,321
    #define tlsf_decl tlsf_decl22,356
    #define TLSF_64BITTLSF_64BIT49,1410
    #define TLSF_FLS(TLSF_FLS57,1565
    #define TLSF_FLS(TLSF_FLS59,1678
#define TLSF_FLS32(TLSF_FLS3262,1724
#define TLSF_FLS16(TLSF_FLS1663,1810
#define TLSF_FLS8(TLSF_FLS864,1896
#define TLSF_FLS4(TLSF_FLS465,1982
#define TLSF_FLS2(TLSF_FLS266,2068
#define TLSF_FLS1(TLSF_FLS167,2154
#define TLSF_LOG2_CEIL(TLSF_LOG2_CEIL73,2286
tlsf_decl int tlsf_ffs(unsigned int word)tlsf_ffs85,2686
tlsf_decl int tlsf_ffs(unsigned int word)tlsf_ffs94,2862
tlsf_decl int tlsf_fls(unsigned int word)tlsf_fls101,2953
tlsf_decl int tlsf_fls(unsigned int word)tlsf_fls115,3321
tlsf_decl int tlsf_ffs(unsigned int word)tlsf_ffs121,3448
tlsf_decl int tlsf_fls(unsigned int word)tlsf_fls132,3710
tlsf_decl int tlsf_ffs(unsigned int word)tlsf_ffs138,3828
tlsf_decl int tlsf_ffs(unsigned int word)tlsf_ffs148,4076
tlsf_decl int tlsf_fls(unsigned int word)tlsf_fls155,4237
tlsf_decl int tlsf_ffs(unsigned int word)tlsf_ffs166,4438
tlsf_decl int tlsf_fls(unsigned int word)tlsf_fls173,4601
tlsf_decl int tlsf_ffs(unsigned int word)tlsf_ffs183,4806
tlsf_decl int tlsf_fls(unsigned int word)tlsf_fls189,4942
tlsf_decl int tlsf_fls_sizet(size_t size)tlsf_fls_sizet198,5098
#define tlsf_fls_sizet tlsf_fls_sizet212,5343
#undef tlsf_decltlsf_decl215,5383
enum tlsf_public {tlsf_public222,5463
    SL_INDEX_COUNT_LOG2 = 5,SL_INDEX_COUNT_LOG2227,5654
enum tlsf_private {tlsf_private231,5727
    ALIGN_SIZE_LOG2 = 3,ALIGN_SIZE_LOG2234,5841
    ALIGN_SIZE = (1 << ALIGN_SIZE_LOG2),ALIGN_SIZE239,5973
    FL_INDEX_MAX = TLSF_LOG2_CEIL(TLSF_MAX_POOL_SIZE),FL_INDEX_MAX253,6633
    SL_INDEX_COUNT = (1 << SL_INDEX_COUNT_LOG2),SL_INDEX_COUNT263,6909
    FL_INDEX_SHIFT = (SL_INDEX_COUNT_LOG2 + ALIGN_SIZE_LOG2),FL_INDEX_SHIFT264,6958
    FL_INDEX_COUNT = (FL_INDEX_MAX - FL_INDEX_SHIFT + 1),FL_INDEX_COUNT265,7020
    SMALL_BLOCK_SIZE = (1 << FL_INDEX_SHIFT),SMALL_BLOCK_SIZE267,7079
#define tlsf_cast(tlsf_cast274,7164
#define tlsf_min(tlsf_min275,7204
#define tlsf_max(tlsf_max276,7256
#define tlsf_assert tlsf_assert281,7377
    #define tlsf_assert tlsf_assert284,7435
#define _tlsf_glue2(_tlsf_glue2291,7512
#define _tlsf_glue(_tlsf_glue292,7545
#define tlsf_static_assert(tlsf_static_assert293,7588
tlsf_static_assert(sizeof(unsigned int) * CHAR_BIT >= SL_INDEX_COUNT);SL_INDEX_COUNT302,8000
typedef struct block_header_t {block_header_t321,8660
    struct block_header_t * prev_phys_block;prev_phys_block323,8741
    size_t size;size326,8849
    struct block_header_t * next_free;next_free329,8908
    struct block_header_t * prev_free;prev_free330,8947
} block_header_t;block_header_t331,8986
static const size_t block_header_free_bit = 1 << 0;block_header_free_bit339,9250
static const size_t block_header_prev_free_bit = 1 << 1;block_header_prev_free_bit340,9302
static const size_t block_header_overhead = sizeof(size_t);block_header_overhead346,9513
static const size_t block_start_offset =block_start_offset349,9644
static const size_t block_size_min =block_size_min357,9917
static const size_t block_size_max = tlsf_cast(size_t, 1) << FL_INDEX_MAX;block_size_max359,10009
typedef struct control_t {control_t363,10120
    block_header_t block_null;block_null365,10216
    unsigned int fl_bitmap;fl_bitmap368,10282
    unsigned int sl_bitmap[FL_INDEX_COUNT];sl_bitmap369,10310
    block_header_t * blocks[FL_INDEX_COUNT][SL_INDEX_COUNT];blocks372,10385
} control_t;control_t373,10446
typedef ptrdiff_t tlsfptr_t;tlsfptr_t376,10521
static size_t block_size(const block_header_t * block)block_size382,10594
static void block_set_size(block_header_t * block, size_t size)block_set_size387,10734
static int block_is_last(const block_header_t * block)block_is_last393,10934
static int block_is_free(const block_header_t * block)block_is_free398,11029
static void block_set_free(block_header_t * block)block_set_free403,11153
static void block_set_used(block_header_t * block)block_set_used408,11251
static int block_is_prev_free(const block_header_t * block)block_is_prev_free413,11350
static void block_set_prev_free(block_header_t * block)block_set_prev_free418,11484
static void block_set_prev_used(block_header_t * block)block_set_prev_used423,11592
static block_header_t * block_from_ptr(const void * ptr)block_from_ptr428,11701
static void * block_to_ptr(const block_header_t * block)block_to_ptr434,11878
static block_header_t * offset_to_block(const void * ptr, size_t size)offset_to_block441,12110
static block_header_t * block_prev(const block_header_t * block)block_prev447,12301
static block_header_t * block_next(const block_header_t * block)block_next454,12529
static block_header_t * block_link_next(block_header_t * block)block_link_next463,12881
static void block_mark_as_free(block_header_t * block)block_mark_as_free470,13049
static void block_mark_as_used(block_header_t * block)block_mark_as_used478,13270
static size_t align_up(size_t x, size_t align)align_up485,13435
static size_t align_down(size_t x, size_t align)align_down491,13611
static void * align_ptr(const void * ptr, size_t align)align_ptr497,13778
static size_t adjust_request_size(size_t size, size_t align)adjust_request_size509,14157
static void mapping_insert(size_t size, int * fli, int * sli)mapping_insert528,14673
static void mapping_search(size_t size, int * fli, int * sli)mapping_search546,15215
static block_header_t * search_suitable_block(control_t * control, int * fli, int * sli)search_suitable_block555,15468
static void remove_free_block(control_t * control, block_header_t * block, int fl, int sl)remove_free_block586,16413
static void insert_free_block(control_t * control, block_header_t * block, int fl, int sl)insert_free_block612,17331
static void block_remove(control_t * control, block_header_t * block)block_remove633,18164
static void block_insert(control_t * control, block_header_t * block)block_insert641,18398
static int block_can_split(block_header_t * block, size_t size)block_can_split648,18585
static block_header_t * block_split(block_header_t * block, size_t size)block_split654,18776
static block_header_t * block_absorb(block_header_t * prev, block_header_t * block)block_absorb676,19653
static block_header_t * block_merge_prev(control_t * control, block_header_t * block)block_merge_prev686,20029
static block_header_t * block_merge_next(control_t * control, block_header_t * block)block_merge_next700,20530
static void block_trim_free(control_t * control, block_header_t * block, size_t size)block_trim_free715,21020
static void block_trim_used(control_t * control, block_header_t * block, size_t size)block_trim_used727,21495
static block_header_t * block_trim_free_leading(control_t * control, block_header_t * block, size_t size)block_trim_free_leading740,21988
static block_header_t * block_locate_free(control_t * control, size_t size)block_locate_free755,22449
static void * block_prepare_used(control_t * control, block_header_t * block, size_t size)block_prepare_used782,23310
static void control_constructor(control_t * control)control_constructor795,23696
typedef struct integrity_t {integrity_t815,24142
    int prev_status;prev_status816,24171
    int status;status817,24192
} integrity_t;integrity_t818,24208
#define tlsf_insist(tlsf_insist820,24224
static void integrity_walker(void * ptr, size_t size, int used, void * user)integrity_walker822,24292
int lv_tlsf_check(lv_tlsf_t tlsf)lv_tlsf_check839,24924
#undef tlsf_insisttlsf_insist886,26782
static void default_walker(void * ptr, size_t size, int used, void * user)default_walker888,26802
void lv_tlsf_walk_pool(lv_pool_t pool, lv_tlsf_walker walker, void * user)lv_tlsf_walk_pool894,27020
size_t lv_tlsf_block_size(void * ptr)lv_tlsf_block_size910,27481
int lv_tlsf_check_pool(lv_pool_t pool)lv_tlsf_check_pool920,27676
size_t lv_tlsf_size(void)lv_tlsf_size933,28014
size_t lv_tlsf_align_size(void)lv_tlsf_align_size938,28075
size_t lv_tlsf_block_size_min(void)lv_tlsf_block_size_min943,28135
size_t lv_tlsf_block_size_max(void)lv_tlsf_block_size_max948,28203
size_t lv_tlsf_pool_overhead(void)lv_tlsf_pool_overhead958,28432
size_t lv_tlsf_alloc_overhead(void)lv_tlsf_alloc_overhead963,28510
lv_pool_t lv_tlsf_add_pool(lv_tlsf_t tlsf, void * mem, size_t bytes)lv_tlsf_add_pool968,28585
void lv_tlsf_remove_pool(lv_tlsf_t tlsf, lv_pool_t pool)lv_tlsf_remove_pool1015,30215
int test_ffs_fls()test_ffs_fls1035,30820
lv_tlsf_t lv_tlsf_create(void * mem)lv_tlsf_create1061,31588
lv_tlsf_t lv_tlsf_create_with_pool(void * mem, size_t bytes)lv_tlsf_create_with_pool1080,31975
void lv_tlsf_destroy(lv_tlsf_t tlsf)lv_tlsf_destroy1087,32182
lv_pool_t lv_tlsf_get_pool(lv_tlsf_t tlsf)lv_tlsf_get_pool1093,32270
void * lv_tlsf_malloc(lv_tlsf_t tlsf, size_t size)lv_tlsf_malloc1098,32382
void * lv_tlsf_memalign(lv_tlsf_t tlsf, size_t align, size_t size)lv_tlsf_memalign1106,32679
void lv_tlsf_free(lv_tlsf_t tlsf, void * ptr)lv_tlsf_free1160,34911
void * lv_tlsf_realloc(lv_tlsf_t tlsf, void * ptr, size_t size)lv_tlsf_realloc1187,35980

lib/lvgl/src/misc/lv_txt_ap.c,986
    uint8_t char_offset;char_offset24,378
    uint16_t char_end_form;char_end_form25,403
    int8_t char_begining_form_offset;char_begining_form_offset26,431
    int8_t char_middle_form_offset;char_middle_form_offset27,469
    int8_t char_isolated_form_offset;char_isolated_form_offset28,505
        uint8_t conj_to_previous;conj_to_previous30,556
        uint8_t conj_to_next;conj_to_next31,590
    } ap_chars_conjunction;ap_chars_conjunction32,620
} ap_chars_map_t;ap_chars_map_t33,648
const ap_chars_map_t ap_chars_map[] = {ap_chars_map47,1014
uint32_t _lv_txt_ap_calc_bytes_cnt(const char * txt)_lv_txt_ap_calc_bytes_cnt109,3592
void _lv_txt_ap_proc(const char * txt, char * txt_out)_lv_txt_ap_proc143,4375
static uint32_t lv_ap_get_char_index(uint16_t c)lv_ap_get_char_index256,8466
static uint32_t lv_txt_lam_alef(uint32_t ch_curr, uint32_t ch_next)lv_txt_lam_alef271,9261
static bool lv_txt_is_arabic_vowel(uint16_t c)lv_txt_is_arabic_vowel296,9924

lib/lvgl/src/misc/lv_printf.h,384
#define _LV_PRINTF_H__LV_PRINTF_H_35,1722
#    define LV_PRId32 LV_PRId3241,1908
#    define LV_PRIu32 LV_PRIu3242,1937
#    define LV_PRId32 LV_PRId3244,1974
#    define LV_PRIu32 LV_PRIu3245,2000
#  define LV_PRId32 LV_PRId3249,2125
#  define LV_PRIu32 LV_PRIu3250,2149
  const char * fmt;fmt67,2364
  va_list * va;va68,2384
} lv_vaformat_t;lv_vaformat_t69,2400

lib/lvgl/src/misc/lv_color.c,886
LV_ATTRIBUTE_FAST_MEM void lv_color_fill(lv_color_t * buf, lv_color_t color, uint32_t px_num)lv_color_fill36,550
lv_color_t lv_color_lighten(lv_color_t c, lv_opa_t lvl)lv_color_lighten126,2137
lv_color_t lv_color_darken(lv_color_t c, lv_opa_t lvl)lv_color_darken131,2249
lv_color_t lv_color_change_lightness(lv_color_t c, lv_opa_t lvl)lv_color_change_lightness136,2360
lv_color_t lv_color_hsv_to_rgb(uint16_t h, uint8_t s, uint8_t v)lv_color_hsv_to_rgb151,2878
lv_color_hsv_t lv_color_rgb_to_hsv(uint8_t r8, uint8_t g8, uint8_t b8)lv_color_rgb_to_hsv216,4220
lv_color_hsv_t lv_color_to_hsv(lv_color_t color)lv_color_to_hsv267,5556
lv_color_t lv_palette_main(lv_palette_t p)lv_palette_main274,5760
lv_color_t lv_palette_lighten(lv_palette_t p, uint8_t lvl)lv_palette_lighten293,6665
lv_color_t lv_palette_darken(lv_palette_t p, uint8_t lvl)lv_palette_darken332,10395

lib/lvgl/src/misc/lv_gc.h,621
#define LV_GC_HLV_GC_H7,45
#    define LV_IMG_CACHE_DEF LV_IMG_CACHE_DEF30,492
#    define LV_IMG_CACHE_DEF LV_IMG_CACHE_DEF32,540
#define LV_DISPATCH(LV_DISPATCH35,590
#define LV_DISPATCH_COND(LV_DISPATCH_COND36,638
#define LV_DISPATCH00(LV_DISPATCH0038,718
#define LV_DISPATCH01(LV_DISPATCH0139,779
#define LV_DISPATCH10(LV_DISPATCH1040,810
#define LV_DISPATCH11(LV_DISPATCH1141,841
#define LV_ITERATE_ROOTS(LV_ITERATE_ROOTS43,903
#define LV_DEFINE_ROOT(LV_DEFINE_ROOT62,2773
#define LV_ROOTS LV_ROOTS63,2839
#define LV_GC_ROOT(LV_GC_ROOT71,3039
#define LV_EXTERN_ROOT(LV_EXTERN_ROOT72,3063

lib/lvgl/src/misc/lv_txt.h,1442
#define LV_TXT_HLV_TXT_H7,48
#define LV_TXT_COLOR_CMD LV_TXT_COLOR_CMD29,429
#define LV_TXT_ENC_UTF8 LV_TXT_ENC_UTF832,466
#define LV_TXT_ENC_ASCII LV_TXT_ENC_ASCII33,492
    LV_TEXT_FLAG_NONE    = 0x00,LV_TEXT_FLAG_NONE43,633
    LV_TEXT_FLAG_RECOLOR = 0x01, /**< Enable parsing of recolor command*/LV_TEXT_FLAG_RECOLOR44,666
    LV_TEXT_FLAG_EXPAND  = 0x02, /**< Ignore max-width to avoid automatic word wrapping*/LV_TEXT_FLAG_EXPAND45,740
    LV_TEXT_FLAG_FIT     = 0x04, /**< Max-width is already equal to the longest line. (Used to skip some calculation)*/LV_TEXT_FLAG_FIT46,830
typedef uint8_t lv_text_flag_t;lv_text_flag_t48,953
    LV_TEXT_CMD_STATE_WAIT, /**< Waiting for command*/LV_TEXT_CMD_STATE_WAIT53,1035
    LV_TEXT_CMD_STATE_PAR,  /**< Processing the parameter*/LV_TEXT_CMD_STATE_PAR54,1090
    LV_TEXT_CMD_STATE_IN,   /**< Processing the command*/LV_TEXT_CMD_STATE_IN55,1150
typedef uint8_t lv_text_cmd_state_t;lv_text_cmd_state_t57,1211
    LV_TEXT_ALIGN_AUTO, /**< Align text auto*/LV_TEXT_ALIGN_AUTO61,1281
    LV_TEXT_ALIGN_LEFT, /**< Align text to left*/LV_TEXT_ALIGN_LEFT62,1328
    LV_TEXT_ALIGN_CENTER, /**< Align text to center*/LV_TEXT_ALIGN_CENTER63,1378
    LV_TEXT_ALIGN_RIGHT, /**< Align text to right*/LV_TEXT_ALIGN_RIGHT64,1432
typedef uint8_t lv_text_align_t;lv_text_align_t66,1487
static inline bool _lv_txt_is_break_char(uint32_t letter)_lv_txt_is_break_char163,5565

lib/lvgl/src/misc/lv_mem.h,1322
#define LV_MEM_HLV_MEM_H7,47
    uint32_t total_size; /**< Total heap size*/total_size36,474
    uint32_t free_cnt;free_cnt37,522
    uint32_t free_size; /**< Size of available memory*/free_size38,545
    uint32_t free_biggest_size;free_biggest_size39,601
    uint32_t used_cnt;used_cnt40,633
    uint32_t max_used; /**< Max size of Heap memory used*/max_used41,656
    uint8_t used_pct; /**< Percentage used*/used_pct42,715
    uint8_t frag_pct; /**< Amount of fragmentation*/frag_pct43,760
} lv_mem_monitor_t;lv_mem_monitor_t44,813
    void * p;p47,851
    uint16_t size;size48,865
    uint8_t used : 1;used49,884
} lv_mem_buf_t;lv_mem_buf_t50,906
typedef lv_mem_buf_t lv_mem_buf_arr_t[LV_MEM_BUF_MAX_NUM];lv_mem_buf_arr_t52,923
static inline void * lv_memcpy(void * dst, const void * src, size_t len)lv_memcpy132,2732
static inline void * lv_memcpy_small(void * dst, const void * src, size_t len)lv_memcpy_small143,3015
static inline void lv_memset(void * dst, uint8_t v, size_t len)lv_memset154,3294
static inline void lv_memset_00(void * dst, size_t len)lv_memset_00164,3537
static inline void lv_memset_ff(void * dst, size_t len)lv_memset_ff174,3775
LV_ATTRIBUTE_FAST_MEM static inline void * lv_memcpy_small(void * dst, const void * src, size_t len)lv_memcpy_small194,4341

lib/lvgl/src/misc/lv_misc.mk,0

lib/lvgl/src/misc/lv_utils.c,115
void * _lv_utils_bsearch(const void * key, const void * base, uint32_t n, uint32_t size,_lv_utils_bsearch54,1220

lib/lvgl/src/misc/lv_gc.c,100
void _lv_gc_clear_roots(void)_lv_gc_clear_roots39,611
#define LV_CLEAR_ROOT(LV_CLEAR_ROOT41,643

lib/lvgl/src/misc/lv_ll.h,309
#define LV_LL_HLV_LL_H7,126
typedef uint8_t lv_ll_node_t;lv_ll_node_t29,481
    uint32_t n_size;n_size33,564
    lv_ll_node_t * head;head34,585
    lv_ll_node_t * tail;tail35,610
} lv_ll_t;lv_ll_t36,635
#define _LV_LL_READ(_LV_LL_READ159,3902
#define _LV_LL_READ_BACK(_LV_LL_READ_BACK161,4004

lib/lvgl/src/misc/lv_async.h,95
#define LV_ASYNC_HLV_ASYNC_H7,51
typedef void (*lv_async_cb_t)(void *);lv_async_cb_t30,366

lib/lvgl/src/misc/lv_fs.h,3240
#define LV_FS_HLV_FS_H7,45
#define LV_FS_MAX_FN_LENGTH LV_FS_MAX_FN_LENGTH24,305
#define LV_FS_MAX_PATH_LENGTH LV_FS_MAX_PATH_LENGTH25,336
    LV_FS_RES_OK = 0,LV_FS_RES_OK35,490
    LV_FS_RES_HW_ERR,     /*Low level hardware error*/LV_FS_RES_HW_ERR36,512
    LV_FS_RES_FS_ERR,     /*Error in the file system structure*/LV_FS_RES_FS_ERR37,567
    LV_FS_RES_NOT_EX,     /*Driver, file or directory is not exists*/LV_FS_RES_NOT_EX38,632
    LV_FS_RES_FULL,       /*Disk full*/LV_FS_RES_FULL39,702
    LV_FS_RES_LOCKED,     /*The file is already opened*/LV_FS_RES_LOCKED40,742
    LV_FS_RES_DENIED,     /*Access denied. Check 'fs_open' modes and write protect*/LV_FS_RES_DENIED41,799
    LV_FS_RES_BUSY,       /*The file system now can't handle it, try later*/LV_FS_RES_BUSY42,884
    LV_FS_RES_TOUT,       /*Process time outed*/LV_FS_RES_TOUT43,961
    LV_FS_RES_NOT_IMP,    /*Requested function is not implemented*/LV_FS_RES_NOT_IMP44,1010
    LV_FS_RES_OUT_OF_MEM, /*Not enough memory for an internal operation*/LV_FS_RES_OUT_OF_MEM45,1078
    LV_FS_RES_INV_PARAM,  /*Invalid parameter among arguments*/LV_FS_RES_INV_PARAM46,1152
    LV_FS_RES_UNKNOWN,    /*Other unknown error*/LV_FS_RES_UNKNOWN47,1216
typedef uint8_t lv_fs_res_t;lv_fs_res_t49,1269
    LV_FS_MODE_WR = 0x01,LV_FS_MODE_WR55,1333
    LV_FS_MODE_RD = 0x02,LV_FS_MODE_RD56,1359
typedef uint8_t lv_fs_mode_t;lv_fs_mode_t58,1388
    LV_FS_SEEK_SET = 0x00,      /**< Set the position from absolutely (from the start of file)*/LV_FS_SEEK_SET65,1458
    LV_FS_SEEK_CUR = 0x01,      /**< Set the position from the current position*/LV_FS_SEEK_CUR66,1555
    LV_FS_SEEK_END = 0x02,      /**< Set the position from the end of the file*/LV_FS_SEEK_END67,1637
} lv_fs_whence_t;lv_fs_whence_t68,1718
typedef struct _lv_fs_drv_t {_lv_fs_drv_t70,1737
    char letter;letter71,1767
    bool (*ready_cb)(struct _lv_fs_drv_t * drv);ready_cb72,1784
    void * (*open_cb)(struct _lv_fs_drv_t * drv, const char * path, lv_fs_mode_t mode);open_cb74,1834
    lv_fs_res_t (*close_cb)(struct _lv_fs_drv_t * drv, void * file_p);close_cb75,1922
    lv_fs_res_t (*read_cb)(struct _lv_fs_drv_t * drv, void * file_p, void * buf, uint32_t btr, uint32_t * br);read_cb76,1993
    lv_fs_res_t (*write_cb)(struct _lv_fs_drv_t * drv, void * file_p, const void * buf, uint32_t btw, uint32_t * bw);write_cb77,2104
    lv_fs_res_t (*seek_cb)(struct _lv_fs_drv_t * drv, void * file_p, uint32_t pos, lv_fs_whence_t whence);seek_cb78,2222
    lv_fs_res_t (*tell_cb)(struct _lv_fs_drv_t * drv, void * file_p, uint32_t * pos_p);tell_cb79,2329
    void * (*dir_open_cb)(struct _lv_fs_drv_t * drv, const char * path);dir_open_cb81,2418
    lv_fs_res_t (*dir_read_cb)(struct _lv_fs_drv_t * drv, void * rddir_p, char * fn);dir_read_cb82,2491
    lv_fs_res_t (*dir_close_cb)(struct _lv_fs_drv_t * drv, void * rddir_p);dir_close_cb83,2577
    void * user_data; /**< Custom file user data*/user_data86,2675
} lv_fs_drv_t;lv_fs_drv_t88,2733
    void * file_d;file_d91,2766
    lv_fs_drv_t * drv;drv92,2785
} lv_fs_file_t;lv_fs_file_t93,2808
    void * dir_d;dir_d96,2842
    lv_fs_drv_t * drv;drv97,2860
} lv_fs_dir_t;lv_fs_dir_t98,2883

lib/lvgl/src/misc/lv_txt.c,4925
#define NO_BREAK_FOUND NO_BREAK_FOUND20,306
    uint8_t (*_lv_txt_encoded_size)(const char *)                   = lv_txt_utf8_size;_lv_txt_encoded_size57,1859
    uint32_t (*_lv_txt_unicode_to_encoded)(uint32_t)                = lv_txt_unicode_to_utf8;_lv_txt_unicode_to_encoded58,1947
    uint32_t (*_lv_txt_encoded_conv_wc)(uint32_t)                   = lv_txt_utf8_conv_wc;_lv_txt_encoded_conv_wc59,2041
    uint32_t (*_lv_txt_encoded_next)(const char *, uint32_t *)      = lv_txt_utf8_next;_lv_txt_encoded_next60,2132
    uint32_t (*_lv_txt_encoded_prev)(const char *, uint32_t *)      = lv_txt_utf8_prev;_lv_txt_encoded_prev61,2220
    uint32_t (*_lv_txt_encoded_get_byte_id)(const char *, uint32_t) = lv_txt_utf8_get_byte_id;_lv_txt_encoded_get_byte_id62,2308
    uint32_t (*_lv_txt_encoded_get_char_id)(const char *, uint32_t) = lv_txt_utf8_get_char_id;_lv_txt_encoded_get_char_id63,2403
    uint32_t (*_lv_txt_get_encoded_length)(const char *)            = lv_txt_utf8_get_length;_lv_txt_get_encoded_length64,2498
    uint8_t (*_lv_txt_encoded_size)(const char *)                   = lv_txt_iso8859_1_size;_lv_txt_encoded_size66,2629
    uint32_t (*_lv_txt_unicode_to_encoded)(uint32_t)                = lv_txt_unicode_to_iso8859_1;_lv_txt_unicode_to_encoded67,2722
    uint32_t (*_lv_txt_encoded_conv_wc)(uint32_t)                   = lv_txt_iso8859_1_conv_wc;_lv_txt_encoded_conv_wc68,2821
    uint32_t (*_lv_txt_encoded_next)(const char *, uint32_t *)      = lv_txt_iso8859_1_next;_lv_txt_encoded_next69,2917
    uint32_t (*_lv_txt_encoded_prev)(const char *, uint32_t *)      = lv_txt_iso8859_1_prev;_lv_txt_encoded_prev70,3010
    uint32_t (*_lv_txt_encoded_get_byte_id)(const char *, uint32_t) = lv_txt_iso8859_1_get_byte_id;_lv_txt_encoded_get_byte_id71,3103
    uint32_t (*_lv_txt_encoded_get_char_id)(const char *, uint32_t)     = lv_txt_iso8859_1_get_char_id;_lv_txt_encoded_get_char_id72,3203
    uint32_t (*_lv_txt_get_encoded_length)(const char *)            = lv_txt_iso8859_1_get_length;_lv_txt_get_encoded_length73,3307
#define LV_IS_ASCII(LV_IS_ASCII81,3480
#define LV_IS_2BYTES_UTF8_CODE(LV_IS_2BYTES_UTF8_CODE82,3547
#define LV_IS_3BYTES_UTF8_CODE(LV_IS_3BYTES_UTF8_CODE83,3614
#define LV_IS_4BYTES_UTF8_CODE(LV_IS_4BYTES_UTF8_CODE84,3681
#define LV_IS_INVALID_UTF8_CODE(LV_IS_INVALID_UTF8_CODE85,3748
void lv_txt_get_size(lv_point_t * size_res, const char * text, const lv_font_t * font, lv_coord_t letter_space,lv_txt_get_size91,3888
static uint32_t lv_txt_get_next_word(const char * txt, const lv_font_t * font,lv_txt_get_next_word170,7089
uint32_t _lv_txt_get_next_line(const char * txt, const lv_font_t * font,_lv_txt_get_next_line278,11150
lv_coord_t lv_txt_get_width(const char * txt, uint32_t length, const lv_font_t * font, lv_coord_t letter_space,lv_txt_get_width329,12809
bool _lv_txt_is_cmd(lv_text_cmd_state_t * state, uint32_t c)_lv_txt_is_cmd368,14004
void _lv_txt_ins(char * txt_buf, uint32_t pos, const char * ins_txt)_lv_txt_ins399,14886
void _lv_txt_cut(char * txt, uint32_t pos, uint32_t len)_lv_txt_cut420,15556
char * _lv_txt_set_text_vfmt(const char * fmt, va_list ap)_lv_txt_set_text_vfmt436,16008
void _lv_txt_encoded_letter_next_2(const char * txt, uint32_t * letter, uint32_t * letter_next, uint32_t * ofs)_lv_txt_encoded_letter_next_2479,17108
static uint8_t lv_txt_utf8_size(const char * str)lv_txt_utf8_size495,17656
static uint32_t lv_txt_unicode_to_utf8(uint32_t letter_uni)lv_txt_unicode_to_utf8513,18141
static uint32_t lv_txt_utf8_conv_wc(uint32_t c)lv_txt_utf8_conv_wc546,19181
static uint32_t lv_txt_utf8_next(const char * txt, uint32_t * i)lv_txt_utf8_next574,20107
static uint32_t lv_txt_utf8_prev(const char * txt, uint32_t * i)lv_txt_utf8_prev649,22403
static uint32_t lv_txt_utf8_get_byte_id(const char * txt, uint32_t utf8_id)lv_txt_utf8_get_byte_id682,23323
static uint32_t lv_txt_utf8_get_char_id(const char * txt, uint32_t byte_id)lv_txt_utf8_get_char_id702,24001
static uint32_t lv_txt_utf8_get_length(const char * txt)lv_txt_utf8_get_length721,24530
static uint8_t lv_txt_iso8859_1_size(const char * str)lv_txt_iso8859_1_size744,25050
static uint32_t lv_txt_unicode_to_iso8859_1(uint32_t letter_uni)lv_txt_unicode_to_iso8859_1755,25347
static uint32_t lv_txt_iso8859_1_conv_wc(uint32_t c)lv_txt_iso8859_1_conv_wc769,25739
static uint32_t lv_txt_iso8859_1_next(const char * txt, uint32_t * i)lv_txt_iso8859_1_next782,26147
static uint32_t lv_txt_iso8859_1_prev(const char * txt, uint32_t * i)lv_txt_iso8859_1_prev797,26634
static uint32_t lv_txt_iso8859_1_get_byte_id(const char * txt, uint32_t utf8_id)lv_txt_iso8859_1_get_byte_id814,27127
static uint32_t lv_txt_iso8859_1_get_char_id(const char * txt, uint32_t byte_id)lv_txt_iso8859_1_get_char_id827,27604
static uint32_t lv_txt_iso8859_1_get_length(const char * txt)lv_txt_iso8859_1_get_length839,27998

lib/lvgl/lv_conf_template.h,0

lib/lvgl/component.mk,134
COMPONENT_SRCDIRS := . \COMPONENT_SRCDIRS3,50
COMPONENT_ADD_INCLUDEDIRS := $(COMPONENT_SRCDIRS) .COMPONENT_ADD_INCLUDEDIRS34,1165

lib/TFT_eSPI/TFT_Drivers/ILI9163_Rotation.h,45
  writecommand(TFT_MADCTL);TFT_MADCTL6,104

lib/TFT_eSPI/TFT_Drivers/ST7789_2_Defines.h,4687
  #define TFT_WIDTH TFT_WIDTH4,136
  #define TFT_HEIGHT TFT_HEIGHT7,187
  #define CGRAM_OFFSETCGRAM_OFFSET11,266
#define TFT_INIT_DELAY TFT_INIT_DELAY15,343
#define TFT_NOP TFT_NOP19,453
#define TFT_SWRST TFT_SWRST20,478
#define TFT_SLPIN TFT_SLPIN22,504
#define TFT_SLPOUT TFT_SLPOUT23,529
#define TFT_NORON TFT_NORON24,554
#define TFT_INVOFF TFT_INVOFF26,580
#define TFT_INVON TFT_INVON27,605
#define TFT_DISPOFF TFT_DISPOFF28,630
#define TFT_DISPON TFT_DISPON29,655
#define TFT_CASET TFT_CASET30,680
#define TFT_PASET TFT_PASET31,705
#define TFT_RAMWR TFT_RAMWR32,730
#define TFT_RAMRD TFT_RAMRD33,755
#define TFT_MADCTL TFT_MADCTL34,780
#define TFT_COLMOD TFT_COLMOD35,805
#define TFT_MAD_MY TFT_MAD_MY38,855
#define TFT_MAD_MX TFT_MAD_MX39,880
#define TFT_MAD_MV TFT_MAD_MV40,905
#define TFT_MAD_ML TFT_MAD_ML41,930
#define TFT_MAD_RGB TFT_MAD_RGB42,955
#define TFT_MAD_BGR TFT_MAD_BGR43,980
#define TFT_MAD_MH TFT_MAD_MH44,1005
#define TFT_MAD_SS TFT_MAD_SS45,1030
#define TFT_MAD_GS TFT_MAD_GS46,1055
    #define TFT_MAD_COLOR_ORDER TFT_MAD_COLOR_ORDER50,1129
    #define TFT_MAD_COLOR_ORDER TFT_MAD_COLOR_ORDER52,1181
    #define TFT_MAD_COLOR_ORDER TFT_MAD_COLOR_ORDER56,1262
    #define TFT_MAD_COLOR_ORDER TFT_MAD_COLOR_ORDER58,1314
#define TFT_IDXRD TFT_IDXRD62,1375
#define ST_CMD_DELAY ST_CMD_DELAY64,1448
#define ST7789_240x240_XSTART ST7789_240x240_XSTART65,1518
#define ST7789_240x240_YSTART ST7789_240x240_YSTART66,1550
#define ST7789_NOP	ST7789_NOP69,1624
#define ST7789_SWRESET	ST7789_SWRESET70,1650
#define ST7789_RDDID	ST7789_RDDID71,1679
#define ST7789_RDDST	ST7789_RDDST72,1706
#define ST7789_RDDPM	ST7789_RDDPM74,1734
#define ST7789_RDD_MADCTL	ST7789_RDD_MADCTL75,1793
#define ST7789_RDD_COLMOD	ST7789_RDD_COLMOD76,1852
#define ST7789_RDDIM	ST7789_RDDIM77,1917
#define ST7789_RDDSM	ST7789_RDDSM78,1976
#define ST7789_RDDSR	ST7789_RDDSR79,2036
#define ST7789_SLPIN	ST7789_SLPIN81,2118
#define ST7789_SLPOUT	ST7789_SLPOUT82,2145
#define ST7789_PTLON	ST7789_PTLON83,2173
#define ST7789_NORON	ST7789_NORON84,2200
#define ST7789_INVOFF	ST7789_INVOFF86,2228
#define ST7789_INVON	ST7789_INVON87,2256
#define ST7789_GAMSET	ST7789_GAMSET88,2283
#define ST7789_DISPOFF	ST7789_DISPOFF89,2329
#define ST7789_DISPON	ST7789_DISPON90,2358
#define ST7789_CASET	ST7789_CASET91,2386
#define ST7789_RASET	ST7789_RASET92,2413
#define ST7789_RAMWR	ST7789_RAMWR93,2440
#define ST7789_RGBSET	ST7789_RGBSET94,2467
#define ST7789_RAMRD	ST7789_RAMRD95,2547
#define ST7789_PTLAR	ST7789_PTLAR97,2575
#define ST7789_VSCRDEF	ST7789_VSCRDEF98,2602
#define ST7789_TEOFF	ST7789_TEOFF99,2679
#define ST7789_TEON	ST7789_TEON100,2738
#define ST7789_MADCTL	ST7789_MADCTL101,2796
#define ST7789_IDMOFF	ST7789_IDMOFF102,2859
#define ST7789_IDMON	ST7789_IDMON103,2909
#define ST7789_RAMWRC	ST7789_RAMWRC104,2957
#define ST7789_RAMRDC	ST7789_RAMRDC105,3025
#define ST7789_COLMOD	ST7789_COLMOD106,3092
#define ST7789_RAMCTRL	ST7789_RAMCTRL108,3121
#define ST7789_RGBCTRL	ST7789_RGBCTRL109,3170
#define ST7789_PORCTRL	ST7789_PORCTRL110,3219
#define ST7789_FRCTRL1	ST7789_FRCTRL1111,3270
#define ST7789_PARCTRL	ST7789_PARCTRL112,3326
#define ST7789_GCTRL	ST7789_GCTRL113,3384
#define ST7789_GTADJ	ST7789_GTADJ114,3432
#define ST7789_DGMEN	ST7789_DGMEN115,3493
#define ST7789_VCOMS	ST7789_VCOMS116,3549
#define ST7789_LCMCTRL	ST7789_LCMCTRL117,3598
#define ST7789_IDSET	ST7789_IDSET118,3647
#define ST7789_VDVVRHEN	ST7789_VDVVRHEN119,3693
#define ST7789_VRHS	ST7789_VRHS120,3758
#define ST7789_VDVSET	ST7789_VDVSET121,3801
#define ST7789_VCMOFSET	ST7789_VCMOFSET122,3849
#define ST7789_FRCTR2	ST7789_FRCTR2123,3904
#define ST7789_CABCCTRL	ST7789_CABCCTRL124,3953
#define ST7789_REGSEL1	ST7789_REGSEL1125,4004
#define ST7789_REGSEL2	ST7789_REGSEL2126,4066
#define ST7789_PWMFRSEL	ST7789_PWMFRSEL127,4128
#define ST7789_PWCTRL1	ST7789_PWCTRL1128,4190
#define ST7789_VAPVANEN	ST7789_VAPVANEN129,4243
#define ST7789_CMD2EN	ST7789_CMD2EN130,4310
#define ST7789_PVGAMCTRL	ST7789_PVGAMCTRL131,4363
#define ST7789_NVGAMCTRL	ST7789_NVGAMCTRL132,4432
#define ST7789_DGMLUTR	ST7789_DGMLUTR133,4501
#define ST7789_DGMLUTB	ST7789_DGMLUTB134,4574
#define ST7789_GATECTRL	ST7789_GATECTRL135,4648
#define ST7789_SPI2EN	ST7789_SPI2EN136,4699
#define ST7789_PWCTRL2	ST7789_PWCTRL2137,4747
#define ST7789_EQCTRL	ST7789_EQCTRL138,4800
#define ST7789_PROMCTRL	ST7789_PROMCTRL139,4858
#define ST7789_PROMEN	ST7789_PROMEN140,4912
#define ST7789_NVMSET	ST7789_NVMSET141,4968
#define ST7789_PROMACT	ST7789_PROMACT142,5016

lib/TFT_eSPI/TFT_Drivers/RM68140_Rotation.h,44
  writecommand(TFT_MADCTL);TFT_MADCTL4,85

lib/TFT_eSPI/TFT_Drivers/ILI9225_Defines.h,3305
#define TFT_WIDTH TFT_WIDTH3,118
#define TFT_HEIGHT TFT_HEIGHT4,141
#define TFT_NOP TFT_NOP7,206
#define TFT_SWRST TFT_SWRST8,231
#define TFT_CASET TFT_CASET10,257
#define TFT_PASET TFT_PASET11,277
#define TFT_CASET1 TFT_CASET113,298
#define TFT_CASET2 TFT_CASET214,353
#define TFT_PASET1 TFT_PASET116,409
#define TFT_PASET2 TFT_PASET217,462
#define TFT_RAM_ADDR1 TFT_RAM_ADDR119,516
#define TFT_RAM_ADDR2 TFT_RAM_ADDR220,561
#define TFT_RAMWR TFT_RAMWR22,607
#define TFT_MAD_BGR TFT_MAD_BGR24,653
#define TFT_MAD_RGB TFT_MAD_RGB25,678
    #define TFT_MAD_COLOR_ORDER TFT_MAD_COLOR_ORDER29,752
    #define TFT_MAD_COLOR_ORDER TFT_MAD_COLOR_ORDER31,804
  #define TFT_MAD_COLOR_ORDER TFT_MAD_COLOR_ORDER34,863
#define TFT_INVOFF TFT_INVOFF38,925
#define TFT_INVON TFT_INVON39,950
#define TFT_RAMRD TFT_RAMRD40,975
#define TFT_IDXRD TFT_IDXRD41,1000
#define ILI9225_DRIVER_OUTPUT_CTRL ILI9225_DRIVER_OUTPUT_CTRL44,1050
#define ILI9225_LCD_AC_DRIVING_CTRL ILI9225_LCD_AC_DRIVING_CTRL45,1121
#define ILI9225_ENTRY_MODE ILI9225_ENTRY_MODE46,1193
#define ILI9225_DISP_CTRL1 ILI9225_DISP_CTRL147,1253
#define ILI9225_BLANK_PERIOD_CTRL1 ILI9225_BLANK_PERIOD_CTRL148,1320
#define ILI9225_FRAME_CYCLE_CTRL ILI9225_FRAME_CYCLE_CTRL49,1390
#define ILI9225_INTERFACE_CTRL ILI9225_INTERFACE_CTRL50,1459
#define ILI9225_OSC_CTRL ILI9225_OSC_CTRL51,1526
#define ILI9225_POWER_CTRL1 ILI9225_POWER_CTRL152,1587
#define ILI9225_POWER_CTRL2 ILI9225_POWER_CTRL253,1652
#define ILI9225_POWER_CTRL3 ILI9225_POWER_CTRL354,1717
#define ILI9225_POWER_CTRL4 ILI9225_POWER_CTRL455,1782
#define ILI9225_POWER_CTRL5 ILI9225_POWER_CTRL556,1847
#define ILI9225_VCI_RECYCLING ILI9225_VCI_RECYCLING57,1912
#define ILI9225_RAM_ADDR_SET1 ILI9225_RAM_ADDR_SET158,1975
#define ILI9225_RAM_ADDR_SET2 ILI9225_RAM_ADDR_SET259,2052
#define ILI9225_GRAM_DATA_REG ILI9225_GRAM_DATA_REG60,2127
#define ILI9225_GATE_SCAN_CTRL ILI9225_GATE_SCAN_CTRL61,2195
#define ILI9225_VERTICAL_SCROLL_CTRL1 ILI9225_VERTICAL_SCROLL_CTRL162,2271
#define ILI9225_VERTICAL_SCROLL_CTRL2 ILI9225_VERTICAL_SCROLL_CTRL263,2355
#define ILI9225_VERTICAL_SCROLL_CTRL3 ILI9225_VERTICAL_SCROLL_CTRL364,2439
#define ILI9225_PARTIAL_DRIVING_POS1 ILI9225_PARTIAL_DRIVING_POS165,2523
#define ILI9225_PARTIAL_DRIVING_POS2 ILI9225_PARTIAL_DRIVING_POS266,2608
#define ILI9225_HORIZONTAL_WINDOW_ADDR1 ILI9225_HORIZONTAL_WINDOW_ADDR167,2693
#define ILI9225_HORIZONTAL_WINDOW_ADDR2 ILI9225_HORIZONTAL_WINDOW_ADDR268,2776
#define ILI9225_VERTICAL_WINDOW_ADDR1 ILI9225_VERTICAL_WINDOW_ADDR169,2857
#define ILI9225_VERTICAL_WINDOW_ADDR2 ILI9225_VERTICAL_WINDOW_ADDR270,2938
#define ILI9225_GAMMA_CTRL1 ILI9225_GAMMA_CTRL171,3017
#define ILI9225_GAMMA_CTRL2 ILI9225_GAMMA_CTRL272,3082
#define ILI9225_GAMMA_CTRL3 ILI9225_GAMMA_CTRL373,3147
#define ILI9225_GAMMA_CTRL4 ILI9225_GAMMA_CTRL474,3212
#define ILI9225_GAMMA_CTRL5 ILI9225_GAMMA_CTRL575,3277
#define ILI9225_GAMMA_CTRL6 ILI9225_GAMMA_CTRL676,3342
#define ILI9225_GAMMA_CTRL7 ILI9225_GAMMA_CTRL777,3407
#define ILI9225_GAMMA_CTRL8 ILI9225_GAMMA_CTRL878,3472
#define ILI9225_GAMMA_CTRL9 ILI9225_GAMMA_CTRL979,3537
#define ILI9225_GAMMA_CTRL10 ILI9225_GAMMA_CTRL1080,3602
#define TFT_INIT_DELAY TFT_INIT_DELAY83,3715

lib/TFT_eSPI/TFT_Drivers/HX8357D_Rotation.h,44
  writecommand(TFT_MADCTL);TFT_MADCTL3,84

lib/TFT_eSPI/TFT_Drivers/ILI9481_Init.h,1818
#define ILI9481_INIT_1 ILI9481_INIT_18,218
    writecommand(TFT_SLPOUT);TFT_SLPOUT19,579
    writecommand(TFT_MADCTL);TFT_MADCTL60,1321
      writecommand(TFT_INVON);TFT_INVON71,1641
    writecommand(TFT_CASET);TFT_CASET74,1684
    writecommand(TFT_PASET);TFT_PASET80,1798
    writecommand(TFT_DISPON);TFT_DISPON87,1928
    writecommand(TFT_SLPOUT);TFT_SLPOUT95,2165
    writecommand(TFT_MADCTL);TFT_MADCTL149,3116
      writecommand(TFT_INVON);TFT_INVON160,3436
    writecommand(TFT_CASET);TFT_CASET163,3479
    writecommand(TFT_PASET);TFT_PASET169,3593
    writecommand(TFT_DISPON);TFT_DISPON176,3723
    writecommand(TFT_SLPOUT);TFT_SLPOUT184,3960
    writecommand(TFT_MADCTL);TFT_MADCTL238,4911
      writecommand(TFT_INVON);TFT_INVON249,5231
    writecommand(TFT_CASET);TFT_CASET252,5274
    writecommand(TFT_PASET);TFT_PASET258,5388
    writecommand(TFT_DISPON);TFT_DISPON265,5518
    writecommand(TFT_SLPOUT);TFT_SLPOUT273,5755
    writecommand(TFT_MADCTL);TFT_MADCTL323,6639
      writecommand(TFT_INVON);TFT_INVON334,6959
    writecommand(TFT_CASET);TFT_CASET337,7002
    writecommand(TFT_PASET);TFT_PASET343,7116
    writecommand(TFT_DISPON);TFT_DISPON350,7246
    writecommand(TFT_SLPOUT);TFT_SLPOUT358,7483
    writecommand(TFT_MADCTL);TFT_MADCTL411,8413
      writecommand(TFT_INVON);TFT_INVON422,8733
    writecommand(TFT_CASET);TFT_CASET425,8776
    writecommand(TFT_PASET);TFT_PASET431,8890
    writecommand(TFT_DISPON);TFT_DISPON438,9020
    writecommand(TFT_SLPOUT);TFT_SLPOUT446,9257
    writecommand(TFT_MADCTL);TFT_MADCTL523,10589
      writecommand(TFT_INVON);TFT_INVON534,10909
    writecommand(TFT_CASET);TFT_CASET537,10952
    writecommand(TFT_PASET);TFT_PASET543,11066
    writecommand(TFT_DISPON);TFT_DISPON550,11196

lib/TFT_eSPI/TFT_Drivers/ILI9488_Defines.h,975
#define TFT_WIDTH TFT_WIDTH3,118
#define TFT_HEIGHT TFT_HEIGHT4,141
#define TFT_INIT_DELAY TFT_INIT_DELAY8,212
#define TFT_NOP TFT_NOP12,322
#define TFT_SWRST TFT_SWRST13,347
#define TFT_SLPIN TFT_SLPIN15,373
#define TFT_SLPOUT TFT_SLPOUT16,398
#define TFT_INVOFF TFT_INVOFF18,424
#define TFT_INVON TFT_INVON19,449
#define TFT_DISPOFF TFT_DISPOFF21,475
#define TFT_DISPON TFT_DISPON22,500
#define TFT_CASET TFT_CASET24,526
#define TFT_PASET TFT_PASET25,551
#define TFT_RAMWR TFT_RAMWR26,576
#define TFT_RAMRD TFT_RAMRD28,602
#define TFT_MADCTL TFT_MADCTL30,628
#define TFT_MAD_MY TFT_MAD_MY32,654
#define TFT_MAD_MX TFT_MAD_MX33,679
#define TFT_MAD_MV TFT_MAD_MV34,704
#define TFT_MAD_ML TFT_MAD_ML35,729
#define TFT_MAD_RGB TFT_MAD_RGB36,754
#define TFT_MAD_BGR TFT_MAD_BGR37,779
#define TFT_MAD_MH TFT_MAD_MH38,804
#define TFT_MAD_SS TFT_MAD_SS39,829
#define TFT_MAD_GS TFT_MAD_GS40,854
#define TFT_IDXRD TFT_IDXRD42,880

lib/TFT_eSPI/TFT_Drivers/ILI9481_Rotation.h,44
  writecommand(TFT_MADCTL);TFT_MADCTL3,84

lib/TFT_eSPI/TFT_Drivers/ILI9488_Rotation.h,44
  writecommand(TFT_MADCTL);TFT_MADCTL3,84

lib/TFT_eSPI/TFT_Drivers/GC9A01_Rotation.h,45
  writecommand(TFT_MADCTL);TFT_MADCTL6,103

lib/TFT_eSPI/TFT_Drivers/ST7789_Defines.h,4518
  #define TFT_WIDTH TFT_WIDTH4,136
  #define TFT_HEIGHT TFT_HEIGHT7,187
  #define CGRAM_OFFSETCGRAM_OFFSET11,266
#define TFT_INIT_DELAY TFT_INIT_DELAY15,343
#define TFT_NOP TFT_NOP19,453
#define TFT_SWRST TFT_SWRST20,478
#define TFT_SLPIN TFT_SLPIN22,504
#define TFT_SLPOUT TFT_SLPOUT23,529
#define TFT_NORON TFT_NORON24,554
#define TFT_INVOFF TFT_INVOFF26,580
#define TFT_INVON TFT_INVON27,605
#define TFT_DISPOFF TFT_DISPOFF28,630
#define TFT_DISPON TFT_DISPON29,655
#define TFT_CASET TFT_CASET30,680
#define TFT_PASET TFT_PASET31,705
#define TFT_RAMWR TFT_RAMWR32,730
#define TFT_RAMRD TFT_RAMRD33,755
#define TFT_MADCTL TFT_MADCTL34,780
#define TFT_COLMOD TFT_COLMOD35,805
#define TFT_MAD_MY TFT_MAD_MY38,855
#define TFT_MAD_MX TFT_MAD_MX39,880
#define TFT_MAD_MV TFT_MAD_MV40,905
#define TFT_MAD_ML TFT_MAD_ML41,930
#define TFT_MAD_RGB TFT_MAD_RGB42,955
#define TFT_MAD_BGR TFT_MAD_BGR43,980
#define TFT_MAD_MH TFT_MAD_MH44,1005
#define TFT_MAD_SS TFT_MAD_SS45,1030
#define TFT_MAD_GS TFT_MAD_GS46,1055
    #define TFT_MAD_COLOR_ORDER TFT_MAD_COLOR_ORDER50,1129
    #define TFT_MAD_COLOR_ORDER TFT_MAD_COLOR_ORDER52,1181
    #define TFT_MAD_COLOR_ORDER TFT_MAD_COLOR_ORDER56,1262
    #define TFT_MAD_COLOR_ORDER TFT_MAD_COLOR_ORDER58,1314
#define TFT_IDXRD TFT_IDXRD62,1375
#define ST7789_NOP	ST7789_NOP65,1489
#define ST7789_SWRESET	ST7789_SWRESET66,1515
#define ST7789_RDDID	ST7789_RDDID67,1544
#define ST7789_RDDST	ST7789_RDDST68,1571
#define ST7789_RDDPM	ST7789_RDDPM70,1599
#define ST7789_RDD_MADCTL	ST7789_RDD_MADCTL71,1658
#define ST7789_RDD_COLMOD	ST7789_RDD_COLMOD72,1717
#define ST7789_RDDIM	ST7789_RDDIM73,1782
#define ST7789_RDDSM	ST7789_RDDSM74,1841
#define ST7789_RDDSR	ST7789_RDDSR75,1901
#define ST7789_SLPIN	ST7789_SLPIN77,1983
#define ST7789_SLPOUT	ST7789_SLPOUT78,2010
#define ST7789_PTLON	ST7789_PTLON79,2038
#define ST7789_NORON	ST7789_NORON80,2065
#define ST7789_INVOFF	ST7789_INVOFF82,2093
#define ST7789_INVON	ST7789_INVON83,2121
#define ST7789_GAMSET	ST7789_GAMSET84,2148
#define ST7789_DISPOFF	ST7789_DISPOFF85,2194
#define ST7789_DISPON	ST7789_DISPON86,2223
#define ST7789_CASET	ST7789_CASET87,2251
#define ST7789_RASET	ST7789_RASET88,2278
#define ST7789_RAMWR	ST7789_RAMWR89,2305
#define ST7789_RGBSET	ST7789_RGBSET90,2332
#define ST7789_RAMRD	ST7789_RAMRD91,2412
#define ST7789_PTLAR	ST7789_PTLAR93,2440
#define ST7789_VSCRDEF	ST7789_VSCRDEF94,2467
#define ST7789_TEOFF	ST7789_TEOFF95,2544
#define ST7789_TEON	ST7789_TEON96,2603
#define ST7789_MADCTL	ST7789_MADCTL97,2661
#define ST7789_IDMOFF	ST7789_IDMOFF98,2724
#define ST7789_IDMON	ST7789_IDMON99,2774
#define ST7789_RAMWRC	ST7789_RAMWRC100,2822
#define ST7789_RAMRDC	ST7789_RAMRDC101,2890
#define ST7789_COLMOD	ST7789_COLMOD102,2957
#define ST7789_RAMCTRL	ST7789_RAMCTRL104,2986
#define ST7789_RGBCTRL	ST7789_RGBCTRL105,3035
#define ST7789_PORCTRL	ST7789_PORCTRL106,3084
#define ST7789_FRCTRL1	ST7789_FRCTRL1107,3135
#define ST7789_PARCTRL	ST7789_PARCTRL108,3191
#define ST7789_GCTRL	ST7789_GCTRL109,3249
#define ST7789_GTADJ	ST7789_GTADJ110,3297
#define ST7789_DGMEN	ST7789_DGMEN111,3358
#define ST7789_VCOMS	ST7789_VCOMS112,3414
#define ST7789_LCMCTRL	ST7789_LCMCTRL113,3463
#define ST7789_IDSET	ST7789_IDSET114,3512
#define ST7789_VDVVRHEN	ST7789_VDVVRHEN115,3558
#define ST7789_VRHS	ST7789_VRHS116,3623
#define ST7789_VDVSET	ST7789_VDVSET117,3666
#define ST7789_VCMOFSET	ST7789_VCMOFSET118,3714
#define ST7789_FRCTR2	ST7789_FRCTR2119,3769
#define ST7789_CABCCTRL	ST7789_CABCCTRL120,3818
#define ST7789_REGSEL1	ST7789_REGSEL1121,3869
#define ST7789_REGSEL2	ST7789_REGSEL2122,3931
#define ST7789_PWMFRSEL	ST7789_PWMFRSEL123,3993
#define ST7789_PWCTRL1	ST7789_PWCTRL1124,4055
#define ST7789_VAPVANEN	ST7789_VAPVANEN125,4108
#define ST7789_CMD2EN	ST7789_CMD2EN126,4175
#define ST7789_PVGAMCTRL	ST7789_PVGAMCTRL127,4228
#define ST7789_NVGAMCTRL	ST7789_NVGAMCTRL128,4297
#define ST7789_DGMLUTR	ST7789_DGMLUTR129,4366
#define ST7789_DGMLUTB	ST7789_DGMLUTB130,4439
#define ST7789_GATECTRL	ST7789_GATECTRL131,4513
#define ST7789_SPI2EN	ST7789_SPI2EN132,4564
#define ST7789_PWCTRL2	ST7789_PWCTRL2133,4612
#define ST7789_EQCTRL	ST7789_EQCTRL134,4665
#define ST7789_PROMCTRL	ST7789_PROMCTRL135,4723
#define ST7789_PROMEN	ST7789_PROMEN136,4777
#define ST7789_NVMSET	ST7789_NVMSET137,4833
#define ST7789_PROMACT	ST7789_PROMACT138,4881

lib/TFT_eSPI/TFT_Drivers/HX8357D_Defines.h,2425
#define TFT_WIDTH TFT_WIDTH3,118
#define TFT_HEIGHT TFT_HEIGHT4,141
#define TFT_INIT_DELAY TFT_INIT_DELAY8,212
#define TFT_NOP TFT_NOP12,323
#define TFT_SWRST TFT_SWRST13,348
#define TFT_SLPIN TFT_SLPIN15,374
#define TFT_SLPOUT TFT_SLPOUT16,399
#define TFT_INVOFF TFT_INVOFF18,425
#define TFT_INVON TFT_INVON19,450
#define TFT_DISPOFF TFT_DISPOFF21,476
#define TFT_DISPON TFT_DISPON22,501
#define TFT_CASET TFT_CASET24,527
#define TFT_PASET TFT_PASET25,552
#define TFT_RAMWR TFT_RAMWR26,577
#define TFT_RAMRD TFT_RAMRD28,603
#define TFT_MADCTL TFT_MADCTL30,629
#define TFT_MAD_MY TFT_MAD_MY32,655
#define TFT_MAD_MX TFT_MAD_MX33,680
#define TFT_MAD_MV TFT_MAD_MV34,705
#define TFT_MAD_ML TFT_MAD_ML35,730
#define TFT_MAD_RGB TFT_MAD_RGB36,755
#define TFT_MAD_BGR TFT_MAD_BGR37,780
#define TFT_MAD_MH TFT_MAD_MH38,805
#define TFT_MAD_SS TFT_MAD_SS39,830
#define TFT_MAD_GS TFT_MAD_GS40,855
#define TFT_IDXRD TFT_IDXRD42,881
#define HX8357_NOP HX8357_NOP45,955
#define HX8357_SWRESET HX8357_SWRESET46,983
#define HX8357_RDDID HX8357_RDDID47,1011
#define HX8357_RDDST HX8357_RDDST48,1039
#define HX8357_RDPOWMODE HX8357_RDPOWMODE50,1068
#define HX8357_RDMADCTL HX8357_RDMADCTL51,1099
#define HX8357_RDCOLMOD HX8357_RDCOLMOD52,1129
#define HX8357_RDDIM HX8357_RDDIM53,1159
#define HX8357_RDDSDR HX8357_RDDSDR54,1186
#define HX8357_SLPIN HX8357_SLPIN56,1215
#define HX8357_SLPOUT HX8357_SLPOUT57,1243
#define HX8357_INVOFF HX8357_INVOFF59,1272
#define HX8357_INVON HX8357_INVON60,1300
#define HX8357_DISPOFF HX8357_DISPOFF61,1328
#define HX8357_DISPON HX8357_DISPON62,1356
#define HX8357_CASET HX8357_CASET64,1385
#define HX8357_PASET HX8357_PASET65,1413
#define HX8357_RAMWR HX8357_RAMWR66,1441
#define HX8357_RAMRD HX8357_RAMRD67,1469
#define HX8357_TEON HX8357_TEON69,1498
#define HX8357_TEARLINE HX8357_TEARLINE70,1524
#define HX8357_MADCTL HX8357_MADCTL71,1554
#define HX8357_COLMOD HX8357_COLMOD72,1582
#define HX8357_SETOSC HX8357_SETOSC74,1611
#define HX8357_SETPWR1 HX8357_SETPWR175,1638
#define HX8357_SETRGB HX8357_SETRGB76,1666
#define HX8357D_SETCOM HX8357D_SETCOM77,1693
#define HX8357D_SETCYC HX8357D_SETCYC79,1723
#define HX8357D_SETC HX8357D_SETC80,1752
#define HX8357D_SETSTBA HX8357D_SETSTBA82,1779
#define HX8357_SETPANEL HX8357_SETPANEL84,1809
#define HX8357D_SETGAMMA HX8357D_SETGAMMA86,1840

lib/TFT_eSPI/TFT_Drivers/S6D02A1_Defines.h,1648
#define TFT_WIDTH TFT_WIDTH3,118
#define TFT_HEIGHT TFT_HEIGHT4,141
#define S6D02A1_BLACK S6D02A1_BLACK9,305
#define S6D02A1_NAVY S6D02A1_NAVY10,365
#define S6D02A1_DARKGREEN S6D02A1_DARKGREEN11,425
#define S6D02A1_DARKCYAN S6D02A1_DARKCYAN12,485
#define S6D02A1_MAROON S6D02A1_MAROON13,545
#define S6D02A1_PURPLE S6D02A1_PURPLE14,605
#define S6D02A1_OLIVE S6D02A1_OLIVE15,665
#define S6D02A1_LIGHTGREY S6D02A1_LIGHTGREY16,725
#define S6D02A1_DARKGREY S6D02A1_DARKGREY17,785
#define S6D02A1_BLUE S6D02A1_BLUE18,845
#define S6D02A1_GREEN S6D02A1_GREEN19,905
#define S6D02A1_CYAN S6D02A1_CYAN20,965
#define S6D02A1_RED S6D02A1_RED21,1025
#define S6D02A1_MAGENTA S6D02A1_MAGENTA22,1085
#define S6D02A1_YELLOW S6D02A1_YELLOW23,1145
#define S6D02A1_WHITE S6D02A1_WHITE24,1205
#define S6D02A1_ORANGE S6D02A1_ORANGE25,1265
#define S6D02A1_GREENYELLOW S6D02A1_GREENYELLOW26,1325
#define S6D02A1_PINK S6D02A1_PINK27,1385
#define TFT_INIT_DELAY TFT_INIT_DELAY31,1468
#define TFT_NOP TFT_NOP35,1539
#define TFT_SWRST TFT_SWRST36,1564
#define TFT_CASET TFT_CASET38,1590
#define TFT_PASET TFT_PASET39,1615
#define TFT_RAMWR TFT_RAMWR40,1640
#define TFT_RAMRD TFT_RAMRD42,1666
#define TFT_IDXRD TFT_IDXRD43,1691
#define TFT_MADCTL TFT_MADCTL45,1771
#define TFT_MAD_MY TFT_MAD_MY46,1796
#define TFT_MAD_MX TFT_MAD_MX47,1821
#define TFT_MAD_MV TFT_MAD_MV48,1846
#define TFT_MAD_ML TFT_MAD_ML49,1871
#define TFT_MAD_BGR TFT_MAD_BGR50,1896
#define TFT_MAD_MH TFT_MAD_MH51,1921
#define TFT_MAD_RGB TFT_MAD_RGB52,1946
#define TFT_INVOFF TFT_INVOFF54,1972
#define TFT_INVON TFT_INVON55,1997

lib/TFT_eSPI/TFT_Drivers/R61581_Rotation.h,44
  writecommand(TFT_MADCTL);TFT_MADCTL3,83

lib/TFT_eSPI/TFT_Drivers/ST7735_Init.h,0

lib/TFT_eSPI/TFT_Drivers/R61581_Init.h,240
    writecommand(TFT_SLPOUT);TFT_SLPOUT11,247
    writecommand(TFT_MADCTL);TFT_MADCTL55,1035
    writecommand(TFT_CASET);TFT_CASET61,1133
    writecommand(TFT_PASET);TFT_PASET67,1247
    writecommand(TFT_DISPON);TFT_DISPON74,1377

lib/TFT_eSPI/TFT_Drivers/HX8357D_Init.h,915
    writecommand(HX8357D_SETC);HX8357D_SETC12,264
    writecommand(HX8357_SETRGB); HX8357_SETRGB19,413
    writecommand(HX8357D_SETCOM);HX8357D_SETCOM26,591
    writecommand(HX8357_SETOSC);HX8357_SETOSC29,662
    writecommand(HX8357_SETPANEL); //Set PanelHX8357_SETPANEL32,759
    writecommand(HX8357_SETPWR1);HX8357_SETPWR135,864
    writecommand(HX8357D_SETSTBA);  HX8357D_SETSTBA43,1080
    writecommand(HX8357D_SETCYC);  HX8357D_SETCYC51,1307
    writecommand(HX8357D_SETGAMMA); HX8357D_SETGAMMA60,1547
    writecommand(HX8357_COLMOD);HX8357_COLMOD96,2303
    writecommand(HX8357_MADCTL);  HX8357_MADCTL99,2373
    writecommand(HX8357_TEON);  // TE offHX8357_TEON102,2435
    writecommand(HX8357_TEARLINE);  // tear lineHX8357_TEARLINE105,2504
    writecommand(HX8357_SLPOUT);  //Exit SleepHX8357_SLPOUT109,2597
    writecommand(HX8357_DISPON);  // display onHX8357_DISPON112,2665

lib/TFT_eSPI/TFT_Drivers/ILI9163_Defines.h,1698
  #define TFT_WIDTH TFT_WIDTH4,136
  #define TFT_HEIGHT TFT_HEIGHT7,187
  #define CGRAM_OFFSETCGRAM_OFFSET11,266
#define ILI9163_BLACK ILI9163_BLACK16,436
#define ILI9163_NAVY ILI9163_NAVY17,496
#define ILI9163_DARKGREEN ILI9163_DARKGREEN18,556
#define ILI9163_DARKCYAN ILI9163_DARKCYAN19,616
#define ILI9163_MAROON ILI9163_MAROON20,676
#define ILI9163_PURPLE ILI9163_PURPLE21,736
#define ILI9163_OLIVE ILI9163_OLIVE22,796
#define ILI9163_LIGHTGREY ILI9163_LIGHTGREY23,856
#define ILI9163_DARKGREY ILI9163_DARKGREY24,916
#define ILI9163_BLUE ILI9163_BLUE25,976
#define ILI9163_GREEN ILI9163_GREEN26,1036
#define ILI9163_CYAN ILI9163_CYAN27,1096
#define ILI9163_RED ILI9163_RED28,1156
#define ILI9163_MAGENTA ILI9163_MAGENTA29,1216
#define ILI9163_YELLOW ILI9163_YELLOW30,1276
#define ILI9163_WHITE ILI9163_WHITE31,1336
#define ILI9163_ORANGE ILI9163_ORANGE32,1396
#define ILI9163_GREENYELLOW ILI9163_GREENYELLOW33,1456
#define ILI9163_PINK ILI9163_PINK34,1516
#define TFT_INIT_DELAY TFT_INIT_DELAY38,1599
#define TFT_NOP TFT_NOP42,1670
#define TFT_SWRST TFT_SWRST43,1695
#define TFT_CASET TFT_CASET45,1721
#define TFT_PASET TFT_PASET46,1746
#define TFT_RAMWR TFT_RAMWR47,1771
#define TFT_RAMRD TFT_RAMRD49,1797
#define TFT_IDXRD TFT_IDXRD50,1822
#define TFT_MADCTL TFT_MADCTL52,1902
#define TFT_MAD_MY TFT_MAD_MY53,1927
#define TFT_MAD_MX TFT_MAD_MX54,1952
#define TFT_MAD_MV TFT_MAD_MV55,1977
#define TFT_MAD_ML TFT_MAD_ML56,2002
#define TFT_MAD_BGR TFT_MAD_BGR57,2027
#define TFT_MAD_MH TFT_MAD_MH58,2052
#define TFT_MAD_RGB TFT_MAD_RGB59,2077
#define TFT_INVOFF TFT_INVOFF61,2103
#define TFT_INVON TFT_INVON62,2128

lib/TFT_eSPI/TFT_Drivers/ST7796_Defines.h,3106
#define TFT_WIDTH TFT_WIDTH3,118
#define TFT_HEIGHT TFT_HEIGHT4,141
#define TFT_NOP TFT_NOP7,206
#define TFT_SWRST TFT_SWRST8,231
#define TFT_CASET TFT_CASET10,257
#define TFT_PASET TFT_PASET11,282
#define TFT_RAMWR TFT_RAMWR12,307
#define TFT_RAMRD TFT_RAMRD13,332
#define TFT_MADCTL TFT_MADCTL15,358
#define TFT_MAD_MY TFT_MAD_MY16,383
#define TFT_MAD_MX TFT_MAD_MX17,408
#define TFT_MAD_MV TFT_MAD_MV18,433
#define TFT_MAD_ML TFT_MAD_ML19,458
#define TFT_MAD_BGR TFT_MAD_BGR20,483
#define TFT_MAD_MH TFT_MAD_MH21,508
#define TFT_MAD_RGB TFT_MAD_RGB22,533
    #define TFT_MAD_COLOR_ORDER TFT_MAD_COLOR_ORDER26,607
    #define TFT_MAD_COLOR_ORDER TFT_MAD_COLOR_ORDER28,659
  #define TFT_MAD_COLOR_ORDER TFT_MAD_COLOR_ORDER31,718
#define TFT_INVOFF TFT_INVOFF34,768
#define TFT_INVON TFT_INVON35,793
#define ST7796_NOP ST7796_NOP39,848
#define ST7796_SWRESET ST7796_SWRESET40,876
#define ST7796_RDDID ST7796_RDDID41,904
#define ST7796_RDDST ST7796_RDDST42,932
#define ST7796_SLPIN ST7796_SLPIN44,961
#define ST7796_SLPOUT ST7796_SLPOUT45,989
#define ST7796_PTLON ST7796_PTLON46,1017
#define ST7796_NORON ST7796_NORON47,1045
#define ST7796_RDMODE ST7796_RDMODE49,1074
#define ST7796_RDMADCTL ST7796_RDMADCTL50,1102
#define ST7796_RDPIXFMT ST7796_RDPIXFMT51,1132
#define ST7796_RDIMGFMT ST7796_RDIMGFMT52,1162
#define ST7796_RDSELFDIAG ST7796_RDSELFDIAG53,1192
#define ST7796_INVOFF ST7796_INVOFF55,1225
#define ST7796_INVON ST7796_INVON56,1253
#define ST7796_DISPOFF ST7796_DISPOFF58,1282
#define ST7796_DISPON ST7796_DISPON59,1310
#define ST7796_CASET ST7796_CASET61,1339
#define ST7796_PASET ST7796_PASET62,1367
#define ST7796_RAMWR ST7796_RAMWR63,1395
#define ST7796_RAMRD ST7796_RAMRD64,1423
#define ST7796_PTLAR ST7796_PTLAR66,1452
#define ST7796_VSCRDEF ST7796_VSCRDEF67,1480
#define ST7796_MADCTL ST7796_MADCTL68,1508
#define ST7796_VSCRSADD ST7796_VSCRSADD69,1536
#define ST7796_PIXFMT ST7796_PIXFMT70,1565
#define ST7796_WRDISBV ST7796_WRDISBV72,1594
#define ST7796_RDDISBV ST7796_RDDISBV73,1623
#define ST7796_WRCTRLD ST7796_WRCTRLD74,1652
#define ST7796_FRMCTR1 ST7796_FRMCTR176,1682
#define ST7796_FRMCTR2 ST7796_FRMCTR277,1710
#define ST7796_FRMCTR3 ST7796_FRMCTR378,1738
#define ST7796_INVCTR ST7796_INVCTR79,1766
#define ST7796_DFUNCTR ST7796_DFUNCTR80,1794
#define ST7796_PWCTR1 ST7796_PWCTR182,1823
#define ST7796_PWCTR2 ST7796_PWCTR283,1851
#define ST7796_PWCTR3 ST7796_PWCTR384,1879
#define ST7796_VMCTR1 ST7796_VMCTR186,1908
#define ST7796_VMCOFF ST7796_VMCOFF87,1936
#define ST7796_RDID4 ST7796_RDID489,1965
#define ST7796_GMCTRP1 ST7796_GMCTRP191,1994
#define ST7796_GMCTRN1 ST7796_GMCTRN192,2022
#define ST7796_MADCTL_MY ST7796_MADCTL_MY94,2051
#define ST7796_MADCTL_MX ST7796_MADCTL_MX95,2082
#define ST7796_MADCTL_MV ST7796_MADCTL_MV96,2113
#define ST7796_MADCTL_ML ST7796_MADCTL_ML97,2144
#define ST7796_MADCTL_RGB ST7796_MADCTL_RGB98,2175
#define ST7796_MADCTL_BGR ST7796_MADCTL_BGR99,2206
#define ST7796_MADCTL_MH ST7796_MADCTL_MH100,2237

lib/TFT_eSPI/TFT_Drivers/GC9A01_Init.h,0

lib/TFT_eSPI/TFT_Drivers/ILI9225_Init.h,0

lib/TFT_eSPI/TFT_Drivers/ILI9486_Rotation.h,44
  writecommand(TFT_MADCTL);TFT_MADCTL3,84

lib/TFT_eSPI/TFT_Drivers/ILI9488_Init.h,200
    writecommand(TFT_MADCTL); // Memory Access ControlTFT_MADCTL57,1236
    writecommand(TFT_SLPOUT);  //Exit SleepTFT_SLPOUT90,2083
    writecommand(TFT_DISPON);  //Display onTFT_DISPON93,2140

lib/TFT_eSPI/TFT_Drivers/S6D02A1_Init.h,0

lib/TFT_eSPI/TFT_Drivers/ST7735_Defines.h,4663
  #define TFT_WIDTH TFT_WIDTH4,136
  #define TFT_HEIGHT TFT_HEIGHT7,187
#define INITR_GREENTAB INITR_GREENTAB12,263
#define INITR_REDTAB INITR_REDTAB13,296
#define INITR_BLACKTAB INITR_BLACKTAB14,329
#define INITR_GREENTAB2 INITR_GREENTAB215,389
#define INITR_GREENTAB3 INITR_GREENTAB316,488
#define INITR_GREENTAB128 INITR_GREENTAB12817,582
#define INITR_GREENTAB160x80 INITR_GREENTAB160x8018,679
#define INITR_REDTAB160x80 INITR_REDTAB160x8019,776
#define INITB INITB20,950
  #define TAB_COLOUR TAB_COLOUR25,1105
  #define TAB_COLOUR TAB_COLOUR28,1167
  #define CGRAM_OFFSETCGRAM_OFFSET29,1203
  #define TAB_COLOUR TAB_COLOUR32,1262
  #define CGRAM_OFFSETCGRAM_OFFSET33,1299
  #define TAB_COLOUR TAB_COLOUR36,1356
  #define CGRAM_OFFSETCGRAM_OFFSET37,1393
  #define TAB_COLOUR TAB_COLOUR40,1452
  #define CGRAM_OFFSETCGRAM_OFFSET41,1491
  #define TAB_COLOUR TAB_COLOUR44,1554
  #define CGRAM_OFFSETCGRAM_OFFSET45,1596
  #define TAB_COLOUR TAB_COLOUR48,1656
  #define CGRAM_OFFSETCGRAM_OFFSET49,1696
  #define TAB_COLOUR TAB_COLOUR52,1751
  #define TAB_COLOUR TAB_COLOUR55,1820
  #define TAB_COLOUR TAB_COLOUR58,1896
#define ST7735_BLACK ST7735_BLACK64,2080
#define ST7735_NAVY ST7735_NAVY65,2139
#define ST7735_DARKGREEN ST7735_DARKGREEN66,2198
#define ST7735_DARKCYAN ST7735_DARKCYAN67,2257
#define ST7735_MAROON ST7735_MAROON68,2316
#define ST7735_PURPLE ST7735_PURPLE69,2375
#define ST7735_OLIVE ST7735_OLIVE70,2434
#define ST7735_LIGHTGREY ST7735_LIGHTGREY71,2493
#define ST7735_DARKGREY ST7735_DARKGREY72,2552
#define ST7735_BLUE ST7735_BLUE73,2611
#define ST7735_GREEN ST7735_GREEN74,2670
#define ST7735_CYAN ST7735_CYAN75,2729
#define ST7735_RED ST7735_RED76,2788
#define ST7735_MAGENTA ST7735_MAGENTA77,2847
#define ST7735_YELLOW ST7735_YELLOW78,2906
#define ST7735_WHITE ST7735_WHITE79,2965
#define ST7735_ORANGE ST7735_ORANGE80,3024
#define ST7735_GREENYELLOW ST7735_GREENYELLOW81,3083
#define ST7735_PINK ST7735_PINK82,3142
#define TFT_INIT_DELAY TFT_INIT_DELAY86,3224
#define TFT_NOP TFT_NOP90,3295
#define TFT_SWRST TFT_SWRST91,3320
#define TFT_CASET TFT_CASET93,3346
#define TFT_PASET TFT_PASET94,3371
#define TFT_RAMWR TFT_RAMWR95,3396
#define TFT_RAMRD TFT_RAMRD97,3422
#define TFT_IDXRD TFT_IDXRD98,3447
#define TFT_MADCTL TFT_MADCTL100,3527
#define TFT_MAD_MY TFT_MAD_MY101,3552
#define TFT_MAD_MX TFT_MAD_MX102,3577
#define TFT_MAD_MV TFT_MAD_MV103,3602
#define TFT_MAD_ML TFT_MAD_ML104,3627
#define TFT_MAD_BGR TFT_MAD_BGR105,3652
#define TFT_MAD_MH TFT_MAD_MH106,3677
#define TFT_MAD_RGB TFT_MAD_RGB107,3702
    #define TFT_MAD_COLOR_ORDER TFT_MAD_COLOR_ORDER111,3826
    #define TFT_MAD_COLOR_ORDER TFT_MAD_COLOR_ORDER113,3878
    #define TFT_MAD_COLOR_ORDER TFT_MAD_COLOR_ORDER117,3964
    #define TFT_MAD_COLOR_ORDER TFT_MAD_COLOR_ORDER119,4016
#define TFT_INVOFF TFT_INVOFF123,4077
#define TFT_INVON TFT_INVON124,4102
#define ST7735_NOP ST7735_NOP127,4169
#define ST7735_SWRESET ST7735_SWRESET128,4197
#define ST7735_RDDID ST7735_RDDID129,4225
#define ST7735_RDDST ST7735_RDDST130,4253
#define ST7735_SLPIN ST7735_SLPIN132,4282
#define ST7735_SLPOUT ST7735_SLPOUT133,4310
#define ST7735_PTLON ST7735_PTLON134,4338
#define ST7735_NORON ST7735_NORON135,4366
#define ST7735_INVOFF ST7735_INVOFF137,4395
#define ST7735_INVON ST7735_INVON138,4423
#define ST7735_DISPOFF ST7735_DISPOFF139,4451
#define ST7735_DISPON ST7735_DISPON140,4479
#define ST7735_CASET ST7735_CASET141,4507
#define ST7735_RASET ST7735_RASET142,4535
#define ST7735_RAMWR ST7735_RAMWR143,4572
#define ST7735_RAMRD ST7735_RAMRD144,4600
#define ST7735_PTLAR ST7735_PTLAR146,4629
#define ST7735_COLMOD ST7735_COLMOD147,4657
#define ST7735_MADCTL ST7735_MADCTL148,4685
#define ST7735_FRMCTR1 ST7735_FRMCTR1150,4714
#define ST7735_FRMCTR2 ST7735_FRMCTR2151,4742
#define ST7735_FRMCTR3 ST7735_FRMCTR3152,4770
#define ST7735_INVCTR ST7735_INVCTR153,4798
#define ST7735_DISSET5 ST7735_DISSET5154,4826
#define ST7735_PWCTR1 ST7735_PWCTR1156,4855
#define ST7735_PWCTR2 ST7735_PWCTR2157,4883
#define ST7735_PWCTR3 ST7735_PWCTR3158,4911
#define ST7735_PWCTR4 ST7735_PWCTR4159,4939
#define ST7735_PWCTR5 ST7735_PWCTR5160,4967
#define ST7735_VMCTR1 ST7735_VMCTR1161,4995
#define ST7735_RDID1 ST7735_RDID1163,5024
#define ST7735_RDID2 ST7735_RDID2164,5052
#define ST7735_RDID3 ST7735_RDID3165,5080
#define ST7735_RDID4 ST7735_RDID4166,5108
#define ST7735_PWCTR6 ST7735_PWCTR6168,5137
#define ST7735_GMCTRP1 ST7735_GMCTRP1170,5166
#define ST7735_GMCTRN1 ST7735_GMCTRN1171,5194

lib/TFT_eSPI/TFT_Drivers/ILI9481_Defines.h,975
#define TFT_WIDTH TFT_WIDTH3,118
#define TFT_HEIGHT TFT_HEIGHT4,141
#define TFT_INIT_DELAY TFT_INIT_DELAY8,212
#define TFT_NOP TFT_NOP12,322
#define TFT_SWRST TFT_SWRST13,347
#define TFT_SLPIN TFT_SLPIN15,373
#define TFT_SLPOUT TFT_SLPOUT16,398
#define TFT_INVOFF TFT_INVOFF18,424
#define TFT_INVON TFT_INVON19,449
#define TFT_DISPOFF TFT_DISPOFF21,475
#define TFT_DISPON TFT_DISPON22,500
#define TFT_CASET TFT_CASET24,526
#define TFT_PASET TFT_PASET25,551
#define TFT_RAMWR TFT_RAMWR26,576
#define TFT_RAMRD TFT_RAMRD28,602
#define TFT_MADCTL TFT_MADCTL30,628
#define TFT_MAD_MY TFT_MAD_MY32,654
#define TFT_MAD_MX TFT_MAD_MX33,679
#define TFT_MAD_MV TFT_MAD_MV34,704
#define TFT_MAD_ML TFT_MAD_ML35,729
#define TFT_MAD_RGB TFT_MAD_RGB36,754
#define TFT_MAD_BGR TFT_MAD_BGR37,779
#define TFT_MAD_MH TFT_MAD_MH38,804
#define TFT_MAD_SS TFT_MAD_SS39,829
#define TFT_MAD_GS TFT_MAD_GS40,854
#define TFT_IDXRD TFT_IDXRD42,880

lib/TFT_eSPI/TFT_Drivers/RM68140_Defines.h,975
#define TFT_WIDTH TFT_WIDTH3,118
#define TFT_HEIGHT TFT_HEIGHT4,141
#define TFT_INIT_DELAY TFT_INIT_DELAY8,212
#define TFT_NOP TFT_NOP12,322
#define TFT_SWRST TFT_SWRST13,347
#define TFT_SLPIN TFT_SLPIN15,373
#define TFT_SLPOUT TFT_SLPOUT16,398
#define TFT_INVOFF TFT_INVOFF18,424
#define TFT_INVON TFT_INVON19,449
#define TFT_DISPOFF TFT_DISPOFF21,475
#define TFT_DISPON TFT_DISPON22,500
#define TFT_CASET TFT_CASET24,526
#define TFT_PASET TFT_PASET25,551
#define TFT_RAMWR TFT_RAMWR26,576
#define TFT_RAMRD TFT_RAMRD28,602
#define TFT_MADCTL TFT_MADCTL30,628
#define TFT_MAD_MY TFT_MAD_MY32,654
#define TFT_MAD_MX TFT_MAD_MX33,679
#define TFT_MAD_MV TFT_MAD_MV34,704
#define TFT_MAD_ML TFT_MAD_ML35,729
#define TFT_MAD_RGB TFT_MAD_RGB36,754
#define TFT_MAD_BGR TFT_MAD_BGR37,779
#define TFT_MAD_MH TFT_MAD_MH38,804
#define TFT_MAD_SS TFT_MAD_SS39,829
#define TFT_MAD_GS TFT_MAD_GS40,854
#define TFT_IDXRD TFT_IDXRD42,880

lib/TFT_eSPI/TFT_Drivers/GC9A01_Defines.h,752
  #define TFT_WIDTH TFT_WIDTH4,136
  #define TFT_HEIGHT TFT_HEIGHT7,187
#define TFT_INIT_DELAY TFT_INIT_DELAY11,266
#define TFT_NOP TFT_NOP14,336
#define TFT_SWRST TFT_SWRST15,361
#define TFT_CASET TFT_CASET17,387
#define TFT_PASET TFT_PASET18,412
#define TFT_RAMWR TFT_RAMWR19,437
#define TFT_RAMRD TFT_RAMRD21,463
#define TFT_IDXRD TFT_IDXRD22,488
#define TFT_MADCTL TFT_MADCTL24,568
#define TFT_MAD_MY TFT_MAD_MY25,593
#define TFT_MAD_MX TFT_MAD_MX26,618
#define TFT_MAD_MV TFT_MAD_MV27,643
#define TFT_MAD_ML TFT_MAD_ML28,668
#define TFT_MAD_BGR TFT_MAD_BGR29,693
#define TFT_MAD_MH TFT_MAD_MH30,718
#define TFT_MAD_RGB TFT_MAD_RGB31,743
#define TFT_INVOFF TFT_INVOFF33,769
#define TFT_INVON TFT_INVON34,794

lib/TFT_eSPI/TFT_Drivers/ILI9341_Defines.h,4601
#define TFT_WIDTH TFT_WIDTH3,118
#define TFT_HEIGHT TFT_HEIGHT4,141
#define ILI9341_BLACK ILI9341_BLACK9,305
#define ILI9341_NAVY ILI9341_NAVY10,365
#define ILI9341_DARKGREEN ILI9341_DARKGREEN11,425
#define ILI9341_DARKCYAN ILI9341_DARKCYAN12,485
#define ILI9341_MAROON ILI9341_MAROON13,545
#define ILI9341_PURPLE ILI9341_PURPLE14,605
#define ILI9341_OLIVE ILI9341_OLIVE15,665
#define ILI9341_LIGHTGREY ILI9341_LIGHTGREY16,725
#define ILI9341_DARKGREY ILI9341_DARKGREY17,785
#define ILI9341_BLUE ILI9341_BLUE18,845
#define ILI9341_GREEN ILI9341_GREEN19,905
#define ILI9341_CYAN ILI9341_CYAN20,965
#define ILI9341_RED ILI9341_RED21,1025
#define ILI9341_MAGENTA ILI9341_MAGENTA22,1085
#define ILI9341_YELLOW ILI9341_YELLOW23,1145
#define ILI9341_WHITE ILI9341_WHITE24,1205
#define ILI9341_ORANGE ILI9341_ORANGE25,1265
#define ILI9341_GREENYELLOW ILI9341_GREENYELLOW26,1325
#define ILI9341_PINK ILI9341_PINK27,1385
#define TFT_INIT_DELAY TFT_INIT_DELAY31,1468
#define TFT_NOP TFT_NOP35,1578
#define TFT_SWRST TFT_SWRST36,1603
#define TFT_CASET TFT_CASET38,1629
#define TFT_PASET TFT_PASET39,1654
#define TFT_RAMWR TFT_RAMWR40,1679
#define TFT_RAMRD TFT_RAMRD42,1705
#define TFT_IDXRD TFT_IDXRD43,1730
#define TFT_MADCTL TFT_MADCTL45,1803
#define TFT_MAD_MY TFT_MAD_MY46,1828
#define TFT_MAD_MX TFT_MAD_MX47,1853
#define TFT_MAD_MV TFT_MAD_MV48,1878
#define TFT_MAD_ML TFT_MAD_ML49,1903
#define TFT_MAD_BGR TFT_MAD_BGR50,1928
#define TFT_MAD_MH TFT_MAD_MH51,1953
#define TFT_MAD_RGB TFT_MAD_RGB52,1978
    #define TFT_MAD_COLOR_ORDER TFT_MAD_COLOR_ORDER56,2052
    #define TFT_MAD_COLOR_ORDER TFT_MAD_COLOR_ORDER58,2104
  #define TFT_MAD_COLOR_ORDER TFT_MAD_COLOR_ORDER61,2163
#define TFT_INVOFF TFT_INVOFF64,2213
#define TFT_INVON TFT_INVON65,2238
#define ILI9341_NOP ILI9341_NOP69,2322
#define ILI9341_SWRESET ILI9341_SWRESET70,2351
#define ILI9341_RDDID ILI9341_RDDID71,2380
#define ILI9341_RDDST ILI9341_RDDST72,2409
#define ILI9341_SLPIN ILI9341_SLPIN74,2439
#define ILI9341_SLPOUT ILI9341_SLPOUT75,2468
#define ILI9341_PTLON ILI9341_PTLON76,2497
#define ILI9341_NORON ILI9341_NORON77,2526
#define ILI9341_RDMODE ILI9341_RDMODE79,2556
#define ILI9341_RDMADCTL ILI9341_RDMADCTL80,2585
#define ILI9341_RDPIXFMT ILI9341_RDPIXFMT81,2616
#define ILI9341_RDIMGFMT ILI9341_RDIMGFMT82,2647
#define ILI9341_RDSELFDIAG ILI9341_RDSELFDIAG83,2678
#define ILI9341_INVOFF ILI9341_INVOFF85,2712
#define ILI9341_INVON ILI9341_INVON86,2741
#define ILI9341_GAMMASET ILI9341_GAMMASET87,2770
#define ILI9341_DISPOFF ILI9341_DISPOFF88,2800
#define ILI9341_DISPON ILI9341_DISPON89,2829
#define ILI9341_CASET ILI9341_CASET91,2859
#define ILI9341_PASET ILI9341_PASET92,2888
#define ILI9341_RAMWR ILI9341_RAMWR93,2917
#define ILI9341_RAMRD ILI9341_RAMRD94,2946
#define ILI9341_PTLAR ILI9341_PTLAR96,2976
#define ILI9341_VSCRDEF ILI9341_VSCRDEF97,3005
#define ILI9341_MADCTL ILI9341_MADCTL98,3034
#define ILI9341_VSCRSADD ILI9341_VSCRSADD99,3063
#define ILI9341_PIXFMT ILI9341_PIXFMT100,3093
#define ILI9341_WRDISBV ILI9341_WRDISBV102,3123
#define ILI9341_RDDISBV ILI9341_RDDISBV103,3153
#define ILI9341_WRCTRLD ILI9341_WRCTRLD104,3183
#define ILI9341_FRMCTR1 ILI9341_FRMCTR1106,3214
#define ILI9341_FRMCTR2 ILI9341_FRMCTR2107,3243
#define ILI9341_FRMCTR3 ILI9341_FRMCTR3108,3272
#define ILI9341_INVCTR ILI9341_INVCTR109,3301
#define ILI9341_DFUNCTR ILI9341_DFUNCTR110,3330
#define ILI9341_PWCTR1 ILI9341_PWCTR1112,3360
#define ILI9341_PWCTR2 ILI9341_PWCTR2113,3389
#define ILI9341_PWCTR3 ILI9341_PWCTR3114,3418
#define ILI9341_PWCTR4 ILI9341_PWCTR4115,3447
#define ILI9341_PWCTR5 ILI9341_PWCTR5116,3476
#define ILI9341_VMCTR1 ILI9341_VMCTR1117,3505
#define ILI9341_VMCTR2 ILI9341_VMCTR2118,3534
#define ILI9341_RDID4 ILI9341_RDID4120,3564
#define ILI9341_RDINDEX ILI9341_RDINDEX121,3593
#define ILI9341_RDID1 ILI9341_RDID1122,3622
#define ILI9341_RDID2 ILI9341_RDID2123,3651
#define ILI9341_RDID3 ILI9341_RDID3124,3680
#define ILI9341_RDIDX ILI9341_RDIDX125,3709
#define ILI9341_GMCTRP1 ILI9341_GMCTRP1127,3746
#define ILI9341_GMCTRN1 ILI9341_GMCTRN1128,3775
#define ILI9341_MADCTL_MY ILI9341_MADCTL_MY130,3805
#define ILI9341_MADCTL_MX ILI9341_MADCTL_MX131,3837
#define ILI9341_MADCTL_MV ILI9341_MADCTL_MV132,3869
#define ILI9341_MADCTL_ML ILI9341_MADCTL_ML133,3901
#define ILI9341_MADCTL_RGB ILI9341_MADCTL_RGB134,3933
#define ILI9341_MADCTL_BGR ILI9341_MADCTL_BGR135,3965
#define ILI9341_MADCTL_MH ILI9341_MADCTL_MH136,3997

lib/TFT_eSPI/TFT_Drivers/R61581_Defines.h,975
#define TFT_WIDTH TFT_WIDTH3,118
#define TFT_HEIGHT TFT_HEIGHT4,141
#define TFT_INIT_DELAY TFT_INIT_DELAY8,212
#define TFT_NOP TFT_NOP12,322
#define TFT_SWRST TFT_SWRST13,347
#define TFT_SLPIN TFT_SLPIN15,373
#define TFT_SLPOUT TFT_SLPOUT16,398
#define TFT_INVOFF TFT_INVOFF18,424
#define TFT_INVON TFT_INVON19,449
#define TFT_DISPOFF TFT_DISPOFF21,475
#define TFT_DISPON TFT_DISPON22,500
#define TFT_CASET TFT_CASET24,526
#define TFT_PASET TFT_PASET25,551
#define TFT_RAMWR TFT_RAMWR26,576
#define TFT_RAMRD TFT_RAMRD28,602
#define TFT_MADCTL TFT_MADCTL30,628
#define TFT_MAD_MY TFT_MAD_MY32,654
#define TFT_MAD_MX TFT_MAD_MX33,679
#define TFT_MAD_MV TFT_MAD_MV34,704
#define TFT_MAD_ML TFT_MAD_ML35,729
#define TFT_MAD_RGB TFT_MAD_RGB36,754
#define TFT_MAD_BGR TFT_MAD_BGR37,779
#define TFT_MAD_MH TFT_MAD_MH38,804
#define TFT_MAD_SS TFT_MAD_SS39,829
#define TFT_MAD_GS TFT_MAD_GS40,854
#define TFT_IDXRD TFT_IDXRD42,880

lib/TFT_eSPI/TFT_Drivers/SSD1963_Rotation.h,45
  writecommand(TFT_MADCTL);TFT_MADCTL6,140

lib/TFT_eSPI/TFT_Drivers/ILI9486_Init.h,0

lib/TFT_eSPI/TFT_Drivers/ILI9341_Rotation.h,45
  writecommand(TFT_MADCTL);TFT_MADCTL6,140

lib/TFT_eSPI/TFT_Drivers/ILI9225_Rotation.h,0

lib/TFT_eSPI/TFT_Drivers/S6D02A1_Rotation.h,45
  writecommand(TFT_MADCTL);TFT_MADCTL6,104

lib/TFT_eSPI/TFT_Drivers/ST7735_Rotation.h,45
  writecommand(TFT_MADCTL);TFT_MADCTL6,139

lib/TFT_eSPI/TFT_Drivers/SSD1963_Init.h,0

lib/TFT_eSPI/TFT_Drivers/ILI9341_Init.h,0

lib/TFT_eSPI/TFT_Drivers/ST7789_2_Init.h,0

lib/TFT_eSPI/TFT_Drivers/RM68140_Init.h,239
    writecommand(TFT_SLPOUT);TFT_SLPOUT11,249
    writecommand(TFT_MADCTL);TFT_MADCTL52,991
    writecommand(TFT_CASET);TFT_CASET58,1089
    writecommand(TFT_PASET);TFT_PASET64,1203
    writecommand(TFT_DISPON);TFT_DISPON71,1333

lib/TFT_eSPI/TFT_Drivers/ST7789_2_Rotation.h,44
  writecommand(TFT_MADCTL);TFT_MADCTL3,83

lib/TFT_eSPI/TFT_Drivers/ST7789_Rotation.h,42
writecommand(TFT_MADCTL);TFT_MADCTL3,81

lib/TFT_eSPI/TFT_Drivers/SSD1963_Defines.h,1220
  #define TFT_WIDTH TFT_WIDTH4,151
  #define TFT_HEIGHT TFT_HEIGHT5,176
  #define TFT_WIDTH TFT_WIDTH7,236
  #define TFT_HEIGHT TFT_HEIGHT8,261
  #define TFT_WIDTH TFT_WIDTH10,324
  #define TFT_HEIGHT TFT_HEIGHT11,349
  #define TFT_WIDTH TFT_WIDTH13,411
  #define TFT_HEIGHT TFT_HEIGHT14,436
  #define SSD1963_DRIVERSSD1963_DRIVER19,547
#define TFT_INIT_DELAY TFT_INIT_DELAY23,626
#define TFT_NOP TFT_NOP26,735
#define TFT_SWRST TFT_SWRST27,760
#define TFT_CASET TFT_CASET29,786
#define TFT_PASET TFT_PASET30,811
#define TFT_RAMWR TFT_RAMWR31,836
#define TFT_RAMRD TFT_RAMRD33,862
#define TFT_IDXRD TFT_IDXRD34,887
#define TFT_MADCTL TFT_MADCTL36,960
#define TFT_MAD_MY TFT_MAD_MY37,985
#define TFT_MAD_MX TFT_MAD_MX38,1010
#define TFT_MAD_MV TFT_MAD_MV39,1035
#define TFT_MAD_ML TFT_MAD_ML40,1060
#define TFT_MAD_BGR TFT_MAD_BGR41,1085
#define TFT_MAD_MH TFT_MAD_MH42,1110
#define TFT_MAD_RGB TFT_MAD_RGB43,1135
    #define TFT_MAD_COLOR_ORDER TFT_MAD_COLOR_ORDER47,1209
    #define TFT_MAD_COLOR_ORDER TFT_MAD_COLOR_ORDER49,1261
  #define TFT_MAD_COLOR_ORDER TFT_MAD_COLOR_ORDER52,1320
#define TFT_INVOFF TFT_INVOFF55,1370
#define TFT_INVON TFT_INVON56,1395

lib/TFT_eSPI/TFT_Drivers/ILI9486_Defines.h,1780
#define TFT_WIDTH TFT_WIDTH3,118
#define TFT_HEIGHT TFT_HEIGHT4,141
  #define RPI_WRITE_STROBERPI_WRITE_STROBE8,296
#define ILI9486_BLACK ILI9486_BLACK13,470
#define ILI9486_NAVY ILI9486_NAVY14,530
#define ILI9486_DARKGREEN ILI9486_DARKGREEN15,590
#define ILI9486_DARKCYAN ILI9486_DARKCYAN16,650
#define ILI9486_MAROON ILI9486_MAROON17,710
#define ILI9486_PURPLE ILI9486_PURPLE18,770
#define ILI9486_OLIVE ILI9486_OLIVE19,830
#define ILI9486_LIGHTGREY ILI9486_LIGHTGREY20,890
#define ILI9486_DARKGREY ILI9486_DARKGREY21,950
#define ILI9486_BLUE ILI9486_BLUE22,1010
#define ILI9486_GREEN ILI9486_GREEN23,1070
#define ILI9486_CYAN ILI9486_CYAN24,1130
#define ILI9486_RED ILI9486_RED25,1190
#define ILI9486_MAGENTA ILI9486_MAGENTA26,1250
#define ILI9486_YELLOW ILI9486_YELLOW27,1310
#define ILI9486_WHITE ILI9486_WHITE28,1370
#define ILI9486_ORANGE ILI9486_ORANGE29,1430
#define ILI9486_GREENYELLOW ILI9486_GREENYELLOW30,1490
#define ILI9486_PINK ILI9486_PINK31,1550
#define TFT_INIT_DELAY TFT_INIT_DELAY35,1633
#define TFT_NOP TFT_NOP39,1743
#define TFT_SWRST TFT_SWRST40,1768
#define TFT_CASET TFT_CASET42,1794
#define TFT_PASET TFT_PASET43,1819
#define TFT_RAMWR TFT_RAMWR44,1844
#define TFT_RAMRD TFT_RAMRD46,1870
#define TFT_IDXRD TFT_IDXRD47,1895
#define TFT_MADCTL TFT_MADCTL49,1968
#define TFT_MAD_MY TFT_MAD_MY50,1993
#define TFT_MAD_MX TFT_MAD_MX51,2018
#define TFT_MAD_MV TFT_MAD_MV52,2043
#define TFT_MAD_ML TFT_MAD_ML53,2068
#define TFT_MAD_BGR TFT_MAD_BGR54,2093
#define TFT_MAD_MH TFT_MAD_MH55,2118
#define TFT_MAD_SS TFT_MAD_SS56,2143
#define TFT_MAD_GS TFT_MAD_GS57,2168
#define TFT_MAD_RGB TFT_MAD_RGB58,2193
#define TFT_INVOFF TFT_INVOFF60,2219
#define TFT_INVON TFT_INVON61,2244

lib/TFT_eSPI/TFT_Drivers/ST7796_Init.h,45
#define TFT_INIT_DELAY TFT_INIT_DELAY8,217

lib/TFT_eSPI/TFT_Drivers/ST7796_Rotation.h,45
  writecommand(TFT_MADCTL);TFT_MADCTL6,139

lib/TFT_eSPI/TFT_Drivers/ST7789_Init.h,0

lib/TFT_eSPI/TFT_Drivers/EPD_Defines.h,741
#define TFT_WIDTH TFT_WIDTH2,23
#define TFT_HEIGHT TFT_HEIGHT3,47
#define TFT_INIT_DELAY TFT_INIT_DELAY5,72
#define TFT_NOP TFT_NOP7,98
#define TFT_SWRST TFT_SWRST8,123
#define TFT_CASET TFT_CASET10,149
#define TFT_PASET TFT_PASET11,174
#define TFT_RAMWR TFT_RAMWR12,199
#define TFT_RAMRD TFT_RAMRD14,225
#define TFT_IDXRD TFT_IDXRD15,250
#define TFT_MADCTL TFT_MADCTL17,276
#define TFT_MAD_MY TFT_MAD_MY18,301
#define TFT_MAD_MX TFT_MAD_MX19,326
#define TFT_MAD_MV TFT_MAD_MV20,351
#define TFT_MAD_ML TFT_MAD_ML21,376
#define TFT_MAD_BGR TFT_MAD_BGR22,401
#define TFT_MAD_MH TFT_MAD_MH23,426
#define TFT_MAD_RGB TFT_MAD_RGB24,451
#define TFT_INVOFF TFT_INVOFF26,477
#define TFT_INVON TFT_INVON27,502

lib/TFT_eSPI/TFT_Drivers/ILI9163_Init.h,0

lib/TFT_eSPI/TFT_eSPI.h,10849
#define _TFT_eSPIH__TFT_eSPIH_17,512
#define TFT_ESPI_VERSION TFT_ESPI_VERSION19,533
#define TFT_ESPI_FEATURES TFT_ESPI_FEATURES23,629
  #define PROGMEMPROGMEM47,1550
  #define TAB_COLOUR TAB_COLOUR65,2117
  #define SPI_FREQUENCY SPI_FREQUENCY70,2224
  #define SPI_READ_FREQUENCY SPI_READ_FREQUENCY75,2352
  #define TFT_SPI_MODE TFT_SPI_MODE80,2499
  #define TFT_SPI_MODE TFT_SPI_MODE82,2538
  #define SPI_TOUCH_FREQUENCY SPI_TOUCH_FREQUENCY87,2669
    #define LOAD_GLCDLOAD_GLCD97,3123
  #define LOAD_RLELOAD_RLE113,3440
    #define LOAD_RLELOAD_RLE119,3535
    #define LOAD_RLELOAD_RLE126,3641
    #define LOAD_RLELOAD_RLE133,3747
  #define LOAD_FONT8LOAD_FONT8136,3832
    #define LOAD_RLELOAD_RLE139,3906
const  uint8_t widtbl_null[1] = {0};widtbl_null152,4288
PROGMEM const uint8_t chr_null[1] = {0};chr_null153,4325
PROGMEM const uint8_t* const chrtbl_null[1] = {chr_null};chrtbl_null154,4366
    const uint8_t *chartbl;chartbl159,4599
    const uint8_t *widthtbl;widthtbl160,4627
    uint8_t height;height161,4656
    uint8_t baseline;baseline162,4676
    } fontinfo;fontinfo163,4698
const PROGMEM fontinfo fontdata [] = {fontdata166,4741
#define TL_DATUM TL_DATUM216,6352
#define TC_DATUM TC_DATUM217,6393
#define TR_DATUM TR_DATUM218,6426
#define ML_DATUM ML_DATUM219,6458
#define CL_DATUM CL_DATUM220,6492
#define MC_DATUM MC_DATUM221,6541
#define CC_DATUM CC_DATUM222,6577
#define MR_DATUM MR_DATUM223,6628
#define CR_DATUM CR_DATUM224,6663
#define BL_DATUM BL_DATUM225,6713
#define BC_DATUM BC_DATUM226,6747
#define BR_DATUM BR_DATUM227,6783
#define L_BASELINE L_BASELINE228,6818
#define C_BASELINE C_BASELINE229,6905
#define R_BASELINE R_BASELINE230,6956
#define TFT_BLACK TFT_BLACK236,7271
#define TFT_NAVY TFT_NAVY237,7327
#define TFT_DARKGREEN TFT_DARKGREEN238,7383
#define TFT_DARKCYAN TFT_DARKCYAN239,7439
#define TFT_MAROON TFT_MAROON240,7495
#define TFT_PURPLE TFT_PURPLE241,7551
#define TFT_OLIVE TFT_OLIVE242,7607
#define TFT_LIGHTGREY TFT_LIGHTGREY243,7663
#define TFT_DARKGREY TFT_DARKGREY244,7719
#define TFT_BLUE TFT_BLUE245,7775
#define TFT_GREEN TFT_GREEN246,7831
#define TFT_CYAN TFT_CYAN247,7887
#define TFT_RED TFT_RED248,7943
#define TFT_MAGENTA TFT_MAGENTA249,7999
#define TFT_YELLOW TFT_YELLOW250,8055
#define TFT_WHITE TFT_WHITE251,8111
#define TFT_ORANGE TFT_ORANGE252,8167
#define TFT_GREENYELLOW TFT_GREENYELLOW253,8223
#define TFT_PINK TFT_PINK254,8279
#define TFT_BROWN TFT_BROWN255,8368
#define TFT_GOLD TFT_GOLD256,8424
#define TFT_SILVER TFT_SILVER257,8480
#define TFT_SKYBLUE TFT_SKYBLUE258,8536
#define TFT_VIOLET TFT_VIOLET259,8592
#define TFT_TRANSPARENT TFT_TRANSPARENT264,8824
static const uint16_t default_4bit_palette[] PROGMEM = {PROGMEM267,8933
String  version = TFT_ESPI_VERSION;version296,10110
int32_t esp;         // Processor codeesp297,10146
uint8_t trans;       // SPI transaction supoorttrans298,10185
uint8_t serial;      // Serial (SPI) or parallelserial299,10233
uint8_t overlap;     // ESP8266 overlap modeoverlap300,10282
    uint8_t  port = HSPI;port304,10422
    uint8_t  port = VSPI;port306,10456
uint16_t tft_driver; // Hexadecimal codetft_driver310,10499
uint16_t tft_width;  // Rotation 0 width and heighttft_width311,10540
uint16_t tft_height;tft_height312,10592
uint8_t r0_x_offset; // Display offsets, not all used yetr0_x_offset314,10614
uint8_t r0_y_offset;r0_y_offset315,10672
uint8_t r1_x_offset;r1_x_offset316,10693
uint8_t r1_y_offset;r1_y_offset317,10714
uint8_t r2_x_offset;r2_x_offset318,10735
uint8_t r2_y_offset;r2_y_offset319,10756
uint8_t r3_x_offset;r3_x_offset320,10777
uint8_t r3_y_offset;r3_y_offset321,10798
int8_t pin_tft_mosi; // SPI pinspin_tft_mosi323,10820
int8_t pin_tft_miso;pin_tft_miso324,10853
int8_t pin_tft_clk;pin_tft_clk325,10874
int8_t pin_tft_cs;pin_tft_cs326,10894
int8_t pin_tft_dc;   // Control pinspin_tft_dc328,10914
int8_t pin_tft_rd;pin_tft_rd329,10951
int8_t pin_tft_wr;pin_tft_wr330,10970
int8_t pin_tft_rst;pin_tft_rst331,10989
int8_t pin_tft_d0;   // Parallel port pinspin_tft_d0333,11010
int8_t pin_tft_d1;pin_tft_d1334,11053
int8_t pin_tft_d2;pin_tft_d2335,11072
int8_t pin_tft_d3;pin_tft_d3336,11091
int8_t pin_tft_d4;pin_tft_d4337,11110
int8_t pin_tft_d5;pin_tft_d5338,11129
int8_t pin_tft_d6;pin_tft_d6339,11148
int8_t pin_tft_d7;pin_tft_d7340,11167
int8_t pin_tft_led;pin_tft_led342,11187
int8_t pin_tft_led_on;pin_tft_led_on343,11207
int8_t pin_tch_cs;   // Touch chip select pinpin_tch_cs345,11231
int16_t tft_spi_freq;// TFT write SPI frequencytft_spi_freq347,11278
int16_t tft_rd_freq; // TFT read  SPI frequencytft_rd_freq348,11326
int16_t tch_spi_freq;// Touch controller read/write SPI frequencytch_spi_freq349,11374
} setup_t;setup_t350,11440
swap_coord(T& a, T& b) { T t = a; a = b; b = t; }swap_coord357,11761
typedef uint16_t (*getColorCallback)(uint16_t x, uint16_t y);getColorCallback360,11868
class TFT_eSPI : public Print { friend class TFT_eSprite; // Sprite class has access to protected membersTFT_eSPI363,11964
  bool     DMA_Enabled = false;   // Flag for DMA enabled stateDMA_Enabled641,29947
  uint8_t  spiBusyCheck = 0;      // Number of ESP32 transfer buffers to checkspiBusyCheck642,30011
           #define CP437_SWITCH CP437_SWITCH655,30854
           #define UTF8_SWITCH UTF8_SWITCH656,30888
           #define PSRAM_ENABLE PSRAM_ENABLE657,30922
  uint32_t textcolor, textbgcolor;         // Text foreground and background colourstextcolor667,31397
  uint32_t textcolor, textbgcolor;         // Text foreground and background colourstextbgcolor667,31397
  uint32_t bitmap_fg, bitmap_bg;           // Bitmap foreground (bit=1) and background (bit=0) coloursbitmap_fg669,31483
  uint32_t bitmap_fg, bitmap_bg;           // Bitmap foreground (bit=1) and background (bit=0) coloursbitmap_bg669,31483
  uint8_t  textfont,  // Current selected font numbertextfont671,31587
           textsize,  // Current font size multipliertextsize672,31641
           textdatum, // Text reference datumtextdatum673,31695
           rotation;  // Display rotation (0-3)rotation674,31741
  uint8_t  decoderState = 0;   // UTF8 decoder state        - not for user accessdecoderState676,31790
  uint16_t decoderBuffer;      // Unicode code-point buffer - not for user accessdecoderBuffer677,31872
  uint8_t  tabcolor,                   // ST7735 screen protector "tab" colour (now invalid)tabcolor715,33396
           colstart = 0, rowstart = 0; // Screen display area to CGRAM area coordinate offsetscolstart716,33489
           colstart = 0, rowstart = 0; // Screen display area to CGRAM area coordinate offsetsrowstart716,33489
  volatile uint32_t *dcport, *csport;dcport719,33681
  volatile uint32_t *dcport, *csport;csport719,33681
  uint32_t cspinmask, dcpinmask, wrpinmask, sclkpinmask;cspinmask720,33719
  uint32_t cspinmask, dcpinmask, wrpinmask, sclkpinmask;dcpinmask720,33719
  uint32_t cspinmask, dcpinmask, wrpinmask, sclkpinmask;wrpinmask720,33719
  uint32_t cspinmask, dcpinmask, wrpinmask, sclkpinmask;sclkpinmask720,33719
  uint32_t xclr_mask, xdir_mask; // Port set/clear and direction control masksxclr_mask724,33873
  uint32_t xclr_mask, xdir_mask; // Port set/clear and direction control masksxdir_mask724,33873
  uint32_t xset_mask[256]; // Makes Sprite rendering test 33% faster, for slower macro equivalentxset_mask727,34030
  getColorCallback getColor = nullptr; // Smooth font callback function pointergetColor733,34329
  int32_t  _init_width, _init_height; // Display w/h as input, used by setRotation()_init_width740,34585
  int32_t  _init_width, _init_height; // Display w/h as input, used by setRotation()_init_height740,34585
  int32_t  _width, _height;           // Display w/h as modified by current rotation_width741,34670
  int32_t  _width, _height;           // Display w/h as modified by current rotation_height741,34670
  int32_t  addr_row, addr_col;        // Window position - used to minimise window commandsaddr_row742,34755
  int32_t  addr_row, addr_col;        // Window position - used to minimise window commandsaddr_col742,34755
  int16_t  _xPivot;   // TFT x pivot point coordinate for rotated Sprites_xPivot744,34848
  int16_t  _yPivot;   // TFT x pivot point coordinate for rotated Sprites_yPivot745,34922
  int32_t  _vpX, _vpY, _vpW, _vpH;    // Note: x start, y start, x end + 1, y end + 1_vpX748,35021
  int32_t  _vpX, _vpY, _vpW, _vpH;    // Note: x start, y start, x end + 1, y end + 1_vpY748,35021
  int32_t  _vpX, _vpY, _vpW, _vpH;    // Note: x start, y start, x end + 1, y end + 1_vpW748,35021
  int32_t  _vpX, _vpY, _vpW, _vpH;    // Note: x start, y start, x end + 1, y end + 1_vpH748,35021
  int32_t  _xDatum;_xDatum749,35107
  int32_t  _yDatum;_yDatum750,35127
  int32_t  _xWidth;_xWidth751,35147
  int32_t  _yHeight;_yHeight752,35167
  bool     _vpDatum;_vpDatum753,35188
  bool     _vpOoB;_vpOoB754,35209
  int32_t  cursor_x, cursor_y, padX;       // Text cursor x,y and padding settingcursor_x756,35229
  int32_t  cursor_x, cursor_y, padX;       // Text cursor x,y and padding settingcursor_y756,35229
  int32_t  cursor_x, cursor_y, padX;       // Text cursor x,y and padding settingpadX756,35229
  uint32_t fontsloaded;               // Bit field of fonts loadedfontsloaded758,35312
  uint8_t  glyph_ab,   // Smooth font glyph delta Y (height) above baselineglyph_ab760,35380
           glyph_bb;   // Smooth font glyph delta Y (height) below baselineglyph_bb761,35456
  bool     isDigits;   // adjust bounding box for numbers to reduce visual jigglingisDigits763,35533
  bool     textwrapX, textwrapY;  // If set, 'wrap' text at right and optionally bottom edge of displaytextwrapX764,35617
  bool     textwrapX, textwrapY;  // If set, 'wrap' text at right and optionally bottom edge of displaytextwrapY764,35617
  bool     _swapBytes; // Swap the byte order for TFT pushImage()_swapBytes765,35721
  bool     locked, inTransaction; // SPI transaction and mutex lock flagslocked766,35787
  bool     locked, inTransaction; // SPI transaction and mutex lock flagsinTransaction766,35787
  bool     _booted;    // init() or begin() has already run once_booted768,35862
  bool     _cp437;        // If set, use correct CP437 charset (default is ON)_cp437771,36005
  bool     _utf8;         // If set, use UTF-8 decoder in print stream 'write()' function (default ON)_utf8772,36084
  bool     _psram_enable; // Enable PSRAM use for library functions (TBD) and Sprites_psram_enable773,36187
  uint32_t _lastColor; // Buffered value of last colour used_lastColor775,36274
  GFXfont  *gfxFont;gfxFont778,36354

lib/TFT_eSPI/User_Setup_Select.h,1873
#define TFT_BGR TFT_BGR97,6226
#define TFT_RGB TFT_RGB98,6277
    #define RPI_DISPLAY_TYPERPI_DISPLAY_TYPE103,6450
    #define ILI9486_DRIVERILI9486_DRIVER111,6705
    #define RPI_DISPLAY_TYPERPI_DISPLAY_TYPE114,6775
    #define SPI_18BIT_DRIVERSPI_18BIT_DRIVER121,7048
     #define  TFT_DRIVER TFT_DRIVER128,7230
     #define  TFT_DRIVER TFT_DRIVER131,7337
     #define  TFT_DRIVER TFT_DRIVER134,7446
     #define  TFT_DRIVER TFT_DRIVER137,7555
      #define  TFT_DRIVER TFT_DRIVER140,7663
     #define  TFT_DRIVER TFT_DRIVER143,7773
     #define  TFT_DRIVER TFT_DRIVER146,7882
     #define  TFT_DRIVER TFT_DRIVER149,7991
     #define  TFT_DRIVER TFT_DRIVER152,8100
     #define  TFT_DRIVER TFT_DRIVER155,8201
     #define  TFT_DRIVER TFT_DRIVER158,8307
     #define  TFT_DRIVER TFT_DRIVER161,8414
     #define  TFT_DRIVER TFT_DRIVER164,8525
     #define  TFT_DRIVER TFT_DRIVER167,8634
     #define  TFT_DRIVER TFT_DRIVER170,8747
     #define  TFT_DRIVER TFT_DRIVER173,8860
     #define  TFT_DRIVER TFT_DRIVER176,8976
     #define  TFT_DRIVER TFT_DRIVER179,9091
     #define  TFT_DRIVER TFT_DRIVER182,9198
     #define  TFT_DRIVER TFT_DRIVER185,9307
     #define  TFT_DRIVER TFT_DRIVER190,9592
     #define  TFT_DRIVER TFT_DRIVER192,9630
#define PIN_D0 PIN_D0197,9756
#define PIN_D1 PIN_D1198,9797
#define PIN_D2 PIN_D2199,9846
#define PIN_D3 PIN_D3200,9895
#define PIN_D4 PIN_D4201,9966
#define PIN_D5 PIN_D5202,10056
#define PIN_D6 PIN_D6203,10098
#define PIN_D7 PIN_D7204,10140
#define PIN_D8 PIN_D8205,10188
#define PIN_D9 PIN_D9206,10284
#define PIN_D10 PIN_D10207,10325
#define PIN_MOSI PIN_MOSI209,10367
#define PIN_MISO PIN_MISO210,10426
#define PIN_SCLK PIN_SCLK211,10453
#define PIN_HWCS PIN_HWCS212,10480
#define PIN_D11 PIN_D11214,10507
#define PIN_D12 PIN_D12215,10534

lib/TFT_eSPI/Fonts/Font72x53rle.h,200
#define nr_chrs_f72 nr_chrs_f723,33
#define chr_hgt_f72 chr_hgt_f724,56
#define baseline_f72 baseline_f725,79
#define data_size_f72 data_size_f726,103
#define firstchr_f72 firstchr_f727,127

lib/TFT_eSPI/Fonts/Font72x53rle.c,1099
PROGMEM const unsigned char widtbl_f72[96] =          // character width tablewidtbl_f7211,346
PROGMEM const unsigned char chr_f72_20[] = chr_f72_2029,1183
PROGMEM const unsigned char chr_f72_2D[] = chr_f72_2D36,1336
PROGMEM const unsigned char chr_f72_2E[] = chr_f72_2E44,1565
PROGMEM const unsigned char chr_f72_30[] = chr_f72_3053,1816
PROGMEM const unsigned char chr_f72_31[] = chr_f72_3173,3365
PROGMEM const unsigned char chr_f72_32[] = chr_f72_3287,4371
PROGMEM const unsigned char chr_f72_33[] = chr_f72_33102,5414
PROGMEM const unsigned char chr_f72_34[] = chr_f72_34118,6614
PROGMEM const unsigned char chr_f72_35[] = chr_f72_35134,7808
PROGMEM const unsigned char chr_f72_36[] = chr_f72_36150,8978
PROGMEM const unsigned char chr_f72_37[] = chr_f72_37170,10482
PROGMEM const unsigned char chr_f72_38[] = chr_f72_38183,11379
PROGMEM const unsigned char chr_f72_39[] = chr_f72_39202,12846
PROGMEM const unsigned char chr_f72_3A[] = chr_f72_3A221,14349
PROGMEM const unsigned char * const chrtbl_f72[96] =        // character pointer tablechrtbl_f72231,14697

lib/TFT_eSPI/Fonts/Font32rle.h,200
#define nr_chrs_f32 nr_chrs_f323,30
#define chr_hgt_f32 chr_hgt_f324,53
#define baseline_f32 baseline_f325,76
#define data_size_f32 data_size_f326,100
#define firstchr_f32 firstchr_f327,124

lib/TFT_eSPI/Fonts/Font32rle.c,6404
PROGMEM const unsigned char widtbl_f32[96] =         // character width tablewidtbl_f328,127
PROGMEM const unsigned char chr_f32_20[] = chr_f32_2026,946
PROGMEM const unsigned char chr_f32_21[] = chr_f32_2131,1006
PROGMEM const unsigned char chr_f32_22[] = chr_f32_2240,1257
PROGMEM const unsigned char chr_f32_23[] = chr_f32_2348,1489
PROGMEM const unsigned char chr_f32_24[] = chr_f32_2461,1941
PROGMEM const unsigned char chr_f32_25[] = chr_f32_2571,2265
PROGMEM const unsigned char chr_f32_26[] = chr_f32_2687,2888
PROGMEM const unsigned char chr_f32_27[] = chr_f32_27100,3359
PROGMEM const unsigned char chr_f32_28[] = chr_f32_28106,3487
PROGMEM const unsigned char chr_f32_29[] = chr_f32_29117,3835
PROGMEM const unsigned char chr_f32_2A[] = chr_f32_2A128,4183
PROGMEM const unsigned char chr_f32_2B[] = chr_f32_2B136,4427
PROGMEM const unsigned char chr_f32_2C[] = chr_f32_2C143,4580
PROGMEM const unsigned char chr_f32_2D[] = chr_f32_2D149,4720
PROGMEM const unsigned char chr_f32_2E[] = chr_f32_2E154,4799
PROGMEM const unsigned char chr_f32_2F[] = chr_f32_2F159,4890
PROGMEM const unsigned char chr_f32_30[] = chr_f32_30169,5190
PROGMEM const unsigned char chr_f32_31[] = chr_f32_31181,5612
PROGMEM const unsigned char chr_f32_32[] = chr_f32_32190,5875
PROGMEM const unsigned char chr_f32_33[] = chr_f32_33200,6187
PROGMEM const unsigned char chr_f32_34[] = chr_f32_34211,6536
PROGMEM const unsigned char chr_f32_35[] = chr_f32_35222,6885
PROGMEM const unsigned char chr_f32_36[] = chr_f32_36232,7221
PROGMEM const unsigned char chr_f32_37[] = chr_f32_37244,7619
PROGMEM const unsigned char chr_f32_38[] = chr_f32_38253,7882
PROGMEM const unsigned char chr_f32_39[] = chr_f32_39265,8280
PROGMEM const unsigned char chr_f32_3A[] = chr_f32_3A277,8678
PROGMEM const unsigned char chr_f32_3B[] = chr_f32_3B283,8806
PROGMEM const unsigned char chr_f32_3C[] = chr_f32_3C290,8983
PROGMEM const unsigned char chr_f32_3D[] = chr_f32_3D297,9153
PROGMEM const unsigned char chr_f32_3E[] = chr_f32_3E303,9257
PROGMEM const unsigned char chr_f32_3F[] = chr_f32_3F310,9428
PROGMEM const unsigned char chr_f32_40[] = chr_f32_40320,9728
PROGMEM const unsigned char chr_f32_41[] = chr_f32_41339,10505
PROGMEM const unsigned char chr_f32_42[] = chr_f32_42351,10939
PROGMEM const unsigned char chr_f32_43[] = chr_f32_43363,11361
PROGMEM const unsigned char chr_f32_44[] = chr_f32_44374,11751
PROGMEM const unsigned char chr_f32_45[] = chr_f32_45387,12203
PROGMEM const unsigned char chr_f32_46[] = chr_f32_46396,12478
PROGMEM const unsigned char chr_f32_47[] = chr_f32_47405,12753
PROGMEM const unsigned char chr_f32_48[] = chr_f32_48417,13192
PROGMEM const unsigned char chr_f32_49[] = chr_f32_49430,13663
PROGMEM const unsigned char chr_f32_4A[] = chr_f32_4A439,13938
PROGMEM const unsigned char chr_f32_4B[] = chr_f32_4B449,14262
PROGMEM const unsigned char chr_f32_4C[] = chr_f32_4C462,14745
PROGMEM const unsigned char chr_f32_4D[] = chr_f32_4D471,15020
PROGMEM const unsigned char chr_f32_4E[] = chr_f32_4E491,15828
PROGMEM const unsigned char chr_f32_4F[] = chr_f32_4F507,16446
PROGMEM const unsigned char chr_f32_50[] = chr_f32_50520,16898
PROGMEM const unsigned char chr_f32_51[] = chr_f32_51531,17247
PROGMEM const unsigned char chr_f32_52[] = chr_f32_52545,17743
PROGMEM const unsigned char chr_f32_53[] = chr_f32_53558,18190
PROGMEM const unsigned char chr_f32_54[] = chr_f32_54569,18563
PROGMEM const unsigned char chr_f32_55[] = chr_f32_55578,18826
PROGMEM const unsigned char chr_f32_56[] = chr_f32_56591,19302
PROGMEM const unsigned char chr_f32_57[] = chr_f32_57604,19761
PROGMEM const unsigned char chr_f32_58[] = chr_f32_58624,20593
PROGMEM const unsigned char chr_f32_59[] = chr_f32_59637,21052
PROGMEM const unsigned char chr_f32_5A[] = chr_f32_5A648,21425
PROGMEM const unsigned char chr_f32_5B[] = chr_f32_5B657,21700
PROGMEM const unsigned char chr_f32_5C[] = chr_f32_5C667,22036
PROGMEM const unsigned char chr_f32_5D[] = chr_f32_5D678,22396
PROGMEM const unsigned char chr_f32_5E[] = chr_f32_5E688,22732
PROGMEM const unsigned char chr_f32_5F[] = chr_f32_5F695,22903
PROGMEM const unsigned char chr_f32_60[] = chr_f32_60700,22982
PROGMEM const unsigned char chr_f32_61[] = chr_f32_61708,23190
PROGMEM const unsigned char chr_f32_62[] = chr_f32_62718,23502
PROGMEM const unsigned char chr_f32_63[] = chr_f32_63730,23936
PROGMEM const unsigned char chr_f32_64[] = chr_f32_64739,24211
PROGMEM const unsigned char chr_f32_65[] = chr_f32_65751,24645
PROGMEM const unsigned char chr_f32_66[] = chr_f32_66760,24920
PROGMEM const unsigned char chr_f32_67[] = chr_f32_67769,25195
PROGMEM const unsigned char chr_f32_68[] = chr_f32_68782,25678
PROGMEM const unsigned char chr_f32_69[] = chr_f32_69794,26112
PROGMEM const unsigned char chr_f32_6A[] = chr_f32_6A803,26363
PROGMEM const unsigned char chr_f32_6B[] = chr_f32_6B813,26686
PROGMEM const unsigned char chr_f32_6C[] = chr_f32_6C825,27084
PROGMEM const unsigned char chr_f32_6D[] = chr_f32_6D834,27359
PROGMEM const unsigned char chr_f32_6E[] = chr_f32_6E849,27904
PROGMEM const unsigned char chr_f32_6F[] = chr_f32_6F860,28277
PROGMEM const unsigned char chr_f32_70[] = chr_f32_70870,28601
PROGMEM const unsigned char chr_f32_71[] = chr_f32_71882,29035
PROGMEM const unsigned char chr_f32_72[] = chr_f32_72894,29469
PROGMEM const unsigned char chr_f32_73[] = chr_f32_73902,29695
PROGMEM const unsigned char chr_f32_74[] = chr_f32_74911,29958
PROGMEM const unsigned char chr_f32_75[] = chr_f32_75920,30221
PROGMEM const unsigned char chr_f32_76[] = chr_f32_76931,30594
PROGMEM const unsigned char chr_f32_77[] = chr_f32_77941,30930
PROGMEM const unsigned char chr_f32_78[] = chr_f32_78957,31529
PROGMEM const unsigned char chr_f32_79[] = chr_f32_79967,31865
PROGMEM const unsigned char chr_f32_7A[] = chr_f32_7A979,32299
PROGMEM const unsigned char chr_f32_7B[] = chr_f32_7B987,32513
PROGMEM const unsigned char chr_f32_7C[] = chr_f32_7C998,32873
PROGMEM const unsigned char chr_f32_7D[] = chr_f32_7D1009,33234
PROGMEM const unsigned char chr_f32_7E[] = chr_f32_7E1020,33595
PROGMEM const unsigned char chr_f32_7F[] = chr_f32_7F1028,33797
PROGMEM const unsigned char* const chrtbl_f32[96] =       // character pointer tablechrtbl_f321032,33851

lib/TFT_eSPI/Fonts/Font64rle.c,1286
PROGMEM const unsigned char widtbl_f64[96] =          // character width tablewidtbl_f6410,304
PROGMEM const unsigned char chr_f64_20[] = chr_f64_2026,1115
PROGMEM const unsigned char chr_f64_2D[] = chr_f64_2D31,1194
PROGMEM const unsigned char chr_f64_2E[] = chr_f64_2E37,1328
PROGMEM const unsigned char chr_f64_30[] = chr_f64_3043,1468
PROGMEM const unsigned char chr_f64_31[] = chr_f64_3164,2319
PROGMEM const unsigned char chr_f64_32[] = chr_f64_3278,2839
PROGMEM const unsigned char chr_f64_33[] = chr_f64_3394,3433
PROGMEM const unsigned char chr_f64_34[] = chr_f64_34111,4112
PROGMEM const unsigned char chr_f64_35[] = chr_f64_35128,4779
PROGMEM const unsigned char chr_f64_36[] = chr_f64_36144,5409
PROGMEM const unsigned char chr_f64_37[] = chr_f64_37164,6211
PROGMEM const unsigned char chr_f64_38[] = chr_f64_38177,6694
PROGMEM const unsigned char chr_f64_39[] = chr_f64_39197,7496
PROGMEM const unsigned char chr_f64_3A[] = chr_f64_3A217,8298
PROGMEM const unsigned char chr_f64_61[] = chr_f64_61224,8493
PROGMEM const unsigned char chr_f64_6D[] = chr_f64_6D240,9129
PROGMEM const unsigned char chr_f64_70[] = chr_f64_70265,10200
PROGMEM const unsigned char* const chrtbl_f64[96] =        // character pointer tablechrtbl_f64285,11062

lib/TFT_eSPI/Fonts/Font16.h,199
#define nr_chrs_f16 nr_chrs_f163,27
#define chr_hgt_f16 chr_hgt_f164,50
#define baseline_f16 baseline_f165,73
#define data_size_f16 data_size_f166,97
#define firstchr_f16 firstchr_f167,121

lib/TFT_eSPI/Fonts/Font7srle.h,200
#define nr_chrs_f7s nr_chrs_f7s3,30
#define chr_hgt_f7s chr_hgt_f7s4,53
#define baseline_f7s baseline_f7s5,76
#define data_size_f7s data_size_f7s6,100
#define firstchr_f7s firstchr_f7s7,124

lib/TFT_eSPI/Fonts/GFXFF/FreeSansBoldOblique12pt7b.h,222
const uint8_t FreeSansBoldOblique12pt7bBitmaps[] PROGMEM = {PROGMEM1,0
const GFXglyph FreeSansBoldOblique12pt7bGlyphs[] PROGMEM = {PROGMEM215,15698
const GFXfont FreeSansBoldOblique12pt7b PROGMEM = {PROGMEM312,20890

lib/TFT_eSPI/Fonts/GFXFF/FreeSans9pt7b.h,184
const uint8_t FreeSans9pt7bBitmaps[] PROGMEM = {PROGMEM1,0
const GFXglyph FreeSans9pt7bGlyphs[] PROGMEM = {PROGMEM99,7144
const GFXfont FreeSans9pt7b PROGMEM = {PROGMEM196,12324

lib/TFT_eSPI/Fonts/GFXFF/FreeMonoBold24pt7b.h,201
const uint8_t FreeMonoBold24pt7bBitmaps[] PROGMEM = {PROGMEM1,0
const GFXglyph FreeMonoBold24pt7bGlyphs[] PROGMEM = {PROGMEM570,41973
const GFXfont FreeMonoBold24pt7b PROGMEM = {PROGMEM667,47158

lib/TFT_eSPI/Fonts/GFXFF/FreeSansBold9pt7b.h,197
const uint8_t FreeSansBold9pt7bBitmaps[] PROGMEM = {PROGMEM1,0
const GFXglyph FreeSansBold9pt7bGlyphs[] PROGMEM = {PROGMEM106,7642
const GFXfont FreeSansBold9pt7b PROGMEM = {PROGMEM203,12826

lib/TFT_eSPI/Fonts/GFXFF/FreeMonoOblique9pt7b.h,205
const uint8_t FreeMonoOblique9pt7bBitmaps[] PROGMEM = {PROGMEM1,0
const GFXglyph FreeMonoOblique9pt7bGlyphs[] PROGMEM = {PROGMEM85,6115
const GFXfont FreeMonoOblique9pt7b PROGMEM = {PROGMEM182,11302

lib/TFT_eSPI/Fonts/GFXFF/FreeSansBoldOblique24pt7b.h,222
const uint8_t FreeSansBoldOblique24pt7bBitmaps[] PROGMEM = {PROGMEM1,0
const GFXglyph FreeSansBoldOblique24pt7bGlyphs[] PROGMEM = {PROGMEM791,58322
const GFXfont FreeSansBoldOblique24pt7b PROGMEM = {PROGMEM888,63514

lib/TFT_eSPI/Fonts/GFXFF/FreeSansOblique9pt7b.h,206
const uint8_t FreeSansOblique9pt7bBitmaps[] PROGMEM = {PROGMEM1,0
const GFXglyph FreeSansOblique9pt7bGlyphs[] PROGMEM = {PROGMEM118,8503
const GFXfont FreeSansOblique9pt7b PROGMEM = {PROGMEM215,13690

lib/TFT_eSPI/Fonts/GFXFF/FreeSansBold18pt7b.h,201
const uint8_t FreeSansBold18pt7bBitmaps[] PROGMEM = {PROGMEM1,0
const GFXglyph FreeSansBold18pt7bGlyphs[] PROGMEM = {PROGMEM379,27827
const GFXfont FreeSansBold18pt7b PROGMEM = {PROGMEM476,33012

lib/TFT_eSPI/Fonts/GFXFF/TomThumb.h,236
#define TOMTHUMB_USE_EXTENDED TOMTHUMB_USE_EXTENDED49,2329
const uint8_t TomThumbBitmaps[] PROGMEM = {PROGMEM51,2362
const GFXglyph TomThumbGlyphs[] PROGMEM = {PROGMEM262,14336
const GFXfont TomThumb PROGMEM = {PROGMEM471,23996

lib/TFT_eSPI/Fonts/GFXFF/FreeSerif18pt7b.h,192
const uint8_t FreeSerif18pt7bBitmaps[] PROGMEM = {PROGMEM1,0
const GFXglyph FreeSerif18pt7bGlyphs[] PROGMEM = {PROGMEM327,24018
const GFXfont FreeSerif18pt7b PROGMEM = {PROGMEM424,29200

lib/TFT_eSPI/Fonts/GFXFF/FreeMonoOblique24pt7b.h,210
const uint8_t FreeMonoOblique24pt7bBitmaps[] PROGMEM = {PROGMEM1,0
const GFXglyph FreeMonoOblique24pt7bGlyphs[] PROGMEM = {PROGMEM541,39848
const GFXfont FreeMonoOblique24pt7b PROGMEM = {PROGMEM638,45036

lib/TFT_eSPI/Fonts/GFXFF/FreeSerifItalic12pt7b.h,210
const uint8_t FreeSerifItalic12pt7bBitmaps[] PROGMEM = {PROGMEM1,0
const GFXglyph FreeSerifItalic12pt7bGlyphs[] PROGMEM = {PROGMEM169,12296
const GFXfont FreeSerifItalic12pt7b PROGMEM = {PROGMEM266,17484

lib/TFT_eSPI/Fonts/GFXFF/FreeMonoBoldOblique12pt7b.h,222
const uint8_t FreeMonoBoldOblique12pt7bBitmaps[] PROGMEM = {PROGMEM1,0
const GFXglyph FreeMonoBoldOblique12pt7bGlyphs[] PROGMEM = {PROGMEM167,12188
const GFXfont FreeMonoBoldOblique12pt7b PROGMEM = {PROGMEM264,17380

lib/TFT_eSPI/Fonts/GFXFF/FreeMono12pt7b.h,188
const uint8_t FreeMono12pt7bBitmaps[] PROGMEM = {PROGMEM1,0
const GFXglyph FreeMono12pt7bGlyphs[] PROGMEM = {PROGMEM125,9057
const GFXfont FreeMono12pt7b PROGMEM = {PROGMEM222,14238

lib/TFT_eSPI/Fonts/GFXFF/FreeSansOblique24pt7b.h,210
const uint8_t FreeSansOblique24pt7bBitmaps[] PROGMEM = {PROGMEM1,0
const GFXglyph FreeSansOblique24pt7bGlyphs[] PROGMEM = {PROGMEM738,54396
const GFXfont FreeSansOblique24pt7b PROGMEM = {PROGMEM835,59584

lib/TFT_eSPI/Fonts/GFXFF/FreeMono24pt7b.h,189
const uint8_t FreeMono24pt7bBitmaps[] PROGMEM = {PROGMEM1,0
const GFXglyph FreeMono24pt7bGlyphs[] PROGMEM = {PROGMEM475,34945
const GFXfont FreeMono24pt7b PROGMEM = {PROGMEM572,40126

lib/TFT_eSPI/Fonts/GFXFF/FreeSerifBold12pt7b.h,204
const uint8_t FreeSerifBold12pt7bBitmaps[] PROGMEM = {PROGMEM1,0
const GFXglyph FreeSerifBold12pt7bGlyphs[] PROGMEM = {PROGMEM169,12336
const GFXfont FreeSerifBold12pt7b PROGMEM = {PROGMEM266,17522

lib/TFT_eSPI/Fonts/GFXFF/FreeSansOblique12pt7b.h,210
const uint8_t FreeSansOblique12pt7bBitmaps[] PROGMEM = {PROGMEM1,0
const GFXglyph FreeSansOblique12pt7bGlyphs[] PROGMEM = {PROGMEM200,14626
const GFXfont FreeSansOblique12pt7b PROGMEM = {PROGMEM297,19814

lib/TFT_eSPI/Fonts/GFXFF/FreeMonoBold9pt7b.h,196
const uint8_t FreeMonoBold9pt7bBitmaps[] PROGMEM = {PROGMEM1,0
const GFXglyph FreeMonoBold9pt7bGlyphs[] PROGMEM = {PROGMEM87,6224
const GFXfont FreeMonoBold9pt7b PROGMEM = {PROGMEM184,11408

lib/TFT_eSPI/Fonts/GFXFF/FreeMonoBold12pt7b.h,201
const uint8_t FreeMonoBold12pt7bBitmaps[] PROGMEM = {PROGMEM1,0
const GFXglyph FreeMonoBold12pt7bGlyphs[] PROGMEM = {PROGMEM148,10727
const GFXfont FreeMonoBold12pt7b PROGMEM = {PROGMEM245,15912

lib/TFT_eSPI/Fonts/GFXFF/FreeSansOblique18pt7b.h,210
const uint8_t FreeSansOblique18pt7bBitmaps[] PROGMEM = {PROGMEM1,0
const GFXglyph FreeSansOblique18pt7bGlyphs[] PROGMEM = {PROGMEM416,30592
const GFXfont FreeSansOblique18pt7b PROGMEM = {PROGMEM513,35780

lib/TFT_eSPI/Fonts/GFXFF/FreeSansBold24pt7b.h,201
const uint8_t FreeSansBold24pt7bBitmaps[] PROGMEM = {PROGMEM1,0
const GFXglyph FreeSansBold24pt7bGlyphs[] PROGMEM = {PROGMEM682,50273
const GFXfont FreeSansBold24pt7b PROGMEM = {PROGMEM779,55458

lib/TFT_eSPI/Fonts/GFXFF/FreeSansBoldOblique9pt7b.h,218
const uint8_t FreeSansBoldOblique9pt7bBitmaps[] PROGMEM = {PROGMEM1,0
const GFXglyph FreeSansBoldOblique9pt7bGlyphs[] PROGMEM = {PROGMEM125,9091
const GFXfont FreeSansBoldOblique9pt7b PROGMEM = {PROGMEM222,14282

lib/TFT_eSPI/Fonts/GFXFF/FreeMonoOblique18pt7b.h,210
const uint8_t FreeMonoOblique18pt7bBitmaps[] PROGMEM = {PROGMEM1,0
const GFXglyph FreeMonoOblique18pt7bGlyphs[] PROGMEM = {PROGMEM296,21730
const GFXfont FreeMonoOblique18pt7b PROGMEM = {PROGMEM393,26918

lib/TFT_eSPI/Fonts/GFXFF/FreeSerifBoldItalic9pt7b.h,218
const uint8_t FreeSerifBoldItalic9pt7bBitmaps[] PROGMEM = {PROGMEM1,0
const GFXglyph FreeSerifBoldItalic9pt7bGlyphs[] PROGMEM = {PROGMEM113,8143
const GFXfont FreeSerifBoldItalic9pt7b PROGMEM = {PROGMEM210,13334

lib/TFT_eSPI/Fonts/GFXFF/FreeSerifBoldItalic18pt7b.h,222
const uint8_t FreeSerifBoldItalic18pt7bBitmaps[] PROGMEM = {PROGMEM1,0
const GFXglyph FreeSerifBoldItalic18pt7bGlyphs[] PROGMEM = {PROGMEM398,29282
const GFXfont FreeSerifBoldItalic18pt7b PROGMEM = {PROGMEM495,34474

lib/TFT_eSPI/Fonts/GFXFF/FreeSerifBold9pt7b.h,200
const uint8_t FreeSerifBold9pt7bBitmaps[] PROGMEM = {PROGMEM1,0
const GFXglyph FreeSerifBold9pt7bGlyphs[] PROGMEM = {PROGMEM100,7223
const GFXfont FreeSerifBold9pt7b PROGMEM = {PROGMEM197,12408

lib/TFT_eSPI/Fonts/GFXFF/FreeMonoBold18pt7b.h,201
const uint8_t FreeMonoBold18pt7bBitmaps[] PROGMEM = {PROGMEM1,0
const GFXglyph FreeMonoBold18pt7bGlyphs[] PROGMEM = {PROGMEM321,23571
const GFXfont FreeMonoBold18pt7b PROGMEM = {PROGMEM418,28756

lib/TFT_eSPI/Fonts/GFXFF/FreeMono18pt7b.h,189
const uint8_t FreeMono18pt7bBitmaps[] PROGMEM = {PROGMEM1,0
const GFXglyph FreeMono18pt7bGlyphs[] PROGMEM = {PROGMEM261,19103
const GFXfont FreeMono18pt7b PROGMEM = {PROGMEM358,24284

lib/TFT_eSPI/Fonts/GFXFF/FreeSerifBoldItalic24pt7b.h,222
const uint8_t FreeSerifBoldItalic24pt7bBitmaps[] PROGMEM = {PROGMEM1,0
const GFXglyph FreeSerifBoldItalic24pt7bGlyphs[] PROGMEM = {PROGMEM691,50910
const GFXfont FreeSerifBoldItalic24pt7b PROGMEM = {PROGMEM788,56102

lib/TFT_eSPI/Fonts/GFXFF/FreeSerif9pt7b.h,187
const uint8_t FreeSerif9pt7bBitmaps[] PROGMEM = {PROGMEM1,0
const GFXglyph FreeSerif9pt7bGlyphs[] PROGMEM = {PROGMEM93,6713
const GFXfont FreeSerif9pt7b PROGMEM = {PROGMEM190,11894

lib/TFT_eSPI/Fonts/GFXFF/FreeSans12pt7b.h,189
const uint8_t FreeSans12pt7bBitmaps[] PROGMEM = {PROGMEM1,0
const GFXglyph FreeSans12pt7bGlyphs[] PROGMEM = {PROGMEM168,12197
const GFXfont FreeSans12pt7b PROGMEM = {PROGMEM265,17378

lib/TFT_eSPI/Fonts/GFXFF/FreeSans24pt7b.h,189
const uint8_t FreeSans24pt7bBitmaps[] PROGMEM = {PROGMEM1,0
const GFXglyph FreeSans24pt7bGlyphs[] PROGMEM = {PROGMEM625,46081
const GFXfont FreeSans24pt7b PROGMEM = {PROGMEM722,51262

lib/TFT_eSPI/Fonts/GFXFF/FreeSans18pt7b.h,189
const uint8_t FreeSans18pt7bBitmaps[] PROGMEM = {PROGMEM1,0
const GFXglyph FreeSans18pt7bGlyphs[] PROGMEM = {PROGMEM350,25701
const GFXfont FreeSans18pt7b PROGMEM = {PROGMEM447,30882

lib/TFT_eSPI/Fonts/GFXFF/FreeMono9pt7b.h,184
const uint8_t FreeMono9pt7bBitmaps[] PROGMEM = {PROGMEM1,0
const GFXglyph FreeMono9pt7bGlyphs[] PROGMEM = {PROGMEM74,5258
const GFXfont FreeMono9pt7b PROGMEM = {PROGMEM171,10438

lib/TFT_eSPI/Fonts/GFXFF/FreeSerifItalic24pt7b.h,210
const uint8_t FreeSerifItalic24pt7bBitmaps[] PROGMEM = {PROGMEM1,0
const GFXglyph FreeSerifItalic24pt7bGlyphs[] PROGMEM = {PROGMEM635,46798
const GFXfont FreeSerifItalic24pt7b PROGMEM = {PROGMEM732,51986

lib/TFT_eSPI/Fonts/GFXFF/FreeSerifBold24pt7b.h,204
const uint8_t FreeSerifBold24pt7bBitmaps[] PROGMEM = {PROGMEM1,0
const GFXglyph FreeSerifBold24pt7bGlyphs[] PROGMEM = {PROGMEM657,48448
const GFXfont FreeSerifBold24pt7b PROGMEM = {PROGMEM754,53634

lib/TFT_eSPI/Fonts/GFXFF/FreeSerifItalic9pt7b.h,206
const uint8_t FreeSerifItalic9pt7bBitmaps[] PROGMEM = {PROGMEM1,0
const GFXglyph FreeSerifItalic9pt7bGlyphs[] PROGMEM = {PROGMEM100,7231
const GFXfont FreeSerifItalic9pt7b PROGMEM = {PROGMEM197,12418

lib/TFT_eSPI/Fonts/GFXFF/FreeSerif12pt7b.h,192
const uint8_t FreeSerif12pt7bBitmaps[] PROGMEM = {PROGMEM1,0
const GFXglyph FreeSerif12pt7bGlyphs[] PROGMEM = {PROGMEM157,11396
const GFXfont FreeSerif12pt7b PROGMEM = {PROGMEM254,16578

lib/TFT_eSPI/Fonts/GFXFF/FreeSerifBold18pt7b.h,204
const uint8_t FreeSerifBold18pt7bBitmaps[] PROGMEM = {PROGMEM1,0
const GFXglyph FreeSerifBold18pt7bGlyphs[] PROGMEM = {PROGMEM360,26410
const GFXfont FreeSerifBold18pt7b PROGMEM = {PROGMEM457,31596

lib/TFT_eSPI/Fonts/GFXFF/FreeSansBold12pt7b.h,201
const uint8_t FreeSansBold12pt7bBitmaps[] PROGMEM = {PROGMEM1,0
const GFXglyph FreeSansBold12pt7bGlyphs[] PROGMEM = {PROGMEM186,13539
const GFXfont FreeSansBold12pt7b PROGMEM = {PROGMEM283,18724

lib/TFT_eSPI/Fonts/GFXFF/FreeMonoBoldOblique24pt7b.h,222
const uint8_t FreeMonoBoldOblique24pt7bBitmaps[] PROGMEM = {PROGMEM1,0
const GFXglyph FreeMonoBoldOblique24pt7bGlyphs[] PROGMEM = {PROGMEM640,47148
const GFXfont FreeMonoBoldOblique24pt7b PROGMEM = {PROGMEM737,52340

lib/TFT_eSPI/Fonts/GFXFF/FreeMonoBoldOblique18pt7b.h,222
const uint8_t FreeMonoBoldOblique18pt7bBitmaps[] PROGMEM = {PROGMEM1,0
const GFXglyph FreeMonoBoldOblique18pt7bGlyphs[] PROGMEM = {PROGMEM358,26310
const GFXfont FreeMonoBoldOblique18pt7b PROGMEM = {PROGMEM455,31502

lib/TFT_eSPI/Fonts/GFXFF/FreeSerifBoldItalic12pt7b.h,222
const uint8_t FreeSerifBoldItalic12pt7bBitmaps[] PROGMEM = {PROGMEM1,0
const GFXglyph FreeSerifBoldItalic12pt7bGlyphs[] PROGMEM = {PROGMEM190,13866
const GFXfont FreeSerifBoldItalic12pt7b PROGMEM = {PROGMEM287,19058

lib/TFT_eSPI/Fonts/GFXFF/FreeSerifItalic18pt7b.h,210
const uint8_t FreeSerifItalic18pt7bBitmaps[] PROGMEM = {PROGMEM1,0
const GFXglyph FreeSerifItalic18pt7bGlyphs[] PROGMEM = {PROGMEM348,25548
const GFXfont FreeSerifItalic18pt7b PROGMEM = {PROGMEM445,30736

lib/TFT_eSPI/Fonts/GFXFF/FreeSerif24pt7b.h,192
const uint8_t FreeSerif24pt7bBitmaps[] PROGMEM = {PROGMEM1,0
const GFXglyph FreeSerif24pt7bGlyphs[] PROGMEM = {PROGMEM588,43284
const GFXfont FreeSerif24pt7b PROGMEM = {PROGMEM685,48466

lib/TFT_eSPI/Fonts/GFXFF/gfxfont.h,858
#define _GFXFONT_H__GFXFONT_H_10,373
	uint32_t bitmapOffset;     // Pointer into GFXfont->bitmapbitmapOffset15,455
	uint8_t  width, height;    // Bitmap dimensions in pixelswidth16,515
	uint8_t  width, height;    // Bitmap dimensions in pixelsheight16,515
	uint8_t  xAdvance;         // Distance to advance cursor (x axis)xAdvance17,574
	int8_t   xOffset, yOffset; // Dist from cursor pos to UL cornerxOffset18,641
	int8_t   xOffset, yOffset; // Dist from cursor pos to UL corneryOffset18,641
} GFXglyph;GFXglyph19,706
	uint8_t  *bitmap;      // Glyph bitmaps, concatenatedbitmap22,772
	GFXglyph *glyph;       // Glyph arrayglyph23,827
	uint16_t  first, last; // ASCII extentsfirst24,866
	uint16_t  first, last; // ASCII extentslast24,866
	uint8_t   yAdvance;    // Newline distance (y axis)yAdvance25,907
} GFXfont;GFXfont26,960

lib/TFT_eSPI/Fonts/GFXFF/FreeSansBoldOblique18pt7b.h,222
const uint8_t FreeSansBoldOblique18pt7bBitmaps[] PROGMEM = {PROGMEM1,0
const GFXglyph FreeSansBoldOblique18pt7bGlyphs[] PROGMEM = {PROGMEM443,32570
const GFXfont FreeSansBoldOblique18pt7b PROGMEM = {PROGMEM540,37762

lib/TFT_eSPI/Fonts/GFXFF/FreeMonoOblique12pt7b.h,210
const uint8_t FreeMonoOblique12pt7bBitmaps[] PROGMEM = {PROGMEM1,0
const GFXglyph FreeMonoOblique12pt7bGlyphs[] PROGMEM = {PROGMEM146,10588
const GFXfont FreeMonoOblique12pt7b PROGMEM = {PROGMEM243,15776

lib/TFT_eSPI/Fonts/GFXFF/FreeMonoBoldOblique9pt7b.h,218
const uint8_t FreeMonoBoldOblique9pt7bBitmaps[] PROGMEM = {PROGMEM1,0
const GFXglyph FreeMonoBoldOblique9pt7bGlyphs[] PROGMEM = {PROGMEM101,7261
const GFXfont FreeMonoBoldOblique9pt7b PROGMEM = {PROGMEM198,12452

lib/TFT_eSPI/Fonts/Font7srle.c,1093
PROGMEM const unsigned char widtbl_f7s[96] =          // character width tablewidtbl_f7s10,263
PROGMEM const unsigned char chr_f7s_20[] = chr_f7s_2028,1100
PROGMEM const unsigned char chr_f7s_2D[] = chr_f7s_2D34,1214
PROGMEM const unsigned char chr_f7s_2E[] = chr_f7s_2E41,1391
PROGMEM const unsigned char chr_f7s_30[] = chr_f7s_3047,1525
PROGMEM const unsigned char chr_f7s_31[] = chr_f7s_3173,2609
PROGMEM const unsigned char chr_f7s_32[] = chr_f7s_3287,3129
PROGMEM const unsigned char chr_f7s_33[] = chr_f7s_33105,3833
PROGMEM const unsigned char chr_f7s_34[] = chr_f7s_34123,4525
PROGMEM const unsigned char chr_f7s_35[] = chr_f7s_35143,5327
PROGMEM const unsigned char chr_f7s_36[] = chr_f7s_36160,6006
PROGMEM const unsigned char chr_f7s_37[] = chr_f7s_37182,6918
PROGMEM const unsigned char chr_f7s_38[] = chr_f7s_38197,7493
PROGMEM const unsigned char chr_f7s_39[] = chr_f7s_39224,8638
PROGMEM const unsigned char chr_f7s_3A[] = chr_f7s_3A246,9550
PROGMEM const unsigned char* const chrtbl_f7s[96] =        // character pointer tablechrtbl_f7s252,9744

lib/TFT_eSPI/Fonts/glcdfont.c,93
#define FONT5X7_HFONT5X7_H4,53
static const unsigned char font[] PROGMEM = {PROGMEM8,100

lib/TFT_eSPI/Fonts/Font72rle.h,200
#define nr_chrs_f72 nr_chrs_f723,30
#define chr_hgt_f72 chr_hgt_f724,53
#define baseline_f72 baseline_f725,76
#define data_size_f72 data_size_f726,100
#define firstchr_f72 firstchr_f727,124

lib/TFT_eSPI/Fonts/Custom/Orbitron_Light_24.h,200
const uint8_t Orbitron_Light_24Bitmaps[] PROGMEM = {PROGMEM3,155
const GFXglyph Orbitron_Light_24Glyphs[] PROGMEM = {PROGMEM101,13734
const GFXfont Orbitron_Light_24 PROGMEM = {PROGMEM198,18360

lib/TFT_eSPI/Fonts/Custom/Yellowtail_32.h,188
const uint8_t Yellowtail_32Bitmaps[] PROGMEM = {PROGMEM3,155
const GFXglyph Yellowtail_32Glyphs[] PROGMEM = {PROGMEM101,24580
const GFXfont Yellowtail_32 PROGMEM = {PROGMEM198,29202

lib/TFT_eSPI/Fonts/Custom/Satisfy_24.h,179
const uint8_t Satisfy_24Bitmaps[] PROGMEM = {PROGMEM3,155
const GFXglyph Satisfy_24Glyphs[] PROGMEM = {PROGMEM101,14192
const GFXfont Satisfy_24 PROGMEM = {PROGMEM198,18811

lib/TFT_eSPI/Fonts/Custom/Orbitron_Light_32.h,200
const uint8_t Orbitron_Light_32Bitmaps[] PROGMEM = {PROGMEM3,155
const GFXglyph Orbitron_Light_32Glyphs[] PROGMEM = {PROGMEM101,24144
const GFXfont Orbitron_Light_32 PROGMEM = {PROGMEM198,28770

lib/TFT_eSPI/Fonts/Custom/Roboto_Thin_24.h,191
const uint8_t Roboto_Thin_24Bitmaps[] PROGMEM = {PROGMEM3,155
const GFXglyph Roboto_Thin_24Glyphs[] PROGMEM = {PROGMEM101,10486
const GFXfont Roboto_Thin_24 PROGMEM = {PROGMEM198,15109

lib/TFT_eSPI/Fonts/Font64rle.h,200
#define nr_chrs_f64 nr_chrs_f643,30
#define chr_hgt_f64 chr_hgt_f644,53
#define baseline_f64 baseline_f645,76
#define data_size_f64 data_size_f646,100
#define firstchr_f64 firstchr_f647,124

lib/TFT_eSPI/Fonts/Font72rle.c,1100
PROGMEM const unsigned char widtbl_f72[96] =          // character width tablewidtbl_f7210,272
PROGMEM const unsigned char chr_f72_20[] = chr_f72_2028,1109
PROGMEM const unsigned char chr_f72_2D[] = chr_f72_2D35,1262
PROGMEM const unsigned char chr_f72_2E[] = chr_f72_2E43,1491
PROGMEM const unsigned char chr_f72_30[] = chr_f72_3052,1742
PROGMEM const unsigned char chr_f72_31[] = chr_f72_3188,3322
PROGMEM const unsigned char chr_f72_32[] = chr_f72_32112,4343
PROGMEM const unsigned char chr_f72_33[] = chr_f72_33137,5396
PROGMEM const unsigned char chr_f72_34[] = chr_f72_34165,6608
PROGMEM const unsigned char chr_f72_35[] = chr_f72_35193,7814
PROGMEM const unsigned char chr_f72_36[] = chr_f72_36221,8996
PROGMEM const unsigned char chr_f72_37[] = chr_f72_37255,10514
PROGMEM const unsigned char chr_f72_38[] = chr_f72_38277,11419
PROGMEM const unsigned char chr_f72_39[] = chr_f72_39311,12901
PROGMEM const unsigned char chr_f72_3A[] = chr_f72_3A345,14419
PROGMEM const unsigned char * const chrtbl_f72[96] =        // character pointer tablechrtbl_f72355,14767

lib/TFT_eSPI/Fonts/Font16.c,9981
#define TFT_ESPI_FONT2_DOLLARTFT_ESPI_FONT2_DOLLAR4,55
#define TFT_ESPI_GRAVE_IS_DEGREETFT_ESPI_GRAVE_IS_DEGREE8,229
PROGMEM const unsigned char widtbl_f16[96] =         // character width tablewidtbl_f1613,373
PROGMEM const unsigned char chr_f16_20[16] =         // 1 unsigned char per rowchr_f16_2035,1351
PROGMEM const unsigned char chr_f16_21[16] =         // 1 unsigned char per rowchr_f16_2141,1620
PROGMEM const unsigned char chr_f16_22[16] =         // 1 unsigned char per rowchr_f16_2247,1889
PROGMEM const unsigned char chr_f16_23[16] =         // 1 unsigned char per rowchr_f16_2353,2158
PROGMEM const unsigned char chr_f16_24[16] =         // 1 unsigned char per rowchr_f16_2459,2427
PROGMEM const unsigned char chr_f16_25[16] =         // 1 unsigned char per rowchr_f16_2570,2935
PROGMEM const unsigned char chr_f16_26[16] =         // 1 unsigned char per rowchr_f16_2676,3204
PROGMEM const unsigned char chr_f16_27[16] =         // 1 unsigned char per rowchr_f16_2782,3473
PROGMEM const unsigned char chr_f16_28[16] =         // 1 unsigned char per rowchr_f16_2888,3742
PROGMEM const unsigned char chr_f16_29[16] =         // 1 unsigned char per rowchr_f16_2994,4011
PROGMEM const unsigned char chr_f16_2A[16] =         // 1 unsigned char per rowchr_f16_2A100,4280
PROGMEM const unsigned char chr_f16_2B[16] =         // 1 unsigned char per rowchr_f16_2B106,4549
PROGMEM const unsigned char chr_f16_2C[16] =         // 1 unsigned char per rowchr_f16_2C112,4818
PROGMEM const unsigned char chr_f16_2D[16] =         // 1 unsigned char per rowchr_f16_2D118,5087
PROGMEM const unsigned char chr_f16_2E[16] =         // 1 unsigned char per rowchr_f16_2E124,5356
PROGMEM const unsigned char chr_f16_2F[16] =         // 1 unsigned char per rowchr_f16_2F130,5625
PROGMEM const unsigned char chr_f16_30[16] =         // 1 unsigned char per rowchr_f16_30136,5894
PROGMEM const unsigned char chr_f16_31[16] =         // 1 unsigned char per rowchr_f16_31142,6163
PROGMEM const unsigned char chr_f16_32[16] =         // 1 unsigned char per rowchr_f16_32148,6432
PROGMEM const unsigned char chr_f16_33[16] =         // 1 unsigned char per rowchr_f16_33154,6701
PROGMEM const unsigned char chr_f16_34[16] =         // 1 unsigned char per rowchr_f16_34160,6970
PROGMEM const unsigned char chr_f16_35[16] =         // 1 unsigned char per rowchr_f16_35166,7239
PROGMEM const unsigned char chr_f16_36[16] =         // 1 unsigned char per rowchr_f16_36172,7508
PROGMEM const unsigned char chr_f16_37[16] =         // 1 unsigned char per rowchr_f16_37178,7777
PROGMEM const unsigned char chr_f16_38[16] =         // 1 unsigned char per rowchr_f16_38184,8046
PROGMEM const unsigned char chr_f16_39[16] =         // 1 unsigned char per rowchr_f16_39190,8315
PROGMEM const unsigned char chr_f16_3A[16] =         // 1 unsigned char per rowchr_f16_3A196,8584
PROGMEM const unsigned char chr_f16_3B[16] =         // 1 unsigned char per rowchr_f16_3B202,8853
PROGMEM const unsigned char chr_f16_3C[16] =         // 1 unsigned char per rowchr_f16_3C208,9122
PROGMEM const unsigned char chr_f16_3D[16] =         // 1 unsigned char per rowchr_f16_3D214,9391
PROGMEM const unsigned char chr_f16_3E[16] =         // 1 unsigned char per rowchr_f16_3E220,9660
PROGMEM const unsigned char chr_f16_3F[16] =         // 1 unsigned char per rowchr_f16_3F226,9929
PROGMEM const unsigned char chr_f16_40[16] =         // 1 unsigned char per rowchr_f16_40232,10198
PROGMEM const unsigned char chr_f16_41[16] =         // 1 unsigned char per rowchr_f16_41237,10466
PROGMEM const unsigned char chr_f16_42[16] =         // 1 unsigned char per rowchr_f16_42243,10735
PROGMEM const unsigned char chr_f16_43[16] =         // 1 unsigned char per rowchr_f16_43249,11004
PROGMEM const unsigned char chr_f16_44[16] =         // 1 unsigned char per rowchr_f16_44254,11272
PROGMEM const unsigned char chr_f16_45[16] =         // 1 unsigned char per rowchr_f16_45260,11541
PROGMEM const unsigned char chr_f16_46[16] =         // 1 unsigned char per rowchr_f16_46266,11810
PROGMEM const unsigned char chr_f16_47[16] =         // 1 unsigned char per rowchr_f16_47271,12078
PROGMEM const unsigned char chr_f16_48[16] =         // 1 unsigned char per rowchr_f16_48277,12347
PROGMEM const unsigned char chr_f16_49[16] =         // 1 unsigned char per rowchr_f16_49283,12616
PROGMEM const unsigned char chr_f16_4A[16] =         // 1 unsigned char per rowchr_f16_4A289,12885
PROGMEM const unsigned char chr_f16_4B[16] =         // 1 unsigned char per rowchr_f16_4B295,13154
PROGMEM const unsigned char chr_f16_4C[16] =         // 1 unsigned char per rowchr_f16_4C301,13423
PROGMEM const unsigned char chr_f16_4D[32] =         // 2 unsigned chars per rowchr_f16_4D307,13692
PROGMEM const unsigned char chr_f16_4E[16] =         // 1 unsigned char per rowchr_f16_4E314,14070
PROGMEM const unsigned char chr_f16_4F[16] =         // 1 unsigned char per rowchr_f16_4F320,14339
PROGMEM const unsigned char chr_f16_50[16] =         // 1 unsigned char per rowchr_f16_50326,14608
PROGMEM const unsigned char chr_f16_51[16] =         // 1 unsigned char per rowchr_f16_51331,14876
PROGMEM const unsigned char chr_f16_52[16] =         // 1 unsigned char per rowchr_f16_52337,15145
PROGMEM const unsigned char chr_f16_53[16] =         // 1 unsigned char per rowchr_f16_53343,15414
PROGMEM const unsigned char chr_f16_54[16] =         // 1 unsigned char per rowchr_f16_54349,15683
PROGMEM const unsigned char chr_f16_55[16] =         // 1 unsigned char per rowchr_f16_55355,15952
PROGMEM const unsigned char chr_f16_56[16] =         // 1 unsigned char per rowchr_f16_56361,16221
PROGMEM const unsigned char chr_f16_57[32] =         // 2 unsigned chars per rowchr_f16_57367,16490
PROGMEM const unsigned char chr_f16_58[16] =         // 1 unsigned char per rowchr_f16_58374,16868
PROGMEM const unsigned char chr_f16_59[16] =         // 1 unsigned char per rowchr_f16_59380,17137
PROGMEM const unsigned char chr_f16_5A[16] =         // 1 unsigned char per rowchr_f16_5A386,17406
PROGMEM const unsigned char chr_f16_5B[16] =         // 1 unsigned char per rowchr_f16_5B392,17675
PROGMEM const unsigned char chr_f16_5C[16] =         // 1 unsigned char per rowchr_f16_5C398,17944
PROGMEM const unsigned char chr_f16_5D[16] =         // 1 unsigned char per rowchr_f16_5D404,18213
PROGMEM const unsigned char chr_f16_5E[32] =         // 1 unsigned chars per rowchr_f16_5E410,18482
PROGMEM const unsigned char chr_f16_5F[32] =         // 1 unsigned chars per rowchr_f16_5F416,18752
PROGMEM const unsigned char chr_f16_60[16] =         // 1 unsigned char per rowchr_f16_60422,19022
PROGMEM const unsigned char chr_f16_61[16] =         // 1 unsigned char per rowchr_f16_61433,19495
PROGMEM const unsigned char chr_f16_62[16] =         // 1 unsigned char per rowchr_f16_62439,19764
PROGMEM const unsigned char chr_f16_63[16] =         // 1 unsigned char per rowchr_f16_63445,20033
PROGMEM const unsigned char chr_f16_64[16] =         // 1 unsigned char per rowchr_f16_64451,20302
PROGMEM const unsigned char chr_f16_65[16] =         // 1 unsigned char per rowchr_f16_65457,20571
PROGMEM const unsigned char chr_f16_66[16] =         // 1 unsigned char per rowchr_f16_66463,20840
PROGMEM const unsigned char chr_f16_67[16] =         // 1 unsigned char per rowchr_f16_67468,21108
PROGMEM const unsigned char chr_f16_68[16] =         // 1 unsigned char per rowchr_f16_68474,21377
PROGMEM const unsigned char chr_f16_69[16] =         // 1 unsigned char per rowchr_f16_69480,21646
PROGMEM const unsigned char chr_f16_6A[16] =         // 1 unsigned char per rowchr_f16_6A486,21915
PROGMEM const unsigned char chr_f16_6B[16] =         // 1 unsigned char per rowchr_f16_6B492,22184
PROGMEM const unsigned char chr_f16_6C[16] =         // 1 unsigned char per rowchr_f16_6C498,22453
PROGMEM const unsigned char chr_f16_6D[16] =         // 1 unsigned char per rowchr_f16_6D504,22722
PROGMEM const unsigned char chr_f16_6E[16] =         // 1 unsigned char per rowchr_f16_6E510,22991
PROGMEM const unsigned char chr_f16_6F[16] =         // 1 unsigned char per rowchr_f16_6F516,23260
PROGMEM const unsigned char chr_f16_70[16] =         // 1 unsigned char per rowchr_f16_70522,23529
PROGMEM const unsigned char chr_f16_71[16] =         // 1 unsigned char per rowchr_f16_71528,23798
PROGMEM const unsigned char chr_f16_72[16] =         // 1 unsigned char per rowchr_f16_72534,24067
PROGMEM const unsigned char chr_f16_73[16] =         // 1 unsigned char per rowchr_f16_73540,24336
PROGMEM const unsigned char chr_f16_74[16] =         // 1 unsigned char per rowchr_f16_74546,24605
PROGMEM const unsigned char chr_f16_75[16] =         // 1 unsigned char per rowchr_f16_75552,24874
PROGMEM const unsigned char chr_f16_76[16] =         // 1 unsigned char per rowchr_f16_76558,25143
PROGMEM const unsigned char chr_f16_77[16] =         // 1 unsigned char per rowchr_f16_77564,25412
PROGMEM const unsigned char chr_f16_78[16] =         // 1 unsigned char per rowchr_f16_78570,25681
PROGMEM const unsigned char chr_f16_79[16] =         // 1 unsigned char per rowchr_f16_79576,25950
PROGMEM const unsigned char chr_f16_7A[16] =         // 1 unsigned char per rowchr_f16_7A582,26219
PROGMEM const unsigned char chr_f16_7B[16] =         // 1 unsigned char per rowchr_f16_7B588,26488
PROGMEM const unsigned char chr_f16_7C[16] =         // 1 unsigned char per rowchr_f16_7C594,26757
PROGMEM const unsigned char chr_f16_7D[16] =         // 1 unsigned char per rowchr_f16_7D600,27026
PROGMEM const unsigned char chr_f16_7E[16] =         // 1 unsigned char per rowchr_f16_7E606,27295
PROGMEM const unsigned char chr_f16_7F[16] =         // 1 unsigned char per rowchr_f16_7F612,27564
PROGMEM const unsigned char* const chrtbl_f16[96] =       // character pointer tablechrtbl_f16618,27833

lib/TFT_eSPI/Extensions/Smooth_font.cpp,576
void TFT_eSPI::loadFont(const uint8_t array[])loadFont13,682
void TFT_eSPI::loadFont(String fontName, fs::FS &ffs)loadFont25,1125
void TFT_eSPI::loadFont(String fontName, bool flash)loadFont36,1517
void TFT_eSPI::loadMetrics(void)loadMetrics153,6682
void TFT_eSPI::unloadFont( void )unloadFont255,11498
uint32_t TFT_eSPI::readInt32(void)readInt32313,12372
bool TFT_eSPI::getUnicodeIndex(uint16_t unicode, uint16_t *index)getUnicodeIndex341,13108
void TFT_eSPI::drawGlyph(uint16_t code)drawGlyph360,13647
void TFT_eSPI::showFont(uint32_t td)showFont485,17043

lib/TFT_eSPI/Extensions/Button.h,1164
class TFT_eSPI_Button {TFT_eSPI_Button9,468
  TFT_eSPI *_gfx;_gfx35,1337
  int16_t  _x1, _y1; // Coordinates of top-left corner of button_x136,1355
  int16_t  _x1, _y1; // Coordinates of top-left corner of button_y136,1355
  int16_t  _xd, _yd; // Button text datum offsets (wrt center of button)_xd37,1420
  int16_t  _xd, _yd; // Button text datum offsets (wrt center of button)_yd37,1420
  uint16_t _w, _h;   // Width and height of button_w38,1493
  uint16_t _w, _h;   // Width and height of button_h38,1493
  uint8_t  _textsize, _textdatum; // Text size multiplier and text datum for button_textsize39,1544
  uint8_t  _textsize, _textdatum; // Text size multiplier and text datum for button_textdatum39,1544
  uint16_t _outlinecolor, _fillcolor, _textcolor;_outlinecolor40,1628
  uint16_t _outlinecolor, _fillcolor, _textcolor;_fillcolor40,1628
  uint16_t _outlinecolor, _fillcolor, _textcolor;_textcolor40,1628
  char     _label[10]; // Button text is 9 chars maximum unless long_name used_label41,1678
  bool  currstate, laststate; // Button statescurrstate43,1758
  bool  currstate, laststate; // Button stateslaststate43,1758

lib/TFT_eSPI/Extensions/Smooth_font.h,1732
    const uint8_t* gArray;           //array start pointergArray22,614
    uint16_t gCount;                 // Total number of charactersgCount23,673
    uint16_t yAdvance;               // Line advanceyAdvance24,740
    uint16_t spaceWidth;             // Width of a space characterspaceWidth25,793
    int16_t  ascent;                 // Height of top of 'd' above baseline, other characters may be tallerascent26,860
    int16_t  descent;                // Offset to bottom of 'p', other characters may have a larger descentdescent27,968
    uint16_t maxAscent;              // Maximum ascent found in fontmaxAscent28,1076
    uint16_t maxDescent;             // Maximum descent found in fontmaxDescent29,1145
  } fontMetrics;fontMetrics30,1215
fontMetrics gFont = { nullptr, 0, 0, 0, 0, 0, 0, 0 };gFont32,1233
  uint16_t* gUnicode = NULL;  //UTF-16 code, the codes are searched so do not need to be sequentialgUnicode35,1400
  uint8_t*  gHeight = NULL;   //cheightgHeight36,1500
  uint8_t*  gWidth = NULL;    //cwidthgWidth37,1540
  uint8_t*  gxAdvance = NULL; //setWidthgxAdvance38,1579
  int16_t*  gdY = NULL;       //topExtentgdY39,1620
  int8_t*   gdX = NULL;       //leftExtentgdX40,1662
  uint32_t* gBitmap = NULL;   //file pointer to greyscale bitmapgBitmap41,1705
  bool     fontLoaded = false; // Flags when a anti-aliased font is loadedfontLoaded43,1771
  fs::File fontFile;fontFile46,1872
  fs::FS   &fontFS  = SPIFFS;fontFS47,1893
  bool     spiffs   = true;spiffs48,1923
  bool     fs_font = false;    // For ESP32/8266 use smooth font file or FLASH (PROGMEM) arrayfs_font49,1951
  bool     fontFile = true;fontFile52,2053
  uint8_t* fontPtr = nullptr;fontPtr60,2160

lib/TFT_eSPI/Extensions/Sprite.h,2116
class TFT_eSprite : public TFT_eSPI {TFT_eSprite8,497
  TFT_eSPI *_tft;_tft147,7680
  uint8_t  _bpp;     // bits per pixel (1, 8 or 16)_bpp154,7854
  uint16_t *_img;    // pointer to 16 bit sprite_img155,7906
  uint8_t  *_img8;   // pointer to  8 bit sprite frame 1 or frame 2_img8156,7955
  uint8_t  *_img4;   // pointer to  4 bit sprite (uses color map)_img4157,8023
  uint8_t  *_img8_1; // pointer to frame 1_img8_1158,8089
  uint8_t  *_img8_2; // pointer to frame 2_img8_2159,8132
  uint16_t *_colorMap; // color map: 16 entries, used with 4 bit color map._colorMap161,8176
  int32_t  _sinra;_sinra163,8253
  int32_t  _cosra;_cosra164,8272
  bool     _created;    // A Sprite has been created and memory reserved_created166,8292
  bool     _gFont = false; _gFont167,8365
  int32_t  _xs, _ys, _xe, _ye, _xptr, _yptr; // for setWindow_xs169,8394
  int32_t  _xs, _ys, _xe, _ye, _xptr, _yptr; // for setWindow_ys169,8394
  int32_t  _xs, _ys, _xe, _ye, _xptr, _yptr; // for setWindow_xe169,8394
  int32_t  _xs, _ys, _xe, _ye, _xptr, _yptr; // for setWindow_ye169,8394
  int32_t  _xs, _ys, _xe, _ye, _xptr, _yptr; // for setWindow_xptr169,8394
  int32_t  _xs, _ys, _xe, _ye, _xptr, _yptr; // for setWindow_yptr169,8394
  int32_t  _sx, _sy; // x,y for scroll zone_sx170,8456
  int32_t  _sx, _sy; // x,y for scroll zone_sy170,8456
  uint32_t _sw, _sh; // w,h for scroll zone_sw171,8500
  uint32_t _sw, _sh; // w,h for scroll zone_sh171,8500
  uint32_t _scolor;  // gap fill colour for scroll zone_scolor172,8544
  int32_t  _iwidth, _iheight; // Sprite memory image bit width and height (swapped during rotations)_iwidth174,8601
  int32_t  _iwidth, _iheight; // Sprite memory image bit width and height (swapped during rotations)_iheight174,8601
  int32_t  _dwidth, _dheight; // Real display width and height (for <8bpp Sprites)_dwidth175,8702
  int32_t  _dwidth, _dheight; // Real display width and height (for <8bpp Sprites)_dheight175,8702
  int32_t  _bitwidth;         // Sprite image bit width for drawPixel (for <8bpp Sprites, not swapped)_bitwidth176,8785

lib/TFT_eSPI/Extensions/Sprite.cpp,4523
TFT_eSprite::TFT_eSprite(TFT_eSPI *tft)TFT_eSprite17,1135
void* TFT_eSprite::createSprite(int16_t w, int16_t h, uint8_t frames)createSprite48,2036
void* TFT_eSprite::getPointer(void)getPointer115,3868
bool TFT_eSprite::created(void)created126,4243
TFT_eSprite::~TFT_eSprite(void)~TFT_eSprite136,4564
void* TFT_eSprite::callocSprite(int16_t w, int16_t h, uint8_t frames)callocSprite150,4982
void TFT_eSprite::createPalette(uint16_t colorMap[], uint8_t colors)createPalette221,7633
void TFT_eSprite::createPalette(const uint16_t colorMap[], uint8_t colors)createPalette252,8457
void* TFT_eSprite::frameBuffer(int8_t f)frameBuffer278,9248
void* TFT_eSprite::setColorDepth(int8_t b)setColorDepth299,9815
int8_t TFT_eSprite::getColorDepth(void)getColorDepth328,10690
void TFT_eSprite::setBitmapColor(uint16_t c, uint16_t b)setBitmapColor339,11088
void TFT_eSprite::setPaletteColor(uint8_t index, uint16_t color)setPaletteColor351,11515
uint16_t TFT_eSprite::getPaletteColor(uint8_t index)getPaletteColor363,11987
void TFT_eSprite::deleteSprite(void)deleteSprite375,12432
#define FP_SCALE FP_SCALE397,13046
bool TFT_eSprite::pushRotated(int16_t angle, int32_t transp)pushRotated398,13066
bool TFT_eSprite::pushRotated(TFT_eSprite *spr, int16_t angle, int32_t transp)pushRotated468,15653
bool TFT_eSprite::getRotatedBounds(int16_t angle, int16_t *min_x, int16_t *min_y,getRotatedBounds530,17963
bool TFT_eSprite::getRotatedBounds(TFT_eSprite *spr, int16_t angle, int16_t *min_x, int16_t *min_y,getRotatedBounds562,19281
void TFT_eSprite::getRotatedBounds(int16_t angle, int16_t w, int16_t h, int16_t xp, int16_t yp,getRotatedBounds599,20827
void TFT_eSprite::pushSprite(int32_t x, int32_t y)pushSprite653,22578
void TFT_eSprite::pushSprite(int32_t x, int32_t y, uint16_t transp)pushSprite676,23335
bool TFT_eSprite::pushToSprite(TFT_eSprite *dspr, int32_t x, int32_t y)pushToSprite712,24678
bool TFT_eSprite::pushToSprite(TFT_eSprite *dspr, int32_t x, int32_t y, uint16_t transp)pushToSprite744,25810
bool TFT_eSprite::pushSprite(int32_t tx, int32_t ty, int32_t sx, int32_t sy, int32_t sw, int32_t sh)pushSprite795,27500
uint16_t TFT_eSprite::readPixelValue(int32_t x, int32_t y)readPixelValue892,30478
uint16_t TFT_eSprite::readPixel(int32_t x, int32_t y)readPixel954,31969
void  TFT_eSprite::pushImage(int32_t x, int32_t y, int32_t w, int32_t h, uint16_t *data, uint8_t sbpp)pushImage1025,33733
void  TFT_eSprite::pushImage(int32_t x, int32_t y, int32_t w, int32_t h, const uint16_t *data)pushImage1164,37725
void TFT_eSprite::setWindow(int32_t x0, int32_t y0, int32_t x1, int32_t y1)setWindow1247,40078
void TFT_eSprite::pushColor(uint32_t color)pushColor1284,40939
void TFT_eSprite::pushColor(uint32_t color, uint16_t len)pushColor1326,42173
void TFT_eSprite::writeColor(uint16_t color)writeColor1348,42871
void TFT_eSprite::setScrollRect(int32_t x, int32_t y, int32_t w, int32_t h, uint16_t color)setScrollRect1387,44120
void TFT_eSprite::scroll(int16_t dx, int16_t dy)scroll1412,44832
void TFT_eSprite::fillSprite(uint32_t color)fillSprite1510,47722
int16_t TFT_eSprite::width(void)width1548,49010
int16_t TFT_eSprite::height(void)height1571,49556
void TFT_eSprite::setRotation(uint8_t r)setRotation1595,50169
uint8_t TFT_eSprite::getRotation(void)getRotation1614,50615
void TFT_eSprite::drawPixel(int32_t x, int32_t y, uint32_t color)drawPixel1624,50968
void TFT_eSprite::drawLine(int32_t x0, int32_t y0, int32_t x1, int32_t y1, uint32_t color)drawLine1684,52454
void TFT_eSprite::drawFastVLine(int32_t x, int32_t y, int32_t h, uint32_t color)drawFastVLine1742,53954
void TFT_eSprite::drawFastHLine(int32_t x, int32_t y, int32_t w, uint32_t color)drawFastHLine1803,55535
void TFT_eSprite::fillRect(int32_t x, int32_t y, int32_t w, int32_t h, uint32_t color)fillRect1866,57076
void TFT_eSprite::drawChar(int32_t x, int32_t y, uint16_t c, uint32_t color, uint32_t bg, uint8_t size)drawChar1978,59805
int16_t TFT_eSprite::drawChar(uint16_t uniCode, int32_t x, int32_t y)drawChar2122,63820
int16_t TFT_eSprite::drawChar(uint16_t uniCode, int32_t x, int32_t y, uint8_t font)drawChar2128,64002
void TFT_eSprite::drawGlyph(uint16_t code)drawGlyph2380,72609
void TFT_eSprite::printToSprite(String string)printToSprite2507,75821
void TFT_eSprite::printToSprite(char *cbuffer, uint16_t len) //String string)printToSprite2518,76250
int16_t TFT_eSprite::printToSprite(int16_t x, int16_t y, uint16_t index)printToSprite2569,77635

lib/TFT_eSPI/Extensions/Button.cpp,757
TFT_eSPI_Button::TFT_eSPI_Button(void) {TFT_eSPI_Button5,291
void TFT_eSPI_Button::initButton(initButton13,467
void TFT_eSPI_Button::initButtonUL(initButtonUL24,883
void TFT_eSPI_Button::setLabelDatum(int16_t x_delta, int16_t y_delta, uint8_t datum)setLabelDatum42,1357
void TFT_eSPI_Button::drawButton(bool inverted, String long_name) {drawButton49,1517
bool TFT_eSPI_Button::contains(int16_t x, int16_t y) {contains83,2443
void TFT_eSPI_Button::press(bool p) {press88,2588
bool TFT_eSPI_Button::isPressed()    { return currstate; }isPressed93,2671
bool TFT_eSPI_Button::justPressed()  { return (currstate && !laststate); }justPressed94,2730
bool TFT_eSPI_Button::justReleased() { return (!currstate && laststate); }justReleased95,2805

lib/TFT_eSPI/Extensions/Touch.cpp,1001
inline void TFT_eSPI::begin_touch_read_write(void){begin_touch_read_write18,755
inline void TFT_eSPI::end_touch_read_write(void){end_touch_read_write34,1466
void TFT_eSPI::spi_begin_touch() {begin_touch_read_write();}spi_begin_touch48,2028
void TFT_eSPI::spi_end_touch()   {  end_touch_read_write();}spi_end_touch49,2089
uint8_t TFT_eSPI::getTouchRaw(uint16_t *x, uint16_t *y){getTouchRaw55,2444
uint16_t TFT_eSPI::getTouchRawZ(void){getTouchRawZ98,4366
#define _RAWERR _RAWERR117,5014
uint8_t TFT_eSPI::validTouch(uint16_t *x, uint16_t *y, uint16_t threshold){validTouch118,5090
#define Z_THRESHOLD Z_THRESHOLD162,6525
uint8_t TFT_eSPI::getTouch(uint16_t *x, uint16_t *y, uint16_t threshold){getTouch163,6600
void TFT_eSPI::convertRawXY(uint16_t *x, uint16_t *y)convertRawXY195,7462
void TFT_eSPI::calibrateTouch(uint16_t *parameters, uint32_t color_fg, uint32_t color_bg, uint8_t size){calibrateTouch222,8422
void TFT_eSPI::setTouch(uint16_t *parameters){setTouch329,12615

lib/TFT_eSPI/Extensions/Touch.h,1282
  uint16_t touchCalibration_x0 = 300, touchCalibration_x1 = 3600, touchCalibration_y0 = 300, touchCalibration_y1 = 3600;touchCalibration_x033,1662
  uint16_t touchCalibration_x0 = 300, touchCalibration_x1 = 3600, touchCalibration_y0 = 300, touchCalibration_y1 = 3600;touchCalibration_x133,1662
  uint16_t touchCalibration_x0 = 300, touchCalibration_x1 = 3600, touchCalibration_y0 = 300, touchCalibration_y1 = 3600;touchCalibration_y033,1662
  uint16_t touchCalibration_x0 = 300, touchCalibration_x1 = 3600, touchCalibration_y0 = 300, touchCalibration_y1 = 3600;touchCalibration_y133,1662
  uint8_t  touchCalibration_rotate = 1, touchCalibration_invert_x = 2, touchCalibration_invert_y = 0;touchCalibration_rotate34,1783
  uint8_t  touchCalibration_rotate = 1, touchCalibration_invert_x = 2, touchCalibration_invert_y = 0;touchCalibration_invert_x34,1783
  uint8_t  touchCalibration_rotate = 1, touchCalibration_invert_x = 2, touchCalibration_invert_y = 0;touchCalibration_invert_y34,1783
  uint32_t _pressTime;        // Press and hold time-out_pressTime36,1886
  uint16_t _pressX, _pressY;  // For future use (last sampled calibrated coordinates)_pressX37,1943
  uint16_t _pressX, _pressY;  // For future use (last sampled calibrated coordinates)_pressY37,1943

lib/TFT_eSPI/examples/320 x 240/All_Free_Fonts_Demo/Free_Fonts.h,7519
#define LOAD_GFXFFLOAD_GFXFF42,1354
#define GFXFF GFXFF47,1542
#define GLCD GLCD48,1558
#define FONT2 FONT249,1574
#define FONT4 FONT450,1590
#define FONT6 FONT651,1606
#define FONT7 FONT752,1622
#define FONT8 FONT853,1638
#define TT1 TT160,1740
#define FM9 FM962,1763
#define FM12 FM1263,1790
#define FM18 FM1864,1819
#define FM24 FM2465,1848
#define FMB9 FMB967,1878
#define FMB12 FMB1268,1910
#define FMB18 FMB1869,1944
#define FMB24 FMB2470,1978
#define FMO9 FMO972,2013
#define FMO12 FMO1273,2048
#define FMO18 FMO1874,2085
#define FMO24 FMO2475,2122
#define FMBO9 FMBO977,2160
#define FMBO12 FMBO1278,2200
#define FMBO18 FMBO1879,2242
#define FMBO24 FMBO2480,2284
#define FSS9 FSS982,2327
#define FSS12 FSS1283,2355
#define FSS18 FSS1884,2385
#define FSS24 FSS2485,2415
#define FSSB9 FSSB987,2446
#define FSSB12 FSSB1288,2479
#define FSSB18 FSSB1889,2514
#define FSSB24 FSSB2490,2549
#define FSSO9 FSSO992,2585
#define FSSO12 FSSO1293,2621
#define FSSO18 FSSO1894,2659
#define FSSO24 FSSO2495,2697
#define FSSBO9 FSSBO997,2736
#define FSSBO12 FSSBO1298,2777
#define FSSBO18 FSSBO1899,2820
#define FSSBO24 FSSBO24100,2863
#define FS9 FS9102,2907
#define FS12 FS12103,2935
#define FS18 FS18104,2965
#define FS24 FS24105,2995
#define FSI9 FSI9107,3026
#define FSI12 FSI12108,3061
#define FSI19 FSI19109,3098
#define FSI24 FSI24110,3135
#define FSB9 FSB9112,3173
#define FSB12 FSB12113,3206
#define FSB18 FSB18114,3241
#define FSB24 FSB24115,3276
#define FSBI9 FSBI9117,3312
#define FSBI12 FSBI12118,3352
#define FSBI18 FSBI18119,3394
#define FSBI24 FSBI24120,3436
#define FF0 FF0122,3479
#define FF1 FF1123,3520
#define FF2 FF2124,3547
#define FF3 FF3125,3575
#define FF4 FF4126,3603
#define FF5 FF5128,3632
#define FF6 FF6129,3663
#define FF7 FF7130,3695
#define FF8 FF8131,3727
#define FF9 FF9133,3760
#define FF10 FF10134,3794
#define FF11 FF11135,3830
#define FF12 FF12136,3866
#define FF13 FF13138,3903
#define FF14 FF14139,3942
#define FF15 FF15140,3982
#define FF16 FF16141,4022
#define FF17 FF17143,4063
#define FF18 FF18144,4091
#define FF19 FF19145,4120
#define FF20 FF20146,4149
#define FF21 FF21148,4179
#define FF22 FF22149,4211
#define FF23 FF23150,4244
#define FF24 FF24151,4277
#define FF25 FF25153,4311
#define FF26 FF26154,4346
#define FF27 FF27155,4382
#define FF28 FF28156,4418
#define FF29 FF29158,4455
#define FF30 FF30159,4494
#define FF31 FF31160,4534
#define FF32 FF32161,4574
#define FF33 FF33163,4615
#define FF34 FF34164,4644
#define FF35 FF35165,4674
#define FF36 FF36166,4704
#define FF37 FF37168,4735
#define FF38 FF38169,4770
#define FF39 FF39170,4806
#define FF40 FF40171,4842
#define FF41 FF41173,4879
#define FF42 FF42174,4912
#define FF43 FF43175,4946
#define FF44 FF44176,4980
#define FF45 FF45178,5015
#define FF46 FF46179,5054
#define FF47 FF47180,5094
#define FF48 FF48181,5134
#define sFF0 sFF0190,5475
#define sTT1 sTT1191,5495
#define sFF1 sFF1192,5520
#define sFF2 sFF2193,5542
#define sFF3 sFF3194,5565
#define sFF4 sFF4195,5588
#define sFF5 sFF5197,5612
#define sFF6 sFF6198,5639
#define sFF7 sFF7199,5667
#define sFF8 sFF8200,5695
#define sFF9 sFF9202,5724
#define sFF10 sFF10203,5754
#define sFF11 sFF11204,5786
#define sFF12 sFF12205,5818
#define sFF13 sFF13207,5851
#define sFF14 sFF14208,5887
#define sFF15 sFF15209,5924
#define sFF16 sFF16210,5961
#define sFF17 sFF17212,6054
#define sFF18 sFF18213,6077
#define sFF19 sFF19214,6101
#define sFF20 sFF20215,6125
#define sFF21 sFF21217,6150
#define sFF22 sFF22218,6178
#define sFF23 sFF23219,6207
#define sFF24 sFF24220,6236
#define sFF25 sFF25222,6266
#define sFF26 sFF26223,6297
#define sFF27 sFF27224,6329
#define sFF28 sFF28225,6361
#define sFF29 sFF29227,6394
#define sFF30 sFF30228,6430
#define sFF31 sFF31229,6467
#define sFF32 sFF32230,6504
#define sFF33 sFF33232,6542
#define sFF34 sFF34233,6566
#define sFF35 sFF35234,6591
#define sFF36 sFF36235,6616
#define sFF37 sFF37237,6642
#define sFF38 sFF38238,6673
#define sFF39 sFF39239,6705
#define sFF40 sFF40240,6737
#define sFF41 sFF41242,6770
#define sFF42 sFF42243,6799
#define sFF43 sFF43244,6829
#define sFF44 sFF44245,6859
#define sFF45 sFF45247,6890
#define sFF46 sFF46248,6926
#define sFF47 sFF47249,6963
#define sFF48 sFF48250,7000
#define GFXFF GFXFF259,7400
#define GLCD GLCD260,7416
#define FONT2 FONT2261,7432
#define FONT4 FONT4262,7448
#define FONT6 FONT6263,7464
#define FONT7 FONT7264,7480
#define FONT8 FONT8265,7496
#define FF0 FF0267,7513
#define FF1 FF1268,7527
#define FF2 FF2269,7541
#define FF3 FF3270,7555
#define FF4 FF4271,7569
#define FF5 FF5272,7583
#define FF6 FF6273,7597
#define FF7 FF7274,7611
#define FF8 FF8275,7625
#define FF9 FF9276,7639
#define FF10 FF10277,7653
#define FF11 FF11278,7668
#define FF12 FF12279,7683
#define FF13 FF13280,7698
#define FF14 FF14281,7713
#define FF15 FF15282,7728
#define FF16 FF16283,7743
#define FF17 FF17284,7758
#define FF18 FF18285,7773
#define FF19 FF19286,7788
#define FF20 FF20287,7803
#define FF21 FF21288,7818
#define FF22 FF22289,7833
#define FF23 FF23290,7848
#define FF24 FF24291,7863
#define FF25 FF25292,7878
#define FF26 FF26293,7893
#define FF27 FF27294,7908
#define FF28 FF28295,7923
#define FF29 FF29296,7938
#define FF30 FF30297,7953
#define FF31 FF31298,7968
#define FF32 FF32299,7983
#define FF33 FF33300,7998
#define FF34 FF34301,8013
#define FF35 FF35302,8028
#define FF36 FF36303,8043
#define FF37 FF37304,8058
#define FF38 FF38305,8073
#define FF39 FF39306,8088
#define FF40 FF40307,8103
#define FF41 FF41308,8118
#define FF42 FF42309,8133
#define FF43 FF43310,8148
#define FF44 FF44311,8163
#define FF45 FF45312,8178
#define FF46 FF46313,8193
#define FF47 FF47314,8208
#define FF48 FF48315,8223
#define FM9 FM9317,8239
#define FM12 FM12318,8254
#define FM18 FM18319,8269
#define FM24 FM24320,8284
#define FMB9 FMB9322,8300
#define FMB12 FMB12323,8316
#define FMB18 FMB18324,8332
#define FMB24 FMB24325,8348
#define FMO9 FMO9327,8365
#define FMO12 FMO12328,8381
#define FMO18 FMO18329,8397
#define FMO24 FMO24330,8413
#define FMBO9 FMBO9332,8430
#define FMBO12 FMBO12333,8447
#define FMBO18 FMBO18334,8464
#define FMBO24 FMBO24335,8481
#define FSS9 FSS9337,8499
#define FSS12 FSS12338,8515
#define FSS18 FSS18339,8531
#define FSS24 FSS24340,8547
#define FSSB9 FSSB9342,8564
#define FSSB12 FSSB12343,8581
#define FSSB18 FSSB18344,8598
#define FSSB24 FSSB24345,8615
#define FSSO9 FSSO9347,8633
#define FSSO12 FSSO12348,8650
#define FSSO18 FSSO18349,8667
#define FSSO24 FSSO24350,8684
#define FSSBO9 FSSBO9352,8702
#define FSSBO12 FSSBO12353,8720
#define FSSBO18 FSSBO18354,8738
#define FSSBO24 FSSBO24355,8756
#define FS9 FS9357,8775
#define FS12 FS12358,8790
#define FS18 FS18359,8805
#define FS24 FS24360,8820
#define FSI9 FSI9362,8836
#define FSI12 FSI12363,8852
#define FSI19 FSI19364,8868
#define FSI24 FSI24365,8884
#define FSB9 FSB9367,8901
#define FSB12 FSB12368,8917
#define FSB18 FSB18369,8933
#define FSB24 FSB24370,8949
#define FSBI9 FSBI9372,8966
#define FSBI12 FSBI12373,8983
#define FSBI18 FSBI18374,9000
#define FSBI24 FSBI24375,9017

lib/TFT_eSPI/examples/320 x 240/Free_Font_Demo/Free_Fonts.h,7506
#define GFXFF GFXFF45,1522
#define GLCD GLCD46,1538
#define FONT2 FONT247,1554
#define FONT4 FONT448,1570
#define FONT6 FONT649,1586
#define FONT7 FONT750,1602
#define FONT8 FONT851,1618
#define TT1 TT158,1720
#define FM9 FM960,1743
#define FM12 FM1261,1770
#define FM18 FM1862,1799
#define FM24 FM2463,1828
#define FMB9 FMB965,1858
#define FMB12 FMB1266,1890
#define FMB18 FMB1867,1924
#define FMB24 FMB2468,1958
#define FMO9 FMO970,1993
#define FMO12 FMO1271,2028
#define FMO18 FMO1872,2065
#define FMO24 FMO2473,2102
#define FMBO9 FMBO975,2140
#define FMBO12 FMBO1276,2180
#define FMBO18 FMBO1877,2222
#define FMBO24 FMBO2478,2264
#define FSS9 FSS980,2307
#define FSS12 FSS1281,2335
#define FSS18 FSS1882,2365
#define FSS24 FSS2483,2395
#define FSSB9 FSSB985,2426
#define FSSB12 FSSB1286,2459
#define FSSB18 FSSB1887,2494
#define FSSB24 FSSB2488,2529
#define FSSO9 FSSO990,2565
#define FSSO12 FSSO1291,2601
#define FSSO18 FSSO1892,2639
#define FSSO24 FSSO2493,2677
#define FSSBO9 FSSBO995,2716
#define FSSBO12 FSSBO1296,2757
#define FSSBO18 FSSBO1897,2800
#define FSSBO24 FSSBO2498,2843
#define FS9 FS9100,2887
#define FS12 FS12101,2915
#define FS18 FS18102,2945
#define FS24 FS24103,2975
#define FSI9 FSI9105,3006
#define FSI12 FSI12106,3041
#define FSI19 FSI19107,3078
#define FSI24 FSI24108,3115
#define FSB9 FSB9110,3153
#define FSB12 FSB12111,3186
#define FSB18 FSB18112,3221
#define FSB24 FSB24113,3256
#define FSBI9 FSBI9115,3292
#define FSBI12 FSBI12116,3332
#define FSBI18 FSBI18117,3374
#define FSBI24 FSBI24118,3416
#define FF0 FF0120,3459
#define FF1 FF1121,3500
#define FF2 FF2122,3527
#define FF3 FF3123,3555
#define FF4 FF4124,3583
#define FF5 FF5126,3612
#define FF6 FF6127,3643
#define FF7 FF7128,3675
#define FF8 FF8129,3707
#define FF9 FF9131,3740
#define FF10 FF10132,3774
#define FF11 FF11133,3810
#define FF12 FF12134,3846
#define FF13 FF13136,3883
#define FF14 FF14137,3922
#define FF15 FF15138,3962
#define FF16 FF16139,4002
#define FF17 FF17141,4043
#define FF18 FF18142,4071
#define FF19 FF19143,4100
#define FF20 FF20144,4129
#define FF21 FF21146,4159
#define FF22 FF22147,4191
#define FF23 FF23148,4224
#define FF24 FF24149,4257
#define FF25 FF25151,4291
#define FF26 FF26152,4326
#define FF27 FF27153,4362
#define FF28 FF28154,4398
#define FF29 FF29156,4435
#define FF30 FF30157,4474
#define FF31 FF31158,4514
#define FF32 FF32159,4554
#define FF33 FF33161,4595
#define FF34 FF34162,4624
#define FF35 FF35163,4654
#define FF36 FF36164,4684
#define FF37 FF37166,4715
#define FF38 FF38167,4750
#define FF39 FF39168,4786
#define FF40 FF40169,4822
#define FF41 FF41171,4859
#define FF42 FF42172,4892
#define FF43 FF43173,4926
#define FF44 FF44174,4960
#define FF45 FF45176,4995
#define FF46 FF46177,5034
#define FF47 FF47178,5074
#define FF48 FF48179,5114
#define sFF0 sFF0188,5455
#define sTT1 sTT1189,5475
#define sFF1 sFF1190,5500
#define sFF2 sFF2191,5522
#define sFF3 sFF3192,5545
#define sFF4 sFF4193,5568
#define sFF5 sFF5195,5592
#define sFF6 sFF6196,5619
#define sFF7 sFF7197,5647
#define sFF8 sFF8198,5675
#define sFF9 sFF9200,5704
#define sFF10 sFF10201,5734
#define sFF11 sFF11202,5766
#define sFF12 sFF12203,5798
#define sFF13 sFF13205,5831
#define sFF14 sFF14206,5867
#define sFF15 sFF15207,5904
#define sFF16 sFF16208,5941
#define sFF17 sFF17210,6031
#define sFF18 sFF18211,6054
#define sFF19 sFF19212,6078
#define sFF20 sFF20213,6102
#define sFF21 sFF21215,6127
#define sFF22 sFF22216,6155
#define sFF23 sFF23217,6184
#define sFF24 sFF24218,6213
#define sFF25 sFF25220,6243
#define sFF26 sFF26221,6274
#define sFF27 sFF27222,6306
#define sFF28 sFF28223,6338
#define sFF29 sFF29225,6371
#define sFF30 sFF30226,6407
#define sFF31 sFF31227,6444
#define sFF32 sFF32228,6481
#define sFF33 sFF33230,6519
#define sFF34 sFF34231,6543
#define sFF35 sFF35232,6568
#define sFF36 sFF36233,6593
#define sFF37 sFF37235,6619
#define sFF38 sFF38236,6650
#define sFF39 sFF39237,6682
#define sFF40 sFF40238,6714
#define sFF41 sFF41240,6747
#define sFF42 sFF42241,6776
#define sFF43 sFF43242,6806
#define sFF44 sFF44243,6836
#define sFF45 sFF45245,6867
#define sFF46 sFF46246,6903
#define sFF47 sFF47247,6940
#define sFF48 sFF48248,6977
#define GFXFF GFXFF257,7377
#define GLCD GLCD258,7393
#define FONT2 FONT2259,7409
#define FONT4 FONT4260,7425
#define FONT6 FONT6261,7441
#define FONT7 FONT7262,7457
#define FONT8 FONT8263,7473
#define TT1 TT1265,7490
#define FF0 FF0267,7505
#define FF1 FF1268,7519
#define FF2 FF2269,7533
#define FF3 FF3270,7547
#define FF4 FF4271,7561
#define FF5 FF5272,7575
#define FF6 FF6273,7589
#define FF7 FF7274,7603
#define FF8 FF8275,7617
#define FF9 FF9276,7631
#define FF10 FF10277,7645
#define FF11 FF11278,7660
#define FF12 FF12279,7675
#define FF13 FF13280,7690
#define FF14 FF14281,7705
#define FF15 FF15282,7720
#define FF16 FF16283,7735
#define FF17 FF17284,7750
#define FF18 FF18285,7765
#define FF19 FF19286,7780
#define FF20 FF20287,7795
#define FF21 FF21288,7810
#define FF22 FF22289,7825
#define FF23 FF23290,7840
#define FF24 FF24291,7855
#define FF25 FF25292,7870
#define FF26 FF26293,7885
#define FF27 FF27294,7900
#define FF28 FF28295,7915
#define FF29 FF29296,7930
#define FF30 FF30297,7945
#define FF31 FF31298,7960
#define FF32 FF32299,7975
#define FF33 FF33300,7990
#define FF34 FF34301,8005
#define FF35 FF35302,8020
#define FF36 FF36303,8035
#define FF37 FF37304,8050
#define FF38 FF38305,8065
#define FF39 FF39306,8080
#define FF40 FF40307,8095
#define FF41 FF41308,8110
#define FF42 FF42309,8125
#define FF43 FF43310,8140
#define FF44 FF44311,8155
#define FF45 FF45312,8170
#define FF46 FF46313,8185
#define FF47 FF47314,8200
#define FF48 FF48315,8215
#define FM9 FM9317,8231
#define FM12 FM12318,8246
#define FM18 FM18319,8261
#define FM24 FM24320,8276
#define FMB9 FMB9322,8292
#define FMB12 FMB12323,8308
#define FMB18 FMB18324,8324
#define FMB24 FMB24325,8340
#define FMO9 FMO9327,8357
#define FMO12 FMO12328,8373
#define FMO18 FMO18329,8389
#define FMO24 FMO24330,8405
#define FMBO9 FMBO9332,8422
#define FMBO12 FMBO12333,8439
#define FMBO18 FMBO18334,8456
#define FMBO24 FMBO24335,8473
#define FSS9 FSS9337,8491
#define FSS12 FSS12338,8507
#define FSS18 FSS18339,8523
#define FSS24 FSS24340,8539
#define FSSB9 FSSB9342,8556
#define FSSB12 FSSB12343,8573
#define FSSB18 FSSB18344,8590
#define FSSB24 FSSB24345,8607
#define FSSO9 FSSO9347,8625
#define FSSO12 FSSO12348,8642
#define FSSO18 FSSO18349,8659
#define FSSO24 FSSO24350,8676
#define FSSBO9 FSSBO9352,8694
#define FSSBO12 FSSBO12353,8712
#define FSSBO18 FSSBO18354,8730
#define FSSBO24 FSSBO24355,8748
#define FS9 FS9357,8767
#define FS12 FS12358,8782
#define FS18 FS18359,8797
#define FS24 FS24360,8812
#define FSI9 FSI9362,8828
#define FSI12 FSI12363,8844
#define FSI19 FSI19364,8860
#define FSI24 FSI24365,8876
#define FSB9 FSB9367,8893
#define FSB12 FSB12368,8909
#define FSB18 FSB18369,8925
#define FSB24 FSB24370,8941
#define FSBI9 FSBI9372,8958
#define FSBI12 FSBI12373,8975
#define FSBI18 FSBI18374,8992
#define FSBI24 FSBI24375,9009

lib/TFT_eSPI/examples/Smooth Fonts/FLASH_Array/Font_Demo_4_Array/NotoSansBold36.h,59
const uint8_t  NotoSansBold36[] PROGMEM = {PROGMEM22,461

lib/TFT_eSPI/examples/Smooth Fonts/FLASH_Array/Font_Demo_4_Array/NotoSansBold15.h,59
const uint8_t  NotoSansBold15[] PROGMEM = {PROGMEM22,461

lib/TFT_eSPI/examples/Smooth Fonts/FLASH_Array/Unicode_test/Unicode_Test_72.h,60
const uint8_t  Unicode_Test_72[] PROGMEM = {PROGMEM22,490

lib/TFT_eSPI/examples/Smooth Fonts/FLASH_Array/Unicode_test/Latin_Hiragana_24.h,62
const uint8_t  Latin_Hiragana_24[] PROGMEM = {PROGMEM22,490

lib/TFT_eSPI/examples/Smooth Fonts/FLASH_Array/Unicode_test/Final_Frontier_28.h,62
const uint8_t  Final_Frontier_28[] PROGMEM = {PROGMEM22,490

lib/TFT_eSPI/examples/Smooth Fonts/FLASH_Array/Font_Demo_2_Array/NotoSansBold36.h,59
const uint8_t  NotoSansBold36[] PROGMEM = {PROGMEM22,461

lib/TFT_eSPI/examples/Smooth Fonts/FLASH_Array/Font_Demo_2_Array/NotoSansBold15.h,59
const uint8_t  NotoSansBold15[] PROGMEM = {PROGMEM22,461

lib/TFT_eSPI/examples/Smooth Fonts/FLASH_Array/Smooth_font_gradient/NotoSansBold36.h,59
const uint8_t  NotoSansBold36[] PROGMEM = {PROGMEM22,488

lib/TFT_eSPI/examples/Smooth Fonts/FLASH_Array/Smooth_font_gradient/NotoSansBold15.h,59
const uint8_t  NotoSansBold15[] PROGMEM = {PROGMEM22,488

lib/TFT_eSPI/examples/Smooth Fonts/FLASH_Array/Smooth_font_reading_TFT/NotoSansBold36.h,59
const uint8_t  NotoSansBold36[] PROGMEM = {PROGMEM22,490

lib/TFT_eSPI/examples/Smooth Fonts/FLASH_Array/Smooth_font_reading_TFT/NotoSansBold15.h,59
const uint8_t  NotoSansBold15[] PROGMEM = {PROGMEM22,490

lib/TFT_eSPI/examples/Smooth Fonts/FLASH_Array/Print_Smooth_Font/Final_Frontier_28.h,62
const uint8_t  Final_Frontier_28[] PROGMEM = {PROGMEM22,488

lib/TFT_eSPI/examples/Smooth Fonts/FLASH_Array/Font_Demo_1_Array/NotoSansBold36.h,59
const uint8_t  NotoSansBold36[] PROGMEM = {PROGMEM22,461

lib/TFT_eSPI/examples/Smooth Fonts/FLASH_Array/Font_Demo_1_Array/NotoSansBold15.h,59
const uint8_t  NotoSansBold15[] PROGMEM = {PROGMEM22,461

lib/TFT_eSPI/examples/Smooth Fonts/FLASH_Array/Font_Demo_3_Array/NotoSansBold36.h,59
const uint8_t  NotoSansBold36[] PROGMEM = {PROGMEM22,461

lib/TFT_eSPI/examples/Smooth Fonts/FLASH_Array/Font_Demo_3_Array/NotoSansBold15.h,59
const uint8_t  NotoSansBold15[] PROGMEM = {PROGMEM22,461

lib/TFT_eSPI/examples/Smooth Fonts/FLASH_Array/Font_Demo_3_Array/NotoSansMonoSCB20.h,62
const uint8_t  NotoSansMonoSCB20[] PROGMEM = {PROGMEM22,464

lib/TFT_eSPI/examples/ePaper/Floyd_Steinberg/EPD_Support.h,1309
  #define COLORED COLORED31,1039
  #define UNCOLORED UNCOLORED32,1102
  #define COLORED COLORED34,1132
  #define UNCOLORED UNCOLORED35,1156
  #define EPD_WIDTH EPD_WIDTH43,1470
  #define EPD_HEIGHT EPD_HEIGHT44,1530
  #define INIT_LUT INIT_LUT45,1560
  #define EPD_WIDTH EPD_WIDTH48,1631
  #define EPD_HEIGHT EPD_HEIGHT49,1699
  #define INIT_LUTINIT_LUT50,1729
  #define EPD_WIDTH EPD_WIDTH53,1799
  #define EPD_HEIGHT EPD_HEIGHT54,1859
  #define INIT_LUTINIT_LUT55,1889
  #define EPD_WIDTH EPD_WIDTH58,1935
  #define EPD_HEIGHT EPD_HEIGHT59,1995
  #define INIT_LUT INIT_LUT60,2025
  #define EPD_WIDTH EPD_WIDTH63,2095
  #define EPD_HEIGHT EPD_HEIGHT64,2155
  #define INIT_LUTINIT_LUT65,2185
  #define EPD_WIDTH EPD_WIDTH68,2232
  #define EPD_HEIGHT EPD_HEIGHT69,2292
  #define INIT_LUT INIT_LUT70,2322
  #define EPD_WIDTH EPD_WIDTH73,2393
  #define EPD_HEIGHT EPD_HEIGHT74,2461
  #define INIT_LUTINIT_LUT75,2491
  #define EPD_WIDTH EPD_WIDTH78,2561
  #define EPD_HEIGHT EPD_HEIGHT79,2622
  #define INIT_LUTINIT_LUT80,2652
  #define EPD_WIDTH EPD_WIDTH86,2900
  #define EPD_HEIGHT EPD_HEIGHT87,2971
  #define INIT_LUTINIT_LUT88,3042
  void updateDisplay(uint8_t* blackFrame = blackFramePtr, uint8_t* redFrame = redFramePtr)updateDisplay101,3559

lib/TFT_eSPI/examples/480 x 320/TFT_flash_jpg/jpeg2.h,51
const uint8_t Mouse480[] PROGMEM = {PROGMEM5,139

lib/TFT_eSPI/examples/480 x 320/TFT_flash_jpg/jpeg3.h,50
const uint8_t lena20k[] PROGMEM = {PROGMEM5,139

lib/TFT_eSPI/examples/480 x 320/TFT_flash_jpg/jpeg4.h,51
const uint8_t EagleEye[] PROGMEM = {PROGMEM5,139

lib/TFT_eSPI/examples/480 x 320/TFT_flash_jpg/jpeg1.h,51
const uint8_t Baboon40[] PROGMEM = {PROGMEM5,139

lib/TFT_eSPI/examples/480 x 320/TFT_ring_meter/Alert.h,158
const uint16_t alertWidth = 32;alertWidth5,124
const uint16_t alertHeight = 32;alertHeight6,156
const unsigned short  alert[1024] PROGMEM={PROGMEM9,320

lib/TFT_eSPI/examples/480 x 320/Free_Font_Demo/Free_Fonts.h,7507
#define GFXFF GFXFF47,1567
#define GLCD GLCD48,1583
#define FONT2 FONT249,1599
#define FONT4 FONT450,1615
#define FONT6 FONT651,1631
#define FONT7 FONT752,1647
#define FONT8 FONT853,1663
#define TT1 TT160,1773
#define FM9 FM962,1796
#define FM12 FM1263,1823
#define FM18 FM1864,1852
#define FM24 FM2465,1881
#define FMB9 FMB967,1911
#define FMB12 FMB1268,1943
#define FMB18 FMB1869,1977
#define FMB24 FMB2470,2011
#define FMO9 FMO972,2046
#define FMO12 FMO1273,2081
#define FMO18 FMO1874,2118
#define FMO24 FMO2475,2155
#define FMBO9 FMBO977,2193
#define FMBO12 FMBO1278,2233
#define FMBO18 FMBO1879,2275
#define FMBO24 FMBO2480,2317
#define FSS9 FSS982,2360
#define FSS12 FSS1283,2388
#define FSS18 FSS1884,2418
#define FSS24 FSS2485,2448
#define FSSB9 FSSB987,2479
#define FSSB12 FSSB1288,2512
#define FSSB18 FSSB1889,2547
#define FSSB24 FSSB2490,2582
#define FSSO9 FSSO992,2618
#define FSSO12 FSSO1293,2654
#define FSSO18 FSSO1894,2692
#define FSSO24 FSSO2495,2730
#define FSSBO9 FSSBO997,2769
#define FSSBO12 FSSBO1298,2810
#define FSSBO18 FSSBO1899,2853
#define FSSBO24 FSSBO24100,2896
#define FS9 FS9102,2940
#define FS12 FS12103,2968
#define FS18 FS18104,2998
#define FS24 FS24105,3028
#define FSI9 FSI9107,3059
#define FSI12 FSI12108,3094
#define FSI19 FSI19109,3131
#define FSI24 FSI24110,3168
#define FSB9 FSB9112,3206
#define FSB12 FSB12113,3239
#define FSB18 FSB18114,3274
#define FSB24 FSB24115,3309
#define FSBI9 FSBI9117,3345
#define FSBI12 FSBI12118,3385
#define FSBI18 FSBI18119,3427
#define FSBI24 FSBI24120,3469
#define FF0 FF0122,3512
#define FF1 FF1123,3553
#define FF2 FF2124,3580
#define FF3 FF3125,3608
#define FF4 FF4126,3636
#define FF5 FF5128,3665
#define FF6 FF6129,3696
#define FF7 FF7130,3728
#define FF8 FF8131,3760
#define FF9 FF9133,3793
#define FF10 FF10134,3827
#define FF11 FF11135,3863
#define FF12 FF12136,3899
#define FF13 FF13138,3936
#define FF14 FF14139,3975
#define FF15 FF15140,4015
#define FF16 FF16141,4055
#define FF17 FF17143,4096
#define FF18 FF18144,4124
#define FF19 FF19145,4153
#define FF20 FF20146,4182
#define FF21 FF21148,4212
#define FF22 FF22149,4244
#define FF23 FF23150,4277
#define FF24 FF24151,4310
#define FF25 FF25153,4344
#define FF26 FF26154,4379
#define FF27 FF27155,4415
#define FF28 FF28156,4451
#define FF29 FF29158,4488
#define FF30 FF30159,4527
#define FF31 FF31160,4567
#define FF32 FF32161,4607
#define FF33 FF33163,4648
#define FF34 FF34164,4677
#define FF35 FF35165,4707
#define FF36 FF36166,4737
#define FF37 FF37168,4768
#define FF38 FF38169,4803
#define FF39 FF39170,4839
#define FF40 FF40171,4875
#define FF41 FF41173,4912
#define FF42 FF42174,4945
#define FF43 FF43175,4979
#define FF44 FF44176,5013
#define FF45 FF45178,5048
#define FF46 FF46179,5087
#define FF47 FF47180,5127
#define FF48 FF48181,5167
#define sFF0 sFF0190,5508
#define sTT1 sTT1191,5528
#define sFF1 sFF1192,5553
#define sFF2 sFF2193,5575
#define sFF3 sFF3194,5598
#define sFF4 sFF4195,5621
#define sFF5 sFF5197,5645
#define sFF6 sFF6198,5672
#define sFF7 sFF7199,5700
#define sFF8 sFF8200,5728
#define sFF9 sFF9202,5757
#define sFF10 sFF10203,5787
#define sFF11 sFF11204,5819
#define sFF12 sFF12205,5851
#define sFF13 sFF13207,5884
#define sFF14 sFF14208,5920
#define sFF15 sFF15209,5957
#define sFF16 sFF16210,5994
#define sFF17 sFF17212,6087
#define sFF18 sFF18213,6110
#define sFF19 sFF19214,6134
#define sFF20 sFF20215,6158
#define sFF21 sFF21217,6183
#define sFF22 sFF22218,6211
#define sFF23 sFF23219,6240
#define sFF24 sFF24220,6269
#define sFF25 sFF25222,6299
#define sFF26 sFF26223,6330
#define sFF27 sFF27224,6362
#define sFF28 sFF28225,6394
#define sFF29 sFF29227,6427
#define sFF30 sFF30228,6463
#define sFF31 sFF31229,6500
#define sFF32 sFF32230,6537
#define sFF33 sFF33232,6575
#define sFF34 sFF34233,6599
#define sFF35 sFF35234,6624
#define sFF36 sFF36235,6649
#define sFF37 sFF37237,6675
#define sFF38 sFF38238,6706
#define sFF39 sFF39239,6738
#define sFF40 sFF40240,6770
#define sFF41 sFF41242,6803
#define sFF42 sFF42243,6832
#define sFF43 sFF43244,6862
#define sFF44 sFF44245,6892
#define sFF45 sFF45247,6923
#define sFF46 sFF46248,6959
#define sFF47 sFF47249,6996
#define sFF48 sFF48250,7033
#define GFXFF GFXFF259,7433
#define GLCD GLCD260,7449
#define FONT2 FONT2261,7465
#define FONT4 FONT4262,7481
#define FONT6 FONT6263,7497
#define FONT7 FONT7264,7513
#define FONT8 FONT8265,7529
#define TT1 TT1267,7546
#define FF0 FF0269,7561
#define FF1 FF1270,7575
#define FF2 FF2271,7589
#define FF3 FF3272,7603
#define FF4 FF4273,7617
#define FF5 FF5274,7631
#define FF6 FF6275,7645
#define FF7 FF7276,7659
#define FF8 FF8277,7673
#define FF9 FF9278,7687
#define FF10 FF10279,7701
#define FF11 FF11280,7716
#define FF12 FF12281,7731
#define FF13 FF13282,7746
#define FF14 FF14283,7761
#define FF15 FF15284,7776
#define FF16 FF16285,7791
#define FF17 FF17286,7806
#define FF18 FF18287,7821
#define FF19 FF19288,7836
#define FF20 FF20289,7851
#define FF21 FF21290,7866
#define FF22 FF22291,7881
#define FF23 FF23292,7896
#define FF24 FF24293,7911
#define FF25 FF25294,7926
#define FF26 FF26295,7941
#define FF27 FF27296,7956
#define FF28 FF28297,7971
#define FF29 FF29298,7986
#define FF30 FF30299,8001
#define FF31 FF31300,8016
#define FF32 FF32301,8031
#define FF33 FF33302,8046
#define FF34 FF34303,8061
#define FF35 FF35304,8076
#define FF36 FF36305,8091
#define FF37 FF37306,8106
#define FF38 FF38307,8121
#define FF39 FF39308,8136
#define FF40 FF40309,8151
#define FF41 FF41310,8166
#define FF42 FF42311,8181
#define FF43 FF43312,8196
#define FF44 FF44313,8211
#define FF45 FF45314,8226
#define FF46 FF46315,8241
#define FF47 FF47316,8256
#define FF48 FF48317,8271
#define FM9 FM9319,8287
#define FM12 FM12320,8302
#define FM18 FM18321,8317
#define FM24 FM24322,8332
#define FMB9 FMB9324,8348
#define FMB12 FMB12325,8364
#define FMB18 FMB18326,8380
#define FMB24 FMB24327,8396
#define FMO9 FMO9329,8413
#define FMO12 FMO12330,8429
#define FMO18 FMO18331,8445
#define FMO24 FMO24332,8461
#define FMBO9 FMBO9334,8478
#define FMBO12 FMBO12335,8495
#define FMBO18 FMBO18336,8512
#define FMBO24 FMBO24337,8529
#define FSS9 FSS9339,8547
#define FSS12 FSS12340,8563
#define FSS18 FSS18341,8579
#define FSS24 FSS24342,8595
#define FSSB9 FSSB9344,8612
#define FSSB12 FSSB12345,8629
#define FSSB18 FSSB18346,8646
#define FSSB24 FSSB24347,8663
#define FSSO9 FSSO9349,8681
#define FSSO12 FSSO12350,8698
#define FSSO18 FSSO18351,8715
#define FSSO24 FSSO24352,8732
#define FSSBO9 FSSBO9354,8750
#define FSSBO12 FSSBO12355,8768
#define FSSBO18 FSSBO18356,8786
#define FSSBO24 FSSBO24357,8804
#define FS9 FS9359,8823
#define FS12 FS12360,8838
#define FS18 FS18361,8853
#define FS24 FS24362,8868
#define FSI9 FSI9364,8884
#define FSI12 FSI12365,8900
#define FSI19 FSI19366,8916
#define FSI24 FSI24367,8932
#define FSB9 FSB9369,8949
#define FSB12 FSB12370,8965
#define FSB18 FSB18371,8981
#define FSB24 FSB24372,8997
#define FSBI9 FSBI9374,9014
#define FSBI12 FSBI12375,9031
#define FSBI18 FSBI18376,9048
#define FSBI24 FSBI24377,9065

lib/TFT_eSPI/examples/160 x 128/TFT_flash_jpg/jpeg2.h,47
const uint8_t Tiger[] PROGMEM = {PROGMEM4,98

lib/TFT_eSPI/examples/160 x 128/TFT_flash_jpg/jpeg3.h,48
const uint8_t Baboon[] PROGMEM = {PROGMEM4,98

lib/TFT_eSPI/examples/160 x 128/TFT_flash_jpg/jpeg4.h,50
const uint8_t Mouse160[] PROGMEM = {PROGMEM4,98

lib/TFT_eSPI/examples/160 x 128/TFT_flash_jpg/jpeg1.h,50
const uint8_t EagleEye[] PROGMEM = {PROGMEM4,98

lib/TFT_eSPI/examples/Sprite/Orrery/astronomy.h,19815
#define __ASTRONOMY_H__ASTRONOMY_H29,1270
    ASTRO_SUCCESS,                  /**< The operation was successful. */ASTRO_SUCCESS44,1505
    ASTRO_NOT_INITIALIZED,          /**< A placeholder that can be used for data that is not yet initialized. */ASTRO_NOT_INITIALIZED45,1579
    ASTRO_INVALID_BODY,             /**< The celestial body was not valid. Different sets of bodies are supported depending on the function. */ASTRO_INVALID_BODY46,1692
    ASTRO_NO_CONVERGE,              /**< A numeric solver failed to converge. This should not happen unless there is a bug in Astronomy Engine. */ASTRO_NO_CONVERGE47,1836
    ASTRO_BAD_TIME,                 /**< The provided date/time is outside the range allowed by this function. */ASTRO_BAD_TIME48,1983
    ASTRO_BAD_VECTOR,               /**< Vector magnitude is too small to be normalized into a unit vector. */ASTRO_BAD_VECTOR49,2097
    ASTRO_SEARCH_FAILURE,           /**< Search was not able to find an ascending root crossing of the function in the specified time interval. */ASTRO_SEARCH_FAILURE50,2208
    ASTRO_EARTH_NOT_ALLOWED,        /**< The Earth cannot be treated as a celestial body seen from an observer on the Earth itself. */ASTRO_EARTH_NOT_ALLOWED51,2355
    ASTRO_NO_MOON_QUARTER,          /**< No lunar quarter occurs inside the specified time range. */ASTRO_NO_MOON_QUARTER52,2490
    ASTRO_WRONG_MOON_QUARTER,       /**< Internal error: Astronomy_NextMoonQuarter found the wrong moon quarter. */ASTRO_WRONG_MOON_QUARTER53,2591
    ASTRO_INTERNAL_ERROR,           /**< A self-check failed inside the code somewhere, indicating a bug needs to be fixed. */ASTRO_INTERNAL_ERROR54,2707
    ASTRO_INVALID_PARAMETER,        /**< A parameter value passed to a function was not valid. */ASTRO_INVALID_PARAMETER55,2834
    ASTRO_FAIL_APSIS,               /**< Special-case logic for finding Neptune/Pluto apsis failed. */ASTRO_FAIL_APSIS56,2932
    ASTRO_BUFFER_TOO_SMALL,         /**< A provided buffer's size is too small to receive the requested data. */ASTRO_BUFFER_TOO_SMALL57,3035
    ASTRO_OUT_OF_MEMORY             /**< An attempt to allocate memory failed. */ASTRO_OUT_OF_MEMORY58,3148
astro_status_t;astro_status_t60,3232
    double ut;ut121,6457
    double tt;tt137,7255
    double psi;psi142,7368
    double eps;eps147,7483
astro_time_t;astro_time_t149,7501
    int     year;       /**< The year value, e.g. 2019. */year156,7594
    int     month;      /**< The month value: 1=January, 2=February, ..., 12=December. */month157,7653
    int     day;        /**< The day of the month in the range 1..31. */day158,7743
    int     hour;       /**< The hour of the day in the range 0..23. */hour159,7816
    int     minute;     /**< The minute of the hour in the range 0..59. */minute160,7888
    double  second;     /**< The floating point number of seconds in the range [0,60). */second161,7963
astro_utc_t;astro_utc_t163,8055
    astro_status_t status;  /**< `ASTRO_SUCCESS` if this struct is valid; otherwise an error code. */status170,8185
    double x;               /**< The Cartesian x-coordinate of the vector in AU. */x171,8287
    double y;               /**< The Cartesian y-coordinate of the vector in AU. */y172,8371
    double z;               /**< The Cartesian z-coordinate of the vector in AU. */z173,8455
    astro_time_t t;         /**< The date and time at which this vector is valid. */t174,8539
astro_vector_t;astro_vector_t176,8626
    astro_status_t status;  /**< `ASTRO_SUCCESS` if this struct is valid; otherwise an error code. */status183,8732
    double lat;             /**< The latitude angle: -90..+90 degrees. */lat184,8834
    double lon;             /**< The longitude angle: 0..360 degrees. */lon185,8908
    double dist;            /**< Distance in AU. */dist186,8981
astro_spherical_t;astro_spherical_t188,9035
    astro_status_t status;  /**< `ASTRO_SUCCESS` if this struct is valid; otherwise an error code. */status195,9129
    double angle;           /**< An angle expressed in degrees. */angle196,9231
astro_angle_result_t;astro_angle_result_t198,9300
    BODY_INVALID = -1,      /**< An invalid or undefined celestial body. */BODY_INVALID205,9374
    BODY_MERCURY,           /**< Mercury */BODY_MERCURY206,9450
    BODY_VENUS,             /**< Venus */BODY_VENUS207,9494
    BODY_EARTH,             /**< Earth */BODY_EARTH208,9536
    BODY_MARS,              /**< Mars */BODY_MARS209,9578
    BODY_JUPITER,           /**< Jupiter */BODY_JUPITER210,9619
    BODY_SATURN,            /**< Saturn */BODY_SATURN211,9663
    BODY_URANUS,            /**< Uranus */BODY_URANUS212,9706
    BODY_NEPTUNE,           /**< Neptune */BODY_NEPTUNE213,9749
    BODY_PLUTO,             /**< Pluto */BODY_PLUTO214,9793
    BODY_SUN,               /**< Sun */BODY_SUN215,9835
    BODY_MOON,              /**< Moon */BODY_MOON216,9875
    BODY_EMB,               /**< Earth/Moon Barycenter */BODY_EMB217,9916
    BODY_SSB                /**< Solar System Barycenter */BODY_SSB218,9974
astro_body_t;astro_body_t220,10036
#define MIN_BODY MIN_BODY222,10051
#define MAX_BODY MAX_BODY223,10151
#define MIN_YEAR MIN_YEAR225,10252
#define MAX_YEAR MAX_YEAR226,10338
    double latitude;        /**< Geographic latitude in degrees north (positive) or south (negative) of the equator. */latitude239,10787
    double longitude;       /**< Geographic longitude in degrees east (positive) or west (negative) of the prime meridian at Greenwich, England. */longitude240,10907
    double height;          /**< The height above (positive) or below (negative) sea level, expressed in meters. */height241,11055
astro_observer_t;astro_observer_t243,11173
    astro_status_t status;  /**< `ASTRO_SUCCESS` if this struct is valid; otherwise an error code. */status253,11451
    double ra;              /**< right ascension in sidereal hours. */ra254,11553
    double dec;             /**< declination in degrees */dec255,11624
    double dist;            /**< distance to the celestial body in AU. */dist256,11683
astro_equatorial_t;astro_equatorial_t258,11759
    astro_status_t status;  /**< `ASTRO_SUCCESS` if this struct is valid; otherwise an error code. */status268,12038
    double ex;              /**< Cartesian x-coordinate: in the direction of the equinox along the ecliptic plane. */ex269,12140
    double ey;              /**< Cartesian y-coordinate: in the ecliptic plane 90 degrees prograde from the equinox. */ey270,12258
    double ez;              /**< Cartesian z-coordinate: perpendicular to the ecliptic plane. Positive is north. */ez271,12378
    double elat;            /**< Latitude in degrees north (positive) or south (negative) of the ecliptic plane. */elat272,12494
    double elon;            /**< Longitude in degrees around the ecliptic plane prograde from the equinox. */elon273,12610
astro_ecliptic_t;astro_ecliptic_t275,12722
    double azimuth;     /**< Compass direction around the horizon in degrees. 0=North, 90=East, 180=South, 270=West. */azimuth286,13033
    double altitude;    /**< Angle in degrees above (positive) or below (negative) the observer's horizon. */altitude287,13153
    double ra;          /**< Right ascension in sidereal hours. */ra288,13263
    double dec;         /**< Declination in degrees. */dec289,13330
astro_horizon_t;astro_horizon_t291,13388
    astro_status_t status;  /**< `ASTRO_SUCCESS` if this struct is valid; otherwise an error code. */status298,13532
    double rot[3][3];       /**< A normalized 3x3 rotation matrix. */rot299,13634
astro_rotation_t;astro_rotation_t301,13706
    REFRACTION_NONE,    /**< No atmospheric refraction correction (airless). */REFRACTION_NONE308,13829
    REFRACTION_NORMAL,  /**< Recommended correction for standard atmospheric refraction. */REFRACTION_NORMAL309,13909
    REFRACTION_JPLHOR   /**< Used only for compatibility testing with JPL Horizons online tool. */REFRACTION_JPLHOR310,14001
astro_refraction_t;astro_refraction_t312,14102
    astro_status_t  status;     /**< `ASTRO_SUCCESS` if this struct is valid; otherwise an error code. */status319,14208
    astro_time_t    time;       /**< The time at which a searched-for event occurs. */time320,14314
astro_search_result_t;astro_search_result_t322,14403
    astro_status_t  status;         /**< `ASTRO_SUCCESS` if this struct is valid; otherwise an error code. */status331,14621
    astro_time_t    mar_equinox;    /**< The date and time of the March equinox for the specified year. */mar_equinox332,14731
    astro_time_t    jun_solstice;   /**< The date and time of the June soltice for the specified year. */jun_solstice333,14838
    astro_time_t    sep_equinox;    /**< The date and time of the September equinox for the specified year. */sep_equinox334,14944
    astro_time_t    dec_solstice;   /**< The date and time of the December solstice for the specified year. */dec_solstice335,15055
astro_seasons_t;astro_seasons_t337,15168
    astro_status_t  status;     /**< `ASTRO_SUCCESS` if this struct is valid; otherwise an error code. */status344,15328
    int             quarter;    /**< 0=new moon, 1=first quarter, 2=full moon, 3=third quarter. */quarter345,15434
    astro_time_t    time;       /**< The date and time of the lunar quarter. */time346,15533
astro_moon_quarter_t;astro_moon_quarter_t348,15615
    astro_status_t status;      /**< `ASTRO_SUCCESS` if this struct is valid; otherwise an error code. */status364,16421
    double value;               /**< The value returned by a function whose ascending root is to be found. */value365,16527
astro_func_result_t;astro_func_result_t367,16639
typedef astro_func_result_t (* astro_search_func_t) (void *context, astro_time_t time);astro_search_func_t389,17967
typedef double (* astro_deltat_func) (double ut);astro_deltat_func403,18656
    VISIBLE_MORNING,    /**< The body is best visible in the morning, before sunrise. */VISIBLE_MORNING415,18992
    VISIBLE_EVENING     /**< The body is best visible in the evening, after sunset. */VISIBLE_EVENING416,19081
astro_visibility_t;astro_visibility_t418,19170
    astro_status_t      status;                 /**< `ASTRO_SUCCESS` if this struct is valid; otherwise an error code. */status428,19520
    astro_time_t        time;                   /**< The date and time of the observation. */time429,19642
    astro_visibility_t  visibility;             /**< Whether the body is best seen in the morning or the evening. */visibility430,19736
    double              elongation;             /**< The angle in degrees between the body and the Sun, as seen from the Earth. */elongation431,19853
    double              ecliptic_separation;    /**< The difference between the ecliptic longitudes of the body and the Sun, as seen from the Earth. */ecliptic_separation432,19984
astro_elongation_t;astro_elongation_t434,20138
    astro_status_t      status;     /**< `ASTRO_SUCCESS` if this struct is valid; otherwise an error code. */status444,20442
    astro_time_t        time;       /**< The date and time when the body crosses the specified hour angle. */time445,20552
    astro_horizon_t     hor;        /**< Apparent coordinates of the body at the time it crosses the specified hour angle. */hor446,20662
astro_hour_angle_t;astro_hour_angle_t448,20790
    astro_status_t      status;         /**< `ASTRO_SUCCESS` if this struct is valid; otherwise an error code. */status458,21118
    astro_time_t        time;           /**< The date and time of the observation. */time459,21232
    double              mag;            /**< The visual magnitude of the body. Smaller values are brighter. */mag460,21318
    double              phase_angle;    /**< The angle in degrees between the Sun and the Earth, as seen from the body. Indicates the body's phase as seen from the Earth. */phase_angle461,21429
    double              helio_dist;     /**< The distance between the Sun and the body at the observation time. */helio_dist462,21603
    double              ring_tilt;      /**< For Saturn, the tilt angle in degrees of its rings as seen from Earth. For all other bodies, 0. */ring_tilt463,21718
astro_illum_t;astro_illum_t465,21864
    APSIS_PERICENTER,   /**< The body is at its closest approach to the object it orbits. */APSIS_PERICENTER472,21996
    APSIS_APOCENTER,    /**< The body is at its farthest distance from the object it orbits. */APSIS_APOCENTER473,22089
    APSIS_INVALID       /**< Undefined or invalid apsis. */APSIS_INVALID474,22185
astro_apsis_kind_t;astro_apsis_kind_t476,22247
    astro_status_t      status;     /**< `ASTRO_SUCCESS` if this struct is valid; otherwise an error code. */status495,23115
    astro_time_t        time;       /**< The date and time of the apsis. */time496,23225
    astro_apsis_kind_t  kind;       /**< Whether this is a pericenter or apocenter event. */kind497,23301
    double              dist_au;    /**< The distance between the centers of the bodies in astronomical units. */dist_au498,23394
    double              dist_km;    /**< The distance between the centers of the bodies in kilometers. */dist_km499,23508
astro_apsis_t;astro_apsis_t501,23616
    ECLIPSE_NONE,       /**< No eclipse found. */ECLIPSE_NONE508,23710
    ECLIPSE_PENUMBRAL,  /**< A penumbral lunar eclipse. (Never used for a solar eclipse.) */ECLIPSE_PENUMBRAL509,23760
    ECLIPSE_PARTIAL,    /**< A partial lunar/solar eclipse. */ECLIPSE_PARTIAL510,23853
    ECLIPSE_ANNULAR,    /**< An annular solar eclipse. (Never used for a lunar eclipse.) */ECLIPSE_ANNULAR511,23916
    ECLIPSE_TOTAL       /**< A total lunar/solar eclipse. */ECLIPSE_TOTAL512,24008
astro_eclipse_kind_t;astro_eclipse_kind_t514,24071
    astro_status_t          status;         /**< `ASTRO_SUCCESS` if this struct is valid; otherwise an error code. */status543,25559
    astro_eclipse_kind_t    kind;           /**< The type of lunar eclipse found. */kind544,25677
    astro_time_t            peak;           /**< The time of the eclipse at its peak. */peak545,25762
    double                  sd_penum;       /**< The semi-duration of the penumbral phase in minutes. */sd_penum546,25851
    double                  sd_partial;     /**< The semi-duration of the partial phase in minutes, or 0.0 if none. */sd_partial547,25956
    double                  sd_total;       /**< The semi-duration of the total phase in minutes, or 0.0 if none. */sd_total548,26075
astro_lunar_eclipse_t;astro_lunar_eclipse_t550,26194
    astro_status_t          status;         /**< `ASTRO_SUCCESS` if this struct is valid; otherwise an error code. */status586,28070
    astro_eclipse_kind_t    kind;           /**< The type of solar eclipse found. */kind587,28188
    astro_time_t            peak;           /**< The date and time of the eclipse at its peak. */peak588,28273
    double                  distance;       /**< The distance between the Sun/Moon shadow axis and the center of the Earth, in kilometers. */distance589,28371
    double                  latitude;       /**< The geographic latitude at the center of the peak eclipse shadow. */latitude590,28513
    double                  longitude;      /**< The geographic longitude at the center of the peak eclipse shadow. */longitude591,28631
astro_global_solar_eclipse_t;astro_global_solar_eclipse_t593,28752
    astro_time_t    time;       /**< The date and time of the event. */time612,29530
    double          altitude;   /**< The angular altitude of the center of the Sun above/below the horizon, at `time`, corrected for atmospheric refraction and expressed in degrees. */altitude613,29602
astro_eclipse_event_t;astro_eclipse_event_t615,29789
    astro_status_t          status;         /**< `ASTRO_SUCCESS` if this struct is valid; otherwise an error code. */status647,31638
    astro_eclipse_kind_t    kind;           /**< The type of solar eclipse found: `ECLIPSE_PARTIAL`, `ECLIPSE_ANNULAR`, or `ECLIPSE_TOTAL`. */kind648,31756
    astro_eclipse_event_t   partial_begin;  /**< The time and Sun altitude at the beginning of the eclipse. */partial_begin649,31899
    astro_eclipse_event_t   total_begin;    /**< If this is an annular or a total eclipse, the time and Sun altitude when annular/total phase begins; otherwise invalid. */total_begin650,32010
    astro_eclipse_event_t   peak;           /**< The time and Sun altitude when the eclipse reaches its peak. */peak651,32182
    astro_eclipse_event_t   total_end;      /**< If this is an annular or a total eclipse, the time and Sun altitude when annular/total phase ends; otherwise invalid. */total_end652,32295
    astro_eclipse_event_t   partial_end;    /**< The time and Sun altitude at the end of the eclipse. */partial_end653,32465
astro_local_solar_eclipse_t;astro_local_solar_eclipse_t655,32572
    astro_status_t  status;         /**< `ASTRO_SUCCESS` if this struct is valid; otherwise an error code. */status677,33405
    astro_time_t    start;          /**< Date and time at the beginning of the transit. */start678,33515
    astro_time_t    peak;           /**< Date and time of the peak of the transit. */peak679,33606
    astro_time_t    finish;         /**< Date and time at the end of the transit. */finish680,33692
    double          separation;     /**< Angular separation in arcminutes between the centers of the Sun and the planet at time `peak`. */separation681,33777
astro_transit_t;astro_transit_t683,33918
    ABERRATION,     /**< Request correction for aberration. */ABERRATION707,34941
    NO_ABERRATION   /**< Do not correct for aberration. */NO_ABERRATION708,35004
astro_aberration_t;astro_aberration_t710,35065
    EQUATOR_J2000,      /**< Represent equatorial coordinates in the J2000 epoch. */EQUATOR_J2000730,36031
    EQUATOR_OF_DATE     /**< Represent equatorial coordinates using the Earth's equator at the given date and time. */EQUATOR_OF_DATE731,36116
astro_equator_date_t;astro_equator_date_t733,36237
    DIRECTION_RISE = +1,    /**< Search for the time a body begins to rise above the horizon. */DIRECTION_RISE743,36487
    DIRECTION_SET  = -1,    /**< Search for the time a body finishes sinking below the horizon. */DIRECTION_SET744,36584
astro_direction_t;astro_direction_t746,36685
    astro_status_t status;      /**< `ASTRO_SUCCESS` if this struct is valid; otherwise an error code. */status760,37184
    const char    *symbol;      /**< 3-character mnemonic symbol for the constellation, e.g. "Ori". */symbol761,37290
    const char    *name;        /**< Full name of constellation, e.g. "Orion". */name762,37393
    double         ra_1875;     /**< Right ascension expressed in B1875 coordinates. */ra_1875763,37475
    double         dec_1875;    /**< Declination expressed in B1875 coordinates. */dec_1875764,37563
astro_constellation_t;astro_constellation_t766,37649
    TIME_FORMAT_DAY,    /**< Truncate to UTC calendar date only, e.g. `2020-12-31`. Buffer size must be at least 11 characters. */TIME_FORMAT_DAY774,37772
    TIME_FORMAT_MINUTE, /**< Round to nearest UTC minute, e.g. `2020-12-31T15:47Z`. Buffer size must be at least 18 characters. */TIME_FORMAT_MINUTE775,37903
    TIME_FORMAT_SECOND, /**< Round to nearest UTC second, e.g. `2020-12-31T15:47:32Z`. Buffer size must be at least 21 characters. */TIME_FORMAT_SECOND776,38034
    TIME_FORMAT_MILLI   /**< Round to nearest UTC millisecond, e.g. `2020-12-31T15:47:32.397Z`. Buffer size must be at least 25 characters. */TIME_FORMAT_MILLI777,38168
astro_time_format_t;astro_time_format_t779,38313
#define TIME_TEXT_BYTES TIME_TEXT_BYTES781,38335

lib/TFT_eSPI/examples/Sprite/Orrery/astronomy.c,35504
#define PI PI40,1433
    double x;x44,1490
    double y;y45,1504
    double z;z46,1518
terse_vector_t;terse_vector_t48,1534
static const terse_vector_t VecZero;VecZero50,1551
static terse_vector_t VecAdd(terse_vector_t a, terse_vector_t b)VecAdd52,1589
static terse_vector_t VecSub(terse_vector_t a, terse_vector_t b)VecSub61,1758
static void VecIncr(terse_vector_t *target, terse_vector_t source)VecIncr70,1927
static void VecDecr(terse_vector_t *target, terse_vector_t source)VecDecr77,2080
static terse_vector_t VecMul(double s, terse_vector_t v)VecMul84,2233
static void VecScale(terse_vector_t *target, double scalar)VecScale93,2388
static terse_vector_t VecRamp(terse_vector_t a, terse_vector_t b, double ramp)VecRamp100,2528
static terse_vector_t VecMean(terse_vector_t a, terse_vector_t b)VecMean109,2753
static astro_vector_t PublicVec(astro_time_t time, terse_vector_t terse)PublicVec118,2941
    double          tt;  /* Terrestrial Time in J2000 days */tt133,3212
    terse_vector_t  r;   /* position [au] */r134,3274
    terse_vector_t  v;   /* velocity [au/day] */v135,3319
body_state_t;body_state_t137,3370
static const double DAYS_PER_TROPICAL_YEAR = 365.24217;DAYS_PER_TROPICAL_YEAR140,3401
static const double DEG2RAD = 0.017453292519943296;DEG2RAD141,3457
static const double RAD2DEG = 57.295779513082321;RAD2DEG142,3509
static const double ASEC360 = 1296000.0;ASEC360143,3559
static const double ASEC2RAD = 4.848136811095359935899141e-6;ASEC2RAD144,3600
static const double PI2 = 2.0 * PI;PI2145,3662
static const double ARC = 3600.0 * 180.0 / PI;          /* arcseconds per radian */ARC146,3698
static const double C_AUDAY = 173.1446326846693;        /* speed of light in AU/day */C_AUDAY147,3782
static const double KM_PER_AU = 1.4959787069098932e+8;KM_PER_AU148,3869
static const double SECONDS_PER_DAY = 24.0 * 3600.0;SECONDS_PER_DAY149,3924
static const double SOLAR_DAYS_PER_SIDEREAL_DAY = 0.9972695717592592;SOLAR_DAYS_PER_SIDEREAL_DAY150,3977
static const double MEAN_SYNODIC_MONTH = 29.530588;     /* average number of days for Moon to return to the same phase */MEAN_SYNODIC_MONTH151,4047
static const double EARTH_ORBITAL_PERIOD = 365.256;EARTH_ORBITAL_PERIOD152,4169
static const double NEPTUNE_ORBITAL_PERIOD = 60189.0;NEPTUNE_ORBITAL_PERIOD153,4221
static const double REFRACTION_NEAR_HORIZON = 34.0 / 60.0;   /* degrees of refractive "lift" seen for objects near horizon */REFRACTION_NEAR_HORIZON154,4275
static const double SUN_RADIUS_KM  = 695700.0;SUN_RADIUS_KM156,4402
#define             SUN_RADIUS_AU SUN_RADIUS_AU157,4449
#define EARTH_FLATTENING EARTH_FLATTENING159,4513
#define EARTH_EQUATORIAL_RADIUS_KM EARTH_EQUATORIAL_RADIUS_KM160,4567
#define EARTH_EQUATORIAL_RADIUS_AU EARTH_EQUATORIAL_RADIUS_AU161,4613
#define EARTH_MEAN_RADIUS_KM EARTH_MEAN_RADIUS_KM162,4690
#define EARTH_ATMOSPHERE_KM EARTH_ATMOSPHERE_KM163,4803
#define EARTH_ECLIPSE_RADIUS_KM EARTH_ECLIPSE_RADIUS_KM164,4913
#define MOON_EQUATORIAL_RADIUS_KM MOON_EQUATORIAL_RADIUS_KM167,5099
#define MOON_MEAN_RADIUS_KM MOON_MEAN_RADIUS_KM168,5142
#define MOON_POLAR_RADIUS_KM MOON_POLAR_RADIUS_KM169,5185
#define MOON_EQUATORIAL_RADIUS_AU MOON_EQUATORIAL_RADIUS_AU170,5228
static const double ASEC180 = 180.0 * 60.0 * 60.0;      /* arcseconds per 180 degrees (or pi radians) */ASEC180172,5305
static const double EARTH_MOON_MASS_RATIO = 81.30056;EARTH_MOON_MASS_RATIO173,5410
static const double SUN_GM     = 0.2959122082855911e-03;SUN_GM187,6014
static const double JUPITER_GM = 0.2825345909524226e-06;JUPITER_GM188,6071
static const double SATURN_GM  = 0.8459715185680659e-07;SATURN_GM189,6128
static const double URANUS_GM  = 0.1292024916781969e-07;URANUS_GM190,6185
static const double NEPTUNE_GM = 0.1524358900784276e-07;NEPTUNE_GM191,6242
#define ARRAYSIZE(ARRAYSIZE194,6326
#define AU_PER_PARSEC AU_PER_PARSEC195,6377
#define Y2000_IN_MJD Y2000_IN_MJD196,6479
static double LongitudeOffset(double diff)LongitudeOffset204,6757
static double NormalizeLongitude(double lon)NormalizeLongitude217,6959
double Astronomy_VectorLength(astro_vector_t vector)Astronomy_VectorLength238,7452
const char *Astronomy_BodyName(astro_body_t body)Astronomy_BodyName248,7793
astro_body_t Astronomy_BodyCode(const char *name)Astronomy_BodyCode274,8821
static int IsSuperiorPlanet(astro_body_t body)IsSuperiorPlanet298,9804
static double PlanetOrbitalPeriod(astro_body_t body)PlanetOrbitalPeriod318,10152
static void FatalError(const char *message)FatalError335,10711
static astro_vector_t VecError(astro_status_t status, astro_time_t time)VecError341,10818
static astro_spherical_t SphereError(astro_status_t status)SphereError350,11012
static astro_equatorial_t EquError(astro_status_t status)EquError358,11203
static astro_ecliptic_t EclError(astro_status_t status)EclError366,11374
static astro_angle_result_t AngleError(astro_status_t status)AngleError374,11560
static astro_func_result_t FuncError(astro_status_t status)FuncError382,11731
static astro_time_t TimeError(void)TimeError390,11899
static astro_rotation_t RotationErr(astro_status_t status)RotationErr397,12031
static astro_moon_quarter_t MoonQuarterError(astro_status_t status)MoonQuarterError410,12283
static astro_elongation_t ElongError(astro_status_t status)ElongError419,12492
static astro_hour_angle_t HourAngleError(astro_status_t status)HourAngleError432,12785
static astro_illum_t IllumError(astro_status_t status)IllumError443,13050
static astro_apsis_t ApsisError(astro_status_t status)ApsisError457,13325
static astro_search_result_t SearchError(astro_status_t status)SearchError469,13567
static astro_constellation_t ConstelErr(astro_status_t status)ConstelErr477,13748
static astro_transit_t TransitErr(astro_status_t status)TransitErr486,13988
static astro_func_result_t SynodicPeriod(astro_body_t body)SynodicPeriod495,14223
static astro_angle_result_t AngleBetween(astro_vector_t a, astro_vector_t b)AngleBetween520,14932
double Astronomy_DeltaT_EspenakMeeus(double ut)Astronomy_DeltaT_EspenakMeeus556,15999
double Astronomy_DeltaT_JplHorizons(double ut)Astronomy_DeltaT_JplHorizons676,19674
static astro_deltat_func DeltaTFunc = Astronomy_DeltaT_EspenakMeeus;DeltaTFunc684,19861
void Astronomy_SetDeltaTFunction(astro_deltat_func func)Astronomy_SetDeltaTFunction701,20622
static double TerrestrialTime(double ut)TerrestrialTime706,20707
astro_time_t Astronomy_TimeFromDays(double ut)Astronomy_TimeFromDays724,21144
astro_time_t Astronomy_CurrentTime(void)Astronomy_CurrentTime741,21719
astro_time_t Astronomy_MakeTime(int year, int month, int day, int hour, int minute, double second)Astronomy_MakeTime775,23103
astro_time_t Astronomy_AddDays(astro_time_t time, double days)Astronomy_AddDays814,24832
astro_time_t Astronomy_TimeFromUtc(astro_utc_t utc)Astronomy_TimeFromUtc846,26003
astro_utc_t Astronomy_UtcFromTime(astro_time_t time)Astronomy_UtcFromTime863,26806
astro_status_t Astronomy_FormatTime(Astronomy_FormatTime933,29481
astro_observer_t Astronomy_MakeObserver(double latitude, double longitude, double height)Astronomy_MakeObserver1046,33338
static void iau2000b(astro_time_t *time)iau2000b1057,33587
static double mean_obliq(double tt)mean_obliq1177,44429
    double tt;tt1193,44775
    double dpsi;dpsi1194,44790
    double deps;deps1195,44807
    double ee;ee1196,44824
    double mobl;mobl1197,44839
    double tobl;tobl1198,44856
earth_tilt_t;earth_tilt_t1200,44875
static earth_tilt_t e_tilt(astro_time_t *time)e_tilt1203,44906
static void ecl2equ_vec(astro_time_t time, const double ecl[3], double equ[3])ecl2equ_vec1218,45221
static astro_rotation_t precession_rot(double tt1, double tt2)precession_rot1230,45530
static void precession(double tt1, const double pos1[3], double tt2, double pos2[3])precession1318,48070
static astro_equatorial_t vector2radec(const double pos[3])vector2radec1327,48449
static astro_rotation_t nutation_rot(astro_time_t *time, int direction)nutation_rot1366,49284
static void nutation(astro_time_t *time, int direction, const double inpos[3], double outpos[3])nutation1421,50833
static double era(double ut)        /* Earth Rotation Angle */era1429,51243
static double sidereal_time(astro_time_t *time)sidereal_time1440,51525
static void terra(astro_observer_t observer, double st, double pos[3])terra1459,52099
static void geo_pos(astro_time_t *time, astro_observer_t observer, double outpos[3])geo_pos1487,53131
static void spin(double angle, const double pos1[3], double vec2[3])spin1497,53403
#define DECLARE_PASCAL_ARRAY_1(DECLARE_PASCAL_ARRAY_11511,53772
#define DECLARE_PASCAL_ARRAY_2(DECLARE_PASCAL_ARRAY_21514,53866
#define ACCESS_PASCAL_ARRAY_1(ACCESS_PASCAL_ARRAY_11517,53987
#define ACCESS_PASCAL_ARRAY_2(ACCESS_PASCAL_ARRAY_21520,54058
    double t;t1525,54165
    double dgam;dgam1526,54179
    double dlam, n, gam1c, sinpi;dlam1527,54196
    double dlam, n, gam1c, sinpi;n1527,54196
    double dlam, n, gam1c, sinpi;gam1c1527,54196
    double dlam, n, gam1c, sinpi;sinpi1527,54196
    double l0, l, ls, f, d, s;l01528,54230
    double l0, l, ls, f, d, s;l1528,54230
    double l0, l, ls, f, d, s;ls1528,54230
    double l0, l, ls, f, d, s;f1528,54230
    double l0, l, ls, f, d, s;d1528,54230
    double l0, l, ls, f, d, s;s1528,54230
    double dl0, dl, dls, df, dd, ds;dl01529,54261
    double dl0, dl, dls, df, dd, ds;dl1529,54261
    double dl0, dl, dls, df, dd, ds;dls1529,54261
    double dl0, dl, dls, df, dd, ds;df1529,54261
    double dl0, dl, dls, df, dd, ds;dd1529,54261
    double dl0, dl, dls, df, dd, ds;ds1529,54261
MoonContext;MoonContext1533,54464
#define T T1535,54478
#define DGAM DGAM1536,54507
#define DLAM DLAM1537,54539
#define N N1538,54571
#define GAM1C GAM1C1539,54600
#define SINPI SINPI1540,54633
#define L0 L01541,54666
#define L L1542,54696
#define LS LS1543,54725
#define F F1544,54755
#define D D1545,54784
#define S S1546,54813
#define DL0 DL01547,54842
#define DL DL1548,54873
#define DLS DLS1549,54903
#define DF DF1550,54934
#define DD DD1551,54964
#define DS DS1552,54994
#define CO(CO1553,55024
#define SI(SI1554,55084
static double Frac(double x)Frac1556,55145
static void AddThe(AddThe1561,55204
static double Sine(double phi)Sine1569,55351
static void LongPeriodic(MoonContext *ctx)LongPeriodic1575,55465
static void Init(MoonContext *ctx)Init1595,56218
static void Term(MoonContext *ctx, int p, int q, int r, int s, double *x, double *y)Term1635,57469
    #define I(I1639,57609
    #undef II1652,57852
static void AddSol(AddSol1655,57868
#define ADDN(ADDN1674,58175
static void SolarN(MoonContext *ctx)SolarN1676,58264
static void Planetary(MoonContext *ctx)Planetary1693,58647
int _CalcMoonCount;     /* Undocumented global for performance tuning. */_CalcMoonCount1704,59089
static void CalcMoon(CalcMoon1706,59164
#undef TT1836,67965
#undef DGAMDGAM1837,67974
#undef DLAMDLAM1838,67986
#undef NN1839,67998
#undef GAM1CGAM1C1840,68007
#undef SINPISINPI1841,68020
#undef L0L01842,68033
#undef LL1843,68043
#undef LSLS1844,68052
#undef FF1845,68062
#undef DD1846,68071
#undef SS1847,68080
#undef DL0DL01848,68089
#undef DLDL1849,68100
#undef DLSDLS1850,68110
#undef DFDF1851,68121
#undef DDDD1852,68131
#undef DSDS1853,68141
#undef COCO1854,68151
#undef SISI1855,68161
astro_vector_t Astronomy_GeoMoon(astro_time_t time)Astronomy_GeoMoon1875,69028
    double amplitude;amplitude1911,70096
    double phase;phase1912,70118
    double frequency;frequency1913,70136
vsop_term_t;vsop_term_t1915,70160
    int nterms;nterms1919,70191
    const vsop_term_t *term;term1920,70207
vsop_series_t;vsop_series_t1922,70238
    int nseries;nseries1926,70271
    const vsop_series_t *series;series1927,70288
vsop_formula_t;vsop_formula_t1929,70323
    const vsop_formula_t formula[3];formula1933,70357
vsop_model_t;vsop_model_t1935,70396
static const vsop_term_t vsop_lon_Mercury_0[] =vsop_lon_Mercury_01938,70427
static const vsop_term_t vsop_lon_Mercury_1[] =vsop_lon_Mercury_11949,70878
static const vsop_series_t vsop_lon_Mercury[] =vsop_lon_Mercury1958,71217
static const vsop_term_t vsop_lat_Mercury_0[] =vsop_lat_Mercury_01964,71332
static const vsop_term_t vsop_lat_Mercury_1[] =vsop_lat_Mercury_11975,71783
static const vsop_series_t vsop_lat_Mercury[] =vsop_lat_Mercury1981,71946
static const vsop_term_t vsop_rad_Mercury_0[] =vsop_rad_Mercury_01987,72061
static const vsop_term_t vsop_rad_Mercury_1[] =vsop_rad_Mercury_11997,72454
static const vsop_series_t vsop_rad_Mercury[] =vsop_rad_Mercury2003,72621
static const vsop_term_t vsop_lon_Venus_0[] =vsop_lon_Venus_02010,72738
static const vsop_term_t vsop_lon_Venus_1[] =vsop_lon_Venus_12024,73348
static const vsop_series_t vsop_lon_Venus[] =vsop_lon_Venus2031,73570
static const vsop_term_t vsop_lat_Venus_0[] =vsop_lat_Venus_02037,73680
static const vsop_term_t vsop_lat_Venus_1[] =vsop_lat_Venus_12044,73898
static const vsop_series_t vsop_lat_Venus[] =vsop_lat_Venus2049,74006
static const vsop_term_t vsop_rad_Venus_0[] =vsop_rad_Venus_02055,74115
static const vsop_term_t vsop_rad_Venus_1[] =vsop_rad_Venus_12067,74616
static const vsop_series_t vsop_rad_Venus[] =vsop_rad_Venus2072,74724
static const vsop_term_t vsop_lon_Earth_0[] =vsop_lon_Earth_02079,74835
static const vsop_term_t vsop_lon_Earth_1[] =vsop_lon_Earth_12111,76442
static const vsop_term_t vsop_lon_Earth_2[] =vsop_lon_Earth_22118,76662
static const vsop_series_t vsop_lon_Earth[] =vsop_lon_Earth2123,76769
static const vsop_term_t vsop_lat_Earth_1[] =vsop_lat_Earth_12130,76908
static const vsop_series_t vsop_lat_Earth[] =vsop_lat_Earth2136,77072
static const vsop_term_t vsop_rad_Earth_0[] =vsop_rad_Earth_02142,77169
static const vsop_term_t vsop_rad_Earth_1[] =vsop_rad_Earth_12160,78010
static const vsop_term_t vsop_rad_Earth_2[] =vsop_rad_Earth_22166,78174
static const vsop_series_t vsop_rad_Earth[] =vsop_rad_Earth2171,78281
static const vsop_term_t vsop_lon_Mars_0[] =vsop_lon_Mars_02179,78422
static const vsop_term_t vsop_lon_Mars_1[] =vsop_lon_Mars_12232,81196
static const vsop_term_t vsop_lon_Mars_2[] =vsop_lon_Mars_22243,81637
static const vsop_series_t vsop_lon_Mars[] =vsop_lon_Mars2249,81799
static const vsop_term_t vsop_lat_Mars_0[] =vsop_lat_Mars_02256,81934
static const vsop_term_t vsop_lat_Mars_1[] =vsop_lat_Mars_12265,82263
static const vsop_series_t vsop_lat_Mars[] =vsop_lat_Mars2272,82478
static const vsop_term_t vsop_rad_Mars_0[] =vsop_rad_Mars_02278,82584
static const vsop_term_t vsop_rad_Mars_1[] =vsop_rad_Mars_12301,83694
static const vsop_term_t vsop_rad_Mars_2[] =vsop_rad_Mars_22309,83966
static const vsop_series_t vsop_rad_Mars[] =vsop_rad_Mars2315,84128
static const vsop_term_t vsop_lon_Jupiter_0[] =vsop_lon_Jupiter_02323,84265
static const vsop_term_t vsop_lon_Jupiter_1[] =vsop_lon_Jupiter_12356,85909
static const vsop_term_t vsop_lon_Jupiter_2[] =vsop_lon_Jupiter_22369,86455
static const vsop_series_t vsop_lon_Jupiter[] =vsop_lon_Jupiter2376,86669
static const vsop_term_t vsop_lat_Jupiter_0[] =vsop_lat_Jupiter_02383,86816
static const vsop_term_t vsop_lat_Jupiter_1[] =vsop_lat_Jupiter_12393,87199
static const vsop_series_t vsop_lat_Jupiter[] =vsop_lat_Jupiter2398,87307
static const vsop_term_t vsop_rad_Jupiter_0[] =vsop_rad_Jupiter_02404,87422
static const vsop_term_t vsop_rad_Jupiter_1[] =vsop_rad_Jupiter_12427,88522
static const vsop_series_t vsop_rad_Jupiter[] =vsop_rad_Jupiter2436,88849
static const vsop_term_t vsop_lon_Saturn_0[] =vsop_lon_Saturn_02443,88967
static const vsop_term_t vsop_lon_Saturn_1[] =vsop_lon_Saturn_12480,90822
static const vsop_term_t vsop_lon_Saturn_2[] =vsop_lon_Saturn_22496,91529
static const vsop_series_t vsop_lon_Saturn[] =vsop_lon_Saturn2504,91797
static const vsop_term_t vsop_lat_Saturn_0[] =vsop_lat_Saturn_02511,91941
static const vsop_term_t vsop_lat_Saturn_1[] =vsop_lat_Saturn_12524,92484
static const vsop_series_t vsop_lat_Saturn[] =vsop_lat_Saturn2531,92699
static const vsop_term_t vsop_rad_Saturn_0[] =vsop_rad_Saturn_02537,92811
static const vsop_term_t vsop_rad_Saturn_1[] =vsop_rad_Saturn_12564,94127
static const vsop_term_t vsop_rad_Saturn_2[] =vsop_rad_Saturn_22574,94505
static const vsop_series_t vsop_rad_Saturn[] =vsop_rad_Saturn2579,94612
static const vsop_term_t vsop_lon_Uranus_0[] =vsop_lon_Uranus_02587,94757
static const vsop_term_t vsop_lon_Uranus_1[] =vsop_lon_Uranus_12630,96922
static const vsop_series_t vsop_lon_Uranus[] =vsop_lon_Uranus2640,97298
static const vsop_term_t vsop_lat_Uranus_0[] =vsop_lat_Uranus_02646,97411
static const vsop_term_t vsop_lat_Uranus_1[] =vsop_lat_Uranus_12655,97733
static const vsop_series_t vsop_lat_Uranus[] =vsop_lat_Uranus2660,97839
static const vsop_term_t vsop_rad_Uranus_0[] =vsop_rad_Uranus_02666,97951
static const vsop_term_t vsop_rad_Uranus_1[] =vsop_rad_Uranus_12694,99310
static const vsop_series_t vsop_rad_Uranus[] =vsop_rad_Uranus2699,99416
static const vsop_term_t vsop_lon_Neptune_0[] =vsop_lon_Neptune_02706,99531
static const vsop_term_t vsop_lon_Neptune_1[] =vsop_lon_Neptune_12720,100123
static const vsop_series_t vsop_lon_Neptune[] =vsop_lon_Neptune2727,100337
static const vsop_term_t vsop_lat_Neptune_0[] =vsop_lat_Neptune_02733,100453
static const vsop_series_t vsop_lat_Neptune[] =vsop_lat_Neptune2742,100775
static const vsop_term_t vsop_rad_Neptune_0[] =vsop_rad_Neptune_02747,100859
static const vsop_series_t vsop_rad_Neptune[] =vsop_rad_Neptune2763,101564
#define VSOPFORMULA(VSOPFORMULA2771,101678
static const vsop_model_t vsop[] =vsop2774,101741
#define CalcEarth(CalcEarth2787,102663
#define LON_INDEX LON_INDEX2788,102727
#define LAT_INDEX LAT_INDEX2789,102747
#define RAD_INDEX RAD_INDEX2790,102767
static void VsopCoords(const vsop_model_t *model, double t, double sphere[3])VsopCoords2793,102804
static terse_vector_t VsopRotate(const double ecl[3])VsopRotate2818,103498
static void VsopSphereToRect(double lon, double lat, double radius, double pos[3])VsopSphereToRect2836,104047
static const double DAYS_PER_MILLENNIUM = 365250.0;DAYS_PER_MILLENNIUM2844,104276
static astro_vector_t CalcVsop(const vsop_model_t *model, astro_time_t time)CalcVsop2847,104330
static void VsopDeriv(const vsop_model_t *model, double t, double deriv[3])VsopDeriv2875,105190
static body_state_t CalcVsopPosVel(const vsop_model_t *model, double tt)CalcVsopPosVel2906,106193
static double VsopHelioDistance(const vsop_model_t *model, astro_time_t time)VsopHelioDistance2955,107807
static void AdjustBarycenter(astro_vector_t *ssb, astro_time_t time, astro_body_t body, double planet_gm)AdjustBarycenter2985,108709
static astro_vector_t CalcSolarSystemBarycenter(astro_time_t time)CalcSolarSystemBarycenter2998,109051
    double          tt;   /* J2000 terrestrial time [days] */tt3019,109596
    terse_vector_t  r;    /* position [au] */r3020,109658
    terse_vector_t  v;    /* velocity [au/day] */v3021,109704
    terse_vector_t  a;    /* acceleration [au/day^2] */a3022,109754
} body_grav_calc_t;body_grav_calc_t3023,109810
#define PLUTO_NUM_STATES PLUTO_NUM_STATES3026,109847
#define PLUTO_TIME_STEP PLUTO_TIME_STEP3027,109876
static const body_state_t PlutoStateTable[] =PlutoStateTable3029,109909
static terse_vector_t UpdatePosition(double dt, terse_vector_t r, terse_vector_t v, terse_vector_t a)UpdatePosition3075,115948
static body_state_t AdjustBarycenterPosVel(body_state_t *ssb, double tt, astro_body_t body, double planet_gm)AdjustBarycenterPosVel3084,116172
static void MajorBodyBary(body_state_t bary[5], double tt)MajorBodyBary3104,116754
static void AddAcceleration(terse_vector_t *acc, terse_vector_t small_pos, double gm, terse_vector_t major_pos)AddAcceleration3132,117657
static terse_vector_t SmallBodyAcceleration(terse_vector_t small_pos, const body_state_t bary[5])SmallBodyAcceleration3149,118059
body_grav_calc_t GravSim(           /* out: [pos, vel, acc] of the simulated body at time tt2 */GravSim3164,118629
#define PLUTO_DT PLUTO_DT3197,120128
#define PLUTO_NSTEPS PLUTO_NSTEPS3202,120260
    body_grav_calc_t   step[PLUTO_NSTEPS];step3207,120363
body_segment_t;body_segment_t3209,120408
static body_segment_t *pluto_cache[PLUTO_NUM_STATES-1];pluto_cache3214,120560
static int ClampIndex(double frac, int nsteps)ClampIndex3217,120618
static body_grav_calc_t GravFromState(body_state_t bary[5], const body_state_t *state)GravFromState3228,120811
static astro_status_t GetSegment(int *seg_index, body_segment_t *cache[], double tt)GetSegment3243,121243
static terse_vector_t CalcPlutoOneWay(body_state_t bary[5], const body_state_t *init_state, double target_tt, double dt)CalcPlutoOneWay3301,123479
static astro_vector_t CalcPluto(astro_time_t time)CalcPluto3315,123864
astro_vector_t Astronomy_HelioVector(astro_body_t body, astro_time_t time)Astronomy_HelioVector3388,126926
astro_func_result_t Astronomy_HelioDistance(astro_body_t body, astro_time_t time)Astronomy_HelioDistance3458,129012
astro_vector_t Astronomy_GeoVector(astro_body_t body, astro_time_t time, astro_aberration_t aberration)Astronomy_GeoVector3520,131559
astro_equatorial_t Astronomy_Equator(Astronomy_Equator3627,135983
astro_horizon_t Astronomy_Horizon(Astronomy_Horizon3714,139462
astro_ecliptic_t Astronomy_SunPosition(astro_time_t time)Astronomy_SunPosition3838,143405
astro_ecliptic_t Astronomy_Ecliptic(astro_vector_t equ)Astronomy_Ecliptic3883,145093
astro_angle_result_t Astronomy_EclipticLongitude(astro_body_t body, astro_time_t time)Astronomy_EclipticLongitude3918,146342
static astro_ecliptic_t RotateEquatorialToEcliptic(const double pos[3], double obliq_radians)RotateEquatorialToEcliptic3937,146961
static astro_func_result_t sun_offset(void *context, astro_time_t time)sun_offset3965,147638
astro_search_result_t Astronomy_SearchSunLongitude(Astronomy_SearchSunLongitude4014,149999
#define CALLFUNC(CALLFUNC4024,150290
astro_search_result_t Astronomy_Search(Astronomy_Search4110,154727
static int QuadInterp(QuadInterp4221,158480
static astro_status_t FindSeasonChange(double targetLon, int year, int month, int day, astro_time_t *time)FindSeasonChange4268,159810
astro_seasons_t Astronomy_Seasons(int year)Astronomy_Seasons4313,162269
astro_angle_result_t Astronomy_AngleFromSun(astro_body_t body, astro_time_t time)Astronomy_AngleFromSun4356,163864
astro_elongation_t Astronomy_Elongation(astro_body_t body, astro_time_t time)Astronomy_Elongation4405,165968
static astro_func_result_t neg_elong_slope(void *context, astro_time_t time)neg_elong_slope4436,166765
astro_elongation_t Astronomy_SearchMaxElongation(astro_body_t body, astro_time_t startTime)Astronomy_SearchMaxElongation4486,169142
astro_angle_result_t Astronomy_LongitudeFromSun(astro_body_t body, astro_time_t time)Astronomy_LongitudeFromSun4654,175615
astro_angle_result_t Astronomy_MoonPhase(astro_time_t time)Astronomy_MoonPhase4702,177320
static astro_func_result_t moon_offset(void *context, astro_time_t time)moon_offset4707,177441
astro_search_result_t Astronomy_SearchMoonPhase(double targetLon, astro_time_t startTime, double limitDays)Astronomy_SearchMoonPhase4755,179718
astro_moon_quarter_t Astronomy_SearchMoonQuarter(astro_time_t startTime)Astronomy_SearchMoonQuarter4813,182324
astro_moon_quarter_t Astronomy_NextMoonQuarter(astro_moon_quarter_t mq)Astronomy_NextMoonQuarter4852,183899
static astro_func_result_t rlon_offset(astro_body_t body, astro_time_t time, int direction, double targetRelLon)rlon_offset4875,184757
astro_search_result_t Astronomy_SearchRelativeLongitude(astro_body_t body, double targetRelLon, astro_time_t startTime)Astronomy_SearchRelativeLongitude4940,188088
astro_hour_angle_t Astronomy_SearchHourAngle(Astronomy_SearchHourAngle5049,192727
    astro_body_t        body;body5122,195259
    int                 direction;direction5123,195289
    astro_observer_t    observer;observer5124,195324
    double              body_radius_au;body_radius_au5125,195358
context_peak_altitude_t;context_peak_altitude_t5127,195400
static astro_func_result_t peak_altitude(void *context, astro_time_t time)peak_altitude5130,195442
astro_search_result_t Astronomy_SearchRiseSet(Astronomy_SearchRiseSet5207,199307
static double MoonMagnitude(double phase, double helio_dist, double geo_dist)MoonMagnitude5330,204061
static astro_status_t SaturnMagnitude(SaturnMagnitude5343,204599
static astro_status_t VisualMagnitude(VisualMagnitude5384,205856
astro_illum_t Astronomy_Illumination(astro_body_t body, astro_time_t time)Astronomy_Illumination5450,208662
static astro_func_result_t mag_slope(void *context, astro_time_t time)mag_slope5557,211842
astro_illum_t Astronomy_SearchPeakMagnitude(astro_body_t body, astro_time_t startTime)Astronomy_SearchPeakMagnitude5611,214149
static double MoonDistance(astro_time_t t)MoonDistance5726,218783
static astro_func_result_t moon_distance_slope(void *context, astro_time_t time)moon_distance_slope5733,218924
astro_apsis_t Astronomy_SearchLunarApsis(astro_time_t startTime)Astronomy_SearchLunarApsis5778,220968
astro_apsis_t Astronomy_NextLunarApsis(astro_apsis_t apsis)Astronomy_NextLunarApsis5872,224641
    int direction;direction5899,225454
    astro_body_t body;body5900,225473
planet_distance_context_t;planet_distance_context_t5902,225498
static astro_func_result_t planet_distance_slope(void *context, astro_time_t time)planet_distance_slope5906,225543
static astro_apsis_t PlanetExtreme(PlanetExtreme5927,226226
static astro_apsis_t BruteSearchPlanetApsis(astro_body_t body, astro_time_t startTime)BruteSearchPlanetApsis5982,227889
astro_apsis_t Astronomy_SearchPlanetApsis(astro_body_t body, astro_time_t startTime)Astronomy_SearchPlanetApsis6110,232995
astro_apsis_t Astronomy_NextPlanetApsis(astro_body_t body, astro_apsis_t apsis)Astronomy_NextPlanetApsis6218,236960
astro_rotation_t Astronomy_InverseRotation(astro_rotation_t rotation)Astronomy_InverseRotation6258,238296
astro_rotation_t Astronomy_CombineRotation(astro_rotation_t a, astro_rotation_t b)Astronomy_CombineRotation6294,239352
astro_vector_t Astronomy_VectorFromSphere(astro_spherical_t sphere, astro_time_t time)Astronomy_VectorFromSphere6338,241295
astro_spherical_t Astronomy_SphereFromVector(astro_vector_t vector)Astronomy_SphereFromVector6371,242177
astro_vector_t Astronomy_VectorFromEquator(astro_equatorial_t equ, astro_time_t time)Astronomy_VectorFromEquator6417,243389
astro_equatorial_t Astronomy_EquatorFromVector(astro_vector_t vector)Astronomy_EquatorFromVector6443,244090
static double ToggleAzimuthDirection(double az)ToggleAzimuthDirection6461,244534
astro_spherical_t Astronomy_HorizonFromVector(astro_vector_t vector, astro_refraction_t refraction)Astronomy_HorizonFromVector6506,246423
astro_vector_t Astronomy_VectorFromHorizon(astro_spherical_t sphere, astro_time_t time, astro_refraction_t refraction)Astronomy_VectorFromHorizon6543,247806
double Astronomy_Refraction(astro_refraction_t refraction, double altitude)Astronomy_Refraction6580,249349
double Astronomy_InverseRefraction(astro_refraction_t refraction, double bent_altitude)Astronomy_InverseRefraction6644,251817
astro_vector_t Astronomy_RotateVector(astro_rotation_t rotation, astro_vector_t vector)Astronomy_RotateVector6680,252939
astro_rotation_t Astronomy_Rotation_EQJ_ECL(void)Astronomy_Rotation_EQJ_ECL6709,254021
astro_rotation_t Astronomy_Rotation_ECL_EQJ(void)Astronomy_Rotation_ECL_EQJ6735,254976
astro_rotation_t Astronomy_Rotation_EQJ_EQD(astro_time_t time)Astronomy_Rotation_EQJ_EQD6764,256064
astro_rotation_t Astronomy_Rotation_EQD_EQJ(astro_time_t time)Astronomy_Rotation_EQD_EQJ6788,256853
astro_rotation_t Astronomy_Rotation_EQD_HOR(astro_time_t time, astro_observer_t observer)Astronomy_Rotation_EQD_HOR6820,257996
astro_rotation_t Astronomy_Rotation_HOR_EQD(astro_time_t time, astro_observer_t observer)Astronomy_Rotation_HOR_EQD6876,259727
astro_rotation_t Astronomy_Rotation_HOR_EQJ(astro_time_t time, astro_observer_t observer)Astronomy_Rotation_HOR_EQJ6901,260571
astro_rotation_t Astronomy_Rotation_EQJ_HOR(astro_time_t time, astro_observer_t observer)Astronomy_Rotation_EQJ_HOR6933,261781
astro_rotation_t Astronomy_Rotation_EQD_ECL(astro_time_t time)Astronomy_Rotation_EQD_ECL6955,262484
astro_rotation_t Astronomy_Rotation_ECL_EQD(astro_time_t time)Astronomy_Rotation_ECL_EQD6981,263256
astro_rotation_t Astronomy_Rotation_ECL_HOR(astro_time_t time, astro_observer_t observer)Astronomy_Rotation_ECL_HOR7009,264328
astro_rotation_t Astronomy_Rotation_HOR_ECL(astro_time_t time, astro_observer_t observer)Astronomy_Rotation_HOR_ECL7034,265160
    const char *symbol;symbol7044,265413
    const char *name;name7045,265437
constel_info_t;constel_info_t7047,265461
    int    index;index7052,265496
    double ra_lo;ra_lo7053,265514
    double ra_hi;ra_hi7054,265532
    double dec_lo;dec_lo7055,265550
constel_boundary_t;constel_boundary_t7057,265571
#define NUM_CONSTELLATIONS NUM_CONSTELLATIONS7060,265608
static const constel_info_t ConstelInfo[] = {ConstelInfo7062,265641
static const constel_boundary_t ConstelBounds[] = {ConstelBounds7153,269827
#define NUM_CONSTEL_BOUNDARIES NUM_CONSTEL_BOUNDARIES7513,298946
astro_constellation_t Astronomy_Constellation(double ra, double dec)Astronomy_Constellation7535,299640
static astro_lunar_eclipse_t LunarEclipseError(astro_status_t status)LunarEclipseError7617,302598
    astro_status_t status;status7631,302934
    astro_time_t time;time7632,302961
    double  u;              /* dot product of (heliocentric earth) and (geocentric moon): defines the shadow plane where the Moon is */u7633,302984
    double  r;              /* km distance between center of Moon/Earth (shaded body) and the line passing through the centers of the Sun and Earth/Moon (casting body). */r7634,303120
    double  k;              /* umbra radius in km, at the shadow plane */k7635,303292
    double  p;              /* penumbra radius in km, at the shadow plane */p7636,303366
    astro_vector_t target;  /* coordinates of target body relative to shadow-casting body at 'time' */target7637,303443
    astro_vector_t dir;     /* heliocentric coordinates of shadow-casting body at 'time' */dir7638,303546
shadow_t;               /* Represents alignment of the Moon/Earth with the Earth's/Moon's shadow, for finding eclipses. */shadow_t7640,303640
    double radius_limit;radius_limit7644,303781
    double direction;direction7645,303806
shadow_context_t;shadow_context_t7647,303830
static shadow_t ShadowError(astro_status_t status)ShadowError7651,303866
static shadow_t CalcShadow(CalcShadow7660,304031
static shadow_t PlanetShadow(astro_body_t body, double planet_radius_km, astro_time_t time)PlanetShadow7688,304796
static shadow_t EarthShadow(astro_time_t time)EarthShadow7717,305647
static shadow_t MoonShadow(astro_time_t time)MoonShadow7729,306065
typedef shadow_t (* shadow_func_t) (astro_time_t time);shadow_func_t7761,306860
static astro_func_result_t shadow_distance_slope(void *context, astro_time_t time)shadow_distance_slope7765,306934
static shadow_t PeakEarthShadow(astro_time_t search_center_time)PeakEarthShadow7790,307599
static shadow_t PeakMoonShadow(astro_time_t search_center_time)PeakMoonShadow7809,308246
    astro_body_t    body;body7831,308929
    double          planet_radius_km;planet_radius_km7832,308955
    double          direction;          /* used for transit start/finish search only */direction7833,308993
planet_shadow_context_t;planet_shadow_context_t7835,309083
static astro_func_result_t planet_shadow_distance_slope(void *context, astro_time_t time)planet_shadow_distance_slope7839,309126
static shadow_t PeakPlanetShadow(astro_body_t body, double planet_radius_km, astro_time_t search_center_time)PeakPlanetShadow7864,309870
static astro_func_result_t shadow_distance(void *context, astro_time_t time)shadow_distance7888,310767
static double ShadowSemiDurationMinutes(astro_time_t center_time, double radius_limit, double window_minutes)ShadowSemiDurationMinutes7902,311164
astro_lunar_eclipse_t Astronomy_SearchLunarEclipse(astro_time_t startTime)Astronomy_SearchLunarEclipse7945,312906
astro_lunar_eclipse_t Astronomy_NextLunarEclipse(astro_time_t prevEclipseTime)Astronomy_NextLunarEclipse8033,316995
static astro_global_solar_eclipse_t GlobalSolarEclipseError(astro_status_t status)GlobalSolarEclipseError8040,317203
#define EclipseKindFromUmbra(EclipseKindFromUmbra8055,317749
static astro_global_solar_eclipse_t GeoidIntersect(shadow_t shadow)GeoidIntersect8057,317836
astro_global_solar_eclipse_t Astronomy_SearchGlobalSolarEclipse(astro_time_t startTime)Astronomy_SearchGlobalSolarEclipse8197,323386
astro_global_solar_eclipse_t Astronomy_NextGlobalSolarEclipse(astro_time_t prevEclipseTime)Astronomy_NextGlobalSolarEclipse8260,326258
static astro_eclipse_event_t EclipseEventError(void)EclipseEventError8267,326485
static astro_local_solar_eclipse_t LocalSolarEclipseError(astro_status_t status)LocalSolarEclipseError8276,326643
static shadow_t LocalMoonShadow(astro_time_t time, astro_observer_t observer)LocalMoonShadow8293,327101
static astro_func_result_t local_shadow_distance_slope(void *context, astro_time_t time)local_shadow_distance_slope8322,327954
static shadow_t PeakLocalMoonShadow(astro_time_t search_center_time, astro_observer_t observer)PeakLocalMoonShadow8347,328665
static double local_partial_distance(const shadow_t *shadow)local_partial_distance8369,329327
static double local_total_distance(const shadow_t *shadow)local_total_distance8374,329427
typedef double (* local_distance_func) (const shadow_t *shadow);local_distance_func8382,329681
    local_distance_func     func;func8386,329764
    double                  direction;direction8387,329798
    astro_observer_t        observer;observer8388,329837
eclipse_transition_t;eclipse_transition_t8390,329877
static astro_func_result_t local_eclipse_func(void *context, astro_time_t time)local_eclipse_func8394,329916
astro_func_result_t SunAltitude(SunAltitude8410,330354
static astro_status_t CalcEvent(CalcEvent8429,330863
static astro_status_t LocalEclipseTransition(LocalEclipseTransition8450,331290
static astro_local_solar_eclipse_t LocalEclipse(LocalEclipse8477,331921
astro_local_solar_eclipse_t Astronomy_SearchLocalSolarEclipse(Astronomy_SearchLocalSolarEclipse8552,334802
astro_local_solar_eclipse_t Astronomy_NextLocalSolarEclipse(Astronomy_NextLocalSolarEclipse8625,338010
static astro_func_result_t planet_transit_bound(void *context, astro_time_t time)planet_transit_bound8634,338280
static astro_search_result_t PlanetTransitBoundary(PlanetTransitBoundary8650,338726
astro_transit_t Astronomy_SearchTransit(astro_body_t body, astro_time_t startTime)Astronomy_SearchTransit8688,340124
astro_transit_t Astronomy_NextTransit(astro_body_t body, astro_time_t prevTransitTime)Astronomy_NextTransit8788,344249
void Astronomy_Reset(void)Astronomy_Reset8809,345095

lib/TFT_eSPI/examples/Sprite/Animated_dial/NotoSansBold36.h,59
const uint8_t  NotoSansBold36[] PROGMEM = {PROGMEM22,480

lib/TFT_eSPI/examples/Sprite/Animated_dial/dial.h,48
const uint8_t dial[] PROGMEM = {PROGMEM21,468

lib/TFT_eSPI/examples/Sprite/Sprite_image_4bit/starImage.cpp,52
const uint8_t stars[12800] PROGMEM = {PROGMEM5,60

lib/TFT_eSPI/examples/Sprite/Sprite_image_4bit/sample_images.h,0

lib/TFT_eSPI/examples/DMA test/boing_ball/graphic.h,218
const uint8_t background[SCREENHEIGHT][SCREENWIDTH/8] = {background4,141
#define BALLWIDTH BALLWIDTH806,59402
#define BALLHEIGHT BALLHEIGHT807,59425
const uint8_t ball[BALLHEIGHT][BALLWIDTH/2] = {ball809,59449

lib/TFT_eSPI/examples/DMA test/Flash_Jpg_DMA/panda.h,49
const uint8_t panda[] PROGMEM = {PROGMEM26,737

lib/TFT_eSPI/examples/Generic/Animated_Eyes_1/user_xmas.cpp,0

lib/TFT_eSPI/examples/Generic/Animated_Eyes_1/user_bat.cpp,0

lib/TFT_eSPI/examples/Generic/Animated_Eyes_1/data/naugaEye.h,802
#define IRIS_MIN IRIS_MIN1,0
#define IRIS_MAX IRIS_MAX2,21
#define IRIS_MAP_WIDTH IRIS_MAP_WIDTH4,43
#define IRIS_MAP_HEIGHT IRIS_MAP_HEIGHT5,69
const uint16_t iris[IRIS_MAP_HEIGHT * IRIS_MAP_WIDTH] PROGMEM= {PROGMEM7,97
#define SCLERA_WIDTH SCLERA_WIDTH11,298
#define SCLERA_HEIGHT SCLERA_HEIGHT12,324
const uint16_t sclera[SCLERA_HEIGHT * SCLERA_WIDTH] PROGMEM= {PROGMEM14,351
#define SCREEN_WIDTH SCREEN_WIDTH4066,267717
#define SCREEN_HEIGHT SCREEN_HEIGHT4067,267743
const uint8_t upper[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM4070,267771
const uint8_t lower[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM5438,368871
#define IRIS_WIDTH IRIS_WIDTH6806,469971
#define IRIS_HEIGHT IRIS_HEIGHT6807,469994
const uint16_t polar[80 * 80] PROGMEM= {PROGMEM6809,470018

lib/TFT_eSPI/examples/Generic/Animated_Eyes_1/data/logo.h,309
#define LOGO_TOP_WIDTH LOGO_TOP_WIDTH3,53
#define LOGO_TOP_HEIGHT LOGO_TOP_HEIGHT4,80
const uint8_t logo_top[472] PROGMEM= {PROGMEM6,108
#define LOGO_BOTTOM_WIDTH LOGO_BOTTOM_WIDTH48,3063
#define LOGO_BOTTOM_HEIGHT LOGO_BOTTOM_HEIGHT49,3094
const uint8_t logo_bottom[592] PROGMEM= {PROGMEM51,3125

lib/TFT_eSPI/examples/Generic/Animated_Eyes_1/data/noScleraEye.h,988
#define IRIS_MIN IRIS_MIN1,0
#define IRIS_MAX IRIS_MAX2,68
#define SCLERA_WIDTH SCLERA_WIDTH4,90
#define SCLERA_HEIGHT SCLERA_HEIGHT5,116
const uint16_t sclera[SCLERA_HEIGHT * SCLERA_WIDTH] PROGMEM= {PROGMEM7,143
#define IRIS_MAP_WIDTH IRIS_MAP_WIDTH3209,211409
#define IRIS_MAP_HEIGHT IRIS_MAP_HEIGHT3210,211437
const uint16_t iris[IRIS_MAP_HEIGHT * IRIS_MAP_WIDTH] PROGMEM= {PROGMEM3212,211465
#define SCREEN_WIDTH SCREEN_WIDTH8334,549453
#define SCREEN_HEIGHT SCREEN_HEIGHT8335,549479
const uint8_t upper[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM8339,549533
const uint8_t lower[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM9707,650633
const uint8_t upper[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM11077,751740
const uint8_t lower[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM12445,852840
#define IRIS_WIDTH IRIS_WIDTH13815,953970
#define IRIS_HEIGHT IRIS_HEIGHT13816,953994
const uint16_t polar[160 * 160] PROGMEM= {PROGMEM13818,954019

lib/TFT_eSPI/examples/Generic/Animated_Eyes_1/data/newtEye.h,985
#define IRIS_MIN IRIS_MIN1,0
#define IRIS_MAX IRIS_MAX2,68
#define SCLERA_WIDTH SCLERA_WIDTH4,90
#define SCLERA_HEIGHT SCLERA_HEIGHT5,116
const uint16_t sclera[SCLERA_HEIGHT * SCLERA_WIDTH] PROGMEM= {PROGMEM7,143
#define IRIS_MAP_WIDTH IRIS_MAP_WIDTH5009,330209
#define IRIS_MAP_HEIGHT IRIS_MAP_HEIGHT5010,330237
const uint16_t iris[IRIS_MAP_HEIGHT * IRIS_MAP_WIDTH] PROGMEM= {PROGMEM5012,330265
#define SCREEN_WIDTH SCREEN_WIDTH7062,465501
#define SCREEN_HEIGHT SCREEN_HEIGHT7063,465527
const uint8_t upper[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM7067,465581
const uint8_t lower[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM8435,566681
const uint8_t upper[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM9805,667788
const uint8_t lower[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM11173,768888
#define IRIS_WIDTH IRIS_WIDTH12543,870018
#define IRIS_HEIGHT IRIS_HEIGHT12544,870041
const uint16_t polar[80 * 80] PROGMEM= {PROGMEM12546,870065

lib/TFT_eSPI/examples/Generic/Animated_Eyes_1/data/goatEye.h,920
#define SCLERA_WIDTH SCLERA_WIDTH1,0
#define SCLERA_HEIGHT SCLERA_HEIGHT2,26
const uint16_t sclera[SCLERA_HEIGHT * SCLERA_WIDTH] PROGMEM= {PROGMEM4,53
#define IRIS_MAP_WIDTH IRIS_MAP_WIDTH2054,135287
#define IRIS_MAP_HEIGHT IRIS_MAP_HEIGHT2055,135315
const uint16_t iris[IRIS_MAP_HEIGHT * IRIS_MAP_WIDTH] PROGMEM= {PROGMEM2057,135343
#define SCREEN_WIDTH SCREEN_WIDTH5275,347667
#define SCREEN_HEIGHT SCREEN_HEIGHT5276,347693
const uint8_t upper[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM5280,347747
const uint8_t lower[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM6648,448847
const uint8_t upper[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM8018,549954
const uint8_t lower[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM9386,651054
#define IRIS_WIDTH IRIS_WIDTH10756,752184
#define IRIS_HEIGHT IRIS_HEIGHT10757,752208
const uint16_t polar[128 * 128] PROGMEM= {PROGMEM10759,752233

lib/TFT_eSPI/examples/Generic/Animated_Eyes_1/data/defaultEye.h,919
#define SCLERA_WIDTH SCLERA_WIDTH1,0
#define SCLERA_HEIGHT SCLERA_HEIGHT2,26
const uint16_t sclera[SCLERA_HEIGHT * SCLERA_WIDTH] PROGMEM= {PROGMEM4,53
#define IRIS_MAP_WIDTH IRIS_MAP_WIDTH5006,330119
#define IRIS_MAP_HEIGHT IRIS_MAP_HEIGHT5007,330147
const uint16_t iris[IRIS_MAP_HEIGHT * IRIS_MAP_WIDTH] PROGMEM= {PROGMEM5009,330175
#define SCREEN_WIDTH SCREEN_WIDTH7061,465466
#define SCREEN_HEIGHT SCREEN_HEIGHT7062,465492
const uint8_t upper[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM7066,465546
const uint8_t lower[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM8434,566646
const uint8_t upper[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM9804,667753
const uint8_t lower[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM11173,768903
#define IRIS_WIDTH IRIS_WIDTH12544,870083
#define IRIS_HEIGHT IRIS_HEIGHT12545,870106
const uint16_t polar[80 * 80] PROGMEM= {PROGMEM12547,870130

lib/TFT_eSPI/examples/Generic/Animated_Eyes_1/data/catEye.h,966
#define IRIS_MIN IRIS_MIN1,0
#define IRIS_MAX IRIS_MAX2,20
#define IRIS_MAP_WIDTH IRIS_MAP_WIDTH4,41
#define IRIS_MAP_HEIGHT IRIS_MAP_HEIGHT5,67
const uint16_t iris[IRIS_MAP_HEIGHT * IRIS_MAP_WIDTH] PROGMEM= {PROGMEM7,95
#define SCLERA_WIDTH SCLERA_WIDTH12,297
#define SCLERA_HEIGHT SCLERA_HEIGHT13,323
const uint16_t sclera[SCLERA_HEIGHT * SCLERA_WIDTH] PROGMEM= {PROGMEM15,350
#define SCREEN_WIDTH SCREEN_WIDTH4068,267717
#define SCREEN_HEIGHT SCREEN_HEIGHT4069,267743
const uint8_t upper[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM4073,267797
const uint8_t lower[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM5441,368897
const uint8_t upper[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM6811,470004
const uint8_t lower[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM8179,571104
#define IRIS_WIDTH IRIS_WIDTH9549,672234
#define IRIS_HEIGHT IRIS_HEIGHT9550,672258
const uint16_t polar[128 * 128] PROGMEM= {PROGMEM9552,672283

lib/TFT_eSPI/examples/Generic/Animated_Eyes_1/data/dragonEye.h,988
#define IRIS_MIN IRIS_MIN1,0
#define IRIS_MAX IRIS_MAX2,68
#define SCLERA_WIDTH SCLERA_WIDTH4,90
#define SCLERA_HEIGHT SCLERA_HEIGHT5,116
const uint16_t sclera[SCLERA_HEIGHT * SCLERA_WIDTH] PROGMEM= {PROGMEM7,143
#define IRIS_MAP_WIDTH IRIS_MAP_WIDTH3209,211409
#define IRIS_MAP_HEIGHT IRIS_MAP_HEIGHT3210,211437
const uint16_t iris[IRIS_MAP_HEIGHT * IRIS_MAP_WIDTH] PROGMEM= {PROGMEM3212,211465
#define SCREEN_WIDTH SCREEN_WIDTH8334,549453
#define SCREEN_HEIGHT SCREEN_HEIGHT8335,549479
const uint8_t upper[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM8339,549533
const uint8_t lower[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM9707,650633
const uint8_t upper[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM11077,751740
const uint8_t lower[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM12445,852840
#define IRIS_WIDTH IRIS_WIDTH13815,953970
#define IRIS_HEIGHT IRIS_HEIGHT13816,953994
const uint16_t polar[160 * 160] PROGMEM= {PROGMEM13818,954019

lib/TFT_eSPI/examples/Generic/Animated_Eyes_1/data/terminatorEye.h,983
#define IRIS_MIN IRIS_MIN1,0
#define IRIS_MAX IRIS_MAX2,20
#define SCLERA_WIDTH SCLERA_WIDTH4,42
#define SCLERA_HEIGHT SCLERA_HEIGHT5,68
const uint16_t sclera[SCLERA_HEIGHT * SCLERA_WIDTH] PROGMEM= {PROGMEM7,95
#define IRIS_MAP_WIDTH IRIS_MAP_WIDTH5009,330161
#define IRIS_MAP_HEIGHT IRIS_MAP_HEIGHT5010,330189
const uint16_t iris[IRIS_MAP_HEIGHT * IRIS_MAP_WIDTH] PROGMEM= {PROGMEM5012,330217
#define SCREEN_WIDTH SCREEN_WIDTH7062,465453
#define SCREEN_HEIGHT SCREEN_HEIGHT7063,465479
const uint8_t upper[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM7067,465533
const uint8_t lower[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM8435,566633
const uint8_t upper[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM9805,667740
const uint8_t lower[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM11173,768840
#define IRIS_WIDTH IRIS_WIDTH12543,869970
#define IRIS_HEIGHT IRIS_HEIGHT12544,869993
const uint16_t polar[80 * 80] PROGMEM= {PROGMEM12546,870017

lib/TFT_eSPI/examples/Generic/Animated_Eyes_1/data/owlEye.h,802
#define IRIS_MIN IRIS_MIN1,0
#define IRIS_MAX IRIS_MAX2,20
#define IRIS_MAP_WIDTH IRIS_MAP_WIDTH4,42
#define IRIS_MAP_HEIGHT IRIS_MAP_HEIGHT5,68
const uint16_t iris[IRIS_MAP_HEIGHT * IRIS_MAP_WIDTH] PROGMEM= {PROGMEM7,96
#define SCLERA_WIDTH SCLERA_WIDTH11,311
#define SCLERA_HEIGHT SCLERA_HEIGHT12,337
const uint16_t sclera[SCLERA_HEIGHT * SCLERA_WIDTH] PROGMEM= {PROGMEM14,364
#define SCREEN_WIDTH SCREEN_WIDTH4066,267730
#define SCREEN_HEIGHT SCREEN_HEIGHT4067,267756
const uint8_t upper[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM4070,267784
const uint8_t lower[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM5438,368884
#define IRIS_WIDTH IRIS_WIDTH6806,469984
#define IRIS_HEIGHT IRIS_HEIGHT6807,470007
const uint16_t polar[80 * 80] PROGMEM= {PROGMEM6809,470031

lib/TFT_eSPI/examples/Generic/Animated_Eyes_1/data/doeEye.h,985
#define IRIS_MIN IRIS_MIN1,0
#define IRIS_MAX IRIS_MAX2,20
#define SCLERA_WIDTH SCLERA_WIDTH4,42
#define SCLERA_HEIGHT SCLERA_HEIGHT5,68
const uint16_t sclera[SCLERA_HEIGHT * SCLERA_WIDTH] PROGMEM= {PROGMEM7,95
#define IRIS_MAP_WIDTH IRIS_MAP_WIDTH4059,267461
#define IRIS_MAP_HEIGHT IRIS_MAP_HEIGHT4060,267489
const uint16_t iris[IRIS_MAP_HEIGHT * IRIS_MAP_WIDTH] PROGMEM= {PROGMEM4062,267517
#define SCREEN_WIDTH SCREEN_WIDTH6112,402753
#define SCREEN_HEIGHT SCREEN_HEIGHT6113,402779
const uint8_t upper[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM6117,402833
const uint8_t lower[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM7485,503933
const uint8_t upper[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM8855,605040
const uint8_t lower[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM10223,706140
#define IRIS_WIDTH IRIS_WIDTH11593,807270
#define IRIS_HEIGHT IRIS_HEIGHT11594,807294
const uint16_t polar[180 * 180] PROGMEM= {PROGMEM11596,807319

lib/TFT_eSPI/examples/Generic/Animated_Eyes_1/config.h,919
#define TFT_COUNT TFT_COUNT27,1405
#define TFT1_CS TFT1_CS28,1462
#define TFT2_CS TFT2_CS29,1548
#define TFT_1_ROT TFT_1_ROT30,1634
#define TFT_2_ROT TFT_2_ROT31,1679
#define EYE_1_XPOSITION EYE_1_XPOSITION32,1724
#define EYE_2_XPOSITION EYE_2_XPOSITION33,1797
#define DISPLAY_BACKLIGHT DISPLAY_BACKLIGHT35,1871
#define BACKLIGHT_MAX BACKLIGHT_MAX36,1944
#define NUM_EYES NUM_EYES39,2051
#define BLINK_PIN BLINK_PIN41,2109
#define LH_WINK_PIN LH_WINK_PIN42,2175
#define RH_WINK_PIN RH_WINK_PIN43,2238
  eyeInfo_t eyeInfo[] = {eyeInfo52,2683
  eyeInfo_t eyeInfo[] = {eyeInfo57,2955
#define TRACKING TRACKING79,4110
#define AUTOBLINK AUTOBLINK80,4173
  #define LIGHT_CURVE LIGHT_CURVE83,4296
  #define LIGHT_MIN LIGHT_MIN84,4357
  #define LIGHT_MAX LIGHT_MAX85,4429
#define IRIS_SMOOTH IRIS_SMOOTH87,4496
  #define IRIS_MIN IRIS_MIN89,4633
  #define IRIS_MAX IRIS_MAX92,4732

lib/TFT_eSPI/examples/Generic/Animated_Eyes_1/user.cpp,83
void user_setup(void) {user_setup13,585
void user_loop(void) {user_loop28,1418

lib/TFT_eSPI/examples/Generic/Animated_Eyes_2/user_xmas.cpp,0

lib/TFT_eSPI/examples/Generic/Animated_Eyes_2/user_bat.cpp,0

lib/TFT_eSPI/examples/Generic/Animated_Eyes_2/data/naugaEye.h,802
#define IRIS_MIN IRIS_MIN1,0
#define IRIS_MAX IRIS_MAX2,21
#define IRIS_MAP_WIDTH IRIS_MAP_WIDTH4,43
#define IRIS_MAP_HEIGHT IRIS_MAP_HEIGHT5,69
const uint16_t iris[IRIS_MAP_HEIGHT * IRIS_MAP_WIDTH] PROGMEM= {PROGMEM7,97
#define SCLERA_WIDTH SCLERA_WIDTH11,298
#define SCLERA_HEIGHT SCLERA_HEIGHT12,324
const uint16_t sclera[SCLERA_HEIGHT * SCLERA_WIDTH] PROGMEM= {PROGMEM14,351
#define SCREEN_WIDTH SCREEN_WIDTH4066,267717
#define SCREEN_HEIGHT SCREEN_HEIGHT4067,267743
const uint8_t upper[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM4070,267771
const uint8_t lower[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM5438,368871
#define IRIS_WIDTH IRIS_WIDTH6806,469971
#define IRIS_HEIGHT IRIS_HEIGHT6807,469994
const uint16_t polar[80 * 80] PROGMEM= {PROGMEM6809,470018

lib/TFT_eSPI/examples/Generic/Animated_Eyes_2/data/logo.h,309
#define LOGO_TOP_WIDTH LOGO_TOP_WIDTH3,53
#define LOGO_TOP_HEIGHT LOGO_TOP_HEIGHT4,80
const uint8_t logo_top[472] PROGMEM= {PROGMEM6,108
#define LOGO_BOTTOM_WIDTH LOGO_BOTTOM_WIDTH48,3063
#define LOGO_BOTTOM_HEIGHT LOGO_BOTTOM_HEIGHT49,3094
const uint8_t logo_bottom[592] PROGMEM= {PROGMEM51,3125

lib/TFT_eSPI/examples/Generic/Animated_Eyes_2/data/noScleraEye.h,988
#define IRIS_MIN IRIS_MIN1,0
#define IRIS_MAX IRIS_MAX2,68
#define SCLERA_WIDTH SCLERA_WIDTH4,90
#define SCLERA_HEIGHT SCLERA_HEIGHT5,116
const uint16_t sclera[SCLERA_HEIGHT * SCLERA_WIDTH] PROGMEM= {PROGMEM7,143
#define IRIS_MAP_WIDTH IRIS_MAP_WIDTH3209,211409
#define IRIS_MAP_HEIGHT IRIS_MAP_HEIGHT3210,211437
const uint16_t iris[IRIS_MAP_HEIGHT * IRIS_MAP_WIDTH] PROGMEM= {PROGMEM3212,211465
#define SCREEN_WIDTH SCREEN_WIDTH8334,549453
#define SCREEN_HEIGHT SCREEN_HEIGHT8335,549479
const uint8_t upper[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM8339,549533
const uint8_t lower[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM9707,650633
const uint8_t upper[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM11077,751740
const uint8_t lower[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM12445,852840
#define IRIS_WIDTH IRIS_WIDTH13815,953970
#define IRIS_HEIGHT IRIS_HEIGHT13816,953994
const uint16_t polar[160 * 160] PROGMEM= {PROGMEM13818,954019

lib/TFT_eSPI/examples/Generic/Animated_Eyes_2/data/newtEye.h,985
#define IRIS_MIN IRIS_MIN1,0
#define IRIS_MAX IRIS_MAX2,68
#define SCLERA_WIDTH SCLERA_WIDTH4,90
#define SCLERA_HEIGHT SCLERA_HEIGHT5,116
const uint16_t sclera[SCLERA_HEIGHT * SCLERA_WIDTH] PROGMEM= {PROGMEM7,143
#define IRIS_MAP_WIDTH IRIS_MAP_WIDTH5009,330209
#define IRIS_MAP_HEIGHT IRIS_MAP_HEIGHT5010,330237
const uint16_t iris[IRIS_MAP_HEIGHT * IRIS_MAP_WIDTH] PROGMEM= {PROGMEM5012,330265
#define SCREEN_WIDTH SCREEN_WIDTH7062,465501
#define SCREEN_HEIGHT SCREEN_HEIGHT7063,465527
const uint8_t upper[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM7067,465581
const uint8_t lower[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM8435,566681
const uint8_t upper[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM9805,667788
const uint8_t lower[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM11173,768888
#define IRIS_WIDTH IRIS_WIDTH12543,870018
#define IRIS_HEIGHT IRIS_HEIGHT12544,870041
const uint16_t polar[80 * 80] PROGMEM= {PROGMEM12546,870065

lib/TFT_eSPI/examples/Generic/Animated_Eyes_2/data/goatEye.h,920
#define SCLERA_WIDTH SCLERA_WIDTH1,0
#define SCLERA_HEIGHT SCLERA_HEIGHT2,26
const uint16_t sclera[SCLERA_HEIGHT * SCLERA_WIDTH] PROGMEM= {PROGMEM4,53
#define IRIS_MAP_WIDTH IRIS_MAP_WIDTH2054,135287
#define IRIS_MAP_HEIGHT IRIS_MAP_HEIGHT2055,135315
const uint16_t iris[IRIS_MAP_HEIGHT * IRIS_MAP_WIDTH] PROGMEM= {PROGMEM2057,135343
#define SCREEN_WIDTH SCREEN_WIDTH5275,347667
#define SCREEN_HEIGHT SCREEN_HEIGHT5276,347693
const uint8_t upper[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM5280,347747
const uint8_t lower[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM6648,448847
const uint8_t upper[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM8018,549954
const uint8_t lower[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM9386,651054
#define IRIS_WIDTH IRIS_WIDTH10756,752184
#define IRIS_HEIGHT IRIS_HEIGHT10757,752208
const uint16_t polar[128 * 128] PROGMEM= {PROGMEM10759,752233

lib/TFT_eSPI/examples/Generic/Animated_Eyes_2/data/defaultEye.h,919
#define SCLERA_WIDTH SCLERA_WIDTH1,0
#define SCLERA_HEIGHT SCLERA_HEIGHT2,26
const uint16_t sclera[SCLERA_HEIGHT * SCLERA_WIDTH] PROGMEM= {PROGMEM4,53
#define IRIS_MAP_WIDTH IRIS_MAP_WIDTH5006,330119
#define IRIS_MAP_HEIGHT IRIS_MAP_HEIGHT5007,330147
const uint16_t iris[IRIS_MAP_HEIGHT * IRIS_MAP_WIDTH] PROGMEM= {PROGMEM5009,330175
#define SCREEN_WIDTH SCREEN_WIDTH7061,465466
#define SCREEN_HEIGHT SCREEN_HEIGHT7062,465492
const uint8_t upper[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM7066,465546
const uint8_t lower[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM8434,566646
const uint8_t upper[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM9804,667753
const uint8_t lower[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM11173,768903
#define IRIS_WIDTH IRIS_WIDTH12544,870083
#define IRIS_HEIGHT IRIS_HEIGHT12545,870106
const uint16_t polar[80 * 80] PROGMEM= {PROGMEM12547,870130

lib/TFT_eSPI/examples/Generic/Animated_Eyes_2/data/catEye.h,966
#define IRIS_MIN IRIS_MIN1,0
#define IRIS_MAX IRIS_MAX2,20
#define IRIS_MAP_WIDTH IRIS_MAP_WIDTH4,41
#define IRIS_MAP_HEIGHT IRIS_MAP_HEIGHT5,67
const uint16_t iris[IRIS_MAP_HEIGHT * IRIS_MAP_WIDTH] PROGMEM= {PROGMEM7,95
#define SCLERA_WIDTH SCLERA_WIDTH12,297
#define SCLERA_HEIGHT SCLERA_HEIGHT13,323
const uint16_t sclera[SCLERA_HEIGHT * SCLERA_WIDTH] PROGMEM= {PROGMEM15,350
#define SCREEN_WIDTH SCREEN_WIDTH4068,267717
#define SCREEN_HEIGHT SCREEN_HEIGHT4069,267743
const uint8_t upper[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM4073,267797
const uint8_t lower[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM5441,368897
const uint8_t upper[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM6811,470004
const uint8_t lower[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM8179,571104
#define IRIS_WIDTH IRIS_WIDTH9549,672234
#define IRIS_HEIGHT IRIS_HEIGHT9550,672258
const uint16_t polar[128 * 128] PROGMEM= {PROGMEM9552,672283

lib/TFT_eSPI/examples/Generic/Animated_Eyes_2/data/dragonEye.h,988
#define IRIS_MIN IRIS_MIN1,0
#define IRIS_MAX IRIS_MAX2,68
#define SCLERA_WIDTH SCLERA_WIDTH4,90
#define SCLERA_HEIGHT SCLERA_HEIGHT5,116
const uint16_t sclera[SCLERA_HEIGHT * SCLERA_WIDTH] PROGMEM= {PROGMEM7,143
#define IRIS_MAP_WIDTH IRIS_MAP_WIDTH3209,211409
#define IRIS_MAP_HEIGHT IRIS_MAP_HEIGHT3210,211437
const uint16_t iris[IRIS_MAP_HEIGHT * IRIS_MAP_WIDTH] PROGMEM= {PROGMEM3212,211465
#define SCREEN_WIDTH SCREEN_WIDTH8334,549453
#define SCREEN_HEIGHT SCREEN_HEIGHT8335,549479
const uint8_t upper[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM8339,549533
const uint8_t lower[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM9707,650633
const uint8_t upper[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM11077,751740
const uint8_t lower[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM12445,852840
#define IRIS_WIDTH IRIS_WIDTH13815,953970
#define IRIS_HEIGHT IRIS_HEIGHT13816,953994
const uint16_t polar[160 * 160] PROGMEM= {PROGMEM13818,954019

lib/TFT_eSPI/examples/Generic/Animated_Eyes_2/data/terminatorEye.h,983
#define IRIS_MIN IRIS_MIN1,0
#define IRIS_MAX IRIS_MAX2,20
#define SCLERA_WIDTH SCLERA_WIDTH4,42
#define SCLERA_HEIGHT SCLERA_HEIGHT5,68
const uint16_t sclera[SCLERA_HEIGHT * SCLERA_WIDTH] PROGMEM= {PROGMEM7,95
#define IRIS_MAP_WIDTH IRIS_MAP_WIDTH5009,330161
#define IRIS_MAP_HEIGHT IRIS_MAP_HEIGHT5010,330189
const uint16_t iris[IRIS_MAP_HEIGHT * IRIS_MAP_WIDTH] PROGMEM= {PROGMEM5012,330217
#define SCREEN_WIDTH SCREEN_WIDTH7062,465453
#define SCREEN_HEIGHT SCREEN_HEIGHT7063,465479
const uint8_t upper[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM7067,465533
const uint8_t lower[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM8435,566633
const uint8_t upper[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM9805,667740
const uint8_t lower[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM11173,768840
#define IRIS_WIDTH IRIS_WIDTH12543,869970
#define IRIS_HEIGHT IRIS_HEIGHT12544,869993
const uint16_t polar[80 * 80] PROGMEM= {PROGMEM12546,870017

lib/TFT_eSPI/examples/Generic/Animated_Eyes_2/data/owlEye.h,802
#define IRIS_MIN IRIS_MIN1,0
#define IRIS_MAX IRIS_MAX2,20
#define IRIS_MAP_WIDTH IRIS_MAP_WIDTH4,42
#define IRIS_MAP_HEIGHT IRIS_MAP_HEIGHT5,68
const uint16_t iris[IRIS_MAP_HEIGHT * IRIS_MAP_WIDTH] PROGMEM= {PROGMEM7,96
#define SCLERA_WIDTH SCLERA_WIDTH11,311
#define SCLERA_HEIGHT SCLERA_HEIGHT12,337
const uint16_t sclera[SCLERA_HEIGHT * SCLERA_WIDTH] PROGMEM= {PROGMEM14,364
#define SCREEN_WIDTH SCREEN_WIDTH4066,267730
#define SCREEN_HEIGHT SCREEN_HEIGHT4067,267756
const uint8_t upper[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM4070,267784
const uint8_t lower[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM5438,368884
#define IRIS_WIDTH IRIS_WIDTH6806,469984
#define IRIS_HEIGHT IRIS_HEIGHT6807,470007
const uint16_t polar[80 * 80] PROGMEM= {PROGMEM6809,470031

lib/TFT_eSPI/examples/Generic/Animated_Eyes_2/data/doeEye.h,985
#define IRIS_MIN IRIS_MIN1,0
#define IRIS_MAX IRIS_MAX2,20
#define SCLERA_WIDTH SCLERA_WIDTH4,42
#define SCLERA_HEIGHT SCLERA_HEIGHT5,68
const uint16_t sclera[SCLERA_HEIGHT * SCLERA_WIDTH] PROGMEM= {PROGMEM7,95
#define IRIS_MAP_WIDTH IRIS_MAP_WIDTH4059,267461
#define IRIS_MAP_HEIGHT IRIS_MAP_HEIGHT4060,267489
const uint16_t iris[IRIS_MAP_HEIGHT * IRIS_MAP_WIDTH] PROGMEM= {PROGMEM4062,267517
#define SCREEN_WIDTH SCREEN_WIDTH6112,402753
#define SCREEN_HEIGHT SCREEN_HEIGHT6113,402779
const uint8_t upper[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM6117,402833
const uint8_t lower[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM7485,503933
const uint8_t upper[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM8855,605040
const uint8_t lower[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM10223,706140
#define IRIS_WIDTH IRIS_WIDTH11593,807270
#define IRIS_HEIGHT IRIS_HEIGHT11594,807294
const uint16_t polar[180 * 180] PROGMEM= {PROGMEM11596,807319

lib/TFT_eSPI/examples/Generic/Animated_Eyes_2/config.h,919
#define TFT_COUNT TFT_COUNT27,1405
#define TFT1_CS TFT1_CS28,1462
#define TFT2_CS TFT2_CS29,1548
#define TFT_1_ROT TFT_1_ROT30,1634
#define TFT_2_ROT TFT_2_ROT31,1679
#define EYE_1_XPOSITION EYE_1_XPOSITION32,1724
#define EYE_2_XPOSITION EYE_2_XPOSITION33,1789
#define DISPLAY_BACKLIGHT DISPLAY_BACKLIGHT35,1855
#define BACKLIGHT_MAX BACKLIGHT_MAX36,1928
#define NUM_EYES NUM_EYES39,2035
#define BLINK_PIN BLINK_PIN41,2093
#define LH_WINK_PIN LH_WINK_PIN42,2159
#define RH_WINK_PIN RH_WINK_PIN43,2222
  eyeInfo_t eyeInfo[] = {eyeInfo52,2667
  eyeInfo_t eyeInfo[] = {eyeInfo57,2939
#define TRACKING TRACKING79,4094
#define AUTOBLINK AUTOBLINK80,4157
  #define LIGHT_CURVE LIGHT_CURVE83,4280
  #define LIGHT_MIN LIGHT_MIN84,4341
  #define LIGHT_MAX LIGHT_MAX85,4413
#define IRIS_SMOOTH IRIS_SMOOTH87,4480
  #define IRIS_MIN IRIS_MIN89,4617
  #define IRIS_MAX IRIS_MAX92,4716

lib/TFT_eSPI/examples/Generic/Animated_Eyes_2/user.cpp,83
void user_setup(void) {user_setup13,585
void user_loop(void) {user_loop28,1418

lib/TFT_eSPI/examples/Generic/ESP8266_uncannyEyes/noScleraEye.h,759
#define SCLERA_WIDTH SCLERA_WIDTH1,0
#define SCLERA_HEIGHT SCLERA_HEIGHT2,26
const uint16_t sclera[SCLERA_HEIGHT * SCLERA_WIDTH] PROGMEM= {PROGMEM6,76
#define IRIS_MAP_WIDTH IRIS_MAP_WIDTH3208,211342
#define IRIS_MAP_HEIGHT IRIS_MAP_HEIGHT3209,211370
const uint16_t iris[IRIS_MAP_HEIGHT * IRIS_MAP_WIDTH] PROGMEM= {PROGMEM3211,211398
#define SCREEN_WIDTH SCREEN_WIDTH8333,549386
#define SCREEN_HEIGHT SCREEN_HEIGHT8334,549412
const uint8_t upper[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM8336,549439
const uint8_t lower[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM10386,651903
#define IRIS_WIDTH IRIS_WIDTH12436,754367
#define IRIS_HEIGHT IRIS_HEIGHT12437,754391
const uint16_t polar[160 * 160] PROGMEM= {PROGMEM12439,754416

lib/TFT_eSPI/examples/Generic/ESP8266_uncannyEyes/goatEye.h,755
#define SCLERA_WIDTH SCLERA_WIDTH1,0
#define SCLERA_HEIGHT SCLERA_HEIGHT2,26
const uint16_t sclera[SCLERA_HEIGHT * SCLERA_WIDTH] PROGMEM= {PROGMEM6,76
#define IRIS_MAP_WIDTH IRIS_MAP_WIDTH2056,135310
#define IRIS_MAP_HEIGHT IRIS_MAP_HEIGHT2057,135338
const uint16_t iris[IRIS_MAP_HEIGHT * IRIS_MAP_WIDTH] PROGMEM= {PROGMEM2059,135366
#define SCREEN_WIDTH SCREEN_WIDTH5277,347690
#define SCREEN_HEIGHT SCREEN_HEIGHT5278,347716
const uint8_t upper[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM5280,347743
const uint8_t lower[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM7330,450207
#define IRIS_WIDTH IRIS_WIDTH9380,552671
#define IRIS_HEIGHT IRIS_HEIGHT9381,552695
const uint16_t polar[128 * 128] PROGMEM= {PROGMEM9383,552720

lib/TFT_eSPI/examples/Generic/ESP8266_uncannyEyes/defaultEye.h,756
#define SCLERA_WIDTH SCLERA_WIDTH1,0
#define SCLERA_HEIGHT SCLERA_HEIGHT2,26
const uint16_t sclera[SCLERA_HEIGHT * SCLERA_WIDTH] PROGMEM= {PROGMEM6,76
#define IRIS_MAP_WIDTH IRIS_MAP_WIDTH5008,330142
#define IRIS_MAP_HEIGHT IRIS_MAP_HEIGHT5009,330170
const uint16_t iris[IRIS_MAP_HEIGHT * IRIS_MAP_WIDTH] PROGMEM= {PROGMEM5011,330198
#define SCREEN_WIDTH SCREEN_WIDTH7061,465434
#define SCREEN_HEIGHT SCREEN_HEIGHT7062,465460
const uint8_t upper[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM7064,465487
const uint8_t lower[SCREEN_HEIGHT * SCREEN_WIDTH] PROGMEM= {PROGMEM9114,567951
#define IRIS_WIDTH IRIS_WIDTH11164,670415
#define IRIS_HEIGHT IRIS_HEIGHT11165,670438
const uint16_t polar[80 * 80] PROGMEM= {PROGMEM11167,670462

lib/TFT_eSPI/examples/Generic/ESP8266_uncannyEyes/dragonEye.h,749
#define SCLERA_WIDTH SCLERA_WIDTH1,0
#define SCLERA_HEIGHT SCLERA_HEIGHT2,26
const uint16_t sclera[SCLERA_HEIGHT*SCLERA_WIDTH] PROGMEM= {PROGMEM6,76
#define IRIS_MAP_WIDTH IRIS_MAP_WIDTH3208,211340
#define IRIS_MAP_HEIGHT IRIS_MAP_HEIGHT3209,211368
const uint16_t iris[IRIS_MAP_HEIGHT*IRIS_MAP_WIDTH] PROGMEM= {PROGMEM3211,211396
#define SCREEN_WIDTH SCREEN_WIDTH8333,549382
#define SCREEN_HEIGHT SCREEN_HEIGHT8334,549408
const uint8_t upper[SCREEN_HEIGHT*SCREEN_WIDTH] PROGMEM= {PROGMEM8336,549435
const uint8_t lower[SCREEN_HEIGHT*SCREEN_WIDTH] PROGMEM= {PROGMEM10386,651897
#define IRIS_WIDTH IRIS_WIDTH12436,754359
#define IRIS_HEIGHT IRIS_HEIGHT12437,754383
const uint16_t polar[160*160] PROGMEM= {PROGMEM12439,754408

lib/TFT_eSPI/examples/Generic/TFT_Flash_Bitmap/Info.h,153
const uint16_t infoWidth = 32;infoWidth5,124
const uint16_t infoHeight = 32;infoHeight6,155
const unsigned short  info[1024] PROGMEM={PROGMEM8,188

lib/TFT_eSPI/examples/Generic/TFT_Flash_Bitmap/Close.h,159
const uint16_t closeWidth = 32;closeWidth5,124
const uint16_t closeHeight = 32;closeHeight6,156
const unsigned short  closeX[1024] PROGMEM={PROGMEM8,190

lib/TFT_eSPI/examples/Generic/TFT_Flash_Bitmap/Alert.h,158
const uint16_t alertWidth = 32;alertWidth5,124
const uint16_t alertHeight = 32;alertHeight6,156
const unsigned short  alert[1024] PROGMEM={PROGMEM8,190

lib/TFT_eSPI/examples/Generic/Local_Custom_Fonts/MyFont.h,189
const uint8_t myFont32pt8bBitmaps[] PROGMEM = {PROGMEM8,216
const GFXglyph myFont32pt8bGlyphs[] PROGMEM = {PROGMEM3135,231475
const GFXfont myFont32pt8b PROGMEM = {PROGMEM3361,243104

lib/TFT_eSPI/examples/Generic/drawXBitmap/xbm.h,125
#define logoWidth logoWidth17,721
#define logoHeight logoHeight18,758
PROGMEM const unsigned char logo[] = {logo21,830

lib/TFT_eSPI/Tools/Images/bmp2array4bit.py,3967
debug = Nonedebug33,882
def debugOut(s):debugOut35,896
parser = argparse.ArgumentParser(description="Convert bmp file to C array")parser40,965
args = parser.parse_args()args44,1238
    output = args.outputoutput54,1501
debug = args.verbosedebug56,1527
    infile = open(args.input,"rb") #b is for binaryinfile61,1669
    contents = bytearray(infile.read())contents62,1721
upto = 2upto69,1899
data = struct.pack("BBBB", contents[upto], contents[upto+1], contents[upto+2], contents[upto+3])data71,1936
fileSize = struct.unpack("I", bytearray(data))fileSize72,2033
data = struct.pack("BBBB", contents[upto], contents[upto+1], contents[upto+2], contents[upto+3])data82,2209
offset = struct.unpack("I", bytearray(data))offset83,2306
data = struct.pack("BBBB", contents[upto], contents[upto+1], contents[upto+2], contents[upto+3])data88,2404
headersize = struct.unpack("I", bytearray(data))headersize89,2501
headerLength = headersize[0]headerLength90,2550
startOfDefinitions = headerLength + uptostartOfDefinitions91,2579
data = struct.pack("BBBB", contents[upto], contents[upto+1], contents[upto+2], contents[upto+3])data95,2740
t = struct.unpack("I", bytearray(data))t96,2837
width = t[0]width98,2912
data = struct.pack("BBBB", contents[upto], contents[upto+1], contents[upto+2], contents[upto+3])data101,2936
t = struct.unpack("I", bytearray(data))t102,3033
height = t[0]height104,3109
data = struct.pack("BB", contents[upto], contents[upto+1])data109,3140
t = struct.unpack("H", bytearray(data))t110,3199
upto = upto + 2upto113,3276
data = struct.pack("BB", contents[upto], contents[upto+1])data114,3292
t = struct.unpack("H", bytearray(data))t115,3351
bitsPerPixel = t[0]bitsPerPixel117,3435
upto = upto + 2upto119,3456
data = struct.pack("BBBB", contents[upto], contents[upto+1], contents[upto+2], contents[upto+3])data120,3472
t = struct.unpack("I", bytearray(data))t121,3569
upto = upto + 4upto124,3653
data = struct.pack("BBBB", contents[upto], contents[upto+1], contents[upto+2], contents[upto+3])data125,3669
t = struct.unpack("I", bytearray(data))t126,3766
upto = upto + 4upto129,3848
data = struct.pack("BBBB", contents[upto], contents[upto+1], contents[upto+2], contents[upto+3])data130,3864
t = struct.unpack("I", bytearray(data))t131,3961
upto = upto + 4upto134,4047
data = struct.pack("BBBB", contents[upto], contents[upto+1], contents[upto+2], contents[upto+3])data135,4063
t = struct.unpack("I", bytearray(data))t136,4160
upto = upto + 4upto139,4246
data = struct.pack("BBBB", contents[upto], contents[upto+1], contents[upto+2], contents[upto+3])data140,4262
t = struct.unpack("I", bytearray(data))t141,4359
colorsUsed = tcolorsUsed143,4438
upto = upto + 4upto145,4454
data = struct.pack("BBBB", contents[upto], contents[upto+1], contents[upto+2], contents[upto+3])data146,4470
t = struct.unpack("I", bytearray(data))t147,4567
colorIndex = [] #(colorsUsed[0])colorIndex155,4851
    upto =  startOfDefinitions + (i * 4)upto162,5044
    blue = contents[upto]blue163,5085
    green = contents[upto + 1]green164,5111
    red = contents[upto + 2]red165,5142
arraySize = (len(contents) - offset[0]) arraySize182,5793
outputString = "/* This was generated using a script based on the SparkFun BMPtoArray python script" + '\n'outputString183,5834
outputString = outputString[:-2]outputString192,6284
dropLastNumber = True #(width % 4) == 2 or (width % 4) == 1dropLastNumber203,6717
paddedWidth = int(math.ceil(bitsPerPixel * width / 32.0) * 4)paddedWidth204,6777
r = 0r207,6989
width = int(width / 2)width208,6995
    i = 0i213,7238
        colorCode1 = contents[row + col*paddedWidth + offset[0]]  colorCode1215,7277
            i = 0i218,7382
            i = 0i222,7501
        r = r + 1r226,7582
        i = i + 1i227,7600
outputString = outputString[:-2]outputString235,7869
    outfile = open(output, "w")outfile240,7977

lib/TFT_eSPI/User_Setups/Setup6_RPi_Wr_ILI9486.h,579
#define RPI_ILI9486_DRIVER RPI_ILI9486_DRIVER3,52
#define TFT_CS TFT_CS7,194
#define TFT_DC TFT_DC8,249
#define TFT_RST TFT_RST9,302
#define TFT_WR TFT_WR12,488
#define LOAD_GLCD LOAD_GLCD15,569
#define LOAD_FONT2 LOAD_FONT216,658
#define LOAD_FONT4 LOAD_FONT417,757
#define LOAD_FONT6 LOAD_FONT618,857
#define LOAD_FONT7 LOAD_FONT719,970
#define LOAD_FONT8 LOAD_FONT820,1083
#define LOAD_GFXFF LOAD_GFXFF21,1192
#define SMOOTH_FONTSMOOTH_FONT23,1305
#define SPI_FREQUENCY SPI_FREQUENCY26,1327
#define SPI_TOUCH_FREQUENCY SPI_TOUCH_FREQUENCY28,1360

lib/TFT_eSPI/User_Setups/Setup47_ST7735.h,839
#define ST7735_DRIVER ST7735_DRIVER3,71
#define TFT_WIDTH TFT_WIDTH5,125
#define TFT_HEIGHT TFT_HEIGHT6,148
 #define ST7735_GREENTAB3ST7735_GREENTAB311,251
#define TFT_RGB_ORDER TFT_RGB_ORDER19,613
#define TFT_MISO TFT_MISO25,755
#define TFT_MOSI TFT_MOSI26,775
#define TFT_SCLK TFT_SCLK27,795
#define TFT_DC TFT_DC29,892
#define TFT_RST TFT_RST30,912
#define LOAD_GLCD LOAD_GLCD32,981
#define LOAD_FONT2 LOAD_FONT233,1070
#define LOAD_FONT4 LOAD_FONT434,1169
#define LOAD_FONT6 LOAD_FONT635,1269
#define LOAD_FONT7 LOAD_FONT736,1382
#define LOAD_FONT8 LOAD_FONT837,1495
#define LOAD_GFXFF LOAD_GFXFF39,1717
#define SMOOTH_FONTSMOOTH_FONT41,1830
#define SPI_FREQUENCY SPI_FREQUENCY44,1852
#define SPI_READ_FREQUENCY SPI_READ_FREQUENCY47,1919
#define SPI_TOUCH_FREQUENCY SPI_TOUCH_FREQUENCY49,1957

lib/TFT_eSPI/User_Setups/Setup18_ST7789.h,516
#define ST7789_DRIVERST7789_DRIVER3,52
#define TFT_DC TFT_DC21,870
#define TFT_RST TFT_RST22,923
#define LOAD_GLCD LOAD_GLCD25,1009
#define LOAD_FONT2 LOAD_FONT226,1098
#define LOAD_FONT4 LOAD_FONT427,1197
#define LOAD_FONT6 LOAD_FONT628,1297
#define LOAD_FONT7 LOAD_FONT729,1410
#define LOAD_FONT8 LOAD_FONT830,1524
#define LOAD_GFXFF LOAD_GFXFF31,1633
#define SMOOTH_FONTSMOOTH_FONT33,1746
#define SPI_FREQUENCY SPI_FREQUENCY37,1803
#define SPI_TOUCH_FREQUENCY SPI_TOUCH_FREQUENCY41,1906

lib/TFT_eSPI/User_Setups/SetupX_Template.h,634
#define ILI9341_DRIVERILI9341_DRIVER39,1550
#define TFT_CS TFT_CS153,6896
#define TFT_DC TFT_DC154,6951
#define TFT_RST TFT_RST155,7004
#define LOAD_GLCD LOAD_GLCD276,12457
#define LOAD_FONT2 LOAD_FONT2277,12546
#define LOAD_FONT4 LOAD_FONT4278,12645
#define LOAD_FONT6 LOAD_FONT6279,12745
#define LOAD_FONT7 LOAD_FONT7280,12858
#define LOAD_FONT8 LOAD_FONT8281,12972
#define LOAD_GFXFF LOAD_GFXFF283,13194
#define SMOOTH_FONTSMOOTH_FONT287,13444
#define SPI_FREQUENCY SPI_FREQUENCY306,14163
#define SPI_READ_FREQUENCY SPI_READ_FREQUENCY312,14394
#define SPI_TOUCH_FREQUENCY SPI_TOUCH_FREQUENCY315,14513

lib/TFT_eSPI/User_Setups/Setup13_ILI9481_Parallel.h,785
#define ESP32_PARALLELESP32_PARALLEL3,52
#define ILI9481_DRIVERILI9481_DRIVER6,77
#define TFT_CS TFT_CS10,142
#define TFT_DC TFT_DC11,190
#define TFT_RST TFT_RST12,274
#define TFT_WR TFT_WR14,309
#define TFT_RD TFT_RD15,393
#define TFT_D0 TFT_D017,414
#define TFT_D1 TFT_D118,487
#define TFT_D2 TFT_D219,559
#define TFT_D3 TFT_D320,579
#define TFT_D4 TFT_D421,599
#define TFT_D5 TFT_D522,619
#define TFT_D6 TFT_D623,639
#define TFT_D7 TFT_D724,659
#define LOAD_GLCD LOAD_GLCD27,681
#define LOAD_FONT2 LOAD_FONT228,770
#define LOAD_FONT4 LOAD_FONT429,869
#define LOAD_FONT6 LOAD_FONT630,969
#define LOAD_FONT7 LOAD_FONT731,1082
#define LOAD_FONT8 LOAD_FONT832,1195
#define LOAD_GFXFF LOAD_GFXFF33,1304
#define SMOOTH_FONTSMOOTH_FONT35,1417

lib/TFT_eSPI/User_Setups/Setup22_TTGO_T4.h,677
#define ILI9341_DRIVERILI9341_DRIVER5,141
#define TFT_MISO TFT_MISO10,254
#define TFT_MOSI TFT_MOSI11,274
#define TFT_SCLK TFT_SCLK12,294
#define TFT_CS TFT_CS14,315
#define TFT_DC TFT_DC15,335
#define TFT_RST TFT_RST16,382
#define LOAD_GLCDLOAD_GLCD18,403
#define LOAD_FONT2LOAD_FONT219,421
#define LOAD_FONT4LOAD_FONT420,440
#define LOAD_FONT6LOAD_FONT621,459
#define LOAD_FONT7LOAD_FONT722,478
#define LOAD_FONT8LOAD_FONT823,497
#define LOAD_GFXFFLOAD_GFXFF24,516
#define SMOOTH_FONTSMOOTH_FONT26,536
  #define SPI_FREQUENCY SPI_FREQUENCY29,591
#define USE_HSPI_PORTUSE_HSPI_PORT31,651
#define SPI_READ_FREQUENCY SPI_READ_FREQUENCY33,674

lib/TFT_eSPI/User_Setups/Setup32_ILI9341_STM32F103.h,667
#define STM32STM328,298
#define ILI9341_DRIVERILI9341_DRIVER11,346
#define TFT_CS TFT_CS23,879
#define TFT_DC TFT_DC24,936
#define TFT_RST TFT_RST25,1033
#define TOUCH_CS TOUCH_CS31,1365
#define LOAD_GLCD LOAD_GLCD40,1961
#define LOAD_FONT2 LOAD_FONT241,2050
#define LOAD_FONT4 LOAD_FONT442,2149
#define LOAD_FONT6 LOAD_FONT643,2249
#define LOAD_FONT7 LOAD_FONT744,2362
#define LOAD_FONT8 LOAD_FONT845,2476
#define LOAD_GFXFF LOAD_GFXFF46,2585
#define SMOOTH_FONTSMOOTH_FONT49,2766
#define SPI_FREQUENCY SPI_FREQUENCY52,2829
#define SPI_READ_FREQUENCY SPI_READ_FREQUENCY55,2938
#define SPI_TOUCH_FREQUENCY SPI_TOUCH_FREQUENCY57,3009

lib/TFT_eSPI/User_Setups/Setup34_ILI9481_Parallel_STM32.h,879
#define STM32STM328,298
#define NUCLEO_64_TFTNUCLEO_64_TFT12,430
#define TFT_PARALLEL_8_BITTFT_PARALLEL_8_BIT16,552
#define ILI9481_DRIVERILI9481_DRIVER20,644
#define TFT_CS TFT_CS25,834
#define TFT_DC TFT_DC26,882
#define TFT_RST TFT_RST27,931
#define TFT_WR TFT_WR29,966
#define TFT_RD TFT_RD30,1016
#define TFT_D0 TFT_D032,1050
#define TFT_D1 TFT_D133,1100
#define TFT_D2 TFT_D234,1120
#define TFT_D3 TFT_D335,1140
#define TFT_D4 TFT_D436,1160
#define TFT_D5 TFT_D537,1180
#define TFT_D6 TFT_D638,1200
#define TFT_D7 TFT_D739,1220
#define LOAD_GLCD LOAD_GLCD42,1266
#define LOAD_FONT2 LOAD_FONT243,1355
#define LOAD_FONT4 LOAD_FONT444,1454
#define LOAD_FONT6 LOAD_FONT645,1554
#define LOAD_FONT7 LOAD_FONT746,1667
#define LOAD_FONT8 LOAD_FONT847,1780
#define LOAD_GFXFF LOAD_GFXFF48,1889
#define SMOOTH_FONTSMOOTH_FONT51,2070

lib/TFT_eSPI/User_Setups/Setup22_TTGO_T4_v1.3.h,755
#define ILI9341_DRIVERILI9341_DRIVER5,121
#define TFT_BACKLIGHT_ON TFT_BACKLIGHT_ON7,145
#define TFT_BL TFT_BL8,175
#define TFT_MISO TFT_MISO10,193
#define TFT_MOSI TFT_MOSI11,213
#define TFT_SCLK TFT_SCLK12,233
#define TFT_CS TFT_CS14,254
#define TFT_DC TFT_DC15,274
#define TFT_RST TFT_RST16,338
#define LOAD_GLCDLOAD_GLCD18,359
#define LOAD_FONT2LOAD_FONT219,377
#define LOAD_FONT4LOAD_FONT420,396
#define LOAD_FONT6LOAD_FONT621,415
#define LOAD_FONT7LOAD_FONT722,434
#define LOAD_FONT8LOAD_FONT823,453
#define LOAD_GFXFFLOAD_GFXFF24,472
#define SMOOTH_FONTSMOOTH_FONT26,492
  #define SPI_FREQUENCY SPI_FREQUENCY29,547
#define USE_HSPI_PORTUSE_HSPI_PORT31,607
#define SPI_READ_FREQUENCY SPI_READ_FREQUENCY33,630

lib/TFT_eSPI/User_Setups/Setup10_RPi_touch_ILI9486.h,622
#define RPI_DISPLAY_TYPERPI_DISPLAY_TYPE4,67
#define ILI9486_DRIVERILI9486_DRIVER5,92
#define TFT_CS TFT_CS8,208
#define TFT_DC TFT_DC9,263
#define TFT_RST TFT_RST10,316
#define TOUCH_CS TOUCH_CS13,502
#define LOAD_GLCD LOAD_GLCD16,574
#define LOAD_FONT2 LOAD_FONT217,663
#define LOAD_FONT4 LOAD_FONT418,762
#define LOAD_FONT6 LOAD_FONT619,862
#define LOAD_FONT7 LOAD_FONT720,975
#define LOAD_FONT8 LOAD_FONT821,1088
#define LOAD_GFXFF LOAD_GFXFF22,1197
#define SMOOTH_FONTSMOOTH_FONT24,1310
#define SPI_FREQUENCY SPI_FREQUENCY27,1332
#define SPI_TOUCH_FREQUENCY SPI_TOUCH_FREQUENCY29,1417

lib/TFT_eSPI/User_Setups/Setup31_ST7796_Parallel_STM32.h,877
#define STM32STM329,299
#define NUCLEO_64_TFTNUCLEO_64_TFT13,431
#define TFT_PARALLEL_8_BITTFT_PARALLEL_8_BIT17,552
#define ST7796_DRIVERST7796_DRIVER20,619
#define TFT_CS TFT_CS26,833
#define TFT_DC TFT_DC27,881
#define TFT_RST TFT_RST28,930
#define TFT_WR TFT_WR30,965
#define TFT_RD TFT_RD31,1015
#define TFT_D0 TFT_D033,1049
#define TFT_D1 TFT_D134,1099
#define TFT_D2 TFT_D235,1119
#define TFT_D3 TFT_D336,1139
#define TFT_D4 TFT_D437,1159
#define TFT_D5 TFT_D538,1179
#define TFT_D6 TFT_D639,1199
#define TFT_D7 TFT_D740,1219
#define LOAD_GLCD LOAD_GLCD43,1265
#define LOAD_FONT2 LOAD_FONT244,1354
#define LOAD_FONT4 LOAD_FONT445,1453
#define LOAD_FONT6 LOAD_FONT646,1553
#define LOAD_FONT7 LOAD_FONT747,1666
#define LOAD_FONT8 LOAD_FONT848,1779
#define LOAD_GFXFF LOAD_GFXFF49,1888
#define SMOOTH_FONTSMOOTH_FONT52,2069

lib/TFT_eSPI/User_Setups/Setup43_ST7735.h,819
#define ST7735_DRIVERST7735_DRIVER5,96
#define TFT_WIDTH TFT_WIDTH8,120
#define TFT_HEIGHT TFT_HEIGHT9,142
#define ST7735_GREENTAB160x80ST7735_GREENTAB160x8012,167
#define TFT_MISO TFT_MISO21,535
#define TFT_MOSI TFT_MOSI22,555
#define TFT_SCLK TFT_SCLK23,575
#define TFT_CS TFT_CS24,595
#define TFT_DC TFT_DC25,644
#define TFT_RST TFT_RST26,693
#define TFT_CS TFT_CS34,1059
#define TFT_DC TFT_DC35,1114
#define TFT_RST TFT_RST36,1167
#define LOAD_GLCD LOAD_GLCD39,1259
#define LOAD_FONT2 LOAD_FONT240,1348
#define LOAD_FONT4 LOAD_FONT441,1447
#define LOAD_FONT6 LOAD_FONT642,1547
#define LOAD_FONT7 LOAD_FONT743,1660
#define LOAD_FONT8 LOAD_FONT844,1773
#define LOAD_GFXFF LOAD_GFXFF46,1995
#define SMOOTH_FONTSMOOTH_FONT48,2108
  #define SPI_FREQUENCY SPI_FREQUENCY52,2164

lib/TFT_eSPI/User_Setups/Setup12_M5Stack.h,698
#define ILI9341_DRIVERILI9341_DRIVER3,52
#define M5STACKM5STACK6,77
#define TFT_MISO TFT_MISO9,95
#define TFT_MOSI TFT_MOSI10,115
#define TFT_SCLK TFT_SCLK11,135
#define TFT_CS TFT_CS12,155
#define TFT_DC TFT_DC13,203
#define TFT_RST TFT_RST14,252
#define TFT_BL TFT_BL15,323
#define LOAD_GLCD LOAD_GLCD18,364
#define LOAD_FONT2 LOAD_FONT219,453
#define LOAD_FONT4 LOAD_FONT420,552
#define LOAD_FONT6 LOAD_FONT621,652
#define LOAD_FONT7 LOAD_FONT722,765
#define LOAD_FONT8 LOAD_FONT823,878
#define LOAD_GFXFF LOAD_GFXFF24,987
#define SMOOTH_FONTSMOOTH_FONT26,1100
#define SPI_FREQUENCY SPI_FREQUENCY29,1122
#define SPI_READ_FREQUENCY SPI_READ_FREQUENCY32,1205

lib/TFT_eSPI/User_Setups/Setup7_ST7735_128x128.h,668
#define ST7735_DRIVERST7735_DRIVER3,52
#define TFT_WIDTH TFT_WIDTH6,76
#define TFT_HEIGHT TFT_HEIGHT7,99
#define ST7735_GREENTAB128 ST7735_GREENTAB12810,124
#define TFT_CS TFT_CS19,593
#define TFT_DC TFT_DC20,648
#define TFT_RST TFT_RST21,701
#define LOAD_GLCD LOAD_GLCD25,888
#define LOAD_FONT2 LOAD_FONT226,977
#define LOAD_FONT4 LOAD_FONT427,1076
#define LOAD_FONT6 LOAD_FONT628,1176
#define LOAD_FONT7 LOAD_FONT729,1289
#define LOAD_FONT8 LOAD_FONT830,1402
#define LOAD_GFXFF LOAD_GFXFF32,1624
#define SMOOTH_FONTSMOOTH_FONT35,1738
#define SPI_FREQUENCY SPI_FREQUENCY39,1795
#define SPI_TOUCH_FREQUENCY SPI_TOUCH_FREQUENCY41,1828

lib/TFT_eSPI/User_Setups/Setup14_ILI9341_Parallel.h,793
#define TFT_PARALLEL_8_BITTFT_PARALLEL_8_BIT3,52
#define ILI9341_DRIVERILI9341_DRIVER6,81
#define TFT_CS TFT_CS10,156
#define TFT_DC TFT_DC11,204
#define TFT_RST TFT_RST12,288
#define TFT_WR TFT_WR14,323
#define TFT_RD TFT_RD15,407
#define TFT_D0 TFT_D017,428
#define TFT_D1 TFT_D118,501
#define TFT_D2 TFT_D219,573
#define TFT_D3 TFT_D320,593
#define TFT_D4 TFT_D421,613
#define TFT_D5 TFT_D522,633
#define TFT_D6 TFT_D623,653
#define TFT_D7 TFT_D724,673
#define LOAD_GLCD LOAD_GLCD27,695
#define LOAD_FONT2 LOAD_FONT228,784
#define LOAD_FONT4 LOAD_FONT429,883
#define LOAD_FONT6 LOAD_FONT630,983
#define LOAD_FONT7 LOAD_FONT731,1096
#define LOAD_FONT8 LOAD_FONT832,1209
#define LOAD_GFXFF LOAD_GFXFF33,1318
#define SMOOTH_FONTSMOOTH_FONT35,1431

lib/TFT_eSPI/User_Setups/Setup17_ePaper.h,347
#define EPD_DRIVER EPD_DRIVER3,52
#define LOAD_GLCD LOAD_GLCD32,1492
#define LOAD_FONT2 LOAD_FONT233,1581
#define LOAD_FONT4 LOAD_FONT434,1680
#define LOAD_FONT6 LOAD_FONT635,1780
#define LOAD_FONT7 LOAD_FONT736,1893
#define LOAD_FONT8 LOAD_FONT837,2007
#define LOAD_GFXFF LOAD_GFXFF38,2116
#define SMOOTH_FONTSMOOTH_FONT40,2229

lib/TFT_eSPI/User_Setups/Setup16_ILI9488_Parallel.h,785
#define ESP32_PARALLELESP32_PARALLEL3,52
#define ILI9488_DRIVERILI9488_DRIVER6,77
#define TFT_CS TFT_CS10,121
#define TFT_DC TFT_DC11,169
#define TFT_RST TFT_RST12,253
#define TFT_WR TFT_WR14,288
#define TFT_RD TFT_RD15,372
#define TFT_D0 TFT_D017,393
#define TFT_D1 TFT_D118,466
#define TFT_D2 TFT_D219,538
#define TFT_D3 TFT_D320,558
#define TFT_D4 TFT_D421,578
#define TFT_D5 TFT_D522,598
#define TFT_D6 TFT_D623,618
#define TFT_D7 TFT_D724,638
#define LOAD_GLCD LOAD_GLCD27,660
#define LOAD_FONT2 LOAD_FONT228,749
#define LOAD_FONT4 LOAD_FONT429,848
#define LOAD_FONT6 LOAD_FONT630,948
#define LOAD_FONT7 LOAD_FONT731,1061
#define LOAD_FONT8 LOAD_FONT832,1174
#define LOAD_GFXFF LOAD_GFXFF33,1283
#define SMOOTH_FONTSMOOTH_FONT35,1396

lib/TFT_eSPI/User_Setups/Setup33_RPi_ILI9486_STM32.h,630
#define STM32STM3217,673
#define RPI_DISPLAY_TYPERPI_DISPLAY_TYPE20,721
#define ILI9486_DRIVERILI9486_DRIVER21,746
#define TFT_CS TFT_CS29,1096
#define TFT_DC TFT_DC30,1153
#define TFT_RST TFT_RST31,1250
#define LOAD_GLCD LOAD_GLCD45,1878
#define LOAD_FONT2 LOAD_FONT246,1967
#define LOAD_FONT4 LOAD_FONT447,2066
#define LOAD_FONT6 LOAD_FONT648,2166
#define LOAD_FONT7 LOAD_FONT749,2279
#define LOAD_FONT8 LOAD_FONT850,2393
#define LOAD_GFXFF LOAD_GFXFF51,2502
#define SMOOTH_FONTSMOOTH_FONT54,2683
#define SPI_FREQUENCY SPI_FREQUENCY59,2780
#define SUPPORT_TRANSACTIONSSUPPORT_TRANSACTIONS67,3183

lib/TFT_eSPI/User_Setups/Setup4_S6D02A1.h,539
#define S6D02A1_DRIVERS6D02A1_DRIVER3,52
#define TFT_CS TFT_CS7,169
#define TFT_DC TFT_DC8,224
#define TFT_RST TFT_RST9,277
#define LOAD_GLCD LOAD_GLCD13,464
#define LOAD_FONT2 LOAD_FONT214,553
#define LOAD_FONT4 LOAD_FONT415,652
#define LOAD_FONT6 LOAD_FONT616,752
#define LOAD_FONT7 LOAD_FONT717,865
#define LOAD_FONT8 LOAD_FONT818,978
#define LOAD_GFXFF LOAD_GFXFF20,1200
#define SMOOTH_FONTSMOOTH_FONT22,1313
#define SPI_FREQUENCY SPI_FREQUENCY26,1370
#define SPI_TOUCH_FREQUENCY SPI_TOUCH_FREQUENCY29,1438

lib/TFT_eSPI/User_Setups/Setup21_ILI9488.h,696
#define ILI9488_DRIVERILI9488_DRIVER3,52
#define TFT_MISO TFT_MISO7,105
#define TFT_MOSI TFT_MOSI8,189
#define TFT_SCLK TFT_SCLK9,209
#define TFT_CS TFT_CS10,229
#define TFT_DC TFT_DC11,278
#define TFT_RST TFT_RST12,327
#define LOAD_GLCD LOAD_GLCD15,390
#define LOAD_FONT2 LOAD_FONT216,479
#define LOAD_FONT4 LOAD_FONT417,578
#define LOAD_FONT6 LOAD_FONT618,678
#define LOAD_FONT7 LOAD_FONT719,791
#define LOAD_FONT8 LOAD_FONT820,904
#define LOAD_GFXFF LOAD_GFXFF21,1013
#define SMOOTH_FONTSMOOTH_FONT23,1126
#define SPI_FREQUENCY SPI_FREQUENCY27,1183
#define SPI_READ_FREQUENCY SPI_READ_FREQUENCY32,1336
#define SPI_TOUCH_FREQUENCY SPI_TOUCH_FREQUENCY34,1374

lib/TFT_eSPI/User_Setups/Setup5_RPi_ILI9486.h,549
#define RPI_ILI9486_DRIVER RPI_ILI9486_DRIVER3,52
#define TFT_CS TFT_CS7,194
#define TFT_DC TFT_DC8,249
#define TFT_RST TFT_RST9,302
#define LOAD_GLCD LOAD_GLCD13,491
#define LOAD_FONT2 LOAD_FONT214,580
#define LOAD_FONT4 LOAD_FONT415,679
#define LOAD_FONT6 LOAD_FONT616,779
#define LOAD_FONT7 LOAD_FONT717,892
#define LOAD_FONT8 LOAD_FONT818,1005
#define LOAD_GFXFF LOAD_GFXFF19,1114
#define SMOOTH_FONTSMOOTH_FONT21,1227
#define SPI_FREQUENCY SPI_FREQUENCY24,1249
#define SPI_TOUCH_FREQUENCY SPI_TOUCH_FREQUENCY26,1282

lib/TFT_eSPI/User_Setups/Setup28_RPi_ST7796_ESP8266.h,697
#define RPI_DISPLAY_TYPERPI_DISPLAY_TYPE17,754
#define ST7796_DRIVERST7796_DRIVER20,806
#define TFT_CS TFT_CS35,1387
#define TFT_DC TFT_DC36,1442
#define TFT_RST TFT_RST37,1495
#define TOUCH_CS TOUCH_CS40,1681
#define LOAD_GLCD LOAD_GLCD60,2504
#define LOAD_FONT2 LOAD_FONT261,2593
#define LOAD_FONT4 LOAD_FONT462,2692
#define LOAD_FONT6 LOAD_FONT663,2792
#define LOAD_FONT7 LOAD_FONT764,2905
#define LOAD_FONT8 LOAD_FONT865,3018
#define LOAD_GFXFF LOAD_GFXFF67,3240
#define SMOOTH_FONTSMOOTH_FONT71,3490
   #define SPI_FREQUENCY SPI_FREQUENCY91,4200
#define SPI_TOUCH_FREQUENCY SPI_TOUCH_FREQUENCY93,4236
#define SUPPORT_TRANSACTIONSSUPPORT_TRANSACTIONS105,4789

lib/TFT_eSPI/User_Setups/Setup30_ILI9341_Parallel_STM32.h,879
#define STM32STM328,298
#define NUCLEO_64_TFTNUCLEO_64_TFT12,430
#define TFT_PARALLEL_8_BITTFT_PARALLEL_8_BIT16,552
#define ILI9341_DRIVERILI9341_DRIVER19,619
#define TFT_CS TFT_CS25,834
#define TFT_DC TFT_DC26,882
#define TFT_RST TFT_RST27,931
#define TFT_WR TFT_WR29,966
#define TFT_RD TFT_RD30,1016
#define TFT_D0 TFT_D032,1050
#define TFT_D1 TFT_D133,1100
#define TFT_D2 TFT_D234,1120
#define TFT_D3 TFT_D335,1140
#define TFT_D4 TFT_D436,1160
#define TFT_D5 TFT_D537,1180
#define TFT_D6 TFT_D638,1200
#define TFT_D7 TFT_D739,1220
#define LOAD_GLCD LOAD_GLCD42,1266
#define LOAD_FONT2 LOAD_FONT243,1355
#define LOAD_FONT4 LOAD_FONT444,1454
#define LOAD_FONT6 LOAD_FONT645,1554
#define LOAD_FONT7 LOAD_FONT746,1667
#define LOAD_FONT8 LOAD_FONT847,1780
#define LOAD_GFXFF LOAD_GFXFF48,1889
#define SMOOTH_FONTSMOOTH_FONT51,2070

lib/TFT_eSPI/User_Setups/Setup46_GC9A01_ESP32.h,685
#define GC9A01_DRIVERGC9A01_DRIVER1,0
#define TFT_MISO TFT_MISO3,23
#define TFT_MOSI TFT_MOSI4,43
#define TFT_SCLK TFT_SCLK5,63
#define TFT_CS TFT_CS6,83
#define TFT_DC TFT_DC7,132
#define TFT_RST TFT_RST8,181
#define LOAD_GLCD LOAD_GLCD11,336
#define LOAD_FONT2 LOAD_FONT212,425
#define LOAD_FONT4 LOAD_FONT413,524
#define LOAD_FONT6 LOAD_FONT614,624
#define LOAD_FONT7 LOAD_FONT715,737
#define LOAD_FONT8 LOAD_FONT816,850
#define LOAD_GFXFF LOAD_GFXFF17,959
#define SMOOTH_FONTSMOOTH_FONT18,1071
#define SPI_FREQUENCY SPI_FREQUENCY20,1092
#define SPI_READ_FREQUENCY SPI_READ_FREQUENCY22,1125
#define SPI_TOUCH_FREQUENCY SPI_TOUCH_FREQUENCY24,1163

lib/TFT_eSPI/User_Setups/Setup19_RM68140_Parallel.h,785
#define ESP32_PARALLELESP32_PARALLEL3,52
#define RM68140_DRIVERRM68140_DRIVER6,77
#define TFT_CS TFT_CS10,142
#define TFT_DC TFT_DC11,190
#define TFT_RST TFT_RST12,274
#define TFT_WR TFT_WR14,309
#define TFT_RD TFT_RD15,393
#define TFT_D0 TFT_D017,414
#define TFT_D1 TFT_D118,487
#define TFT_D2 TFT_D219,559
#define TFT_D3 TFT_D320,579
#define TFT_D4 TFT_D421,599
#define TFT_D5 TFT_D522,619
#define TFT_D6 TFT_D623,639
#define TFT_D7 TFT_D724,659
#define LOAD_GLCD LOAD_GLCD27,681
#define LOAD_FONT2 LOAD_FONT228,770
#define LOAD_FONT4 LOAD_FONT429,869
#define LOAD_FONT6 LOAD_FONT630,969
#define LOAD_FONT7 LOAD_FONT731,1082
#define LOAD_FONT8 LOAD_FONT832,1195
#define LOAD_GFXFF LOAD_GFXFF33,1304
#define SMOOTH_FONTSMOOTH_FONT35,1417

lib/TFT_eSPI/User_Setups/Setup26_TTGO_T_Wristband.h,791
#define ST7735_DRIVERST7735_DRIVER1,0
#define TFT_WIDTH TFT_WIDTH3,23
#define TFT_HEIGHT TFT_HEIGHT4,45
#define TFT_RST TFT_RST7,70
#define TFT_MISO TFT_MISO8,181
#define TFT_MOSI TFT_MOSI9,212
#define TFT_SCLK TFT_SCLK10,243
#define TFT_CS TFT_CS11,274
#define TFT_DC TFT_DC12,304
#define TFT_BL TFT_BL13,335
#define TFT_BACKLIGHT_ON TFT_BACKLIGHT_ON15,401
#define ST7735_GREENTAB160x80 ST7735_GREENTAB160x8017,460
#define LOAD_GLCD LOAD_GLCD19,542
#define LOAD_FONT2 LOAD_FONT220,631
#define LOAD_FONT4 LOAD_FONT421,730
#define LOAD_FONT6 LOAD_FONT622,830
#define LOAD_FONT7 LOAD_FONT723,943
#define LOAD_FONT8 LOAD_FONT824,1056
#define LOAD_GFXFF LOAD_GFXFF26,1278
#define SMOOTH_FONTSMOOTH_FONT30,1528
#define SPI_FREQUENCY SPI_FREQUENCY32,1549

lib/TFT_eSPI/User_Setups/Setup24_ST7789.h,776
#define ST7789_DRIVER ST7789_DRIVER3,54
#define TFT_WIDTH TFT_WIDTH5,108
#define TFT_HEIGHT TFT_HEIGHT6,131
#define TFT_MISO TFT_MISO21,473
#define TFT_MOSI TFT_MOSI22,493
#define TFT_SCLK TFT_SCLK23,513
#define TFT_CS TFT_CS24,533
#define TFT_DC TFT_DC25,571
#define TFT_RST TFT_RST26,591
#define LOAD_GLCD LOAD_GLCD35,1058
#define LOAD_FONT2 LOAD_FONT236,1147
#define LOAD_FONT4 LOAD_FONT437,1246
#define LOAD_FONT6 LOAD_FONT638,1346
#define LOAD_FONT7 LOAD_FONT739,1459
#define LOAD_FONT8 LOAD_FONT840,1572
#define LOAD_GFXFF LOAD_GFXFF42,1794
#define SMOOTH_FONTSMOOTH_FONT44,1907
#define SPI_FREQUENCY SPI_FREQUENCY48,1964
#define SPI_READ_FREQUENCY SPI_READ_FREQUENCY50,1997
#define SPI_TOUCH_FREQUENCY SPI_TOUCH_FREQUENCY52,2035

lib/TFT_eSPI/User_Setups/Setup35_ILI9341_STM32_Port_Bus.h,1045
#define STM32STM328,298
#define STM_PORTA_DATA_BUSSTM_PORTA_DATA_BUS12,442
#define TFT_PARALLEL_8_BITTFT_PARALLEL_8_BIT16,627
#define ILI9341_DRIVERILI9341_DRIVER19,700
#define TFT_CS TFT_CS25,823
#define TFT_DC TFT_DC26,870
#define TFT_RST TFT_RST27,918
#define TFT_WR TFT_WR28,951
#define TFT_RD TFT_RD29,999
#define TFT_D0 TFT_D031,1032
#define TFT_D1 TFT_D132,1087
#define TFT_D2 TFT_D233,1106
#define TFT_D3 TFT_D334,1125
#define TFT_D4 TFT_D435,1144
#define TFT_D5 TFT_D536,1163
#define TFT_D6 TFT_D637,1182
#define TFT_D7 TFT_D738,1201
#define LOAD_GLCD LOAD_GLCD40,1221
#define LOAD_FONT2 LOAD_FONT241,1310
#define LOAD_FONT4 LOAD_FONT442,1409
#define LOAD_FONT6 LOAD_FONT643,1509
#define LOAD_FONT7 LOAD_FONT744,1622
#define LOAD_FONT8 LOAD_FONT845,1736
#define LOAD_GFXFF LOAD_GFXFF46,1845
#define SMOOTH_FONTSMOOTH_FONT49,2026
#define SPI_FREQUENCY SPI_FREQUENCY52,2089
#define SPI_READ_FREQUENCY SPI_READ_FREQUENCY55,2198
#define SPI_TOUCH_FREQUENCY SPI_TOUCH_FREQUENCY57,2269

lib/TFT_eSPI/User_Setups/Setup45_TTGO_T_Watch.h,615
#define ST7789_DRIVERST7789_DRIVER1,0
#define TFT_WIDTH TFT_WIDTH3,23
#define TFT_HEIGHT TFT_HEIGHT4,46
#define TFT_MISO TFT_MISO6,70
#define TFT_MOSI TFT_MOSI7,101
#define TFT_SCLK TFT_SCLK8,132
#define TFT_CS TFT_CS9,163
#define TFT_DC TFT_DC10,193
#define LOAD_GLCD LOAD_GLCD12,225
#define LOAD_FONT2 LOAD_FONT213,314
#define LOAD_FONT4 LOAD_FONT414,413
#define LOAD_FONT6 LOAD_FONT615,513
#define LOAD_FONT7 LOAD_FONT716,626
#define LOAD_FONT8 LOAD_FONT817,739
#define LOAD_GFXFF LOAD_GFXFF18,848
#define SMOOTH_FONTSMOOTH_FONT19,960
#define SPI_FREQUENCY SPI_FREQUENCY26,1194

lib/TFT_eSPI/User_Setups/Setup50_SSD1963_Parallel.h,873
#define TFT_PARALLEL_8_BITTFT_PARALLEL_8_BIT17,740
#define SSD1963_800BD_DRIVER SSD1963_800BD_DRIVER23,1003
#define TFT_RGB_ORDER TFT_RGB_ORDER26,1230
#define TFT_CS TFT_CS35,1570
#define TFT_DC TFT_DC36,1618
#define TFT_RST TFT_RST37,1702
#define TFT_WR TFT_WR39,1737
#define TFT_RD TFT_RD40,1821
#define TFT_D0 TFT_D042,1842
#define TFT_D1 TFT_D143,1915
#define TFT_D2 TFT_D244,1987
#define TFT_D3 TFT_D345,2007
#define TFT_D4 TFT_D446,2027
#define TFT_D5 TFT_D547,2047
#define TFT_D6 TFT_D648,2067
#define TFT_D7 TFT_D749,2087
#define LOAD_GLCD LOAD_GLCD69,2905
#define LOAD_FONT2 LOAD_FONT270,2994
#define LOAD_FONT4 LOAD_FONT471,3093
#define LOAD_FONT6 LOAD_FONT672,3193
#define LOAD_FONT7 LOAD_FONT773,3306
#define LOAD_FONT8 LOAD_FONT874,3419
#define LOAD_GFXFF LOAD_GFXFF76,3641
#define SMOOTH_FONTSMOOTH_FONT80,3891

lib/TFT_eSPI/User_Setups/Setup29_ILI9341_STM32.h,728
#define STM32STM3216,586
#define ILI9341_DRIVERILI9341_DRIVER19,634
#define TFT_CS TFT_CS57,1685
#define TFT_DC TFT_DC58,1742
#define TFT_RST TFT_RST59,1839
#define TOUCH_CS TOUCH_CS71,2444
#define LOAD_GLCD LOAD_GLCD73,2465
#define LOAD_FONT2 LOAD_FONT274,2554
#define LOAD_FONT4 LOAD_FONT475,2653
#define LOAD_FONT6 LOAD_FONT676,2753
#define LOAD_FONT7 LOAD_FONT777,2866
#define LOAD_FONT8 LOAD_FONT878,2980
#define LOAD_GFXFF LOAD_GFXFF79,3089
#define SMOOTH_FONTSMOOTH_FONT82,3270
#define SPI_FREQUENCY SPI_FREQUENCY87,3367
#define SPI_READ_FREQUENCY SPI_READ_FREQUENCY90,3519
#define SPI_TOUCH_FREQUENCY SPI_TOUCH_FREQUENCY92,3635
#define SUPPORT_TRANSACTIONSSUPPORT_TRANSACTIONS95,3766

lib/TFT_eSPI/User_Setups/Setup27_RPi_ST7796_ESP32.h,747
#define RPI_DISPLAY_TYPERPI_DISPLAY_TYPE17,754
#define ST7796_DRIVERST7796_DRIVER20,806
#define TFT_MISO TFT_MISO32,1262
#define TFT_MOSI TFT_MOSI33,1282
#define TFT_SCLK TFT_SCLK34,1302
#define TFT_CS TFT_CS35,1322
#define TFT_DC TFT_DC36,1371
#define TFT_RST TFT_RST37,1421
#define TOUCH_CS TOUCH_CS40,1576
#define LOAD_GLCD LOAD_GLCD60,2395
#define LOAD_FONT2 LOAD_FONT261,2484
#define LOAD_FONT4 LOAD_FONT462,2583
#define LOAD_FONT6 LOAD_FONT663,2683
#define LOAD_FONT7 LOAD_FONT764,2796
#define LOAD_FONT8 LOAD_FONT865,2909
#define LOAD_GFXFF LOAD_GFXFF67,3131
#define SMOOTH_FONTSMOOTH_FONT71,3381
   #define SPI_FREQUENCY SPI_FREQUENCY92,4126
   #define SPI_TOUCH_FREQUENCY SPI_TOUCH_FREQUENCY100,4462

lib/TFT_eSPI/User_Setups/Setup8_ILI9163_128x128.h,614
#define ILI9163_DRIVERILI9163_DRIVER3,52
#define TFT_WIDTH TFT_WIDTH6,77
#define TFT_HEIGHT TFT_HEIGHT7,100
#define TFT_CS TFT_CS11,217
#define TFT_DC TFT_DC12,272
#define TFT_RST TFT_RST13,325
#define LOAD_GLCD LOAD_GLCD17,512
#define LOAD_FONT2 LOAD_FONT218,601
#define LOAD_FONT4 LOAD_FONT419,700
#define LOAD_FONT6 LOAD_FONT620,800
#define LOAD_FONT7 LOAD_FONT721,913
#define LOAD_FONT8 LOAD_FONT822,1026
#define LOAD_GFXFF LOAD_GFXFF24,1248
#define SMOOTH_FONTSMOOTH_FONT26,1361
#define SPI_FREQUENCY SPI_FREQUENCY30,1418
#define SPI_TOUCH_FREQUENCY SPI_TOUCH_FREQUENCY32,1490

lib/TFT_eSPI/User_Setups/Setup23_TTGO_TM.h,883
#define ST7789_DRIVERST7789_DRIVER5,124
#define TFT_SDA_READ TFT_SDA_READ7,147
#define TFT_MISO TFT_MISO9,219
#define TFT_MOSI TFT_MOSI10,286
#define TFT_SCLK TFT_SCLK11,340
#define TFT_CS TFT_CS13,361
#define TFT_DC TFT_DC14,381
#define TFT_RST TFT_RST15,401
#define TFT_WIDTH TFT_WIDTH17,422
#define TFT_HEIGHT TFT_HEIGHT18,445
#define TFT_RGB_ORDER TFT_RGB_ORDER21,533
#define TFT_INVERSION_OFFTFT_INVERSION_OFF25,653
#define LOAD_GLCDLOAD_GLCD27,680
#define LOAD_FONT2LOAD_FONT228,698
#define LOAD_FONT4LOAD_FONT429,717
#define LOAD_FONT6LOAD_FONT630,736
#define LOAD_FONT7LOAD_FONT731,755
#define LOAD_FONT8LOAD_FONT832,774
#define LOAD_GFXFFLOAD_GFXFF33,793
#define SMOOTH_FONTSMOOTH_FONT35,813
#define SPI_FREQUENCY SPI_FREQUENCY37,834
#define SPI_FREQUENCY SPI_FREQUENCY38,923
#define SPI_READ_FREQUENCY SPI_READ_FREQUENCY40,956

lib/TFT_eSPI/User_Setups/Setup20_ILI9488.h,539
#define ILI9488_DRIVERILI9488_DRIVER3,52
#define TFT_CS TFT_CS7,169
#define TFT_DC TFT_DC8,224
#define TFT_RST TFT_RST9,277
#define LOAD_GLCD LOAD_GLCD13,464
#define LOAD_FONT2 LOAD_FONT214,553
#define LOAD_FONT4 LOAD_FONT415,652
#define LOAD_FONT6 LOAD_FONT616,752
#define LOAD_FONT7 LOAD_FONT717,865
#define LOAD_FONT8 LOAD_FONT818,978
#define LOAD_GFXFF LOAD_GFXFF19,1087
#define SMOOTH_FONTSMOOTH_FONT21,1200
#define SPI_FREQUENCY SPI_FREQUENCY25,1257
#define SPI_TOUCH_FREQUENCY SPI_TOUCH_FREQUENCY29,1326

lib/TFT_eSPI/User_Setups/Setup15_HX8357D.h,539
#define HX8357D_DRIVERHX8357D_DRIVER3,52
#define TFT_CS TFT_CS7,169
#define TFT_DC TFT_DC8,224
#define TFT_RST TFT_RST9,277
#define LOAD_GLCD LOAD_GLCD13,464
#define LOAD_FONT2 LOAD_FONT214,553
#define LOAD_FONT4 LOAD_FONT415,652
#define LOAD_FONT6 LOAD_FONT616,752
#define LOAD_FONT7 LOAD_FONT717,865
#define LOAD_FONT8 LOAD_FONT818,978
#define LOAD_GFXFF LOAD_GFXFF19,1087
#define SMOOTH_FONTSMOOTH_FONT21,1200
#define SPI_FREQUENCY SPI_FREQUENCY25,1257
#define SPI_TOUCH_FREQUENCY SPI_TOUCH_FREQUENCY28,1325

lib/TFT_eSPI/User_Setups/Setup44_TTGO_CameraPlus.h,647
#define ST7789_DRIVERST7789_DRIVER2,1
#define TFT_WIDTH TFT_WIDTH4,24
#define TFT_HEIGHT TFT_HEIGHT5,47
#define TFT_MOSI TFT_MOSI7,71
#define TFT_MISO TFT_MISO8,94
#define TFT_SCLK TFT_SCLK9,117
#define TFT_CS TFT_CS10,140
#define TFT_DC TFT_DC11,163
#define TFT_RST TFT_RST12,186
#define LOAD_GLCD LOAD_GLCD14,210
#define LOAD_FONT2 LOAD_FONT215,299
#define LOAD_FONT4 LOAD_FONT416,398
#define LOAD_FONT6 LOAD_FONT617,498
#define LOAD_FONT7 LOAD_FONT718,611
#define LOAD_FONT8 LOAD_FONT819,725
#define LOAD_GFXFF LOAD_GFXFF20,834
#define SMOOTH_FONTSMOOTH_FONT22,947
#define SPI_FREQUENCY SPI_FREQUENCY29,1181

lib/TFT_eSPI/User_Setups/Setup36_RPi_touch_ST7796.h,722
#define RPI_DISPLAY_TYPERPI_DISPLAY_TYPE3,52
#define ST7796_DRIVER ST7796_DRIVER4,77
#define TFT_MISO TFT_MISO7,122
#define TFT_MOSI TFT_MOSI8,142
#define TFT_SCLK TFT_SCLK9,162
#define TFT_CS TFT_CS10,182
#define TFT_DC TFT_DC11,230
#define TFT_RST TFT_RST12,279
#define TOUCH_CS TOUCH_CS15,434
#define LOAD_GLCD LOAD_GLCD18,502
#define LOAD_FONT2 LOAD_FONT219,591
#define LOAD_FONT4 LOAD_FONT420,690
#define LOAD_FONT6 LOAD_FONT621,790
#define LOAD_FONT7 LOAD_FONT722,903
#define LOAD_FONT8 LOAD_FONT823,1016
#define LOAD_GFXFF LOAD_GFXFF24,1125
#define SMOOTH_FONTSMOOTH_FONT26,1238
#define SPI_FREQUENCY SPI_FREQUENCY29,1260
#define SPI_TOUCH_FREQUENCY SPI_TOUCH_FREQUENCY31,1293

lib/TFT_eSPI/User_Setups/Setup25_TTGO_T_Display.h,833
#define ST7789_DRIVERST7789_DRIVER5,136
#define TFT_SDA_READ TFT_SDA_READ6,158
#define TFT_WIDTH TFT_WIDTH8,221
#define TFT_HEIGHT TFT_HEIGHT9,244
#define CGRAM_OFFSET CGRAM_OFFSET11,268
#define TFT_MOSI TFT_MOSI15,355
#define TFT_SCLK TFT_SCLK16,386
#define TFT_CS TFT_CS17,417
#define TFT_DC TFT_DC18,447
#define TFT_RST TFT_RST19,478
#define TFT_BL TFT_BL21,510
#define TFT_BACKLIGHT_ON TFT_BACKLIGHT_ON23,571
#define LOAD_GLCDLOAD_GLCD25,630
#define LOAD_FONT2LOAD_FONT226,648
#define LOAD_FONT4LOAD_FONT427,667
#define LOAD_FONT6LOAD_FONT628,686
#define LOAD_FONT7LOAD_FONT729,705
#define LOAD_FONT8LOAD_FONT830,724
#define LOAD_GFXFFLOAD_GFXFF31,743
#define SMOOTH_FONTSMOOTH_FONT33,763
  #define SPI_FREQUENCY SPI_FREQUENCY36,818
#define SPI_READ_FREQUENCY SPI_READ_FREQUENCY39,879

lib/TFT_eSPI/User_Setups/Setup3_ILI9163.h,614
#define ILI9163_DRIVERILI9163_DRIVER3,52
#define TFT_WIDTH TFT_WIDTH6,77
#define TFT_HEIGHT TFT_HEIGHT7,100
#define TFT_CS TFT_CS11,217
#define TFT_DC TFT_DC12,272
#define TFT_RST TFT_RST13,325
#define LOAD_GLCD LOAD_GLCD17,512
#define LOAD_FONT2 LOAD_FONT218,601
#define LOAD_FONT4 LOAD_FONT419,700
#define LOAD_FONT6 LOAD_FONT620,800
#define LOAD_FONT7 LOAD_FONT721,913
#define LOAD_FONT8 LOAD_FONT822,1026
#define LOAD_GFXFF LOAD_GFXFF24,1248
#define SMOOTH_FONTSMOOTH_FONT26,1361
#define SPI_FREQUENCY SPI_FREQUENCY30,1418
#define SPI_TOUCH_FREQUENCY SPI_TOUCH_FREQUENCY33,1486

lib/TFT_eSPI/User_Setups/Setup135_ST7789.h,716
#define ST7789_DRIVER ST7789_DRIVER3,54
#define TFT_WIDTH TFT_WIDTH5,108
#define TFT_HEIGHT TFT_HEIGHT6,131
#define CGRAM_OFFSET CGRAM_OFFSET8,155
#define TFT_CS TFT_CS31,828
#define TFT_DC TFT_DC32,875
#define TFT_RST TFT_RST34,1018
#define LOAD_GLCD LOAD_GLCD37,1130
#define LOAD_FONT2 LOAD_FONT238,1219
#define LOAD_FONT4 LOAD_FONT439,1318
#define LOAD_FONT6 LOAD_FONT640,1418
#define LOAD_FONT7 LOAD_FONT741,1531
#define LOAD_FONT8 LOAD_FONT842,1644
#define LOAD_GFXFF LOAD_GFXFF44,1866
#define SMOOTH_FONTSMOOTH_FONT46,1979
#define SPI_FREQUENCY SPI_FREQUENCY50,2036
#define SPI_READ_FREQUENCY SPI_READ_FREQUENCY52,2069
#define SPI_TOUCH_FREQUENCY SPI_TOUCH_FREQUENCY54,2107

lib/TFT_eSPI/User_Setups/Setup1_ILI9341.h,592
#define ILI9341_DRIVERILI9341_DRIVER3,52
#define TFT_CS TFT_CS6,77
#define TFT_DC TFT_DC7,132
#define TFT_RST TFT_RST8,185
#define LOAD_GLCD LOAD_GLCD12,374
#define LOAD_FONT2 LOAD_FONT213,463
#define LOAD_FONT4 LOAD_FONT414,562
#define LOAD_FONT6 LOAD_FONT615,662
#define LOAD_FONT7 LOAD_FONT716,775
#define LOAD_FONT8 LOAD_FONT817,888
#define LOAD_GFXFF LOAD_GFXFF18,997
#define SMOOTH_FONTSMOOTH_FONT21,1111
#define SPI_FREQUENCY SPI_FREQUENCY25,1168
#define SPI_READ_FREQUENCY SPI_READ_FREQUENCY28,1236
#define SPI_TOUCH_FREQUENCY SPI_TOUCH_FREQUENCY30,1274

lib/TFT_eSPI/User_Setups/User_Custom_Fonts.h,0

lib/TFT_eSPI/User_Setups/Setup11_RPi_touch_ILI9486.h,722
#define RPI_DISPLAY_TYPERPI_DISPLAY_TYPE3,64
#define ILI9486_DRIVERILI9486_DRIVER4,89
#define TFT_MISO TFT_MISO6,113
#define TFT_MOSI TFT_MOSI7,133
#define TFT_SCLK TFT_SCLK8,153
#define TFT_CS TFT_CS9,173
#define TFT_DC TFT_DC10,221
#define TFT_RST TFT_RST11,270
#define TOUCH_CS TOUCH_CS14,425
#define LOAD_GLCD LOAD_GLCD17,493
#define LOAD_FONT2 LOAD_FONT218,582
#define LOAD_FONT4 LOAD_FONT419,681
#define LOAD_FONT6 LOAD_FONT620,781
#define LOAD_FONT7 LOAD_FONT721,894
#define LOAD_FONT8 LOAD_FONT822,1007
#define LOAD_GFXFF LOAD_GFXFF23,1116
#define SMOOTH_FONTSMOOTH_FONT25,1229
#define SPI_FREQUENCY SPI_FREQUENCY28,1251
#define SPI_TOUCH_FREQUENCY SPI_TOUCH_FREQUENCY30,1336

lib/TFT_eSPI/User_Setups/Setup9_ST7735_Overlap.h,708
#define ST7735_DRIVERST7735_DRIVER3,52
#define TFT_WIDTH TFT_WIDTH6,76
#define TFT_HEIGHT TFT_HEIGHT7,99
#define ST7735_REDTABST7735_REDTAB10,124
#define TFT_SPI_OVERLAPTFT_SPI_OVERLAP24,888
#define TFT_CS TFT_CS27,983
#define TFT_DC TFT_DC28,1007
#define TFT_RST TFT_RST29,1060
#define LOAD_GLCD LOAD_GLCD35,1249
#define LOAD_FONT2 LOAD_FONT236,1338
#define LOAD_FONT4 LOAD_FONT437,1437
#define LOAD_FONT6 LOAD_FONT638,1537
#define LOAD_FONT7 LOAD_FONT739,1650
#define LOAD_FONT8 LOAD_FONT840,1763
#define LOAD_GFXFF LOAD_GFXFF42,1985
#define SMOOTH_FONTSMOOTH_FONT44,2098
#define SPI_FREQUENCY SPI_FREQUENCY48,2155
#define SPI_TOUCH_FREQUENCY SPI_TOUCH_FREQUENCY50,2188

lib/TFT_eSPI/User_Setups/Setup2_ST7735.h,657
#define ST7735_DRIVERST7735_DRIVER3,52
#define TFT_WIDTH TFT_WIDTH6,76
#define TFT_HEIGHT TFT_HEIGHT7,99
#define ST7735_REDTABST7735_REDTAB10,124
#define TFT_CS TFT_CS19,563
#define TFT_DC TFT_DC20,618
#define TFT_RST TFT_RST21,671
#define LOAD_GLCD LOAD_GLCD25,860
#define LOAD_FONT2 LOAD_FONT226,949
#define LOAD_FONT4 LOAD_FONT427,1048
#define LOAD_FONT6 LOAD_FONT628,1148
#define LOAD_FONT7 LOAD_FONT729,1261
#define LOAD_FONT8 LOAD_FONT830,1374
#define LOAD_GFXFF LOAD_GFXFF32,1596
#define SMOOTH_FONTSMOOTH_FONT34,1709
#define SPI_FREQUENCY SPI_FREQUENCY38,1766
#define SPI_TOUCH_FREQUENCY SPI_TOUCH_FREQUENCY41,1834

lib/TFT_eSPI/User_Setup.h,634
#define ILI9341_DRIVERILI9341_DRIVER39,1550
#define TFT_CS TFT_CS157,7011
#define TFT_DC TFT_DC158,7066
#define TFT_RST TFT_RST159,7119
#define LOAD_GLCD LOAD_GLCD280,12572
#define LOAD_FONT2 LOAD_FONT2281,12661
#define LOAD_FONT4 LOAD_FONT4282,12760
#define LOAD_FONT6 LOAD_FONT6283,12860
#define LOAD_FONT7 LOAD_FONT7284,12973
#define LOAD_FONT8 LOAD_FONT8285,13087
#define LOAD_GFXFF LOAD_GFXFF287,13309
#define SMOOTH_FONTSMOOTH_FONT291,13559
#define SPI_FREQUENCY SPI_FREQUENCY310,14278
#define SPI_READ_FREQUENCY SPI_READ_FREQUENCY316,14509
#define SPI_TOUCH_FREQUENCY SPI_TOUCH_FREQUENCY319,14628

lib/TFT_eSPI/TFT_eSPI.cpp,11529
#define PI_CLIP PI_CLIP30,802
inline void TFT_eSPI::begin_tft_write(void){begin_tft_write54,2182
inline void TFT_eSPI::end_tft_write(void){end_tft_write73,2838
inline void TFT_eSPI::begin_tft_read(void){begin_tft_read93,3554
void TFT_eSPI::setViewport(int32_t x, int32_t y, int32_t w, int32_t h, bool vpDatum)setViewport114,4340
bool TFT_eSPI::checkViewport(int32_t x, int32_t y, int32_t w, int32_t h)checkViewport179,6906
void TFT_eSPI::resetViewport(void)resetViewport207,7706
int32_t  TFT_eSPI::getViewportX(void)getViewportX226,8263
int32_t  TFT_eSPI::getViewportY(void)getViewportY235,8608
int32_t TFT_eSPI::getViewportWidth(void)getViewportWidth244,8946
int32_t TFT_eSPI::getViewportHeight(void)getViewportHeight253,9289
bool  TFT_eSPI::getViewportDatum(void)getViewportDatum262,9662
void TFT_eSPI::frameViewport(uint16_t color, int32_t w)frameViewport271,10028
inline void TFT_eSPI::end_tft_read(void){end_tft_read325,11939
  void TFT_eSPI::spi_begin()       {begin_tft_write();}spi_begin352,12761
  void TFT_eSPI::spi_end()         {  end_tft_write();}spi_end353,12817
  void TFT_eSPI::spi_begin_read()  {begin_tft_read(); }spi_begin_read354,12873
  void TFT_eSPI::spi_end_read()    {  end_tft_read(); }spi_end_read355,12929
TFT_eSPI::TFT_eSPI(int16_t w, int16_t h)TFT_eSPI361,13273
void TFT_eSPI::begin(uint8_t tc)begin502,17088
void TFT_eSPI::init(uint8_t tc)init512,17470
void TFT_eSPI::setRotation(uint8_t m)setRotation680,21651
void TFT_eSPI::commandList (const uint8_t *addr)commandList752,23597
void TFT_eSPI::spiwrite(uint8_t c)spiwrite786,24705
void TFT_eSPI::writecommand(uint8_t c)writecommand798,25084
void TFT_eSPI::writedata(uint8_t d)writedata817,25487
uint8_t TFT_eSPI::readcommand8(uint8_t cmd_function, uint8_t index)readcommand8835,26015
uint16_t TFT_eSPI::readcommand16(uint8_t cmd_function, uint8_t index)readcommand16878,27095
uint32_t TFT_eSPI::readcommand32(uint8_t cmd_function, uint8_t index)readcommand32893,27621
uint16_t TFT_eSPI::readPixel(int32_t x0, int32_t y0)readPixel910,28320
void TFT_eSPI::setCallback(getColorCallback getCol)setCallback1030,31120
void TFT_eSPI::readRect(int32_t x, int32_t y, int32_t w, int32_t h, uint16_t *data)readRect1040,31537
void TFT_eSPI::pushRect(int32_t x, int32_t y, int32_t w, int32_t h, uint16_t *data)pushRect1189,35462
void TFT_eSPI::pushImage(int32_t x, int32_t y, int32_t w, int32_t h, uint16_t *data)pushImage1201,35938
void TFT_eSPI::pushImage(int32_t x, int32_t y, int32_t w, int32_t h, uint16_t *data, uint16_t transp)pushImage1231,36712
void TFT_eSPI::pushImage(int32_t x, int32_t y, int32_t w, int32_t h, const uint16_t *data)pushImage1290,38062
void TFT_eSPI::pushImage(int32_t x, int32_t y, int32_t w, int32_t h, const uint16_t *data, uint16_t transp)pushImage1320,38962
void TFT_eSPI::pushImage(int32_t x, int32_t y, int32_t w, int32_t h, uint8_t *data, bool bpp8,  uint16_t *cmap)pushImage1377,40365
void TFT_eSPI::pushImage(int32_t x, int32_t y, int32_t w, int32_t h, uint8_t *data, uint8_t transp, bool bpp8, uint16_t *cmap)pushImage1510,43880
void TFT_eSPI::setSwapBytes(bool swap)setSwapBytes1712,48906
bool TFT_eSPI::getSwapBytes(void)getSwapBytes1722,49258
void  TFT_eSPI::readRectRGB(int32_t x0, int32_t y0, int32_t w, int32_t h, uint8_t *data)readRectRGB1733,49743
void TFT_eSPI::drawCircle(int32_t x0, int32_t y0, int32_t r, uint32_t color)drawCircle1807,51645
void TFT_eSPI::drawCircleHelper( int32_t x0, int32_t y0, int32_t r, uint8_t cornername, uint32_t color)drawCircleHelper1859,53154
void TFT_eSPI::fillCircle(int32_t x0, int32_t y0, int32_t r, uint32_t color)fillCircle1901,54359
void TFT_eSPI::fillCircleHelper(int32_t x0, int32_t y0, int32_t r, uint8_t cornername, int32_t delta, uint32_t color)fillCircleHelper1941,55471
void TFT_eSPI::drawEllipse(int16_t x0, int16_t y0, int32_t rx, int32_t ry, uint16_t color)drawEllipse1973,56434
void TFT_eSPI::fillEllipse(int16_t x0, int16_t y0, int32_t rx, int32_t ry, uint16_t color)fillEllipse2025,58088
void TFT_eSPI::fillScreen(uint32_t color)fillScreen2070,59410
void TFT_eSPI::drawRect(int32_t x, int32_t y, int32_t w, int32_t h, uint32_t color)drawRect2081,59788
void TFT_eSPI::drawRoundRect(int32_t x, int32_t y, int32_t w, int32_t h, int32_t r, uint32_t color)drawRoundRect2102,60621
void TFT_eSPI::fillRoundRect(int32_t x, int32_t y, int32_t w, int32_t h, int32_t r, uint32_t color)fillRoundRect2128,61849
void TFT_eSPI::drawTriangle(int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t x2, int32_t y2, uint32_t color)drawTriangle2150,62726
void TFT_eSPI::fillTriangle ( int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t x2, int32_t y2, uint32_t color)fillTriangle2169,63567
void TFT_eSPI::drawBitmap(int16_t x, int16_t y, const uint8_t *bitmap, int16_t w, int16_t h, uint16_t color)drawBitmap2249,65922
void TFT_eSPI::drawBitmap(int16_t x, int16_t y, const uint8_t *bitmap, int16_t w, int16_t h, uint16_t fgcolor, uint16_t bgcolor)drawBitmap2273,66795
void TFT_eSPI::drawXBitmap(int16_t x, int16_t y, const uint8_t *bitmap, int16_t w, int16_t h, uint16_t color)drawXBitmap2296,67734
void TFT_eSPI::drawXBitmap(int16_t x, int16_t y, const uint8_t *bitmap, int16_t w, int16_t h, uint16_t color, uint16_t bgcolor)drawXBitmap2320,68619
void TFT_eSPI::setCursor(int16_t x, int16_t y)setCursor2344,69537
void TFT_eSPI::setCursor(int16_t x, int16_t y, uint8_t font)setCursor2355,69908
int16_t TFT_eSPI::getCursorX(void)getCursorX2367,70302
int16_t TFT_eSPI::getCursorY(void)getCursorY2376,70637
void TFT_eSPI::setTextSize(uint8_t s)setTextSize2386,70972
void TFT_eSPI::setTextColor(uint16_t c)setTextColor2397,71478
void TFT_eSPI::setTextColor(uint16_t c, uint16_t b)setTextColor2409,71947
void TFT_eSPI::setPivot(int16_t x, int16_t y)setPivot2420,72317
int16_t TFT_eSPI::getPivotX(void)getPivotX2431,72668
int16_t TFT_eSPI::getPivotY(void)getPivotY2441,72995
void TFT_eSPI::setBitmapColor(uint16_t c, uint16_t b)setBitmapColor2451,73354
void TFT_eSPI::setTextWrap(bool wrapX, bool wrapY)setTextWrap2463,73758
void TFT_eSPI::setTextDatum(uint8_t d)setTextDatum2474,74142
void TFT_eSPI::setTextPadding(uint16_t x_width)setTextPadding2484,74510
uint16_t TFT_eSPI::getTextPadding(void)getTextPadding2493,74887
uint8_t TFT_eSPI::getRotation(void)getRotation2502,75246
uint8_t TFT_eSPI::getTextDatum(void)getTextDatum2511,75609
int16_t TFT_eSPI::width(void)width2522,76026
int16_t TFT_eSPI::height(void)height2533,76410
int16_t TFT_eSPI::textWidth(const String& string)textWidth2544,76797
int16_t TFT_eSPI::textWidth(const String& string, uint8_t font)textWidth2552,76982
int16_t TFT_eSPI::textWidth(const char *string)textWidth2560,77177
int16_t TFT_eSPI::textWidth(const char *string, uint8_t font)textWidth2565,77268
uint16_t TFT_eSPI::fontsLoaded(void)fontsLoaded2639,79747
int16_t TFT_eSPI::fontHeight(int16_t font)fontHeight2649,80111
int16_t TFT_eSPI::fontHeight(void)fontHeight2665,80428
void TFT_eSPI::drawChar(int32_t x, int32_t y, uint16_t c, uint32_t color, uint32_t bg, uint8_t size)drawChar2674,80792
void TFT_eSPI::setAddrWindow(int32_t x0, int32_t y0, int32_t w, int32_t h)setAddrWindow2825,85409
void TFT_eSPI::setWindow(int32_t x0, int32_t y0, int32_t x1, int32_t y1)setWindow2840,85954
void TFT_eSPI::readAddrWindow(int32_t xs, int32_t ys, int32_t w, int32_t h)readAddrWindow2900,87425
void TFT_eSPI::drawPixel(int32_t x, int32_t y, uint32_t color)drawPixel2942,88490
void TFT_eSPI::pushColor(uint16_t color)pushColor3025,90502
void TFT_eSPI::pushColor(uint16_t color, uint32_t len)pushColor3039,90895
void TFT_eSPI::startWrite(void)startWrite3052,91323
void TFT_eSPI::endWrite(void)endWrite3062,91677
void TFT_eSPI::writeColor(uint16_t color, uint32_t len)writeColor3073,92183
void TFT_eSPI::pushColors(uint8_t *data, uint32_t len)pushColors3084,92664
void TFT_eSPI::pushColors(uint16_t *data, uint32_t len, bool swap)pushColors3098,93083
void TFT_eSPI::drawLine(int32_t x0, int32_t y0, int32_t x1, int32_t y1, uint32_t color)drawLine3116,93755
void TFT_eSPI::drawFastVLine(int32_t x, int32_t y, int32_t h, uint32_t color)drawFastVLine3183,95439
void TFT_eSPI::drawFastHLine(int32_t x, int32_t y, int32_t w, uint32_t color)drawFastHLine3213,96123
void TFT_eSPI::fillRect(int32_t x, int32_t y, int32_t w, int32_t h, uint32_t color)fillRect3243,96803
uint16_t TFT_eSPI::color565(uint8_t r, uint8_t g, uint8_t b)color5653284,98173
uint8_t TFT_eSPI::color16to8(uint16_t c)color16to83294,98599
uint16_t TFT_eSPI::color8to16(uint8_t color)color8to163304,99009
uint32_t TFT_eSPI::color16to24(uint16_t color565)color16to243321,99715
uint32_t TFT_eSPI::color24to16(uint32_t color888)color24to163334,100299
void TFT_eSPI::invertDisplay(bool i)invertDisplay3347,100802
void TFT_eSPI::setAttribute(uint8_t attr_id, uint8_t param) {setAttribute3361,101301
uint8_t TFT_eSPI::getAttribute(uint8_t attr_id) {getAttribute3389,102211
#define DECODE_UTF8 DECODE_UTF83409,102956
uint16_t TFT_eSPI::decodeUTF8(uint8_t c)decodeUTF83410,103019
uint16_t TFT_eSPI::decodeUTF8(uint8_t *buf, uint16_t *index, uint16_t remaining)decodeUTF83459,104268
uint16_t TFT_eSPI::alphaBlend(uint8_t alpha, uint16_t fgc, uint16_t bgc)alphaBlend3490,105261
uint16_t TFT_eSPI::alphaBlend(uint8_t alpha, uint16_t fgc, uint16_t bgc, uint8_t dither)alphaBlend3516,106492
uint32_t TFT_eSPI::alphaBlend24(uint8_t alpha, uint32_t fgc, uint32_t bgc, uint8_t dither)alphaBlend243532,107152
size_t TFT_eSPI::write(uint8_t utf8)write3564,108453
int16_t TFT_eSPI::drawChar(uint16_t uniCode, int32_t x, int32_t y)drawChar3693,112520
int16_t TFT_eSPI::drawChar(uint16_t uniCode, int32_t x, int32_t y, uint8_t font)drawChar3699,112699
int16_t TFT_eSPI::drawString(const String& string, int32_t poX, int32_t poY)drawString3977,121988
int16_t TFT_eSPI::drawString(const String& string, int32_t poX, int32_t poY, uint8_t font)drawString3985,122230
int16_t TFT_eSPI::drawString(const char *string, int32_t poX, int32_t poY)drawString3994,122518
int16_t TFT_eSPI::drawString(const char *string, int32_t poX, int32_t poY, uint8_t font)drawString4000,122728
int16_t TFT_eSPI::drawCentreString(const String& string, int32_t dX, int32_t poY, uint8_t font)drawCentreString4230,129374
int16_t TFT_eSPI::drawCentreString(const char *string, int32_t dX, int32_t poY, uint8_t font)drawCentreString4238,129617
int16_t TFT_eSPI::drawRightString(const String& string, int32_t dX, int32_t poY, uint8_t font)drawRightString4253,130195
int16_t TFT_eSPI::drawRightString(const char *string, int32_t dX, int32_t poY, uint8_t font)drawRightString4261,130436
int16_t TFT_eSPI::drawNumber(long long_num, int32_t poX, int32_t poY)drawNumber4276,130961
int16_t TFT_eSPI::drawNumber(long long_num, int32_t poX, int32_t poY, uint8_t font)drawNumber4284,131184
int16_t TFT_eSPI::drawFloat(float floatNumber, uint8_t dp, int32_t poX, int32_t poY)drawFloat4299,131867
int16_t TFT_eSPI::drawFloat(float floatNumber, uint8_t dp, int32_t poX, int32_t poY, uint8_t font)drawFloat4304,132014
void TFT_eSPI::setFreeFont(const GFXfont *f)setFreeFont4374,134588
void TFT_eSPI::setTextFont(uint8_t f)setTextFont4403,135547
void TFT_eSPI::setFreeFont(uint8_t font)setFreeFont4418,136024
void TFT_eSPI::setTextFont(uint8_t f)setTextFont4428,136372
SPIClass& TFT_eSPI::getSPIinstance(void)getSPIinstance4440,136792
void TFT_eSPI::getSetup(setup_t &tft_settings)getSetup4450,137157

lib/TFT_eSPI/Processors/TFT_eSPI_ESP32.h,5215
#define _TFT_eSPI_ESP32H__TFT_eSPI_ESP32H_6,210
#define PROCESSOR_ID PROCESSOR_ID9,276
  #define SUPPORT_TRANSACTIONSSUPPORT_TRANSACTIONS17,508
  #define SPI_PORT SPI_PORT22,605
  #define SPI_PORT SPI_PORT24,635
  #define CMD_BITS CMD_BITS28,691
  #define CMD_BITS CMD_BITS30,723
#define INIT_TFT_DATA_BUS INIT_TFT_DATA_BUS34,819
    #define TFT_PARALLEL_8_BIT TFT_PARALLEL_8_BIT39,1016
    #define ESP32_PARALLELESP32_PARALLEL46,1214
    #define SET_BUS_WRITE_MODE SET_BUS_WRITE_MODE53,1442
    #define SET_BUS_READ_MODE SET_BUS_READ_MODE54,1517
    #define SET_BUS_WRITE_MODE SET_BUS_WRITE_MODE56,1629
    #define SET_BUS_READ_MODE SET_BUS_READ_MODE57,1686
    #define SET_BUS_WRITE_MODESET_BUS_WRITE_MODE61,1825
    #define SET_BUS_READ_MODESET_BUS_READ_MODE62,1856
  #define ESP32_DMAESP32_DMA67,2053
  #define DMA_BUSY_CHECK DMA_BUSY_CHECK69,2159
  #define DMA_BUSY_CHECKDMA_BUSY_CHECK71,2201
  #define FS_NO_GLOBALSFS_NO_GLOBALS77,2396
  #define FONT_FS_AVAILABLEFONT_FS_AVAILABLE80,2474
  #define DC_C DC_C87,2777
  #define DC_D DC_D88,2838
      #define DC_C DC_C93,3063
      #define DC_D DC_D94,3112
      #define DC_CDC_C96,3171
      #define DC_DDC_D97,3190
        #define DC_C DC_C102,3322
        #define DC_D DC_D104,3451
        #define DC_C DC_C107,3592
        #define DC_D DC_D108,3699
          #define DC_C DC_C114,3975
          #define DC_D DC_D116,4084
          #define DC_C DC_C120,4265
          #define DC_D DC_D121,4318
        #define DC_C DC_C125,4454
        #define DC_D DC_D126,4537
      #define DC_CDC_C129,4643
      #define DC_DDC_D130,4662
  #define TFT_CS TFT_CS139,4952
  #define CS_L CS_L140,4996
  #define CS_H CS_H141,5063
        #define CS_L CS_L145,5192
        #define CS_H CS_H146,5255
        #define CS_L CS_L148,5340
        #define CS_H CS_H149,5391
      #define CS_LCS_L151,5452
      #define CS_HCS_H152,5471
        #define CS_L CS_L157,5603
        #define CS_H CS_H159,5732
        #define CS_L CS_L162,5873
        #define CS_H CS_H163,5979
        #define CS_L CS_L167,6194
        #define CS_H CS_H168,6276
        #define CS_L CS_L170,6370
        #define CS_H CS_H171,6452
      #define CS_LCS_L174,6558
      #define CS_HCS_H175,6577
    #define WR_L WR_L186,6970
    #define WR_H WR_H187,7017
    #define WR_LWR_L189,7072
    #define WR_HWR_H190,7089
  #define WR_LWR_L193,7121
  #define WR_HWR_H194,7136
  #define T_CS_L T_CS_L201,7408
  #define T_CS_H T_CS_H202,7471
  #define T_CS_L T_CS_L204,7592
  #define T_CS_H T_CS_H205,7637
      #define TFT_MISO TFT_MISO216,8030
      #undef TFT_MISOTFT_MISO219,8092
      #define TFT_MISO TFT_MISO220,8114
      #define TFT_MOSI TFT_MOSI224,8173
      #undef TFT_MOSITFT_MOSI227,8235
      #define TFT_MOSI TFT_MOSI228,8257
      #define TFT_SCLK TFT_SCLK232,8316
      #undef TFT_SCLKTFT_SCLK235,8378
      #define TFT_SCLK TFT_SCLK236,8400
      #define TFT_MISO TFT_MISO242,8481
      #undef TFT_MISOTFT_MISO245,8543
      #define TFT_MISO TFT_MISO246,8565
      #define TFT_MOSI TFT_MOSI250,8624
      #undef TFT_MOSITFT_MOSI253,8686
      #define TFT_MOSI TFT_MOSI254,8708
      #define TFT_SCLK TFT_SCLK258,8767
      #undef TFT_SCLKTFT_SCLK261,8829
      #define TFT_SCLK TFT_SCLK262,8851
  #define CONSTRUCTOR_INIT_TFT_DATA_BUS CONSTRUCTOR_INIT_TFT_DATA_BUS276,9360
  #define dir_mask dir_mask291,10102
  #define clr_mask clr_mask294,10313
  #define set_mask(set_mask297,10447
  #define tft_Write_8(tft_Write_8305,10966
    #define tft_Write_16(tft_Write_16310,11129
    #define tft_Write_16S(tft_Write_16S315,11532
    #define tft_Write_16(tft_Write_16320,11658
    #define tft_Write_16S(tft_Write_16S324,11915
  #define tft_Write_32(tft_Write_32329,12170
  #define tft_Write_32C(tft_Write_32C335,12653
  #define tft_Write_32D(tft_Write_32D341,13154
      #define RD_L RD_L349,13642
      #define RD_H RD_H350,13706
      #define RD_L RD_L352,13794
      #define RD_H RD_H354,13890
      #define RD_LRD_L357,13997
      #define RD_HRD_H358,14016
  #define tft_Write_8(tft_Write_8368,14382
  #define tft_Write_16(tft_Write_16371,14484
  #define tft_Write_16S(tft_Write_16S376,14739
  #define tft_Write_32(tft_Write_32381,14961
  #define tft_Write_32C(tft_Write_32C384,15053
  #define tft_Write_32D(tft_Write_32D387,15147
  #define TFT_WRITE_BITS(TFT_WRITE_BITS396,15586
  #define tft_Write_8(tft_Write_8403,15848
  #define tft_Write_16(tft_Write_16406,15964
  #define tft_Write_16S(tft_Write_16S409,16046
  #define tft_Write_32(tft_Write_32412,16115
  #define tft_Write_32C(tft_Write_32C415,16199
  #define tft_Write_32D(tft_Write_32D419,16359
  #define TFT_WRITE_BITS(TFT_WRITE_BITS428,16729
  #define tft_Write_8(tft_Write_8435,16991
  #define tft_Write_16(tft_Write_16438,17101
  #define tft_Write_16S(tft_Write_16S441,17183
  #define tft_Write_32(tft_Write_32444,17252
  #define tft_Write_32C(tft_Write_32C447,17336
  #define tft_Write_32D(tft_Write_32D450,17477
  #define tft_Read_8(tft_Read_8460,17942
#define DAT8TO32(DAT8TO32464,18060

lib/TFT_eSPI/Processors/TFT_eSPI_Generic.c,1010
SPIClass& spi = SPI;spi10,413
uint8_t TFT_eSPI::tft_Read_8(void)tft_Read_820,965
void TFT_eSPI::begin_SDA_Read(void)begin_SDA_Read38,1464
void TFT_eSPI::end_SDA_Read(void)end_SDA_Read48,1840
void TFT_eSPI::pushBlock(uint16_t color, uint32_t len){pushBlock67,2746
void TFT_eSPI::pushPixels(const void* data_in, uint32_t len){pushPixels77,3205
void TFT_eSPI::busDir(uint32_t mask, uint8_t mode)busDir94,3912
void TFT_eSPI::gpioMode(uint8_t gpio, uint8_t mode)gpioMode113,4603
uint8_t TFT_eSPI::readByte(void)readByte122,5015
void TFT_eSPI::pushBlock(uint16_t color, uint32_t len){pushBlock152,6035
void TFT_eSPI::pushPixels(const void* data_in, uint32_t len)pushPixels162,6467
void TFT_eSPI::pushBlock(uint16_t color, uint32_t len)pushBlock178,7273
void TFT_eSPI::pushPixels(const void* data_in, uint32_t len){pushPixels192,7841
void TFT_eSPI::pushBlock(uint16_t color, uint32_t len){pushBlock222,8922
void TFT_eSPI::pushPixels(const void* data_in, uint32_t len){pushPixels231,9307

lib/TFT_eSPI/Processors/TFT_eSPI_Generic.h,2055
#define _TFT_eSPI_GENERICH__TFT_eSPI_GENERICH_9,371
#define PROCESSOR_ID PROCESSOR_ID12,439
#define SET_BUS_WRITE_MODE SET_BUS_WRITE_MODE18,603
#define SET_BUS_READ_MODE SET_BUS_READ_MODE19,642
#define DMA_BUSY_CHECK DMA_BUSY_CHECK22,777
  #define SUPPORT_TRANSACTIONSSUPPORT_TRANSACTIONS26,921
#define INIT_TFT_DATA_BUSINIT_TFT_DATA_BUS30,1023
  #define DC_C DC_C43,1519
  #define DC_D DC_D44,1580
  #define DC_C DC_C46,1647
  #define DC_D DC_D47,1688
  #define CS_L CS_L54,1981
  #define CS_H CS_H55,2042
  #define CS_L CS_L57,2109
  #define CS_H CS_H58,2150
  #define TFT_RD TFT_RD65,2462
  #define WR_L WR_L72,2726
  #define WR_H WR_H73,2767
  #define T_CS_L T_CS_L80,3089
  #define T_CS_H T_CS_H81,3152
  #define T_CS_L T_CS_L83,3221
  #define T_CS_H T_CS_H84,3266
  #define TFT_MISO TFT_MISO91,3586
  #define tft_Write_8(tft_Write_8100,3940
  #define tft_Write_16(tft_Write_16103,4042
  #define tft_Write_16S(tft_Write_16S108,4297
  #define tft_Write_32(tft_Write_32112,4518
  #define tft_Write_32C(tft_Write_32C115,4636
  #define tft_Write_32D(tft_Write_32D118,4731
    #define tft_Write_8(tft_Write_8125,5124
    #define tft_Write_16(tft_Write_16126,5186
    #define tft_Write_16S(tft_Write_16S127,5279
    #define tft_Write_32(tft_Write_32129,5373
    #define tft_Write_32C(tft_Write_32C133,5488
    #define tft_Write_32D(tft_Write_32D139,5707
      #define tft_Write_8(tft_Write_8147,5997
      #define tft_Write_16(tft_Write_16148,6067
      #define tft_Write_16S(tft_Write_16S149,6160
      #define tft_Write_8(tft_Write_8151,6263
      #define tft_Write_16(tft_Write_16152,6310
      #define tft_Write_16S(tft_Write_16S153,6359
    #define tft_Write_32(tft_Write_32156,6449
    #define tft_Write_32C(tft_Write_32C160,6560
    #define tft_Write_32D(tft_Write_32D164,6663
  #define TFT_eSPI_ENABLE_8_BIT_READ TFT_eSPI_ENABLE_8_BIT_READ175,7135
  #define SCLK_L SCLK_L176,7200
  #define SCLK_H SCLK_H177,7245
  #define tft_Read_8(tft_Read_8180,7325

lib/TFT_eSPI/Processors/TFT_eSPI_ESP8266.h,2540
#define _TFT_eSPI_ESP8266H__TFT_eSPI_ESP8266H_6,218
#define PROCESSOR_ID PROCESSOR_ID9,286
#define SET_BUS_WRITE_MODE SET_BUS_WRITE_MODE15,450
#define SET_BUS_READ_MODE SET_BUS_READ_MODE16,495
#define DMA_BUSY_CHECK DMA_BUSY_CHECK19,636
  #define INIT_TFT_DATA_BUS INIT_TFT_DATA_BUS23,816
    #define INIT_TFT_DATA_BUSINIT_TFT_DATA_BUS28,961
  #define FS_NO_GLOBALSFS_NO_GLOBALS34,1160
  #define FONT_FS_AVAILABLEFONT_FS_AVAILABLE36,1202
  #undef ESP32_PARALLELESP32_PARALLEL41,1302
  #undef TFT_PARALLEL_8_BITTFT_PARALLEL_8_BIT44,1359
  #define DC_C DC_C51,1662
  #define DC_D DC_D52,1723
    #define DC_C DC_C55,1811
    #define DC_D DC_D56,1854
    #define DC_C DC_C58,1906
    #define DC_D DC_D59,1938
  #define CS_L CS_L67,2230
  #define CS_H CS_H68,2291
    #define CS_L CS_L71,2379
    #define CS_H CS_H72,2422
    #define CS_L CS_L74,2474
    #define CS_H CS_H75,2506
  #define WR_L WR_L83,2791
  #define WR_H WR_H84,2821
  #define T_CS_L T_CS_L91,3108
  #define T_CS_H T_CS_H92,3171
  #define T_CS_L T_CS_L94,3240
  #define T_CS_H T_CS_H95,3285
  #define TFT_MISO TFT_MISO102,3605
  #undef TFT_CSTFT_CS109,3874
  #define SPI1U_WRITE SPI1U_WRITE110,3890
  #define SPI1U_READ SPI1U_READ111,3960
  #define SPI1U_WRITE SPI1U_WRITE113,4049
  #define SPI1U_READ SPI1U_READ114,4092
  #define tft_Write_8(tft_Write_8123,4480
  #define tft_Write_16(tft_Write_16126,4582
  #define tft_Write_16S(tft_Write_16S131,4837
  #define tft_Write_32(tft_Write_32136,5059
  #define tft_Write_32C(tft_Write_32C139,5137
  #define tft_Write_32D(tft_Write_32D142,5224
  #define CMD_BITS CMD_BITS149,5584
  #define TFT_WRITE_BITS(TFT_WRITE_BITS153,5710
  #define tft_Write_8(tft_Write_8159,5848
  #define tft_Write_16(tft_Write_16161,5921
  #define tft_Write_16S(tft_Write_16S163,5987
  #define tft_Write_32(tft_Write_32165,6039
  #define tft_Write_32C(tft_Write_32C167,6091
  #define tft_Write_32D(tft_Write_32D173,6377
  #define CMD_BITS CMD_BITS180,6668
  #define tft_Write_8(tft_Write_8182,6690
  #define tft_Write_16(tft_Write_16188,6877
  #define tft_Write_16S(tft_Write_16S194,7043
  #define tft_Write_32(tft_Write_32200,7194
  #define tft_Write_32C(tft_Write_32C206,7344
  #define tft_Write_32D(tft_Write_32D212,7537
  #define TFT_eSPI_ENABLE_8_BIT_READ TFT_eSPI_ENABLE_8_BIT_READ225,8073
  #define SCLK_L SCLK_L226,8138
  #define SCLK_H SCLK_H227,8172
  #define tft_Read_8(tft_Read_8230,8241
#define DAT8TO32(DAT8TO32234,8359

lib/TFT_eSPI/Processors/TFT_eSPI_ESP8266.c,1073
  SPIClass& spi = SPI;spi8,285
uint8_t   spiBuffer[8] = {0,0,0,0,0,0,0,0};spiBuffer11,377
uint8_t TFT_eSPI::tft_Read_8(void)tft_Read_821,958
void TFT_eSPI::begin_SDA_Read(void)begin_SDA_Read40,1477
void TFT_eSPI::end_SDA_Read(void)end_SDA_Read53,1894
uint8_t TFT_eSPI::readByte(void)readByte70,2552
void TFT_eSPI::pushBlock(uint16_t color, uint32_t len)pushBlock84,3150
void TFT_eSPI::pushPixels(const void* data_in, uint32_t len){pushPixels95,3665
void TFT_eSPI::pushSwapBytePixels(const void* data_in, uint32_t len){pushSwapBytePixels106,4219
void TFT_eSPI::pushBlock(uint16_t color, uint32_t len)pushBlock119,4937
void TFT_eSPI::pushPixels(const void* data_in, uint32_t len){pushPixels183,6291
void TFT_eSPI::pushSwapBytePixels(const void* data_in, uint32_t len){pushSwapBytePixels237,7956
void TFT_eSPI::pushBlock(uint16_t color, uint32_t len)pushBlock258,8997
void TFT_eSPI::pushPixels(const void* data_in, uint32_t len){pushPixels331,10600
void TFT_eSPI::pushSwapBytePixels(const void* data_in, uint32_t len){pushSwapBytePixels392,11980

lib/TFT_eSPI/Processors/TFT_eSPI_STM32.h,17667
#define _TFT_eSPI_STM32H__TFT_eSPI_STM32H_6,210
#define PROCESSOR_ID PROCESSOR_ID9,276
#define SET_BUS_WRITE_MODE SET_BUS_WRITE_MODE17,491
#define SET_BUS_READ_MODE SET_BUS_READ_MODE18,530
  #define SUPPORT_TRANSACTIONSSUPPORT_TRANSACTIONS22,653
      #define WR_TWRL_0 WR_TWRL_052,2097
      #define WR_TWRL_0 WR_TWRL_054,2229
      #define WR_TWRL_1 WR_TWRL_157,2423
      #define WR_TWRL_5WR_TWRL_559,2487
      #define WR_TWRH_0WR_TWRH_064,2634
      #define WR_TWRH_0 WR_TWRH_066,2711
      #define WR_TWRH_1 WR_TWRH_169,2822
      #define WR_TWRH_5WR_TWRH_571,2886
      #define WR_TWRL_0WR_TWRL_078,3074
      #define WR_TWRL_2 WR_TWRL_282,3299
      #define WR_TWRL_3WR_TWRL_390,3655
      #define WR_TWRH_3 WR_TWRH_395,3781
      #define WR_TWRH_0WR_TWRH_0100,3944
      #define WR_TWRH_2WR_TWRH_2104,4073
      #define WR_TWRH_3WR_TWRH_3110,4231
      #define WR_TWRH_3 WR_TWRH_3117,4410
      #define WR_TWRL_0WR_TWRL_0123,4601
      #define WR_TWRH_0WR_TWRH_0124,4625
      #define WR_TWRL_3WR_TWRL_3130,4796
      #define WR_TWRH_5WR_TWRH_5140,5088
    #define TFT_SPI_PORT TFT_SPI_PORT151,5418
    #define STM32_DMA STM32_DMA157,5627
      #define INIT_TFT_DATA_BUS INIT_TFT_DATA_BUS161,5798
      #define INIT_TFT_DATA_BUS INIT_TFT_DATA_BUS168,6189
    #define STM32_DMA STM32_DMA177,6575
      #define INIT_TFT_DATA_BUS INIT_TFT_DATA_BUS179,6667
      #define INIT_TFT_DATA_BUS INIT_TFT_DATA_BUS182,6819
      #define INIT_TFT_DATA_BUS INIT_TFT_DATA_BUS188,7053
      #define INIT_TFT_DATA_BUS INIT_TFT_DATA_BUS190,7138
  #define DMA_BUSY_CHECK DMA_BUSY_CHECK198,7325
  #define DMA_BUSY_CHECKDMA_BUSY_CHECK200,7395
  #define DC_C DC_C214,8001
  #define DC_D DC_D215,8062
  #undef  TFT_DCTFT_DC216,8123
  #define DC_PORT DC_PORT219,8226
  #define DC_PIN_MASK DC_PIN_MASK220,8273
  #define DC_C DC_C222,8355
  #define DC_D DC_D223,8402
  #define CS_L CS_L230,8719
  #define CS_H CS_H231,8780
  #undef  TFT_CSTFT_CS232,8841
  #define CS_PORT CS_PORT235,8944
  #define CS_PIN_MASK CS_PIN_MASK236,8992
  #define CS_L CS_L238,9075
  #define CS_H CS_H239,9122
    #define RD_PORT RD_PORT248,9510
    #define RD_PIN_MASK RD_PIN_MASK249,9560
    #define RD_L RD_L251,9647
    #define RD_H RD_H252,9696
    #define RD_LRD_L254,9749
    #define RD_HRD_H255,9766
  #define TFT_RD TFT_RD258,9798
  #define RD_LRD_L259,9818
  #define RD_HRD_H260,9833
  #define WR_PORT WR_PORT268,10172
  #define WR_PIN_MASK WR_PIN_MASK269,10220
  #define WR_L WR_L271,10303
  #define WR_H WR_H272,10350
  #define T_CS_L T_CS_L279,10675
  #define T_CS_H T_CS_H280,10738
  #define T_CS_L T_CS_L283,10851
  #define T_CS_H T_CS_H284,10896
    #define TFT_MISO TFT_MISO292,11252
  #define dir_mask dir_mask302,11625
  #define CONSTRUCTOR_INIT_TFT_DATA_BUS CONSTRUCTOR_INIT_TFT_DATA_BUS304,11647
  #define INIT_TFT_DATA_BUS INIT_TFT_DATA_BUS306,11696
    #define     WR_TWRLWR_TWRL313,12034
    #define     WR_TWRL WR_TWRL315,12106
    #define     WR_TWRL WR_TWRL317,12184
    #define     WR_TWRL WR_TWRL319,12268
    #define     WR_TWRL WR_TWRL321,12358
    #define     WR_TWRL WR_TWRL323,12454
    #define     WR_TWRH WR_TWRH328,12575
    #define     WR_TWRH WR_TWRH330,12653
    #define     WR_TWRH WR_TWRH332,12739
    #define     WR_TWRH WR_TWRH334,12831
    #define     WR_TWRH WR_TWRH336,12929
    #define     WR_TWRH WR_TWRH338,13033
  #define WR_STB WR_STB341,13103
    #define D0_PIN_NAME D0_PIN_NAME349,13480
    #define D1_PIN_NAME D1_PIN_NAME350,13533
    #define D2_PIN_NAME D2_PIN_NAME351,13586
    #define D3_PIN_NAME D3_PIN_NAME352,13639
    #define D4_PIN_NAME D4_PIN_NAME353,13692
    #define D5_PIN_NAME D5_PIN_NAME354,13745
    #define D6_PIN_NAME D6_PIN_NAME355,13798
    #define D7_PIN_NAME D7_PIN_NAME356,13851
    #define D0_PIN_BIT D0_PIN_BIT359,13959
    #define D1_PIN_BIT D1_PIN_BIT360,14003
    #define D2_PIN_BIT D2_PIN_BIT361,14047
    #define D3_PIN_BIT D3_PIN_BIT362,14091
    #define D4_PIN_BIT D4_PIN_BIT363,14135
    #define D5_PIN_BIT D5_PIN_BIT364,14179
    #define D6_PIN_BIT D6_PIN_BIT365,14223
    #define D7_PIN_BIT D7_PIN_BIT366,14267
    #define D0_PIN_PORT D0_PIN_PORT369,14384
    #define D1_PIN_PORT D1_PIN_PORT370,14414
    #define D2_PIN_PORT D2_PIN_PORT371,14444
    #define D3_PIN_PORT D3_PIN_PORT372,14474
    #define D4_PIN_PORT D4_PIN_PORT373,14504
    #define D5_PIN_PORT D5_PIN_PORT374,14534
    #define D6_PIN_PORT D6_PIN_PORT375,14564
    #define D7_PIN_PORT D7_PIN_PORT376,14594
    #define D0_PIN_MASK D0_PIN_MASK379,14656
    #define D1_PIN_MASK D1_PIN_MASK380,14716
    #define D2_PIN_MASK D2_PIN_MASK381,14776
    #define D3_PIN_MASK D3_PIN_MASK382,14837
    #define D4_PIN_MASK D4_PIN_MASK383,14897
    #define D5_PIN_MASK D5_PIN_MASK384,14957
    #define D6_PIN_MASK D6_PIN_MASK385,15017
    #define D7_PIN_MASK D7_PIN_MASK386,15078
    #define  D0_BSR_MASK(D0_BSR_MASK389,15200
    #define  D1_BSR_MASK(D1_BSR_MASK390,15266
    #define  D2_BSR_MASK(D2_BSR_MASK391,15332
    #define  D3_BSR_MASK(D3_BSR_MASK392,15398
    #define  D4_BSR_MASK(D4_BSR_MASK393,15464
    #define  D5_BSR_MASK(D5_BSR_MASK394,15530
    #define  D6_BSR_MASK(D6_BSR_MASK395,15596
    #define  D7_BSR_MASK(D7_BSR_MASK396,15662
    #define  D8_BSR_MASK(D8_BSR_MASK398,15792
    #define  D9_BSR_MASK(D9_BSR_MASK399,15858
    #define D10_BSR_MASK(D10_BSR_MASK400,15924
    #define D11_BSR_MASK(D11_BSR_MASK401,15990
    #define D12_BSR_MASK(D12_BSR_MASK402,16056
    #define D13_BSR_MASK(D13_BSR_MASK403,16122
    #define D14_BSR_MASK(D14_BSR_MASK404,16188
    #define D15_BSR_MASK(D15_BSR_MASK405,16254
    #define tft_Write_8(tft_Write_8408,16348
    #define tft_Write_16(tft_Write_16417,16794
    #define tft_Write_16S(tft_Write_16S435,18030
    #define tft_Write_16(tft_Write_16440,18157
    #define tft_Write_16S(tft_Write_16S452,18916
    #define tft_Write_32(tft_Write_32464,19617
    #define tft_Write_32C(tft_Write_32C466,19712
    #define tft_Write_32D(tft_Write_32D468,19801
    #define RD_TFT_D0 RD_TFT_D0471,19913
    #define RD_TFT_D1 RD_TFT_D1472,19990
    #define RD_TFT_D2 RD_TFT_D2473,20067
    #define RD_TFT_D3 RD_TFT_D3474,20145
    #define RD_TFT_D4 RD_TFT_D4475,20222
    #define RD_TFT_D5 RD_TFT_D5476,20299
    #define RD_TFT_D6 RD_TFT_D6477,20376
    #define RD_TFT_D7 RD_TFT_D7478,20454
    #define D0_PIN_NAME D0_PIN_NAME487,20904
    #define D1_PIN_NAME D1_PIN_NAME488,20957
    #define D2_PIN_NAME D2_PIN_NAME489,21010
    #define D3_PIN_NAME D3_PIN_NAME490,21063
    #define D4_PIN_NAME D4_PIN_NAME491,21116
    #define D5_PIN_NAME D5_PIN_NAME492,21169
    #define D6_PIN_NAME D6_PIN_NAME493,21222
    #define D7_PIN_NAME D7_PIN_NAME494,21275
    #define D0_PIN_BIT D0_PIN_BIT497,21401
    #define D1_PIN_BIT D1_PIN_BIT498,21445
    #define D2_PIN_BIT D2_PIN_BIT499,21489
    #define D3_PIN_BIT D3_PIN_BIT500,21533
    #define D4_PIN_BIT D4_PIN_BIT501,21577
    #define D5_PIN_BIT D5_PIN_BIT502,21621
    #define D6_PIN_BIT D6_PIN_BIT503,21665
    #define D7_PIN_BIT D7_PIN_BIT504,21709
      #define D0_PIN_PORT D0_PIN_PORT510,21859
      #define D1_PIN_PORT D1_PIN_PORT511,21891
      #define D2_PIN_PORT D2_PIN_PORT512,21923
      #define D3_PIN_PORT D3_PIN_PORT513,21955
      #define D4_PIN_PORT D4_PIN_PORT514,21987
      #define D5_PIN_PORT D5_PIN_PORT515,22019
      #define D6_PIN_PORT D6_PIN_PORT516,22051
      #define D7_PIN_PORT D7_PIN_PORT517,22083
      #define D0_PIN_MASK D0_PIN_MASK520,22149
      #define D1_PIN_MASK D1_PIN_MASK521,22216
      #define D2_PIN_MASK D2_PIN_MASK522,22279
      #define D3_PIN_MASK D3_PIN_MASK523,22347
      #define D4_PIN_MASK D4_PIN_MASK524,22410
      #define D5_PIN_MASK D5_PIN_MASK525,22473
      #define D6_PIN_MASK D6_PIN_MASK526,22536
      #define D7_PIN_MASK D7_PIN_MASK527,22598
      #define  D0_BSR_MASK(D0_BSR_MASK530,22730
      #define  D1_BSR_MASK(D1_BSR_MASK531,22798
      #define  D2_BSR_MASK(D2_BSR_MASK532,22866
      #define  D3_BSR_MASK(D3_BSR_MASK533,22934
      #define  D4_BSR_MASK(D4_BSR_MASK534,23002
      #define  D5_BSR_MASK(D5_BSR_MASK535,23070
      #define  D6_BSR_MASK(D6_BSR_MASK536,23138
      #define  D7_BSR_MASK(D7_BSR_MASK537,23206
      #define  D8_BSR_MASK(D8_BSR_MASK539,23340
      #define  D9_BSR_MASK(D9_BSR_MASK540,23408
      #define D10_BSR_MASK(D10_BSR_MASK541,23476
      #define D11_BSR_MASK(D11_BSR_MASK542,23544
      #define D12_BSR_MASK(D12_BSR_MASK543,23612
      #define D13_BSR_MASK(D13_BSR_MASK544,23680
      #define D14_BSR_MASK(D14_BSR_MASK545,23748
      #define D15_BSR_MASK(D15_BSR_MASK546,23816
      #define tft_Write_8(tft_Write_8550,23915
    #define tft_Write_16(tft_Write_16559,24343
    #define tft_Write_16S(tft_Write_16S577,25579
      #define tft_Write_16(tft_Write_16582,25707
      #define tft_Write_16S(tft_Write_16S594,26459
      #define tft_Write_32(tft_Write_32607,27181
      #define tft_Write_32C(tft_Write_32C609,27278
      #define tft_Write_32D(tft_Write_32D611,27369
      #define RD_TFT_D0 RD_TFT_D0614,27485
      #define RD_TFT_D1 RD_TFT_D1615,27565
      #define RD_TFT_D2 RD_TFT_D2616,27645
      #define RD_TFT_D3 RD_TFT_D3617,27725
      #define RD_TFT_D4 RD_TFT_D4618,27805
      #define RD_TFT_D5 RD_TFT_D5619,27885
      #define RD_TFT_D6 RD_TFT_D6620,27965
      #define RD_TFT_D7 RD_TFT_D7621,28044
      #define D0_PIN_PORT D0_PIN_PORT628,28304
      #define D1_PIN_PORT D1_PIN_PORT629,28336
      #define D2_PIN_PORT D2_PIN_PORT630,28368
      #define D3_PIN_PORT D3_PIN_PORT631,28400
      #define D4_PIN_PORT D4_PIN_PORT632,28432
      #define D5_PIN_PORT D5_PIN_PORT633,28464
      #define D6_PIN_PORT D6_PIN_PORT634,28496
      #define D7_PIN_PORT D7_PIN_PORT635,28528
      #define D0_PIN_MASK D0_PIN_MASK638,28594
      #define D1_PIN_MASK D1_PIN_MASK639,28656
      #define D2_PIN_MASK D2_PIN_MASK640,28719
      #define D3_PIN_MASK D3_PIN_MASK641,28782
      #define D4_PIN_MASK D4_PIN_MASK642,28845
      #define D5_PIN_MASK D5_PIN_MASK643,28908
      #define D6_PIN_MASK D6_PIN_MASK644,28971
      #define D7_PIN_MASK D7_PIN_MASK645,29033
      #define  D0_BSR_MASK(D0_BSR_MASK648,29160
      #define  D1_BSR_MASK(D1_BSR_MASK649,29228
      #define  D2_BSR_MASK(D2_BSR_MASK650,29296
      #define  D3_BSR_MASK(D3_BSR_MASK651,29364
      #define  D4_BSR_MASK(D4_BSR_MASK652,29432
      #define  D5_BSR_MASK(D5_BSR_MASK653,29500
      #define  D6_BSR_MASK(D6_BSR_MASK654,29568
      #define  D7_BSR_MASK(D7_BSR_MASK655,29636
      #define  D8_BSR_MASK(D8_BSR_MASK657,29770
      #define  D9_BSR_MASK(D9_BSR_MASK658,29838
      #define D10_BSR_MASK(D10_BSR_MASK659,29906
      #define D11_BSR_MASK(D11_BSR_MASK660,29974
      #define D12_BSR_MASK(D12_BSR_MASK661,30042
      #define D13_BSR_MASK(D13_BSR_MASK662,30110
      #define D14_BSR_MASK(D14_BSR_MASK663,30178
      #define D15_BSR_MASK(D15_BSR_MASK664,30246
      #define tft_Write_8(tft_Write_8668,30345
      #define tft_Write_16(tft_Write_16676,30773
      #define tft_Write_16S(tft_Write_16S690,31617
      #define tft_Write_32(tft_Write_32703,32421
      #define tft_Write_32C(tft_Write_32C705,32518
      #define tft_Write_32D(tft_Write_32D707,32609
      #define RD_TFT_D0 RD_TFT_D0710,32725
      #define RD_TFT_D1 RD_TFT_D1711,32804
      #define RD_TFT_D2 RD_TFT_D2712,32884
      #define RD_TFT_D3 RD_TFT_D3713,32964
      #define RD_TFT_D4 RD_TFT_D4714,33044
      #define RD_TFT_D5 RD_TFT_D5715,33124
      #define RD_TFT_D6 RD_TFT_D6716,33204
      #define RD_TFT_D7 RD_TFT_D7717,33283
      #define tft_Write_8(tft_Write_8727,33685
    #define tft_Write_16(tft_Write_16732,33849
    #define tft_Write_16S(tft_Write_16S738,34289
      #define tft_Write_16(tft_Write_16743,34417
      #define tft_Write_16S(tft_Write_16S747,34642
      #define tft_Write_32(tft_Write_32751,34835
      #define tft_Write_32C(tft_Write_32C753,34932
      #define tft_Write_32D(tft_Write_32D755,35023
      #define RD_TFT_D0 RD_TFT_D0758,35139
      #define RD_TFT_D1 RD_TFT_D1759,35204
      #define RD_TFT_D2 RD_TFT_D2760,35269
      #define RD_TFT_D3 RD_TFT_D3761,35334
      #define RD_TFT_D4 RD_TFT_D4762,35399
      #define RD_TFT_D5 RD_TFT_D5763,35464
      #define RD_TFT_D6 RD_TFT_D6764,35529
      #define RD_TFT_D7 RD_TFT_D7765,35594
      #define tft_Write_8(tft_Write_8770,35735
    #define tft_Write_16(tft_Write_16775,35899
    #define tft_Write_16S(tft_Write_16S781,36339
      #define tft_Write_16(tft_Write_16786,36467
      #define tft_Write_16S(tft_Write_16S790,36692
      #define tft_Write_32(tft_Write_32794,36885
      #define tft_Write_32C(tft_Write_32C796,36982
      #define tft_Write_32D(tft_Write_32D798,37073
      #define RD_TFT_D0 RD_TFT_D0801,37189
      #define RD_TFT_D1 RD_TFT_D1802,37254
      #define RD_TFT_D2 RD_TFT_D2803,37319
      #define RD_TFT_D3 RD_TFT_D3804,37384
      #define RD_TFT_D4 RD_TFT_D4805,37449
      #define RD_TFT_D5 RD_TFT_D5806,37514
      #define RD_TFT_D6 RD_TFT_D6807,37579
      #define RD_TFT_D7 RD_TFT_D7808,37644
      #define D0_PIN_NAME D0_PIN_NAME814,37891
      #define D1_PIN_NAME D1_PIN_NAME815,37946
      #define D2_PIN_NAME D2_PIN_NAME816,38001
      #define D3_PIN_NAME D3_PIN_NAME817,38056
      #define D4_PIN_NAME D4_PIN_NAME818,38111
      #define D5_PIN_NAME D5_PIN_NAME819,38166
      #define D6_PIN_NAME D6_PIN_NAME820,38221
      #define D7_PIN_NAME D7_PIN_NAME821,38276
      #define D0_PIN_BIT D0_PIN_BIT824,38366
      #define D1_PIN_BIT D1_PIN_BIT825,38412
      #define D2_PIN_BIT D2_PIN_BIT826,38458
      #define D3_PIN_BIT D3_PIN_BIT827,38504
      #define D4_PIN_BIT D4_PIN_BIT828,38550
      #define D5_PIN_BIT D5_PIN_BIT829,38596
      #define D6_PIN_BIT D6_PIN_BIT830,38642
      #define D7_PIN_BIT D7_PIN_BIT831,38688
      #define D0_PIN_PORT D0_PIN_PORT834,38753
      #define D1_PIN_PORT D1_PIN_PORT835,38805
      #define D2_PIN_PORT D2_PIN_PORT836,38857
      #define D3_PIN_PORT D3_PIN_PORT837,38909
      #define D4_PIN_PORT D4_PIN_PORT838,38961
      #define D5_PIN_PORT D5_PIN_PORT839,39013
      #define D6_PIN_PORT D6_PIN_PORT840,39065
      #define D7_PIN_PORT D7_PIN_PORT841,39117
      #define D0_PIN_MASK D0_PIN_MASK844,39203
      #define D1_PIN_MASK D1_PIN_MASK845,39258
      #define D2_PIN_MASK D2_PIN_MASK846,39313
      #define D3_PIN_MASK D3_PIN_MASK847,39368
      #define D4_PIN_MASK D4_PIN_MASK848,39423
      #define D5_PIN_MASK D5_PIN_MASK849,39478
      #define D6_PIN_MASK D6_PIN_MASK850,39533
      #define D7_PIN_MASK D7_PIN_MASK851,39588
      #define  D0_BSR_MASK(D0_BSR_MASK854,39707
      #define  D1_BSR_MASK(D1_BSR_MASK855,39775
      #define  D2_BSR_MASK(D2_BSR_MASK856,39843
      #define  D3_BSR_MASK(D3_BSR_MASK857,39911
      #define  D4_BSR_MASK(D4_BSR_MASK858,39979
      #define  D5_BSR_MASK(D5_BSR_MASK859,40047
      #define  D6_BSR_MASK(D6_BSR_MASK860,40115
      #define  D7_BSR_MASK(D7_BSR_MASK861,40183
      #define  D8_BSR_MASK(D8_BSR_MASK863,40317
      #define  D9_BSR_MASK(D9_BSR_MASK864,40385
      #define D10_BSR_MASK(D10_BSR_MASK865,40453
      #define D11_BSR_MASK(D11_BSR_MASK866,40521
      #define D12_BSR_MASK(D12_BSR_MASK867,40589
      #define D13_BSR_MASK(D13_BSR_MASK868,40657
      #define D14_BSR_MASK(D14_BSR_MASK869,40725
      #define D15_BSR_MASK(D15_BSR_MASK870,40793
      #define tft_Write_8(tft_Write_8874,40892
    #define tft_Write_16(tft_Write_16888,41598
    #define tft_Write_16S(tft_Write_16S921,43624
      #define tft_Write_16(tft_Write_16926,43752
      #define tft_Write_16S(tft_Write_16S948,45062
      #define tft_Write_32(tft_Write_32970,46341
      #define tft_Write_32C(tft_Write_32C972,46438
      #define tft_Write_32D(tft_Write_32D974,46529
      #define RD_TFT_D0 RD_TFT_D0977,46645
      #define RD_TFT_D1 RD_TFT_D1978,46734
      #define RD_TFT_D2 RD_TFT_D2979,46823
      #define RD_TFT_D3 RD_TFT_D3980,46912
      #define RD_TFT_D4 RD_TFT_D4981,47001
      #define RD_TFT_D5 RD_TFT_D5982,47090
      #define RD_TFT_D6 RD_TFT_D6983,47179
      #define RD_TFT_D7 RD_TFT_D7984,47268
  #define tft_Write_8(tft_Write_8993,47703
  #define tft_Write_16(tft_Write_16998,47862
  #define tft_Write_16S(tft_Write_16S1003,48119
  #define tft_Write_32(tft_Write_321008,48344
  #define tft_Write_32C(tft_Write_32C1013,48552
  #define tft_Write_32D(tft_Write_32D1018,48749
  #define tft_Write_8(tft_Write_81027,49190
  #define tft_Write_16(tft_Write_161031,49309
  #define tft_Write_16S(tft_Write_16S1035,49434
  #define tft_Write_32(tft_Write_321039,49560
  #define tft_Write_32C(tft_Write_32C1043,49739
  #define tft_Write_32D(tft_Write_32D1047,49914
    #define tft_Write_8(tft_Write_81059,50417
    #define tft_Write_8(tft_Write_81061,50470
  #define tft_Write_16(tft_Write_161066,50607
  #define tft_Write_16S(tft_Write_16S1070,50732
  #define tft_Write_32(tft_Write_321074,50858
  #define tft_Write_32C(tft_Write_32C1078,51031
  #define tft_Write_32D(tft_Write_32D1082,51200
  #define TFT_eSPI_ENABLE_8_BIT_READ TFT_eSPI_ENABLE_8_BIT_READ1093,51713
  #define SCLK_L SCLK_L1094,51774
  #define SCLK_H SCLK_H1095,51819
  #define tft_Read_8(tft_Read_81098,51930

lib/TFT_eSPI/Processors/TFT_eSPI_ESP32.c,2382
    SPIClass spi = SPIClass(HSPI);spi12,491
    SPIClass spi = SPIClass(VSPI);spi15,586
  spi_device_handle_t dmaHAL;dmaHAL21,675
    spi_host_device_t spi_host = HSPI_HOST;spi_host23,728
    spi_host_device_t spi_host = VSPI_HOST;spi_host25,780
  volatile uint32_t* _spi_cmd       = (volatile uint32_t*)(SPI_CMD_REG(SPI_PORT));_spi_cmd31,909
  volatile uint32_t* _spi_user      = (volatile uint32_t*)(SPI_USER_REG(SPI_PORT));_spi_user32,992
           uint32_t* _spi_mosi_dlen =          (uint32_t*)(SPI_MOSI_DLEN_REG(SPI_PORT));_spi_mosi_dlen34,1103
           uint32_t* _spi_w         =          (uint32_t*)(SPI_W0_REG(SPI_PORT));_spi_w35,1192
void TFT_eSPI::begin_SDA_Read(void)begin_SDA_Read46,1807
void TFT_eSPI::end_SDA_Read(void)end_SDA_Read58,2271
uint8_t TFT_eSPI::readByte(void)readByte76,3096
void TFT_eSPI::busDir(uint32_t mask, uint8_t mode)busDir110,4266
void TFT_eSPI::gpioMode(uint8_t gpio, uint8_t mode)gpioMode138,5148
void TFT_eSPI::pushBlock(uint16_t color, uint32_t len)pushBlock162,6489
void TFT_eSPI::pushPixels(const void* data_in, uint32_t len)pushPixels173,7004
void TFT_eSPI::pushBlock(uint16_t color, uint32_t len){pushBlock194,7886
void TFT_eSPI::pushSwapBytePixels(const void* data_in, uint32_t len){pushSwapBytePixels244,9274
void TFT_eSPI::pushPixels(const void* data_in, uint32_t len){pushPixels321,12038
void TFT_eSPI::pushBlock(uint16_t color, uint32_t len)pushBlock375,14230
void TFT_eSPI::pushPixels(const void* data_in, uint32_t len){pushPixels445,16947
void TFT_eSPI::pushSwapBytePixels(const void* data_in, uint32_t len){pushSwapBytePixels457,17585
void TFT_eSPI::pushBlock(uint16_t color, uint32_t len){pushBlock472,18408
void TFT_eSPI::pushSwapBytePixels(const void* data_in, uint32_t len){pushSwapBytePixels489,19084
void TFT_eSPI::pushPixels(const void* data_in, uint32_t len){pushPixels499,19551
bool TFT_eSPI::dmaBusy(void)dmaBusy519,20540
void TFT_eSPI::dmaWait(void)dmaWait542,21242
void TFT_eSPI::pushPixelsDMA(uint16_t* image, uint32_t len)pushPixelsDMA561,21918
void TFT_eSPI::pushImageDMA(int32_t x, int32_t y, int32_t w, int32_t h, uint16_t* image, uint16_t* buffer)pushImageDMA593,22942
void IRAM_ATTR dc_callback(spi_transaction_t *spi_tx)dc_callback674,25412
bool TFT_eSPI::initDMA(bool ctrl_cs)initDMA684,25814
void TFT_eSPI::deInitDMA(void)deInitDMA733,27175

lib/TFT_eSPI/Processors/TFT_eSPI_STM32.c,1837
    SPIClass& spi = SPI;spi14,542
  SPI_HandleTypeDef spiHal;spiHal19,663
  DMA_HandleTypeDef dmaHal;dmaHal24,736
  uint8_t   spiBuffer[8];spiBuffer28,842
uint8_t TFT_eSPI::tft_Read_8(void)tft_Read_838,1445
void TFT_eSPI::begin_SDA_Read(void)begin_SDA_Read57,2006
void TFT_eSPI::end_SDA_Read(void)end_SDA_Read67,2542
void TFT_eSPI::pushBlock(uint16_t color, uint32_t len){pushBlock86,3543
void TFT_eSPI::pushPixels(const void* data_in, uint32_t len){pushPixels131,5662
void TFT_eSPI::busDir(uint32_t mask, uint8_t mode)busDir150,6371
void TFT_eSPI::gpioMode(uint8_t gpio, uint8_t mode)gpioMode197,8505
uint8_t TFT_eSPI::readByte(void)readByte210,9171
void TFT_eSPI::pushBlock(uint16_t color, uint32_t len)pushBlock244,10317
void TFT_eSPI::pushPixels(const void* data_in, uint32_t len)pushPixels254,10749
#define BUF_SIZE BUF_SIZE270,11531
void TFT_eSPI::pushBlock(uint16_t color, uint32_t len)pushBlock271,11554
void TFT_eSPI::pushPixels(const void* data_in, uint32_t len)pushPixels306,12714
#define BUF_SIZE BUF_SIZE340,14037
void TFT_eSPI::pushBlock(uint16_t color, uint32_t len)pushBlock341,14058
void TFT_eSPI::pushPixels(const void* data_in, uint32_t len)pushPixels366,15012
bool TFT_eSPI::dmaBusy(void)dmaBusy405,16934
void TFT_eSPI::dmaWait(void)dmaWait416,17410
void TFT_eSPI::pushPixelsDMA(uint16_t* image, uint32_t len)pushPixelsDMA428,17991
void TFT_eSPI::pushImageDMA(int32_t x, int32_t y, int32_t w, int32_t h, uint16_t* image, uint16_t* buffer)pushImageDMA448,18756
    void DMA2_Stream3_IRQHandler(void)DMA2_Stream3_IRQHandler524,21650
bool TFT_eSPI::initDMA(bool ctrl_cs)initDMA541,22479
    void DMA1_Channel3_IRQHandler(void)DMA1_Channel3_IRQHandler582,24457
bool TFT_eSPI::initDMA(bool ctrl_cs)initDMA597,25009
void TFT_eSPI::deInitDMA(void)deInitDMA634,26722

src/sd_card.cpp,884
void SdCard::init()init4,23
void SdCard::listDir(const char* dirname, uint8_t levels)listDir45,701
void SdCard::createDir(const char* path)createDir84,1379
void SdCard::removeDir(const char* path)removeDir97,1575
void SdCard::readFile(const char* path)readFile110,1771
String SdCard::readFileLine(const char* path, int num = 1)readFileLine129,2082
void SdCard::writeFile(const char* path, const char* message)writeFile164,2595
void SdCard::appendFile(const char* path, const char* message)appendFile185,2955
void SdCard::renameFile(const char* path1, const char* path2)renameFile206,3329
void SdCard::deleteFile(const char* path)deleteFile219,3571
void SdCard::readBinFromSd(const char* path, uint8_t* buf)readBinFromSd232,3772
void SdCard::writeBinToSd(const char* path, uint8_t* buf)writeBinToSd260,4163
void SdCard::fileIO(const char* path)fileIO278,4433

src/main.cpp,160
Display screen;screen10,202
SdCard tf;tf11,218
int LED0 = 25;LED016,268
int LED1 = 33;LED117,283
void setup() {setup19,299
void loop() {loop58,1189

src/lv_cubic_gui.c,78
lv_obj_t* scr;scr7,111
void lv_holo_cubic_gui(void)lv_holo_cubic_gui9,127

src/display.cpp,442
TFT_eSPI tft = TFT_eSPI();tft7,142
static lv_disp_draw_buf_t disp_buf;disp_buf9,170
static lv_color_t buf[MY_DISP_HOR_RES * MY_DISP_VER_RES];buf10,206
void my_print(const char* dsc)my_print13,266
void my_disp_flush(lv_disp_drv_t* disp, const lv_area_t* area, lv_color_t* color_p)my_disp_flush20,353
void Display::init()init34,690
void Display::routine()routine58,1297
void Display::setBackLight(float duty)setBackLight63,1347
